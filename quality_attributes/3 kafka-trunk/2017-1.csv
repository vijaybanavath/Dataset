QualifiedName,Name,Complexity,Coupling,Size,Lack of Cohesion,CBO,RFC,SRFC,DIT,NOC,WMC,LOC,CMLOC,NOF,NOSF,NOM,NOSM,NORM,LCOM,LCAM,LTCC,ATFD,SI,Coverage,#(C&I),#C,#I,LOC,AC,EC,Abs,Ins,ND,WMC,Coverage,MCC,NBD,LOC,#Pa,#MC,#AF
kafka-ce1cb329d5aa788968e47d7dfe307128f2ddc2ff,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>kafka.examples,kafka.examples,low,low,low-medium,low,,,,,,10,138,,,,,,,,,,,,,6,6,0,138,0,0,0,1,0,10,,,,,,,
kafka.examples.Consumer,Consumer,low,low,low,low,0,2,0,0,0,3,27,9,0,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,3,,,,,,,
<Method>kafka.examples.Consumer.public doWork( ): void,doWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>kafka.examples.Consumer.public isInterruptible( ): boolean,isInterruptible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
kafka.examples.DemoCallBack,DemoCallBack,low,low,low,low,0,0,0,0,0,0,17,0,2,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>kafka.examples.DemoCallBack->key,final key : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.DemoCallBack->startTime,final startTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.KafkaConsumerProducerDemo,KafkaConsumerProducerDemo,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
kafka.examples.KafkaProperties,KafkaProperties,low,low,low,low,0,1,0,0,0,1,10,1,0,3,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>kafka.examples.KafkaProperties.private KafkaProperties( ): void,KafkaProperties( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>kafka.examples.KafkaProperties->CONNECTION_TIMEOUT,static final CONNECTION_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_PRODUCER_BUFFER_SIZE,static final KAFKA_PRODUCER_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_SERVER_PORT,static final KAFKA_SERVER_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.Producer,Producer,low,low,low,low,1,1,0,0,0,4,31,18,0,0,1,0,0,0,0,0,0,0,,,,,31,,,,,,4,,,,,,,
<Method>kafka.examples.Producer.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,18,0,0,0
kafka.examples.SimpleConsumerDemo,SimpleConsumerDemo,low,low,low,low,0,1,0,0,0,2,46,9,0,0,0,1,0,0,0,0,0,0,,,,,46,,,,,,2,,,,,,,
<Method>kafka.examples.SimpleConsumerDemo.private static generateData( ): void,static generateData( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Package>kafka.javaapi.consumer,kafka.javaapi.consumer,low,low,low,low,,,,,,12,16,,,,,,,,,,,,,2,0,2,16,0,0,1,1,1,12,,,,,,,
kafka.javaapi.consumer.ConsumerConnector,ConsumerConnector,low,low,low,low,0,3,0,1,0,10,13,3,0,0,3,0,0,0,0.333,0,0,0,,,,,13,,,,,,10,,,,,,,
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( ): void,commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( boolean ): void,commitOffsets( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
kafka.javaapi.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>kafka.tools,kafka.tools,low,low,low,low,,,,,,19,153,,,,,,,,,,,,,1,1,0,153,0,0,0,1,0,19,,,,,,,
kafka.tools.StreamsResetter,StreamsResetter,low,low,low-medium,low,0,1,0,0,0,19,153,55,0,2,1,0,0,0,0,0,0,0,,,,,153,,,,,,19,,,,,,,
<Method>kafka.tools.StreamsResetter.private resetInputAndInternalAndSeekToEndIntermediateTopicOffsets( ): void,resetInputAndInternalAndSeekToEndIntermediateTopicOffsets( ): void,medium-high,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,4,55,0,0,0
<Field>kafka.tools.StreamsResetter->EXIT_CODE_ERROR,static final EXIT_CODE_ERROR : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->EXIT_CODE_SUCCESS,static final EXIT_CODE_SUCCESS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients,org.apache.kafka.clients,low,low,medium-high,low,,,,,,78,876,,,,,,,,,,,,,17,13,4,876,0,0,0.235,1,0.235,78,,,,,,,
org.apache.kafka.clients.ClientRequest,ClientRequest,low,low,low,low,0,2,0,0,0,2,39,4,2,0,2,0,0,1,0,1,0,0,,,,,39,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.ClientRequest.public createdTimeMs( ): long,createdTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public expectResponse( ): boolean,expectResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientRequest->createdTimeMs,final createdTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->expectResponse,final expectResponse : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientResponse,ClientResponse,low,low,low-medium,low,0,5,0,0,0,6,51,11,3,0,5,0,0,1,0,1,0,0,,,,,51,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.ClientResponse.public hasResponse( ): boolean,hasResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ClientResponse.public onComplete( ): void,onComplete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.clients.ClientResponse.public receivedTimeMs( ): long,receivedTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public requestLatencyMs( ): long,requestLatencyMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public wasDisconnected( ): boolean,wasDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientResponse->disconnected,final disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->latencyMs,final latencyMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->receivedTimeMs,final receivedTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientUtils,ClientUtils,low,low,low,low,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,,,,,41,,,,,,0,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates,ClusterConnectionStates,low,low,low-medium,low,0,1,0,0,0,1,61,3,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates.NodeConnectionState,NodeConnectionState,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.ClusterConnectionStates.public ClusterConnectionStates( long ): void,ClusterConnectionStates( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMs,final reconnectBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.CommonClientConfigs,CommonClientConfigs,low,low,low,low,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,,,,,41,,,,,,0,,,,,,,
org.apache.kafka.clients.ConnectionState,ConnectionState,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CHECKING_API_VERSIONS,static final CHECKING_API_VERSIONS : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CONNECTING,static final CONNECTING : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->DISCONNECTED,static final DISCONNECTED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->READY,static final READY : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.InFlightRequests,InFlightRequests,low,low,low-medium,low,0,2,0,0,0,3,52,7,1,0,2,0,0,0,0.25,1,0,0,,,,,52,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.InFlightRequests.public InFlightRequests( int ): void,InFlightRequests( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.InFlightRequests.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Field>org.apache.kafka.clients.InFlightRequests->maxInFlightRequestsPerConnection,final maxInFlightRequestsPerConnection : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.KafkaClient,KafkaClient,low,low,low,low,0,2,0,1,0,13,14,2,0,0,2,0,0,0,0,0,0,0,,,,,14,,,,,,13,,,,,,,
<Method>org.apache.kafka.clients.KafkaClient.public abstract inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.ManualMetadataUpdater,ManualMetadataUpdater,low,low,low,low,0,4,0,0,0,4,23,10,0,0,4,0,0,0,0.25,0,0,0,,,,,23,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public ManualMetadataUpdater( ): void,ManualMetadataUpdater( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.Metadata,Metadata,low-medium,low,low-medium,low-medium,0,14,2,0,0,21,137,44,8,2,14,0,0,0.944,0.686,0.885,0,0,,,,,137,,,,,,21,,,,,,,
org.apache.kafka.clients.Metadata.Listener,Listener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.Metadata.public Metadata( ): void,Metadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.Metadata.public Metadata( long, long ): void","Metadata( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.clients.Metadata.public synchronized addListener( Listener ): void,synchronized addListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.Metadata.public synchronized awaitUpdate( int, long ): void","synchronized awaitUpdate( int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,2,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized failedUpdate( long ): void,synchronized failedUpdate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized lastSuccessfulUpdate( ): long,synchronized lastSuccessfulUpdate( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( ): boolean,synchronized needMetadataForAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( boolean ): void,synchronized needMetadataForAllTopics( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,1,2
<Method>org.apache.kafka.clients.Metadata.public synchronized removeListener( Listener ): void,synchronized removeListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.Metadata.public synchronized requestUpdate( ): int,synchronized requestUpdate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.Metadata.private synchronized requestUpdateForNewTopics( ): void,synchronized requestUpdateForNewTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.Metadata.public synchronized timeToNextUpdate( long ): long,synchronized timeToNextUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,5
<Method>org.apache.kafka.clients.Metadata.public synchronized updateRequested( ): boolean,synchronized updateRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized version( ): int,synchronized version( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.Metadata->metadataExpireMs,final metadataExpireMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->refreshBackoffMs,final refreshBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->topicExpiryEnabled,final topicExpiryEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastRefreshMs,lastRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastSuccessfulRefreshMs,lastSuccessfulRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needMetadataForAllTopics,needMetadataForAllTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needUpdate,needUpdate : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->TOPIC_EXPIRY_MS,static final TOPIC_EXPIRY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->TOPIC_EXPIRY_NEEDS_UPDATE,static final TOPIC_EXPIRY_NEEDS_UPDATE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->version,version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.MetadataUpdater,MetadataUpdater,low,low,low,low,0,3,0,1,0,6,7,3,0,0,3,0,0,0,0.167,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.NetworkClient,NetworkClient,low,low,medium-high,low,0,5,1,0,0,11,406,30,5,0,5,0,0,0,0.3,1,0,0,,,,,406,,,,,,11,,,,,,,
org.apache.kafka.clients.NetworkClient.DefaultMetadataUpdater,DefaultMetadataUpdater,low,low,low,low,0,4,0,0,0,9,72,23,1,0,4,0,0,0,0.25,0.667,0,0,,,,,72,,,,,,9,,,,,,,
org.apache.kafka.clients.NetworkClient.InFlightRequest,InFlightRequest,low,low,low,low,0,0,0,0,0,0,29,0,4,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.NetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.private handleConnections( long ): void,handleConnections( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,1,0
<Method>org.apache.kafka.clients.NetworkClient.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.private maybeInitiateApiVersionsFetch( long ): void,maybeInitiateApiVersionsFetch( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,0,0
<Method>org.apache.kafka.clients.NetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.clients.NetworkClient->correlation,correlation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->reconnectBackoffMs,final reconnectBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketReceiveBuffer,final socketReceiveBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketSendBuffer,final socketSendBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.RequestCompletionHandler,RequestCompletionHandler,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.clients.consumer,org.apache.kafka.clients.consumer,low,low,medium-high,low,,,,,,81,1325,,,,,,,,,,,,,20,16,4,1325,0,1,0.25,1,0.25,81,,,,,,,
org.apache.kafka.clients.consumer.CommitFailedException,CommitFailedException,low,low,low,low,0,1,0,0,0,1,9,7,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.CommitFailedException.public CommitFailedException( ): void,CommitFailedException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Field>org.apache.kafka.clients.consumer.CommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.Consumer<K,V>",Consumer,low-medium,low,low,low,0,5,0,1,0,29,30,5,0,0,5,0,0,0,0,0,0,0,,,,,30,,,,,,29,,,,,,,
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerConfig,ConsumerConfig,low,low,low-medium,low,0,0,0,0,0,0,270,0,0,3,0,0,0,0,0,0,0,0,,,,,270,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_EXCLUDE_INTERNAL_TOPICS,static final DEFAULT_EXCLUDE_INTERNAL_TOPICS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_FETCH_MAX_BYTES,static final DEFAULT_FETCH_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_MAX_PARTITION_FETCH_BYTES,static final DEFAULT_MAX_PARTITION_FETCH_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>",ConsumerInterceptor,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecord<K,V>",ConsumerRecord,low,low,low-medium,low,2,8,0,0,0,8,70,16,8,3,8,0,0,1.039,0,1,0,0,,,,,70,,,,,,8,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public checksum( ): long",checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public offset( ): long",offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public partition( ): int",partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedKeySize( ): int",serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedValueSize( ): int",serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public timestamp( ): long",timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->checksum",final checksum : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->offset",final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedKeySize",final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedValueSize",final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->timestamp",final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NO_TIMESTAMP",static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_CHECKSUM",static final NULL_CHECKSUM : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_SIZE",static final NULL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords<K,V>",ConsumerRecords,low,low,low-medium,low,0,3,0,0,0,4,52,10,0,1,2,1,0,0,0,1,0,0,,,,,52,,,,,,4,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords.ConcatenatedIterable<K,V>",ConcatenatedIterable,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public count( ): int",count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public static empty( ): ConsumerRecords",static empty( ): ConsumerRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>->EMPTY",static final EMPTY : ConsumerRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.InvalidOffsetException,InvalidOffsetException,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.clients.consumer.KafkaConsumer<K,V>",KafkaConsumer,low,low,medium-high,low,0,9,4,0,0,16,499,58,3,1,9,0,0,1,0.444,1,0,0,,,,,499,,,,,,16,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.KafkaConsumer$61771;,Lorg.apache.kafka.clients.consumer.KafkaConsumer$61771;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquire( ): void",acquire( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,1,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,3,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private close( boolean ): void",close( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,17,1,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private release( ): void",release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->requestTimeoutMs",final requestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->NO_CURRENT_THREAD",static final NO_CURRENT_THREAD : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->closed",volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.MockConsumer<K,V>",MockConsumer,low,low,low-medium,low,0,8,1,0,0,9,238,27,1,0,8,0,0,0,0,0.952,0,0,,,,,238,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.MockConsumer$12529;,Lorg.apache.kafka.clients.consumer.MockConsumer$12529;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public closed( ): boolean",closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public scheduleNopPollTask( ): void",scheduleNopPollTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.NoOffsetForPartitionException,NoOffsetForPartitionException,low,low,low,low,0,0,0,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.NoOffsetForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndMetadata,OffsetAndMetadata,low,low,low,low,0,3,0,0,0,4,30,9,1,0,3,0,0,0,0.333,0.667,0,0,,,,,30,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long ): void,OffsetAndMetadata( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndTimestamp,OffsetAndTimestamp,low,low,low,low,0,4,0,0,0,4,22,10,2,0,4,0,0,0.333,0.375,0.167,0,0,,,,,22,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public OffsetAndTimestamp( long, long ): void","OffsetAndTimestamp( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetCommitCallback,OffsetCommitCallback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.OffsetOutOfRangeException,OffsetOutOfRangeException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetResetStrategy,OffsetResetStrategy,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->EARLIEST,static final EARLIEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->LATEST,static final LATEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->NONE,static final NONE : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RangeAssignor,RangeAssignor,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.RetriableCommitFailedException,RetriableCommitFailedException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.RetriableCommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RoundRobinAssignor,RoundRobinAssignor,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
<Package>org.apache.kafka.clients.consumer.internals,org.apache.kafka.clients.consumer.internals,low-medium,low,very-high,low,,,,,,247,2353,,,,,,,,,,,,,44,41,3,2353,0,0,0.136,1,0.136,247,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator,AbstractCoordinator,low-medium,low,medium-high,low,0,21,13,0,0,42,494,92,9,0,18,0,0,0.909,0.444,1,0,0,,,,,494,,,,,,42,,,,,,,
"org.apache.kafka.clients.consumer.internals.AbstractCoordinator.CoordinatorResponseHandler<R,T>",CoordinatorResponseHandler,low,low,low,low,0,0,0,0,4,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.Generation,Generation,low,low,low,low,0,0,0,0,0,0,12,0,1,1,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorMetrics,GroupCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,,,,,43,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorResponseHandler,GroupCoordinatorResponseHandler,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatResponseHandler,HeartbeatResponseHandler,low,low,low,low,0,0,0,1,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatThread,HeartbeatThread,low,low,low,low,1,10,4,0,0,18,72,66,2,0,6,0,0,0.5,0,0.333,0,0,,,,,72,,,,,,18,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.JoinGroupResponseHandler,JoinGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.LeaveGroupResponseHandler,LeaveGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$16098;,Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$16098;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.MemberState,MemberState,low,low,low,low,0,0,0,0,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.SyncGroupResponseHandler,SyncGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.UnjoinedGroupException,UnjoinedGroupException,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator. joinGroupIfNeeded( ): void, joinGroupIfNeeded( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,21,0,4,9
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public coordinatorUnknown( ): boolean,coordinatorUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public ensureActiveGroup( ): void,ensureActiveGroup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized clearFindCoordinatorFuture( ): void,synchronized clearFindCoordinatorFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized coordinatorDead( ): void,synchronized coordinatorDead( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized disableHeartbeatThread( ): void,synchronized disableHeartbeatThread( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized ensureCoordinatorReady( ): void,synchronized ensureCoordinatorReady( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,12,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized generation( ): Generation,synchronized generation( ): Generation,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized maybeLeaveGroup( ): void,synchronized maybeLeaveGroup( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,0,2,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized needRejoin( ): boolean,synchronized needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized pollHeartbeat( long ): void,synchronized pollHeartbeat( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,1,1,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized rejoinIncomplete( ): boolean,synchronized rejoinIncomplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized requestRejoin( ): void,synchronized requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized resetGeneration( ): void,synchronized resetGeneration( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized resetJoinGroupFuture( ): void,synchronized resetJoinGroupFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized startHeartbeatThreadIfNeeded( ): void,synchronized startHeartbeatThreadIfNeeded( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized timeToNextHeartbeat( long ): long,synchronized timeToNextHeartbeat( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,1
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rebalanceTimeoutMs,final rebalanceTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sensors,final sensors : GroupCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sessionTimeoutMs,final sessionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->generation,generation : Generation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->heartbeatThread,heartbeatThread : HeartbeatThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->needsJoinPrepare,needsJoinPrepare : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rejoinNeeded,rejoinNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->state,state : MemberState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor,AbstractPartitionAssignor,low,low,low,low,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator,ConsumerCoordinator,low-medium,low,medium-high,low,0,12,6,0,0,38,482,99,8,1,11,0,0,0.978,0.364,0.933,0,0,,,,,482,,,,,,38,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.ConsumerCoordinatorMetrics,ConsumerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.DefaultOffsetCommitCallback,DefaultOffsetCommitCallback,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$19931;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$19931;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$21072;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$21072;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$23584;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$23584;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$7820;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$7820;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.MetadataSnapshot,MetadataSnapshot,low,low,low,low,0,1,0,0,0,2,16,3,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitCompletion,OffsetCommitCompletion,low,low,low,low,0,1,0,0,0,2,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitResponseHandler,OffsetCommitResponseHandler,low,low,low,low,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,,,,,59,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetFetchResponseHandler,OffsetFetchResponseHandler,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator. invokeCompletedOffsetCommitCallbacks( ): void, invokeCompletedOffsetCommitCallbacks( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private addMetadataListener( ): void,addMetadataListener( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,13,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private doAutoCommitOffsetsAsync( ): void,doAutoCommitOffsetsAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,11,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsAsync( long ): void,maybeAutoCommitOffsetsAsync( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,1,1,5
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public maybeAutoCommitOffsetsNow( ): void,maybeAutoCommitOffsetsNow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsSync( ): void,maybeAutoCommitOffsetsSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,9,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,3,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public refreshCommittedOffsetsIfNeeded( ): void,refreshCommittedOffsetsIfNeeded( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public timeToNextPoll( long ): long,timeToNextPoll( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,3
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->assignmentSnapshot,assignmentSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitEnabled,final autoCommitEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitIntervalMs,final autoCommitIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->excludeInternalTopics,final excludeInternalTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->sensors,final sensors : ConsumerCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->isLeader,isLeader : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->metadataSnapshot,metadataSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->nextAutoCommitDeadline,nextAutoCommitDeadline : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->CLOSE_TIMEOUT_MS,static final CLOSE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>",ConsumerInterceptors,low,low,low,low,0,1,0,0,0,3,26,7,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,ConsumerNetworkClient,low-medium,low,low-medium,low,0,19,14,0,0,44,225,115,3,1,17,0,0,0.875,0.529,0.982,0,0,,,,,225,,,,,,44,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.PollCondition,PollCondition,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.RequestFutureCompletionHandler,RequestFutureCompletionHandler,low,low,low,low,0,2,0,0,0,4,25,14,0,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( ): void,awaitMetadataUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( long ): boolean,awaitMetadataUpdate( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private checkDisconnects( long ): void,checkDisconnects( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public disableWakeups( ): void,disableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public enableWakeups( ): void,enableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public ensureFreshMetadata( ): void,ensureFreshMetadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private failExpiredRequests( long ): void,failExpiredRequests( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private firePendingCompletedRequests( ): void,firePendingCompletedRequests( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private maybeThrowInterruptException( ): void,maybeThrowInterruptException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private maybeTriggerWakeup( ): void,maybeTriggerWakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pendingRequestCount( ): int,pendingRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long, long, PollCondition ): void","poll( long, long, PollCondition ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,17,3,9,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pollNoWakeup( ): void,pollNoWakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,3,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private trySend( long ): boolean,trySend( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->unsentExpiryMs,final unsentExpiryMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->MAX_POLL_TIMEOUT_MS,static final MAX_POLL_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->wakeupDisabledCount,wakeupDisabledCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerProtocol,ConsumerProtocol,low,low,low-medium,low,0,1,0,0,0,2,83,3,0,1,0,1,0,0,0,0,0,0,,,,,83,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_V0,static final CONSUMER_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.Fetcher<K,V>",Fetcher,low-medium,low,medium-high,low,0,3,0,0,0,21,598,90,9,0,3,0,0,0,0.333,1,0,0,,,,,598,,,,,,21,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.CompletedFetch,CompletedFetch,low,low,low,low,1,0,0,0,0,0,13,0,2,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchManagerMetrics,FetchManagerMetrics,low,low,low,low,0,0,0,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,,,,,83,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchResponseMetricAggregator,FetchResponseMetricAggregator,low,low,low,low,1,0,0,0,0,0,30,0,2,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$25158;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$25158;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$27226;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$27226;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$6739;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$6739;,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
"org.apache.kafka.clients.consumer.internals.Fetcher.PartitionRecords<K,V>",PartitionRecords,low,low,low,low,0,2,0,0,0,2,22,4,2,0,2,0,0,0,0,0,0,0,,,,,22,,,,,,2,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public hasCompletedFetches( ): boolean",hasCompletedFetches( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private parseFetchedData( CompletedFetch ): PartitionRecords",parseFetchedData( CompletedFetch ): PartitionRecords,medium-high,low,medium-high,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,5,59,1,0,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public sendFetches( ): int",sendFetches( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,29,0,0,0
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->checkCrcs",final checkCrcs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->fetchSize",final fetchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxBytes",final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxPollRecords",final maxPollRecords : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxWaitMs",final maxWaitMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->minBytes",final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->sensors",final sensors : FetchManagerMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->nextInLineRecords",nextInLineRecords : PartitionRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.Heartbeat,Heartbeat,low,low,low-medium,low,0,12,1,0,0,15,54,44,9,0,12,0,0,0.833,0.125,0.712,0,0,,,,,54,,,,,,15,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public Heartbeat( long, long, long, long ): void","Heartbeat( long, long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,4,0,4
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public failHeartbeat( ): void,failHeartbeat( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public interval( ): long,interval( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public lastHeartbeatSend( ): long,lastHeartbeatSend( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public pollTimeoutExpired( long ): boolean,pollTimeoutExpired( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public receiveHeartbeat( long ): void,receiveHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public resetTimeouts( long ): void,resetTimeouts( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sentHeartbeat( long ): void,sentHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sessionTimeoutExpired( long ): boolean,sessionTimeoutExpired( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public shouldHeartbeat( long ): boolean,shouldHeartbeat( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public timeToNextHeartbeat( long ): long,timeToNextHeartbeat( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,5
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->heartbeatInterval,final heartbeatInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->maxPollInterval,final maxPollInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->sessionTimeout,final sessionTimeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->heartbeatFailed,heartbeatFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatReceive,lastHeartbeatReceive : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastPoll,lastPoll : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastSessionReset,lastSessionReset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatSend,volatile lastHeartbeatSend : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException,NoAvailableBrokersException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener,NoOpConsumerRebalanceListener,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor,PartitionAssignor,low,low,low,low,0,1,0,1,0,4,39,1,0,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Assignment,Assignment,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Subscription,Subscription,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract onAssignment( Assignment ): void,onAssignment( Assignment ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.RequestFuture<T>,RequestFuture,low-medium,low,low-medium,low-medium,0,15,6,0,0,22,94,57,0,0,10,5,0,0,0.622,0,0,0,,,,,94,,,,,,22,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7164;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7164;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7587;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7587;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public chain( RequestFuture ): void,chain( RequestFuture ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public complete( T ): void,complete( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public failed( ): boolean,failed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireFailure( ): void,fireFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireSuccess( ): void,fireSuccess( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isRetriable( ): boolean,isRetriable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public shouldBlock( ): boolean,shouldBlock( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static coordinatorNotAvailable( ): RequestFuture,static coordinatorNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static leaderNotAvailable( ): RequestFuture,static leaderNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static noBrokersAvailable( ): RequestFuture,static noBrokersAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static staleMetadata( ): RequestFuture,static staleMetadata( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static voidSuccess( ): RequestFuture,static voidSuccess( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public succeeded( ): boolean,succeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public value( ): T,value( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,0
"org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>",RequestFutureAdapter,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>,RequestFutureListener,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>.public abstract onSuccess( T ): void,onSuccess( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.StaleMetadataException,StaleMetadataException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.StaleMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState,SubscriptionState,low,low,low-medium,low,0,12,1,0,0,15,202,31,2,0,11,0,0,0.571,0.455,0.8,0,0,,,,,202,,,,,,15,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.SubscriptionType,SubscriptionType,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState,TopicPartitionState,low,low,low,low,0,8,1,0,0,9,32,22,1,0,8,0,0,0,0.375,1,0,0,,,,,32,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public commitsRefreshed( ): void,commitsRefreshed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasAllFetchPositions( ): boolean,hasAllFetchPositions( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasDefaultOffsetResetPolicy( ): boolean,hasDefaultOffsetResetPolicy( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasNoSubscriptionOrUserAssignment( ): boolean,hasNoSubscriptionOrUserAssignment( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasPatternSubscription( ): boolean,hasPatternSubscription( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public needRefreshCommits( ): void,needRefreshCommits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public partitionsAutoAssigned( ): boolean,partitionsAutoAssigned( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public refreshCommitsNeeded( ): boolean,refreshCommitsNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public resetGroupSubscription( ): void,resetGroupSubscription( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private setSubscriptionType( SubscriptionType ): void,setSubscriptionType( SubscriptionType ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public unsubscribe( ): void,unsubscribe( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->needsFetchCommittedOffsets,needsFetchCommittedOffsets : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->subscriptionType,subscriptionType : SubscriptionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer,org.apache.kafka.clients.producer,low,low,medium-high,low,,,,,,41,847,,,,,,,,,,,,,14,10,4,847,0,1,0.286,1,0.286,41,,,,,,,
org.apache.kafka.clients.producer.BufferExhaustedException,BufferExhaustedException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.BufferExhaustedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Callback,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer<K,V>",KafkaProducer,low,low,medium-high,low,0,3,0,0,0,6,375,23,4,0,3,0,0,0,0.333,1,0,0,,,,,375,,,,,,6,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.ClusterAndWaitTime,ClusterAndWaitTime,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.FutureFailure,FutureFailure,low,low,low,low,0,3,0,0,0,3,19,9,0,0,3,0,0,0,0.333,0,0,0,,,,,19,,,,,,3,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer.InterceptorCallback<K,V>",InterceptorCallback,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private ensureValidRecordSize( int ): void",ensureValidRecordSize( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxBlockTimeMs",final maxBlockTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxRequestSize",final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->requestTimeoutMs",final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->totalMemorySize",final totalMemorySize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.MockProducer<K,V>",MockProducer,low,low,low-medium,low,0,4,1,0,0,5,115,10,1,0,4,0,0,0,0,1,0,0,,,,,115,,,,,,5,,,,,,,
org.apache.kafka.clients.producer.MockProducer.Completion,Completion,low,low,low,low,0,0,0,0,0,0,23,0,1,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized completeNext( ): boolean",synchronized completeNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->autoComplete",autoComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Partitioner,Partitioner,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.Partitioner.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.clients.producer.Producer<K,V>",Producer,low,low,low,low,0,2,0,1,0,7,8,2,0,0,2,0,0,0,0,0,0,0,,,,,8,,,,,,7,,,,,,,
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.producer.ProducerConfig,ProducerConfig,low,low,low-medium,low,0,0,0,0,0,0,226,0,0,0,0,0,0,0,0,0,0,0,,,,,226,,,,,,0,,,,,,,
"org.apache.kafka.clients.producer.ProducerInterceptor<K,V>",ProducerInterceptor,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.clients.producer.ProducerRecord<K,V>",ProducerRecord,low,low,low-medium,low,2,3,0,0,0,8,69,12,2,0,3,0,0,0.5,0,0.333,0,0,,,,,69,,,,,,8,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,8,0,0,4
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.RecordMetadata,RecordMetadata,low,low,low,low,0,6,0,0,0,6,41,12,5,1,6,0,0,1.042,0,1,0,0,,,,,41,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.producer.RecordMetadata.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedKeySize( ): int,serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedValueSize( ): int,serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.RecordMetadata->checksum,final checksum : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->UNKNOWN_PARTITION,static final UNKNOWN_PARTITION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer.internals,org.apache.kafka.clients.producer.internals,low,low,medium-high,low,,,,,,78,966,,,,,,,,,,,,,14,14,0,966,0,0,0,1,0,78,,,,,,,
org.apache.kafka.clients.producer.internals.BufferPool,BufferPool,low,low,low-medium,low,0,6,0,0,0,8,127,25,3,0,6,0,0,0.75,0.417,0.8,0,0,,,,,127,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.private freeUp( int ): void,freeUp( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,0,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public poolableSize( ): int,poolableSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public queued( ): int,queued( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,0
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public totalMemory( ): long,totalMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public unallocatedMemory( ): long,unallocatedMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,1
<Field>org.apache.kafka.clients.producer.internals.BufferPool->availableMemory,availableMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->poolableSize,final poolableSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->totalMemory,final totalMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.DefaultPartitioner,DefaultPartitioner,low,low,low,low,0,1,0,0,0,1,17,1,0,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.producer.internals.ErrorLoggingCallback,ErrorLoggingCallback,low,low,low,low,0,0,0,0,0,0,22,0,4,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->key,key : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->logAsString,logAsString : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->valueLength,valueLength : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.FutureRecordMetadata,FutureRecordMetadata,low,low,low-medium,low,0,8,0,0,0,8,52,19,5,0,8,0,0,1,0.437,1,0,0,,,,,52,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public cancel( boolean ): boolean,cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isCancelled( ): boolean,isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public relativeOffset( ): long,relativeOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public serializedKeySize( ): int,serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public serializedValueSize( ): int,serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->checksum,final checksum : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->relativeOffset,final relativeOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProduceRequestResult,ProduceRequestResult,low,low,low,low,0,4,0,0,0,4,23,7,1,0,4,0,0,0,0,1,0,0,,,,,23,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public ProduceRequestResult( ): void,ProduceRequestResult( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->baseOffset,volatile baseOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>",ProducerInterceptors,low,low,low,low,0,1,0,0,0,3,42,7,0,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
org.apache.kafka.clients.producer.internals.RecordAccumulator,RecordAccumulator,low,low,low-medium,low,0,8,2,0,0,13,281,35,6,0,8,0,0,1.25,0,1,0,0,,,,,281,,,,,,13,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.IncompleteRecordBatches,IncompleteRecordBatches,low,low,low,low,0,1,0,0,0,1,15,2,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5538;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5538;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5950;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5950;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6376;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6376;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.ReadyCheckResult,ReadyCheckResult,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.RecordAppendResult,RecordAppendResult,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. flushInProgress( ): boolean, flushInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private abortBatches( ): void,abortBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,8,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public abortIncompleteBatches( ): void,abortIncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private appendsInProgress( ): boolean,appendsInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public awaitFlushCompletion( ): void,awaitFlushCompletion( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public beginFlush( ): void,beginFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasUnsent( ): boolean,hasUnsent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->drainIndex,drainIndex : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->batchSize,final batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->incomplete,final incomplete : IncompleteRecordBatches,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->lingerMs,final lingerMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->closed,volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.RecordBatch,RecordBatch,low,low,low-medium,low-medium,0,9,2,0,0,17,103,33,8,0,9,0,0,1.125,0.667,0.972,0,0,,,,,103,,,,,,17,,,,,,,
org.apache.kafka.clients.producer.internals.RecordBatch.Thunk,Thunk,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public compressionRate( ): double,compressionRate( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public inRetry( ): boolean,inRetry( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public isWritable( ): boolean,isWritable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public maybeExpire( int, long, long, long, boolean ): boolean","maybeExpire( int, long, long, long, boolean ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,17,5,4,7
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public setRetry( ): void,setRetry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->drainedMs,drainedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->createdMs,final createdMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->lastAppendTime,lastAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->lastAttemptMs,lastAttemptMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->maxRecordSize,maxRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->recordCount,recordCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->retry,retry : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->attempts,volatile attempts : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.Sender,Sender,low-medium,low,low-medium,low,0,5,3,0,0,22,299,61,8,0,5,0,0,1,0.4,0.667,0,0,,,,,299,,,,,,22,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.Sender$16199;,Lorg.apache.kafka.clients.producer.internals.Sender$16199;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.Sender.SenderMetrics,SenderMetrics,low,low,low,low,0,1,0,0,0,1,134,2,0,0,1,0,0,0,0,0,0,0,,,,,134,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.Sender. run( long ): void, run( long ): void,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,32,1,0,5
<Method>org.apache.kafka.clients.producer.internals.Sender.public forceClose( ): void,forceClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.public initiateClose( ): void,initiateClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,20,0,2,3
<Method>org.apache.kafka.clients.producer.internals.Sender.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.Sender->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->guaranteeMessageOrder,final guaranteeMessageOrder : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->maxRequestSize,final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->requestTimeout,final requestTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->sensors,final sensors : SenderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->forceClose,volatile forceClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->running,volatile running : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common,org.apache.kafka.common,low,low,low-medium,low,,,,,,25,368,,,,,,,,,,,,,10,7,3,368,0,0,0.3,1,0.3,25,,,,,,,
org.apache.kafka.common.Cluster,Cluster,low,low,low-medium,low,0,2,0,0,0,2,115,5,1,0,1,1,0,0,0,1,0,0,,,,,115,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.Cluster.public isBootstrapConfigured( ): boolean,isBootstrapConfigured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public static empty( ): Cluster,static empty( ): Cluster,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.Cluster->isBootstrapConfigured,final isBootstrapConfigured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.ClusterResource,ClusterResource,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.ClusterResourceListener,ClusterResourceListener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.Configurable,Configurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.KafkaException,KafkaException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.KafkaException.public KafkaException( ): void,KafkaException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.KafkaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Metric,Metric,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.Metric.public abstract value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.MetricName,MetricName,low,low,low-medium,low,0,1,0,0,0,5,78,11,1,0,1,0,0,0,0,0,0,0,,,,,78,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.MetricName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,0,0,3
<Field>org.apache.kafka.common.MetricName->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Node,Node,low,low,low-medium,low,0,6,0,0,0,8,68,19,2,1,5,1,0,0.75,0,0.733,0,0,,,,,68,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.Node.public hasRack( ): boolean,hasRack( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.Node.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,0,0,2
<Method>org.apache.kafka.common.Node.public id( ): int,id( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public static noNode( ): Node,static noNode( ): Node,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.Node->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->NO_NODE,static final NO_NODE : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.PartitionInfo,PartitionInfo,low,low,low,low,0,1,0,0,0,1,40,2,1,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.PartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.PartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartition,TopicPartition,low,low,low,low,0,2,0,0,0,4,41,12,2,0,2,0,0,0.5,0,0,0,0,,,,,41,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.TopicPartition.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,0,0,4
<Method>org.apache.kafka.common.TopicPartition.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartition->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.annotation,org.apache.kafka.common.annotation,low,low,low,low,,,,,,0,11,,,,,,,,,,,,,4,1,3,11,0,0,0.75,1,0.75,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability,InterfaceStability,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Evolving,Evolving,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Stable,Stable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Unstable,Unstable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.cache,org.apache.kafka.common.cache,low,low,low,low,,,,,,13,41,,,,,,,,,,,,,3,2,1,41,0,0,0.333,1,0.333,13,,,,,,,
"org.apache.kafka.common.cache.Cache<K,V>",Cache,low,low,low,low,0,4,0,1,0,4,5,4,0,0,4,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.common.cache.LRUCache<K,V>",LRUCache,low,low,low,low,0,5,0,0,0,5,20,18,0,0,5,0,0,0,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.cache.LRUCache$1121;,Lorg.apache.kafka.common.cache.LRUCache$1121;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public LRUCache( int ): void",LRUCache( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.common.cache.SynchronizedCache<K,V>",SynchronizedCache,low,low,low,low,0,4,0,0,0,4,16,12,0,0,4,0,0,0,0.333,0,0,0,,,,,16,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized remove( K ): boolean",synchronized remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized size( ): long",synchronized size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.config,org.apache.kafka.common.config,low,low,medium-high,low,,,,,,15,842,,,,,,,,,,,,,17,15,2,842,0,0,0.118,1,0.118,15,,,,,,,
org.apache.kafka.common.config.AbstractConfig,AbstractConfig,low,low,low-medium,low,0,3,0,0,0,5,148,18,0,0,3,0,0,0,0,0,0,0,,,,,148,,,,,,5,,,,,,,
org.apache.kafka.common.config.AbstractConfig.RecordingMap<V>,RecordingMap,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.AbstractConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.private logAll( ): void,logAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.public logUnused( ): void,logUnused( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
org.apache.kafka.common.config.Config,Config,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef,ConfigDef,low,low,medium-high,low,0,2,0,0,0,2,500,6,0,0,2,0,0,0,0,0,0,0,,,,,500,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigDef.ConfigKey,ConfigKey,low,low,low,low,5,1,0,0,0,1,33,2,6,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Importance,Importance,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$47415;,Lorg.apache.kafka.common.config.ConfigDef$47415;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$48605;,Lorg.apache.kafka.common.config.ConfigDef$48605;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Range,Range,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Recommender,Recommender,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigDef.Type,Type,low,low,low,low,0,0,0,0,0,0,2,0,0,9,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidList,ValidList,low,low,low,low,1,0,0,0,0,0,13,0,1,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidString,ValidString,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Validator,Validator,low,low,low,low,0,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Width,Width,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSaslSupport( ): ConfigDef,withClientSaslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSslSupport( ): ConfigDef,withClientSslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.config.ConfigException,ConfigException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.ConfigException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigValue,ConfigValue,low,low,low-medium,low,0,3,0,0,0,3,60,7,1,0,3,0,0,0,0.333,0,0,0,,,,,60,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.config.ConfigValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( boolean ): void,visible( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.config.ConfigValue->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SaslConfigs,SaslConfigs,low,low,low,low,0,0,0,0,0,0,44,0,0,3,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN,static final DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_JITTER,static final DEFAULT_KERBEROS_TICKET_RENEW_JITTER : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR,static final DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SslConfigs,SslConfigs,low,low,low-medium,low,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,,,,,76,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.config.types,org.apache.kafka.common.config.types,low,low,low,low,,,,,,1,19,,,,,,,,,,,,,1,1,0,19,0,0,0,1,0,1,,,,,,,
org.apache.kafka.common.config.types.Password,Password,low,low,low,low,0,1,0,0,0,1,19,3,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.types.Password.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.errors,org.apache.kafka.common.errors,low,low,very-high,low,,,,,,22,424,,,,,,,,,,,,,54,54,0,424,0,0,0.037,1,0.037,22,,,,,,,
org.apache.kafka.common.errors.ApiException,ApiException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( ): void,ApiException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.ApiException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthenticationException,AuthenticationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.AuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthorizationException,AuthorizationException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.errors.BrokerNotAvailableException,BrokerNotAvailableException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.BrokerNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ClusterAuthorizationException,ClusterAuthorizationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ClusterAuthorizationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ControllerMovedException,ControllerMovedException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ControllerMovedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CorruptRecordException,CorruptRecordException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( ): void,CorruptRecordException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.CorruptRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DisconnectException,DisconnectException,low,low,low,low,0,1,0,0,0,1,11,2,0,2,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( ): void,DisconnectException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.DisconnectException->INSTANCE,static final INSTANCE : DisconnectException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.DisconnectException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupAuthorizationException,GroupAuthorizationException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException,GroupCoordinatorNotAvailableException,low,low,low,low,0,1,0,0,0,1,11,2,0,2,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException.public GroupCoordinatorNotAvailableException( ): void,GroupCoordinatorNotAvailableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException->INSTANCE,static final INSTANCE : GroupCoordinatorNotAvailableException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupLoadInProgressException,GroupLoadInProgressException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupLoadInProgressException.public GroupLoadInProgressException( ): void,GroupLoadInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupLoadInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalGenerationException,IllegalGenerationException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( ): void,IllegalGenerationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.IllegalGenerationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalSaslStateException,IllegalSaslStateException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.IllegalSaslStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InconsistentGroupProtocolException,InconsistentGroupProtocolException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InconsistentGroupProtocolException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InterruptException,InterruptException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InterruptException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidCommitOffsetSizeException,InvalidCommitOffsetSizeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidCommitOffsetSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidConfigurationException,InvalidConfigurationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidConfigurationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidFetchSizeException,InvalidFetchSizeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidFetchSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidGroupIdException,InvalidGroupIdException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidGroupIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidMetadataException,InvalidMetadataException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( ): void,InvalidMetadataException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidOffsetException,InvalidOffsetException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidOffsetException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidPartitionsException,InvalidPartitionsException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidPartitionsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidReplicaAssignmentException,InvalidReplicaAssignmentException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidReplicaAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidReplicationFactorException,InvalidReplicationFactorException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidReplicationFactorException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequestException,InvalidRequestException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidRequestException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequiredAcksException,InvalidRequiredAcksException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidRequiredAcksException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidSessionTimeoutException,InvalidSessionTimeoutException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidSessionTimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTimestampException,InvalidTimestampException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidTimestampException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTopicException,InvalidTopicException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( ): void,InvalidTopicException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidTopicException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LeaderNotAvailableException,LeaderNotAvailableException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.LeaderNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NetworkException,NetworkException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( ): void,NetworkException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NetworkException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotControllerException,NotControllerException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotControllerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotCoordinatorForGroupException,NotCoordinatorForGroupException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotCoordinatorForGroupException.public NotCoordinatorForGroupException( ): void,NotCoordinatorForGroupException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotCoordinatorForGroupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException,NotEnoughReplicasAfterAppendException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasException,NotEnoughReplicasException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( ): void,NotEnoughReplicasException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotEnoughReplicasException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotLeaderForPartitionException,NotLeaderForPartitionException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( ): void,NotLeaderForPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotLeaderForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetMetadataTooLarge,OffsetMetadataTooLarge,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( ): void,OffsetMetadataTooLarge( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.OffsetMetadataTooLarge->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetOutOfRangeException,OffsetOutOfRangeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RebalanceInProgressException,RebalanceInProgressException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( ): void,RebalanceInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RebalanceInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordBatchTooLargeException,RecordBatchTooLargeException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( ): void,RecordBatchTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordBatchTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordTooLargeException,RecordTooLargeException,low,low,low,low,0,1,0,0,0,1,16,2,0,1,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( ): void,RecordTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ReplicaNotAvailableException,ReplicaNotAvailableException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ReplicaNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RetriableException,RetriableException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( ): void,RetriableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.RetriableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SerializationException,SerializationException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( ): void,SerializationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.SerializationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TimeoutException,TimeoutException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( ): void,TimeoutException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.TimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicAuthorizationException,TopicAuthorizationException,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.errors.TopicExistsException,TopicExistsException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.TopicExistsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownMemberIdException,UnknownMemberIdException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( ): void,UnknownMemberIdException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.UnknownMemberIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownServerException,UnknownServerException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( ): void,UnknownServerException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownServerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownTopicOrPartitionException,UnknownTopicOrPartitionException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( ): void,UnknownTopicOrPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownTopicOrPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedForMessageFormatException,UnsupportedForMessageFormatException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedForMessageFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedSaslMechanismException,UnsupportedSaslMechanismException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedSaslMechanismException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedVersionException,UnsupportedVersionException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedVersionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.WakeupException,WakeupException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.WakeupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.internals,org.apache.kafka.common.internals,low,low,low,low,,,,,,6,83,,,,,,,,,,,,,3,3,0,83,0,1,0,1,0,6,,,,,,,
org.apache.kafka.common.internals.ClusterResourceListeners,ClusterResourceListeners,low,low,low,low,0,1,0,0,0,1,13,2,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public ClusterResourceListeners( ): void,ClusterResourceListeners( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.internals.PartitionStates<S>,PartitionStates,low,low,low-medium,low,0,3,0,0,0,3,70,5,0,0,3,0,0,0,0,0,0,0,,,,,70,,,,,,3,,,,,,,
org.apache.kafka.common.internals.PartitionStates.PartitionState<S>,PartitionState,low,low,low,low,1,2,0,0,0,2,26,7,1,0,2,0,0,0,0,0,0,0,,,,,26,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public PartitionStates( ): void,PartitionStates( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.metrics,org.apache.kafka.common.metrics,low,low,medium-high,low,,,,,,54,508,,,,,,,,,,,,,15,10,5,508,0,0,0.333,1,0.333,54,,,,,,,
org.apache.kafka.common.metrics.CompoundStat,CompoundStat,low,low,low,low,0,0,0,1,0,1,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.CompoundStat.NamedMeasurable,NamedMeasurable,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.JmxReporter,JmxReporter,low,low,low-medium,low,0,4,1,0,0,8,135,19,0,0,4,0,0,0,0.25,0,0,0,,,,,135,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.JmxReporter.KafkaMbean,KafkaMbean,low,low,low,low,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,,,,,55,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.JmxReporter.public JmxReporter( ): void,JmxReporter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.JmxReporter.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private reregister( KafkaMbean ): void,reregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private unregister( KafkaMbean ): void,unregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,0
org.apache.kafka.common.metrics.KafkaMetric,KafkaMetric,low,low,low,low,0,2,1,0,0,2,29,6,0,0,2,0,0,0,0.25,0,0,0,,,,,29,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.KafkaMetric. value( long ): double, value( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.KafkaMetric.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,1,0
org.apache.kafka.common.metrics.Measurable,Measurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.MeasurableStat,MeasurableStat,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.MetricConfig,MetricConfig,low,low,low,low,0,6,0,0,0,7,40,21,3,0,6,0,0,0.667,0.556,0.533,0,0,,,,,40,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricConfig.public MetricConfig( ): void,MetricConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( ): long,eventWindow( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( long ): MetricConfig,eventWindow( long ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( ): int,samples( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( int ): MetricConfig,samples( int ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public timeWindowMs( ): long,timeWindowMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.MetricConfig->eventWindow,eventWindow : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->samples,samples : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->timeWindowMs,timeWindowMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Metrics,Metrics,low,low,low-medium,low,0,2,0,0,0,5,148,12,0,0,2,0,0,0,0,0,0,0,,,,,148,,,,,,5,,,,,,,
org.apache.kafka.common.metrics.Metrics.ExpireSensorTask,ExpireSensorTask,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$5856;,Lorg.apache.kafka.common.metrics.Metrics$5856;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$6342;,Lorg.apache.kafka.common.metrics.Metrics$6342;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( ): void,Metrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.Metrics.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,0,0,0
org.apache.kafka.common.metrics.MetricsReporter,MetricsReporter,low,low,low,low,0,1,0,1,0,4,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.metrics.Quota,Quota,low,low,low,low,0,7,0,0,0,8,34,20,2,0,5,2,0,0.25,0.429,0.571,0,0,,,,,34,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.metrics.Quota.public Quota( double, boolean ): void","Quota( double, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.Quota.public acceptable( double ): boolean,acceptable( double ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,4
<Method>org.apache.kafka.common.metrics.Quota.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,0,2
<Method>org.apache.kafka.common.metrics.Quota.public isUpperBound( ): boolean,isUpperBound( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public static lowerBound( double ): Quota,static lowerBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.Quota.public static upperBound( double ): Quota,static upperBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.metrics.Quota->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Quota->upper,final upper : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.QuotaViolationException,QuotaViolationException,low,low,low,low,0,2,0,0,0,2,20,4,2,1,2,0,0,1.333,0,1,0,0,,,,,20,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.QuotaViolationException->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->value,final value : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Sensor,Sensor,low,low,low-medium,low,0,6,3,0,0,12,79,29,3,0,6,0,0,0.667,0.444,0.933,0,0,,,,,79,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( ): void,checkQuotas( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( long ): void,checkQuotas( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,13,1,0,0
<Method>org.apache.kafka.common.metrics.Sensor.public hasExpired( ): boolean,hasExpired( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.metrics.Sensor.public record( ): void,record( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.metrics.Sensor.public record( double ): void,record( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long ): void","record( double, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,2,3
<Field>org.apache.kafka.common.metrics.Sensor->inactiveSensorExpirationTimeMs,final inactiveSensorExpirationTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->parents,final parents : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->lastRecordTime,volatile lastRecordTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Stat,Stat,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.common.metrics.stats,org.apache.kafka.common.metrics.stats,low,low,medium-high,low,,,,,,56,363,,,,,,,,,,,,,18,17,1,363,0,0,0.111,1,0.111,56,,,,,,,
org.apache.kafka.common.metrics.stats.Avg,Avg,low,low,low,low,0,1,0,0,0,1,15,2,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Avg.public Avg( ): void,Avg( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Count,Count,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Count.public Count( ): void,Count( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Histogram,Histogram,low,low,low-medium,low,0,8,3,0,0,9,96,23,3,0,5,0,0,0.25,0.467,0,0,0,,,,,96,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.BinScheme,BinScheme,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.ConstantBinScheme,ConstantBinScheme,low,low,low,low,0,4,0,0,0,9,28,23,4,0,4,0,0,0.333,0.333,0,0,0,,,,,28,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.LinearBinScheme,LinearBinScheme,low,low,low,low,0,4,0,0,0,7,24,20,3,0,4,0,0,0.333,0.333,0,0,0,,,,,24,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Histogram.public Histogram( BinScheme ): void,Histogram( BinScheme ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public counts( ): float,counts( ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Histogram.public record( double ): void,record( double ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public value( double ): double,value( double ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,1,5
<Field>org.apache.kafka.common.metrics.stats.Histogram->count,count : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->hist,final hist : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Max,Max,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Max.public Max( ): void,Max( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Min,Min,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Min.public Min( ): void,Min( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Percentile,Percentile,low,low,low,low,0,1,0,0,0,1,11,2,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentile.public percentile( ): double,percentile( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Percentile->percentile,final percentile : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles,Percentiles,low,low,low-medium,low,0,1,0,0,0,1,61,3,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.BucketSizing,BucketSizing,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.HistogramSample,HistogramSample,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Percentiles$2773;,Lorg.apache.kafka.common.metrics.stats.Percentiles$2773;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentiles.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.metrics.stats.Percentiles->buckets,final buckets : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Rate,Rate,low,low,low-medium,low,0,2,0,0,0,9,59,20,0,0,2,0,0,0,0.25,0,0,0,,,,,59,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Rate.SampledTotal,SampledTotal,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( ): void,Rate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.stats.Rate.private convert( long ): double,convert( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,1,0,0
org.apache.kafka.common.metrics.stats.SampledStat,SampledStat,low,low,low-medium,low,0,4,1,0,0,8,67,18,2,0,4,0,0,0.75,0.333,1,0,0,,,,,67,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.stats.SampledStat.Sample,Sample,low,low,low,low,0,2,0,0,0,2,16,9,4,0,2,0,0,0,0.167,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public SampledStat( double ): void,SampledStat( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public current( long ): Sample,current( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected newSample( long ): Sample,newSample( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public oldest( long ): Sample,oldest( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,1,0
<Field>org.apache.kafka.common.metrics.stats.SampledStat->current,current : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.SampledStat->initialValue,initialValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.SimpleRate,SimpleRate,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Total,Total,low,low,low,low,0,2,0,0,0,2,12,4,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( ): void,Total( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( double ): void,Total( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.metrics.stats.Total->total,total : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.network,org.apache.kafka.common.network,low,low,medium-high,low,,,,,,179,1413,,,,,,,,,,,,,25,19,6,1413,0,0,0.24,1,0.24,179,,,,,,,
org.apache.kafka.common.network.Authenticator,Authenticator,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.Authenticator.public abstract authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ByteBufferReceive,ByteBufferReceive,low,low,low,low,0,1,0,0,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ByteBufferReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.ByteBufferReceive->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ByteBufferSend,ByteBufferSend,low,low,low,low,0,2,0,0,0,2,30,6,3,0,2,0,0,1,0,1,0,0,,,,,30,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.ByteBufferSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.network.ByteBufferSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.ByteBufferSend->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ChannelBuilder,ChannelBuilder,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ChannelBuilders,ChannelBuilders,low,low,low,low,0,1,0,0,0,1,43,1,0,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilders.private ChannelBuilders( ): void,ChannelBuilders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.DefaultAuthenticator,DefaultAuthenticator,low,low,low,low,0,3,0,0,0,3,15,4,0,0,3,0,0,0,0,0,0,0,,,,,15,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.InvalidReceiveException,InvalidReceiveException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.network.KafkaChannel,KafkaChannel,low,low,low-medium,low,0,10,0,0,0,15,84,29,3,0,10,0,0,0.667,0,0.822,0,0,,,,,84,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.network.KafkaChannel.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public hasSend( ): boolean,hasSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public mute( ): void,mute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.common.network.KafkaChannel.public prepare( ): void,prepare( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public unmute( ): void,unmute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Field>org.apache.kafka.common.network.KafkaChannel->disconnected,disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->muted,muted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.LoginType,LoginType,low,low,low,low,0,0,0,0,0,0,8,0,0,2,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.LoginType->CLIENT,static final CLIENT : LoginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.LoginType->SERVER,static final SERVER : LoginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Mode,Mode,low,low,low,low,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.Mode->CLIENT,static final CLIENT : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Mode->SERVER,static final SERVER : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.MultiSend,MultiSend,low,low,low,low,0,3,0,0,0,6,50,16,3,0,3,0,0,0.667,0,0,0,0,,,,,50,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.network.MultiSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,0,5
<Method>org.apache.kafka.common.network.MultiSend.private nextSendOrDone( ): void,nextSendOrDone( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Method>org.apache.kafka.common.network.MultiSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.MultiSend->doneSends,doneSends : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.MultiSend->size,size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.MultiSend->totalWritten,totalWritten : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkReceive,NetworkReceive,low,low,low-medium,low,0,2,0,0,0,2,56,5,1,1,2,0,0,0,0,1,0,0,,,,,56,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( ): void,NetworkReceive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.network.NetworkReceive->maxSize,final maxSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->UNLIMITED,static final UNLIMITED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkSend,NetworkSend,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.network.PlaintextChannelBuilder,PlaintextChannelBuilder,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.PlaintextTransportLayer,PlaintextTransportLayer,low,low,low-medium,low,0,11,0,0,0,12,74,40,0,0,11,0,0,0,0.409,0,0,0,,,,,74,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.network.Receive,Receive,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Receive.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SaslChannelBuilder,SaslChannelBuilder,low,low,low-medium,low,0,1,0,0,0,2,69,3,1,0,1,0,0,0,0,0,0,0,,,,,69,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Field>org.apache.kafka.common.network.SaslChannelBuilder->handshakeRequestEnable,final handshakeRequestEnable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selectable,Selectable,low,low,low,low,0,5,0,1,0,15,17,5,0,1,5,0,0,0,0.4,1,0,0,,,,,17,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.network.Selectable.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.network.Selectable->USE_DEFAULT_BUFFER_SIZE,static final USE_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selector,Selector,low-medium,low,medium-high,low,0,11,6,0,0,35,451,89,4,1,10,0,0,1.2,0.35,0.9,0,0,,,,,451,,,,,,35,,,,,,,
org.apache.kafka.common.network.Selector.IdleExpiryManager,IdleExpiryManager,low,low,low,low,0,0,0,0,0,0,25,0,2,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.network.Selector.SelectorMetrics,SelectorMetrics,low,low,low,low,0,1,0,0,0,3,114,5,0,0,1,0,0,0,0,0,0,0,,,,,114,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Selector.private addToCompletedReceives( ): void,addToCompletedReceives( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,0,0,0
<Method>org.apache.kafka.common.network.Selector.private clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,14,0,0,0
<Method>org.apache.kafka.common.network.Selector.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,1,1
<Method>org.apache.kafka.common.network.Selector.private hasStagedReceives( ): boolean,hasStagedReceives( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.common.network.Selector.private maybeCloseOldestConnection( long ): void,maybeCloseOldestConnection( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,0,2
<Method>org.apache.kafka.common.network.Selector.public muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public poll( long ): void,poll( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,18,1,5,2
<Method>org.apache.kafka.common.network.Selector.private select( long ): int,select( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,0
<Method>org.apache.kafka.common.network.Selector.public unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.network.Selector->idleExpiryManager,final idleExpiryManager : IdleExpiryManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->metricsPerConnection,final metricsPerConnection : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->sensors,final sensors : SelectorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->NO_IDLE_TIMEOUT_MS,static final NO_IDLE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Send,Send,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.Send.public abstract completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SslChannelBuilder,SslChannelBuilder,low,low,low,low,0,1,0,0,0,1,31,2,0,0,1,0,0,0,0,0,0,0,,,,,31,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.SslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.SslTransportLayer,SslTransportLayer,medium-high,low,medium-high,low,0,18,7,0,0,54,393,180,3,0,18,0,0,0.714,0.444,0.891,0,0,,,,,393,,,,,,54,,,,,,,
<Method>org.apache.kafka.common.network.SslTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected applicationBufferSize( ): int,applicationBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,25,0,1,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public handshake( ): void,handshake( ): void,high,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,6,75,0,6,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFailure( ): void,handshakeFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFinished( ): void,handshakeFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,0,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netReadBufferSize( ): int,netReadBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netWriteBufferSize( ): int,netWriteBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private renegotiate( ): void,renegotiate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected startHandshake( ): void,startHandshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,3,2
<Field>org.apache.kafka.common.network.SslTransportLayer->closing,closing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->enableRenegotiation,final enableRenegotiation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->handshakeComplete,handshakeComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.TransportLayer,TransportLayer,low,low,low,low,0,9,0,1,0,12,13,9,0,0,9,0,0,0,0.389,0,0,0,,,,,13,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayer.public abstract addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.common.protocol,org.apache.kafka.common.protocol,low,low,low-medium,low,,,,,,15,1170,,,,,,,,,,,,,5,5,0,1170,0,0,0,1,0,15,,,,,,,
org.apache.kafka.common.protocol.ApiKeys,ApiKeys,low,low,low-medium,low,0,1,0,0,0,3,64,5,1,24,0,1,0,0,0,0,0,0,,,,,64,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.protocol.ApiKeys.public static forId( int ): ApiKeys,static forId( int ): ApiKeys,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,0,5
<Field>org.apache.kafka.common.protocol.ApiKeys->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->API_VERSIONS,static final API_VERSIONS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CONTROLLED_SHUTDOWN_KEY,static final CONTROLLED_SHUTDOWN_KEY : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_TOPICS,static final CREATE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_TOPICS,static final DELETE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_GROUPS,static final DESCRIBE_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FETCH,static final FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->GROUP_COORDINATOR,static final GROUP_COORDINATOR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->HEARTBEAT,static final HEARTBEAT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ID_TO_TYPE,static final ID_TO_TYPE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->JOIN_GROUP,static final JOIN_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEADER_AND_ISR,static final LEADER_AND_ISR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEAVE_GROUP,static final LEAVE_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_GROUPS,static final LIST_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_OFFSETS,static final LIST_OFFSETS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MAX_API_KEY,static final MAX_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->METADATA,static final METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MIN_API_KEY,static final MIN_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_COMMIT,static final OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FETCH,static final OFFSET_FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->PRODUCE,static final PRODUCE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SASL_HANDSHAKE,static final SASL_HANDSHAKE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->STOP_REPLICA,static final STOP_REPLICA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SYNC_GROUP,static final SYNC_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->UPDATE_METADATA_KEY,static final UPDATE_METADATA_KEY : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Errors,Errors,low,low,low-medium,low,0,3,0,0,0,5,160,12,1,45,2,1,0,1.957,0.333,1,0,0,,,,,160,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.protocol.Errors.public code( ): short,code( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.Errors.public maybeThrow( ): void,maybeThrow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.common.protocol.Errors.public static forCode( short ): Errors,static forCode( short ): Errors,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,1
<Field>org.apache.kafka.common.protocol.Errors->code,final code : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->BROKER_NOT_AVAILABLE,static final BROKER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CLUSTER_AUTHORIZATION_FAILED,static final CLUSTER_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CORRUPT_MESSAGE,static final CORRUPT_MESSAGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_AUTHORIZATION_FAILED,static final GROUP_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_COORDINATOR_NOT_AVAILABLE,static final GROUP_COORDINATOR_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_LOAD_IN_PROGRESS,static final GROUP_LOAD_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_GENERATION,static final ILLEGAL_GENERATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_SASL_STATE,static final ILLEGAL_SASL_STATE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INCONSISTENT_GROUP_PROTOCOL,static final INCONSISTENT_GROUP_PROTOCOL : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_COMMIT_OFFSET_SIZE,static final INVALID_COMMIT_OFFSET_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_CONFIG,static final INVALID_CONFIG : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_FETCH_SIZE,static final INVALID_FETCH_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_GROUP_ID,static final INVALID_GROUP_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PARTITIONS,static final INVALID_PARTITIONS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICATION_FACTOR,static final INVALID_REPLICATION_FACTOR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICA_ASSIGNMENT,static final INVALID_REPLICA_ASSIGNMENT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUEST,static final INVALID_REQUEST : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUIRED_ACKS,static final INVALID_REQUIRED_ACKS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_SESSION_TIMEOUT,static final INVALID_SESSION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TIMESTAMP,static final INVALID_TIMESTAMP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TOPIC_EXCEPTION,static final INVALID_TOPIC_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LEADER_NOT_AVAILABLE,static final LEADER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->MESSAGE_TOO_LARGE,static final MESSAGE_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NETWORK_EXCEPTION,static final NETWORK_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NONE,static final NONE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_CONTROLLER,static final NOT_CONTROLLER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_COORDINATOR_FOR_GROUP,static final NOT_COORDINATOR_FOR_GROUP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS,static final NOT_ENOUGH_REPLICAS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS_AFTER_APPEND,static final NOT_ENOUGH_REPLICAS_AFTER_APPEND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_LEADER_FOR_PARTITION,static final NOT_LEADER_FOR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_METADATA_TOO_LARGE,static final OFFSET_METADATA_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_OUT_OF_RANGE,static final OFFSET_OUT_OF_RANGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REBALANCE_IN_PROGRESS,static final REBALANCE_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->RECORD_LIST_TOO_LARGE,static final RECORD_LIST_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REPLICA_NOT_AVAILABLE,static final REPLICA_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REQUEST_TIMED_OUT,static final REQUEST_TIMED_OUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->STALE_CONTROLLER_EPOCH,static final STALE_CONTROLLER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_ALREADY_EXISTS,static final TOPIC_ALREADY_EXISTS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_AUTHORIZATION_FAILED,static final TOPIC_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN,static final UNKNOWN : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_TOPIC_OR_PARTITION,static final UNKNOWN_TOPIC_OR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_FOR_MESSAGE_FORMAT,static final UNSUPPORTED_FOR_MESSAGE_FORMAT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_SASL_MECHANISM,static final UNSUPPORTED_SASL_MECHANISM : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_VERSION,static final UNSUPPORTED_VERSION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.ProtoUtils,ProtoUtils,low,low,low,low,0,2,0,0,0,6,32,8,0,0,0,2,0,0,0,0,0,0,,,,,32,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.protocol.ProtoUtils.public static latestVersion( int ): short,static latestVersion( int ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,0
<Method>org.apache.kafka.common.protocol.ProtoUtils.public static oldestVersion( int ): short,static oldestVersion( int ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,0
org.apache.kafka.common.protocol.Protocol,Protocol,low,low,medium-high,low,0,1,0,0,0,1,875,2,0,2,0,1,0,0,0,0,0,0,,,,,875,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.protocol.Protocol.public static apiVersionSupported( short, short ): boolean","static apiVersionSupported( short, short ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,3
<Field>org.apache.kafka.common.protocol.Protocol->CURR_VERSION,static final CURR_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Protocol->MIN_VERSIONS,static final MIN_VERSIONS : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.SecurityProtocol,SecurityProtocol,low,low,low,low,0,0,0,0,0,0,39,0,2,5,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->isTesting,final isTesting : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->PLAINTEXT,static final PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SASL_PLAINTEXT,static final SASL_PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SASL_SSL,static final SASL_SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SSL,static final SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->TRACE,static final TRACE : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.protocol.types,org.apache.kafka.common.protocol.types,low,low,low-medium,low,,,,,,12,626,,,,,,,,,,,,,6,6,0,626,0,0,0.167,1,0.167,12,,,,,,,
org.apache.kafka.common.protocol.types.ArrayOf,ArrayOf,low,low,low-medium,low,0,1,0,0,0,1,61,3,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.protocol.types.ArrayOf->nullable,final nullable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Field,Field,low,low,low,low,0,0,0,0,0,0,29,0,1,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Schema,Schema,low,low,low-medium,low,0,1,0,0,0,1,73,2,0,0,1,0,0,0,0,0,0,0,,,,,73,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Schema.public numFields( ): int,numFields( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.protocol.types.SchemaException,SchemaException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.SchemaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Struct,Struct,low,low,low-medium,low,0,4,0,0,0,9,170,22,0,0,4,0,0,0,0,0,0,0,,,,,170,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Struct.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,16,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.protocol.types.Type,Type,low,low,low-medium,low,0,1,0,0,0,1,289,2,0,10,1,0,0,0,0,0,0,0,,,,,289,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Type.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.protocol.types.Type->BOOLEAN,static final BOOLEAN : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->BYTES,static final BYTES : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT16,static final INT16 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT32,static final INT32 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT64,static final INT64 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT8,static final INT8 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_BYTES,static final NULLABLE_BYTES : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_STRING,static final NULLABLE_STRING : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->RECORDS,static final RECORDS : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->STRING,static final STRING : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.record,org.apache.kafka.common.record,low-medium,low,high,low,,,,,,261,1847,,,,,,,,,,,,,35,31,4,1847,0,0,0.171,1,0.171,261,,,,,,,
org.apache.kafka.common.record.AbstractRecords,AbstractRecords,low,low,low,low,0,1,0,0,0,3,40,6,0,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.AbstractRecords.public hasMatchingShallowMagic( byte ): boolean,hasMatchingShallowMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,0
org.apache.kafka.common.record.ByteBufferInputStream,ByteBufferInputStream,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.common.record.ByteBufferInputStream.UnderlyingInputStream,UnderlyingInputStream,low,low,low,low,0,2,0,0,0,4,14,10,0,0,2,0,0,0,0.333,0,0,0,,,,,14,,,,,,4,,,,,,,
org.apache.kafka.common.record.ByteBufferLogInputStream,ByteBufferLogInputStream,low,low,low-medium,low,0,1,0,0,0,5,59,16,1,0,1,0,0,0,0,0,0,0,,,,,59,,,,,,5,,,,,,,
org.apache.kafka.common.record.ByteBufferLogInputStream.ByteBufferLogEntry,ByteBufferLogEntry,low,low,low,low,0,4,0,0,0,8,37,24,0,0,4,0,0,0,0.125,0,0,0,,,,,37,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.record.ByteBufferLogInputStream.public nextEntry( ): ByteBufferLogEntry,nextEntry( ): ByteBufferLogEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,16,0,0,2
<Field>org.apache.kafka.common.record.ByteBufferLogInputStream->maxMessageSize,final maxMessageSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ByteBufferOutputStream,ByteBufferOutputStream,low,low,low,low,0,0,0,0,0,0,25,0,0,1,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.record.ByteBufferOutputStream.UnderlyingOutputStream,UnderlyingOutputStream,low,low,low,low,0,3,1,0,0,5,19,13,0,0,3,0,0,0,0.222,0,0,0,,,,,19,,,,,,5,,,,,,,
<Field>org.apache.kafka.common.record.ByteBufferOutputStream->REALLOCATION_FACTOR,static final REALLOCATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionType,CompressionType,low,low,low,low,0,1,0,0,0,5,32,12,2,4,0,1,0,0,0,0,0,0,,,,,32,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.record.CompressionType.public static forId( int ): CompressionType,static forId( int ): CompressionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,0,4
<Field>org.apache.kafka.common.record.CompressionType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->rate,final rate : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->GZIP,static final GZIP : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->LZ4,static final LZ4 : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->NONE,static final NONE : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->SNAPPY,static final SNAPPY : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileLogInputStream,FileLogInputStream,low,low,low-medium,low,0,2,1,0,0,6,87,20,3,0,1,0,0,0,0,0,0,0,,,,,87,,,,,,6,,,,,,,
org.apache.kafka.common.record.FileLogInputStream.FileChannelLogEntry,FileChannelLogEntry,low,low,low,low,0,4,0,0,0,7,53,21,3,0,4,0,0,0.889,0,0.833,0,0,,,,,53,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.record.FileLogInputStream.public nextEntry( ): FileChannelLogEntry,nextEntry( ): FileChannelLogEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,20,0,1,9
<Field>org.apache.kafka.common.record.FileLogInputStream->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->maxRecordSize,final maxRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->position,position : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileRecords,FileRecords,low-medium,low,low-medium,low,0,11,4,0,0,26,250,69,3,0,11,0,0,0.667,0.455,0.982,0,0,,,,,250,,,,,,26,,,,,,,
org.apache.kafka.common.record.FileRecords.LogEntryPosition,LogEntryPosition,low,low,low,low,0,2,0,0,0,2,29,10,3,0,2,0,0,0,0.333,0,0,0,,,,,29,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.FileRecords$12837;,Lorg.apache.kafka.common.record.FileRecords$12837;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.common.record.FileRecords.TimestampAndOffset,TimestampAndOffset,low,low,low,low,0,2,0,0,0,2,24,8,2,0,2,0,0,0,0.25,0,0,0,,,,,24,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.FileRecords.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.common.record.FileRecords.public delete( ): boolean,delete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public largestTimestampAfter( int ): TimestampAndOffset,largestTimestampAfter( int ): TimestampAndOffset,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,0,0
"<Method>org.apache.kafka.common.record.FileRecords.public read( int, int ): FileRecords","read( int, int ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,2,2,3
<Method>org.apache.kafka.common.record.FileRecords.public resize( ): void,resize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,5
"<Method>org.apache.kafka.common.record.FileRecords.public searchForOffsetWithSize( long, int ): LogEntryPosition","searchForOffsetWithSize( long, int ): LogEntryPosition",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.record.FileRecords.public searchForTimestamp( long, int ): TimestampAndOffset","searchForTimestamp( long, int ): TimestampAndOffset",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,12,2,0,0
<Method>org.apache.kafka.common.record.FileRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public trim( ): void,trim( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.record.FileRecords.public truncateTo( int ): int,truncateTo( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,1,0
<Field>org.apache.kafka.common.record.FileRecords->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->isSlice,final isSlice : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->start,final start : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.InvalidRecordException,InvalidRecordException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.record.InvalidRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockInputStream,KafkaLZ4BlockInputStream,low-medium,low,low-medium,low-medium,0,11,2,0,0,35,128,98,7,0,11,0,0,0.738,0.659,0.833,0,0,,,,,128,,,,,,35,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public available( ): int,available( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public ignoreFlagDescriptorChecksum( ): boolean,ignoreFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public markSupported( ): boolean,markSupported( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,2,4
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,3,3,5
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readBlock( ): void,readBlock( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,27,0,0,11
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readHeader( ): void,readHeader( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,21,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public skip( long ): long,skip( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,3,3
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public synchronized mark( int ): void,synchronized mark( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public synchronized reset( ): void,synchronized reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->bufferSize,bufferSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->buffer,final buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->compressedBuffer,final compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->ignoreFlagDescriptorChecksum,final ignoreFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream,KafkaLZ4BlockOutputStream,low,low,low-medium,low,0,12,7,0,0,20,201,74,8,7,9,0,0,0.942,0.556,0.8,1,0,,,,,201,,,,,,20,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.BD,BD,low,low,low,low,0,7,1,0,0,11,29,25,3,0,6,1,0,0.222,0.524,0.9,0,0,,,,,29,,,,,,11,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.FLG,FLG,low,low,low,low,0,11,1,0,0,15,58,50,6,1,10,1,0,0.732,0.682,0.861,0,0,,,,,58,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,3,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private ensureNotFinished( ): void,ensureNotFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,1,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public useBrokenFlagDescriptorChecksum( ): boolean,useBrokenFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,2,10
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,4
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeBlock( ): void,writeBlock( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,0,1,11
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeEndMark( ): void,writeEndMark( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeHeader( ): void,writeHeader( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,2,17
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bd,final bd : BD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->buffer,final buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->compressedBuffer,final compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->flg,final flg : FLG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->useBrokenFlagDescriptorChecksum,final useBrokenFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_1MB,static final BLOCKSIZE_1MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_256KB,static final BLOCKSIZE_256KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_4MB,static final BLOCKSIZE_4MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_64KB,static final BLOCKSIZE_64KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_FRAME_INCOMPRESSIBLE_MASK,static final LZ4_FRAME_INCOMPRESSIBLE_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_MAX_HEADER_LENGTH,static final LZ4_MAX_HEADER_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->MAGIC,static final MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LogEntry,LogEntry,low,low,low-medium,low,0,7,1,0,1,8,60,18,0,0,7,0,0,0,0,0,0,0,,,,,60,,,,,,8,,,,,,,
org.apache.kafka.common.record.LogEntry.SimpleLogEntry,SimpleLogEntry,low,low,low,low,0,1,0,1,0,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.LogEntry.public abstract offset( ): long,abstract offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.record.LogEntry.public firstOffset( ): long,firstOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.LogEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,1,0
<Method>org.apache.kafka.common.record.LogEntry.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.LogEntry.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.LogEntry.public nextOffset( ): long,nextOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LogEntry.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.record.LogInputStream<T>,LogInputStream,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.LogInputStream<T>.public abstract nextEntry( ): T,nextEntry( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.record.MemoryRecords,MemoryRecords,low,low,low-medium,low,0,3,0,0,0,5,239,14,1,1,3,0,0,0,0,1,0,0,,,,,239,,,,,,5,,,,,,,
org.apache.kafka.common.record.MemoryRecords.FilterResult,FilterResult,low,low,low,low,0,1,0,0,0,1,22,14,7,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
org.apache.kafka.common.record.MemoryRecords.LogEntryFilter,LogEntryFilter,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.MemoryRecords$7842;,Lorg.apache.kafka.common.record.MemoryRecords$7842;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.MemoryRecords.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecords.public validBytes( ): int,validBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,0,3
<Field>org.apache.kafka.common.record.MemoryRecords->EMPTY,static final EMPTY : MemoryRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->validBytes,validBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder,MemoryRecordsBuilder,low-medium,low,low-medium,low-medium,0,14,7,0,0,32,262,78,12,8,14,0,0,0.927,0.607,0.867,0,0,,,,,262,,,,,,32,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder.ConstructorSupplier,ConstructorSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder.MemoizingConstructorSupplier,MemoizingConstructorSupplier,low,low,low,low,1,1,0,0,0,1,13,2,2,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder.RecordsInfo,RecordsInfo,low,low,low,low,0,1,0,0,0,1,7,4,2,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( long, byte, byte ): long","append( long, byte, byte ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,3,1,3
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, long, byte, byte ): long","appendWithOffset( long, long, byte, byte ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,4,2,6
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public compressionRate( ): double,compressionRate( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private estimatedBytesWritten( ): int,estimatedBytesWritten( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,3
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public hasRoomFor( byte, byte ): boolean","hasRoomFor( byte, byte ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,5
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public info( ): RecordsInfo,info( ): RecordsInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,0,0,7
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private recordWritten( long, long, int ): void","recordWritten( long, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,3,0,6
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private toInnerOffset( long ): long,toInnerOffset( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private writerCompressedWrapperHeader( ): void,writerCompressedWrapperHeader( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,13,0,0,14
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->compressionRate,compressionRate : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->baseOffset,final baseOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->initPos,final initPos : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->initialCapacity,final initialCapacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->logAppendTime,final logAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->magic,final magic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->writeLimit,final writeLimit : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->lastOffset,lastOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->maxTimestamp,maxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->numRecords,numRecords : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->offsetOfMaxTimestamp,offsetOfMaxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->COMPRESSION_DEFAULT_BUFFER_SIZE,static final COMPRESSION_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->COMPRESSION_RATE_DAMPING_FACTOR,static final COMPRESSION_RATE_DAMPING_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->COMPRESSION_RATE_ESTIMATION_FACTOR,static final COMPRESSION_RATE_ESTIMATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->TYPE_TO_RATE,static final TYPE_TO_RATE : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->lz4InputStreamSupplier,static lz4InputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->lz4OutputStreamSupplier,static lz4OutputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->snappyInputStreamSupplier,static snappyInputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->snappyOutputStreamSupplier,static snappyOutputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->writtenUncompressed,writtenUncompressed : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Record,Record,low-medium,low,low-medium,low,0,28,16,0,0,41,294,85,0,24,16,12,0,0.997,0.58,0.96,0,0,,,,,294,,,,,,41,,,,,,,
<Method>org.apache.kafka.common.record.Record.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.Record.public convert( byte ): Record,convert( byte ): Record,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,1,4,0
<Method>org.apache.kafka.common.record.Record.public convertedSize( byte ): int,convertedSize( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.record.Record.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,5,1
<Method>org.apache.kafka.common.record.Record.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.Record.public hasNullValue( ): boolean,hasNullValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.Record.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.Record.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.Record.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,3
<Method>org.apache.kafka.common.record.Record.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.record.Record.public static computeChecksum( byte, byte, long, byte, byte ): long","static computeChecksum( byte, byte, long, byte, byte ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
<Method>org.apache.kafka.common.record.Record.public static create( byte ): Record,static create( byte ): Record,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
"<Method>org.apache.kafka.common.record.Record.public static create( byte, byte ): Record","static create( byte, byte ): Record",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.common.record.Record.public static create( byte, byte, byte ): Record","static create( byte, byte, byte ): Record",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.common.record.Record.public static create( byte, long, byte ): Record","static create( byte, long, byte ): Record",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.record.Record.public static create( byte, long, byte, byte ): Record","static create( byte, long, byte, byte ): Record",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.common.record.Record.public static create( long, byte, byte ): Record","static create( long, byte, byte ): Record",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,1
<Method>org.apache.kafka.common.record.Record.private static keyOffset( byte ): int,static keyOffset( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,2
<Method>org.apache.kafka.common.record.Record.public static recordOverhead( byte ): int,static recordOverhead( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,2
"<Method>org.apache.kafka.common.record.Record.public static recordSize( byte, byte ): int","static recordSize( byte, byte ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.common.record.Record.public static recordSize( byte, byte, byte ): int","static recordSize( byte, byte, byte ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,2,3,1,0
"<Method>org.apache.kafka.common.record.Record.private static recordSize( byte, int, int ): int","static recordSize( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
<Method>org.apache.kafka.common.record.Record.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,1,3
<Method>org.apache.kafka.common.record.Record.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.Record.private valueSizeOffset( ): int,valueSizeOffset( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,3
<Field>org.apache.kafka.common.record.Record->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->ATTRIBUTE_LENGTH,static final ATTRIBUTE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CURRENT_MAGIC_VALUE,static final CURRENT_MAGIC_VALUE : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->HEADER_SIZE,static final HEADER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_OFFSET_V0,static final KEY_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_OFFSET_V1,static final KEY_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_SIZE_LENGTH,static final KEY_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_SIZE_OFFSET_V0,static final KEY_SIZE_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_SIZE_OFFSET_V1,static final KEY_SIZE_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_VALUE_V0,static final MAGIC_VALUE_V0 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_VALUE_V1,static final MAGIC_VALUE_V1 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->NO_TIMESTAMP,static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->RECORD_OVERHEAD_V0,static final RECORD_OVERHEAD_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->RECORD_OVERHEAD_V1,static final RECORD_OVERHEAD_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->TIMESTAMP_LENGTH,static final TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->TIMESTAMP_OFFSET,static final TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->TIMESTAMP_TYPE_ATTRIBUTE_OFFSET,static final TIMESTAMP_TYPE_ATTRIBUTE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->TIMESTAMP_TYPE_MASK,static final TIMESTAMP_TYPE_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->VALUE_SIZE_LENGTH,static final VALUE_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Records,Records,low,low,low,low,0,3,0,1,0,6,12,3,0,5,3,0,0,0,0.167,1,0,0,,,,,12,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.record.Records.public abstract hasMatchingShallowMagic( byte ): boolean,hasMatchingShallowMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Records.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Records.public abstract toMessageFormat( byte ): Records,toMessageFormat( byte ): Records,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.common.record.Records->LOG_OVERHEAD,static final LOG_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_LENGTH,static final OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_OFFSET,static final OFFSET_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_LENGTH,static final SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_OFFSET,static final SIZE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordsIterator,RecordsIterator,low,low,low-medium,low,0,1,0,0,0,1,114,2,5,0,1,0,0,0,0,0,0,0,,,,,114,,,,,,1,,,,,,,
org.apache.kafka.common.record.RecordsIterator.DataLogInputStream,DataLogInputStream,low,low,low,low,0,0,0,0,0,0,20,0,1,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.common.record.RecordsIterator.DeepRecordsIterator,DeepRecordsIterator,low,low,low,low,0,0,0,0,0,0,50,0,2,0,0,0,0,0,0,0,0,0,,,,,50,,,,,,0,,,,,,,
org.apache.kafka.common.record.RecordsIterator.ShallowRecordsIterator<T>,ShallowRecordsIterator,low,low,low,low,0,1,0,0,0,3,13,9,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.RecordsIterator.private innerDone( ): boolean,innerDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Field>org.apache.kafka.common.record.RecordsIterator->ensureMatchingMagic,final ensureMatchingMagic : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsIterator->masRecordSize,final masRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsIterator->shallow,final shallow : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsIterator->shallowIter,final shallowIter : ShallowRecordsIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsIterator->innerIter,innerIter : DeepRecordsIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.TimestampType,TimestampType,low,low,low,low,0,2,0,0,0,4,21,6,1,3,1,1,0,1.25,0,0,0,0,,,,,21,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.record.TimestampType.public static forAttributes( byte ): TimestampType,static forAttributes( byte ): TimestampType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,2
<Method>org.apache.kafka.common.record.TimestampType.public updateAttributes( byte ): byte,updateAttributes( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.common.record.TimestampType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->CREATE_TIME,static final CREATE_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->LOG_APPEND_TIME,static final LOG_APPEND_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->NO_TIMESTAMP_TYPE,static final NO_TIMESTAMP_TYPE : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.requests,org.apache.kafka.common.requests,low,low,very-high,low,,,,,,69,2994,,,,,,,,,,,,,67,67,0,2994,0,0,0.045,1,0.045,69,,,,,,,
org.apache.kafka.common.requests.AbstractRequest,AbstractRequest,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AbstractRequestResponse,AbstractRequestResponse,low,low,low,low,0,2,0,0,0,2,32,5,0,0,2,0,0,0,0,0,0,0,,,,,32,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.AbstractRequestResponse.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.AbstractRequestResponse.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.AbstractResponse,AbstractResponse,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.common.requests.ApiVersionsRequest,ApiVersionsRequest,low,low,low,low,0,1,0,0,0,1,20,2,0,1,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public ApiVersionsRequest( ): void,ApiVersionsRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.ApiVersionsRequest->API_VERSIONS_REQUEST,static final API_VERSIONS_REQUEST : ApiVersionsRequest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiVersionsResponse,ApiVersionsResponse,low,low,low-medium,low,0,3,0,0,0,4,69,9,1,1,2,1,0,0,0.333,1,0,0,,,,,69,,,,,,4,,,,,,,
org.apache.kafka.common.requests.ApiVersionsResponse.ApiVersion,ApiVersion,low,low,low,low,0,1,0,0,0,1,15,4,3,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public apiVersion( short ): ApiVersion,apiVersion( short ): ApiVersion,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.private static createApiVersionsResponse( ): ApiVersionsResponse,static createApiVersionsResponse( ): ApiVersionsResponse,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Field>org.apache.kafka.common.requests.ApiVersionsResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ApiVersionsResponse->API_VERSIONS_RESPONSE,static final API_VERSIONS_RESPONSE : ApiVersionsResponse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownRequest,ControlledShutdownRequest,low,low,low,low,0,2,0,0,0,2,28,6,1,0,2,0,0,0,0.25,0,0,0,,,,,28,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public ControlledShutdownRequest( int ): void,ControlledShutdownRequest( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownRequest->brokerId,brokerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownResponse,ControlledShutdownResponse,low,low,low,low,0,1,0,0,0,1,38,2,1,0,1,0,0,0,0,0,0,0,,,,,38,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest,CreateTopicsRequest,low,low,low-medium,low,0,0,0,0,0,0,128,0,0,2,0,0,0,0,0,0,0,0,,,,,128,,,,,,0,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest.TopicDetails,TopicDetails,low,low,low,low,0,1,0,0,0,1,25,3,2,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_NUM_PARTITIONS,static final NO_NUM_PARTITIONS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_REPLICATION_FACTOR,static final NO_REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsResponse,CreateTopicsResponse,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsRequest,DeleteTopicsRequest,low,low,low,low,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsResponse,DeleteTopicsResponse,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsRequest,DescribeGroupsRequest,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse,DescribeGroupsResponse,low,low,low-medium,low,0,0,0,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,,,,,132,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMember,GroupMember,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMetadata,GroupMetadata,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchRequest,FetchRequest,low,low,low-medium,low,0,5,0,0,0,5,134,10,4,2,5,0,0,1.042,0,0.9,0,0,,,,,134,,,,,,5,,,,,,,
org.apache.kafka.common.requests.FetchRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchRequest.TopicAndPartitionData<T>,TopicAndPartitionData,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.FetchRequest.public isFromFollower( ): boolean,isFromFollower( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxBytes( ): int,maxBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxWait( ): int,maxWait( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public minBytes( ): int,minBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchRequest->maxBytes,final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->maxWait,final maxWait : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->minBytes,final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->DEFAULT_RESPONSE_MAX_BYTES,static final DEFAULT_RESPONSE_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchResponse,FetchResponse,low,low,low-medium,low,0,1,0,0,0,1,134,2,1,2,1,0,0,0,0,0,0,0,,,,,134,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchResponse.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.FetchResponse.public getThrottleTime( ): int,getThrottleTime( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchResponse->throttleTime,final throttleTime : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->INVALID_HIGHWATERMARK,static final INVALID_HIGHWATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.GroupCoordinatorRequest,GroupCoordinatorRequest,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.requests.GroupCoordinatorResponse,GroupCoordinatorResponse,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.GroupCoordinatorResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.GroupCoordinatorResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatRequest,HeartbeatRequest,low,low,low,low,0,1,0,0,0,1,39,2,1,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatRequest.public groupGenerationId( ): int,groupGenerationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatRequest->groupGenerationId,final groupGenerationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatResponse,HeartbeatResponse,low,low,low,low,0,2,0,0,0,2,15,6,1,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public HeartbeatResponse( short ): void,HeartbeatResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest,JoinGroupRequest,low,low,low-medium,low,0,2,0,0,0,2,116,4,2,0,2,0,0,1,0,1,0,0,,,,,116,,,,,,2,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest.ProtocolMetadata,ProtocolMetadata,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public rebalanceTimeout( ): int,rebalanceTimeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public sessionTimeout( ): int,sessionTimeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.JoinGroupRequest->rebalanceTimeout,final rebalanceTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupRequest->sessionTimeout,final sessionTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupResponse,JoinGroupResponse,low,low,low-medium,low,0,3,0,0,0,3,81,6,2,2,3,0,0,1.5,0,1,0,0,,,,,81,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.JoinGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->CURRENT_VERSION,static final CURRENT_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_GENERATION_ID,static final UNKNOWN_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest,LeaderAndIsrRequest,low,low,low-medium,low,0,2,0,0,0,2,107,4,2,0,2,0,0,1,0,1,0,0,,,,,107,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrResponse,LeaderAndIsrResponse,low,low,low,low,0,1,0,0,0,1,44,2,1,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaderAndIsrResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaveGroupRequest,LeaveGroupRequest,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.common.requests.LeaveGroupResponse,LeaveGroupResponse,low,low,low,low,0,2,0,0,0,2,15,6,1,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public LeaveGroupResponse( short ): void,LeaveGroupResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaveGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListGroupsRequest,ListGroupsRequest,low,low,low,low,0,1,0,0,0,1,19,2,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsRequest.public ListGroupsRequest( ): void,ListGroupsRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.ListGroupsResponse,ListGroupsResponse,low,low,low,low,0,1,0,0,0,1,47,2,1,0,1,0,0,0,0,0,0,0,,,,,47,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListGroupsResponse.Group,Group,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListGroupsResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest,ListOffsetRequest,low,low,low-medium,low,0,1,0,0,0,1,118,2,1,4,1,0,0,0,0,0,0,0,,,,,118,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,7,3,2,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListOffsetRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->DEBUGGING_REPLICA_ID,static final DEBUGGING_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->EARLIEST_TIMESTAMP,static final EARLIEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LATEST_TIMESTAMP,static final LATEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse,ListOffsetResponse,low,low,low-medium,low,0,0,0,0,0,0,85,0,0,2,0,0,0,0,0,0,0,0,,,,,85,,,,,,0,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,17,5,1,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,1,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_OFFSET,static final UNKNOWN_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_TIMESTAMP,static final UNKNOWN_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.MetadataRequest,MetadataRequest,low,low,low,low,0,2,0,0,0,2,47,4,0,1,1,1,0,0,0,1,0,0,,,,,47,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.MetadataRequest.public isAllTopics( ): boolean,isAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.MetadataRequest.public static allTopics( ): MetadataRequest,static allTopics( ): MetadataRequest,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.MetadataRequest->ALL_TOPICS_REQUEST,static final ALL_TOPICS_REQUEST : MetadataRequest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.MetadataResponse,MetadataResponse,low,low,low-medium,low,0,0,0,0,0,0,214,0,0,2,0,0,0,0,0,0,0,0,,,,,214,,,,,,0,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.PartitionMetadata,PartitionMetadata,low,low,low,low,0,1,0,0,0,1,26,2,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.TopicMetadata,TopicMetadata,low,low,low,low,0,1,0,0,0,1,21,2,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->CURRENT_VERSION,static final CURRENT_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->NO_CONTROLLER_ID,static final NO_CONTROLLER_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest,OffsetCommitRequest,low,low,low-medium,low,0,2,0,0,0,2,146,4,2,3,2,0,0,1.6,0,1,0,0,,,,,146,,,,,,2,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,12,0,2,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public retentionTime( ): long,retentionTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->retentionTime,final retentionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_GENERATION_ID,static final DEFAULT_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_RETENTION_TIME,static final DEFAULT_RETENTION_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_TIMESTAMP,static final DEFAULT_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitResponse,OffsetCommitResponse,low,low,low,low,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,,,,,43,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchRequest,OffsetFetchRequest,low,low,low-medium,low,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse,OffsetFetchResponse,low,low,low-medium,low,0,0,0,0,0,0,60,0,0,1,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,10,2,2,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.PartitionState,PartitionState,low,low,low,low,0,0,0,0,0,0,22,0,4,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.requests.PartitionState->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.PartitionState->leader,final leader : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.PartitionState->leaderEpoch,final leaderEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.PartitionState->zkVersion,final zkVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceRequest,ProduceRequest,low,low,low-medium,low,0,3,0,0,0,3,75,6,2,0,3,0,0,1,0,1,0,0,,,,,75,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceRequest.public acks( ): short,acks( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public clearPartitionRecords( ): void,clearPartitionRecords( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceRequest->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceResponse,ProduceResponse,low,low,low-medium,low,0,1,0,0,0,1,88,2,1,2,1,0,0,0,0,0,0,0,,,,,88,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ProduceResponse.PartitionResponse,PartitionResponse,low,low,low,low,0,1,0,0,0,1,20,4,3,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceResponse.public getThrottleTime( ): int,getThrottleTime( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceResponse->throttleTime,final throttleTime : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RecordsSend,RecordsSend,low,low,low,low,0,2,0,0,0,2,33,6,2,0,2,0,0,0,0,1,0,0,,,,,33,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.RecordsSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.requests.RecordsSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.requests.RecordsSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RecordsSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestHeader,RequestHeader,low,low,low,low,0,3,0,0,0,3,37,6,3,0,3,0,0,1,0,1,0,0,,,,,37,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.RequestHeader.public apiKey( ): short,apiKey( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.RequestHeader->apiKey,final apiKey : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestHeader->apiVersion,final apiVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ResponseHeader,ResponseHeader,low,low,low,low,0,2,0,0,0,2,14,6,1,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ResponseHeader.public ResponseHeader( int ): void,ResponseHeader( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.ResponseHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ResponseHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeRequest,SaslHandshakeRequest,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeResponse,SaslHandshakeResponse,low,low,low,low,0,1,0,0,0,1,28,2,1,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SaslHandshakeResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.StopReplicaRequest,StopReplicaRequest,low,low,low-medium,low,0,3,0,0,0,3,62,6,3,0,3,0,0,1,0,1,0,0,,,,,62,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public deletePartitions( ): boolean,deletePartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->deletePartitions,final deletePartitions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.StopReplicaResponse,StopReplicaResponse,low,low,low,low,0,1,0,0,0,1,44,2,1,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.StopReplicaResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SyncGroupRequest,SyncGroupRequest,low,low,low-medium,low,0,1,0,0,0,1,61,2,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SyncGroupResponse,SyncGroupResponse,low,low,low,low,0,1,0,0,0,1,22,2,1,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest,UpdateMetadataRequest,low,low,low-medium,low,0,2,0,0,0,2,166,4,2,0,2,0,0,1,0,1,0,0,,,,,166,,,,,,2,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.Broker,Broker,low,low,low,low,0,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.EndPoint,EndPoint,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataResponse,UpdateMetadataResponse,low,low,low,low,0,2,0,0,0,2,17,6,1,0,2,0,0,0,0.25,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public UpdateMetadataResponse( short ): void,UpdateMetadataResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.UpdateMetadataResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security,org.apache.kafka.common.security,low,low,low,low,,,,,,4,133,,,,,,,,,,,,,2,2,0,133,0,0,0,1,0,4,,,,,,,
org.apache.kafka.common.security.JaasConfig,JaasConfig,low,low,low-medium,low,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,,,,,58,,,,,,0,,,,,,,
org.apache.kafka.common.security.JaasUtils,JaasUtils,low,low,low-medium,low,0,1,0,0,0,4,75,15,0,0,0,1,0,0,0,0,0,0,,,,,75,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.JaasUtils.public static isZkSecurityEnabled( ): boolean,static isZkSecurityEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,0,0,0
<Package>org.apache.kafka.common.security.auth,org.apache.kafka.common.security.auth,low,low,low,low,,,,,,12,60,,,,,,,,,,,,,5,2,3,60,0,0,0.6,1,0.6,12,,,,,,,
org.apache.kafka.common.security.auth.AuthCallbackHandler,AuthCallbackHandler,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.auth.AuthCallbackHandler.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.DefaultPrincipalBuilder,DefaultPrincipalBuilder,low,low,low,low,0,1,0,0,0,1,8,1,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.KafkaPrincipal,KafkaPrincipal,low,low,low,low,0,1,0,0,0,1,38,5,0,1,1,0,0,0,0,0,0,0,,,,,38,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->ANONYMOUS,static final ANONYMOUS : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.Login,Login,low,low,low,low,0,1,0,1,0,5,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.auth.Login.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.PrincipalBuilder,PrincipalBuilder,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.common.security.authenticator,org.apache.kafka.common.security.authenticator,low,low,low-medium,low,,,,,,84,558,,,,,,,,,,,,,10,10,0,558,0,0,0.1,1,0.1,84,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin,AbstractLogin,low,low,low,low,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,,,,,36,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin.LoginCallbackHandler,LoginCallbackHandler,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.DefaultLogin,DefaultLogin,low,low,low,low,0,1,0,0,0,1,6,2,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.DefaultLogin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.security.authenticator.LoginManager,LoginManager,low,low,low,low,0,3,0,0,0,6,38,16,1,0,2,1,0,0,0,1,0,0,,,,,38,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.LoginManager.private acquire( ): LoginManager,acquire( ): LoginManager,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public release( ): void,release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,0,3
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public static closeAll( ): void,static closeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,5,0,0,0
<Field>org.apache.kafka.common.security.authenticator.LoginManager->refCount,refCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator,SaslClientAuthenticator,low-medium,low,low-medium,low-medium,0,9,6,0,0,37,197,104,4,0,9,0,0,0.833,0.611,0.667,0,0,,,,,197,,,,,,37,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$11672;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$11672;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$5410;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$5410;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,0,0,0,2,0,0,6,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public authenticate( ): void,authenticate( ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,39,0,10,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private createSaslToken( byte, boolean ): byte","createSaslToken( byte, boolean ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,23,2,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveResponseOrToken( ): byte,receiveResponseOrToken( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,0,0
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendSaslToken( byte, boolean ): void","sendSaslToken( byte, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,1,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,3
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->correlationId,correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->handshakeRequestEnable,final handshakeRequestEnable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler,SaslClientCallbackHandler,low,low,low,low,0,1,0,0,0,1,43,2,1,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler->isKerberos,isKerberos : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator,SaslServerAuthenticator,low-medium,low,low-medium,low,0,7,4,0,0,38,203,107,3,0,7,0,0,0.667,0.571,0.667,0,0,,,,,203,,,,,,38,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$6035;,Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$6035;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$8995;,Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$8995;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,0,0,0,2,0,0,5,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public authenticate( ): void,authenticate( ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,34,0,7,2
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleKafkaRequest( byte ): boolean,handleKafkaRequest( byte ): boolean,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,5,46,1,2,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,3
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler,SaslServerCallbackHandler,low,low,low,low,0,1,0,0,0,1,35,2,0,0,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.security.kerberos,org.apache.kafka.common.security.kerberos,low,low,low-medium,low,,,,,,12,412,,,,,,,,,,,,,6,6,0,412,0,0,0,1,0,12,,,,,,,
org.apache.kafka.common.security.kerberos.BadFormatString,BadFormatString,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosLogin,KerberosLogin,low,low,low-medium,low,0,5,2,0,0,12,226,34,6,0,5,0,0,1.333,0,0,0,0,,,,,226,,,,,,12,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.kerberos.KerberosLogin$6083;,Lorg.apache.kafka.common.security.kerberos.KerberosLogin$6083;,low,low,low,low,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,,,,,96,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentElapsedTime( ): long,currentElapsedTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentWallTime( ): long,currentWallTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private hasSufficientTimeElapsed( ): boolean,hasSufficientTimeElapsed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,1,3
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private synchronized reLogin( ): void,synchronized reLogin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,2,2
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isKrbTicket,isKrbTicket : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isUsingTicketCache,isUsingTicketCache : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->lastLogin,lastLogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->minTimeBeforeRelogin,minTimeBeforeRelogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewJitter,ticketRenewJitter : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewWindowFactor,ticketRenewWindowFactor : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosName,KerberosName,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosRule,KerberosRule,low,low,low-medium,low,0,0,0,0,0,0,98,0,3,0,0,0,0,0,0,0,0,0,,,,,98,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->isDefault,final isDefault : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->numOfComponents,final numOfComponents : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->repeat,final repeat : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosShortNamer,KerberosShortNamer,low,low,low,low,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,,,,,43,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.NoMatchingRule,NoMatchingRule,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.security.plain,org.apache.kafka.common.security.plain,low,low,low,low,,,,,,20,106,,,,,,,,,,,,,4,4,0,106,0,0,0,1,0,20,,,,,,,
org.apache.kafka.common.security.plain.PlainLoginModule,PlainLoginModule,low,low,low,low,0,4,0,0,0,4,25,12,0,0,4,0,0,0,0,0,0,0,,,,,25,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.security.plain.PlainSaslServer,PlainSaslServer,low,low,low-medium,low,0,5,0,0,0,14,74,41,1,0,5,0,0,0,0.333,0.4,0,0,,,,,74,,,,,,14,,,,,,,
org.apache.kafka.common.security.plain.PlainSaslServer.PlainSaslServerFactory,PlainSaslServerFactory,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,26,1,0,1
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,0,1
"<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,0,1
<Field>org.apache.kafka.common.security.plain.PlainSaslServer->complete,complete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.plain.PlainSaslServerProvider,PlainSaslServerProvider,low,low,low,low,0,2,0,0,0,2,7,5,0,1,1,1,0,0,0,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainSaslServerProvider.protected PlainSaslServerProvider( ): void,PlainSaslServerProvider( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.plain.PlainSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.ssl,org.apache.kafka.common.security.ssl,low,low,low,low,,,,,,0,134,,,,,,,,,,,,,2,2,0,134,0,0,0,1,0,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory,SslFactory,low,low,low-medium,low,0,0,0,0,0,0,134,0,4,0,0,0,0,0,0,0,0,0,,,,,134,,,,,,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory.SecurityStore,SecurityStore,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->keystore,keystore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->needClientAuth,needClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->truststore,truststore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->wantClientAuth,wantClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.serialization,org.apache.kafka.common.serialization,low,low,medium-high,low,,,,,,32,281,,,,,,,,,,,,,26,23,3,281,0,0,0.115,1,0.115,32,,,,,,,
org.apache.kafka.common.serialization.ByteArrayDeserializer,ByteArrayDeserializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArrayDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ByteArraySerializer,ByteArraySerializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArraySerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ByteBufferDeserializer,ByteBufferDeserializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteBufferDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.ByteBufferSerializer,ByteBufferSerializer,low,low,low,low,0,1,0,0,0,1,15,1,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteBufferSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.BytesDeserializer,BytesDeserializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.BytesDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.BytesSerializer,BytesSerializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.BytesSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Deserializer<T>,Deserializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Deserializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.DoubleDeserializer,DoubleDeserializer,low,low,low,low,0,1,0,0,0,1,16,2,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.DoubleDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.DoubleSerializer,DoubleSerializer,low,low,low,low,0,1,0,0,0,1,20,2,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.DoubleSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.IntegerDeserializer,IntegerDeserializer,low,low,low,low,0,1,0,0,0,1,14,1,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.IntegerSerializer,IntegerSerializer,low,low,low,low,0,1,0,0,0,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongDeserializer,LongDeserializer,low,low,low,low,0,1,0,0,0,1,14,1,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongSerializer,LongSerializer,low,low,low,low,0,1,0,0,0,1,16,1,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serde<T>,Serde,low,low,low,low,0,1,0,1,0,4,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.serialization.Serde<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serdes,Serdes,low,low,low-medium,low,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,,,,,79,,,,,,0,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteArraySerde,ByteArraySerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteBufferSerde,ByteBufferSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.BytesSerde,BytesSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.DoubleSerde,DoubleSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.IntegerSerde,IntegerSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.LongSerde,LongSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.StringSerde,StringSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.WrapperSerde<T>,WrapperSerde,low,low,low,low,0,1,0,0,7,1,20,4,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serializer<T>,Serializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Serializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.StringDeserializer,StringDeserializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.StringSerializer,StringSerializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.utils,org.apache.kafka.common.utils,low,low,medium-high,low,,,,,,114,1036,,,,,,,,,,,,,20,17,3,1036,0,1,0.25,1,0.25,114,,,,,,,
org.apache.kafka.common.utils.AbstractIterator<T>,AbstractIterator,low,low,low,low,1,6,1,0,0,12,43,30,2,0,6,0,0,0.5,0,0.667,0,0,,,,,43,,,,,,12,,,,,,,
org.apache.kafka.common.utils.AbstractIterator.State,State,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected abstract makeNext( ): T,abstract makeNext( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected allDone( ): T,allDone( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public next( ): T,next( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,1,3
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->next,next : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.AppInfoParser,AppInfoParser,low,low,low,low,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfo,AppInfo,low,low,low,low,0,1,0,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfoMBean,AppInfoMBean,low,low,low,low,0,0,0,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.utils.Bytes,Bytes,low,low,low-medium,low,0,5,0,0,0,6,70,15,2,1,4,1,0,0.667,0.467,0.4,0,0,,,,,70,,,,,,6,,,,,,,
org.apache.kafka.common.utils.Bytes.ByteArrayComparator,ByteArrayComparator,low,low,low,low,0,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Bytes.LexicographicByteArrayComparator,LexicographicByteArrayComparator,low,low,low,low,0,2,1,0,0,8,18,17,0,0,2,0,0,0,0.167,0,0,0,,,,,18,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.utils.Bytes.public Bytes( byte ): void,Bytes( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.common.utils.Bytes.public compareTo( Bytes ): int,compareTo( Bytes ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.common.utils.Bytes.public get( ): byte,get( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Bytes.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,4
<Method>org.apache.kafka.common.utils.Bytes.public static wrap( byte ): Bytes,static wrap( byte ): Bytes,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.utils.Bytes->bytes,final bytes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->hashCode,hashCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->HEX_CHARS_UPPER,static final HEX_CHARS_UPPER : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.CircularIterator<T>,CircularIterator,low,low,low,low,0,4,0,0,0,4,20,13,1,0,4,0,0,0,0,0.833,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public next( ): T,next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,3
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.CircularIterator<T>->i, i : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.CollectionUtils,CollectionUtils,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
"org.apache.kafka.common.utils.CopyOnWriteMap<K,V>",CopyOnWriteMap,low,low,low-medium,low,0,8,1,0,0,12,76,36,0,0,8,0,0,0,0.333,0,0,0,,,,,76,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public CopyOnWriteMap( ): void",CopyOnWriteMap( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized put( K, V ): V","synchronized put( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V ): V","synchronized replace( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V, V ): boolean","synchronized replace( K, V, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,1,0
org.apache.kafka.common.utils.Crc32,Crc32,low,low,medium-high,low,0,9,5,0,0,20,309,66,1,9,7,2,0,0.833,0.528,0.833,0,0,,,,,309,,,,,,20,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32.public Crc32( ): void,Crc32( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Crc32.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.Crc32.public final updateInt( int ): void,final updateInt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,0
<Method>org.apache.kafka.common.utils.Crc32.public final updateLong( long ): void,final updateLong( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,8,0
<Method>org.apache.kafka.common.utils.Crc32.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte ): long,static crc32( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte, int, int ): long","static crc32( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
"<Method>org.apache.kafka.common.utils.Crc32.public update( byte, int, int ): void","update( byte, int, int ): void",low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,35,3,0,32
<Field>org.apache.kafka.common.utils.Crc32->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.KafkaThread,KafkaThread,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.KafkaThread$1233;,Lorg.apache.kafka.common.utils.KafkaThread$1233;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell,Shell,low,low,low-medium,low,0,4,1,0,1,13,124,60,2,0,4,0,0,0.5,0.375,1,0,0,,,,,124,,,,,,13,,,,,,,
org.apache.kafka.common.utils.Shell.ExitCodeException,ExitCodeException,low,low,low,low,0,1,0,0,0,1,8,2,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Shell$3381;,Lorg.apache.kafka.common.utils.Shell$3381;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell.ShellCommandExecutor,ShellCommandExecutor,low,low,low,low,0,3,1,1,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Shell.ShellTimeoutTimerTask,ShellTimeoutTimerTask,low,low,low,low,0,2,0,0,0,5,12,10,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.Shell.public Shell( long ): void,Shell( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Shell.public exitCode( ): int,exitCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Shell.protected run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.utils.Shell.private runCommand( ): void,runCommand( ): void,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,53,0,0,5
<Field>org.apache.kafka.common.utils.Shell->exitCode,exitCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->timeout,final timeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SystemTime,SystemTime,low,low,low,low,0,4,1,0,0,5,16,15,0,0,4,0,0,0,0.375,0,0,0,,,,,16,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.SystemTime.public hiResClockMs( ): long,hiResClockMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.utils.SystemTime.public milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
org.apache.kafka.common.utils.Time,Time,low,low,low,low,0,4,0,1,0,4,6,4,0,1,4,0,0,0,0.375,1,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.Time.public abstract hiResClockMs( ): long,hiResClockMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.common.utils.Time->SYSTEM,static final SYSTEM : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Utils,Utils,low,low,low-medium,low,0,10,0,0,0,19,297,66,0,0,0,10,0,0,0.56,0,0,0,,,,,297,,,,,,19,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Utils$16901;,Lorg.apache.kafka.common.utils.Utils$16901;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.Utils.public static abs( int ): int,static abs( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static longHashcode( long ): int,static longHashcode( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( long, long ): long","static min( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static murmur2( byte ): int,static murmur2( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,27,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static notNull( T ): T,static notNull( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static readUnsignedIntLE( byte, int ): int","static readUnsignedIntLE( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static sleep( long ): void,static sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static toArrayLE( int ): byte,static toArrayLE( int ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static toPositive( int ): int,static toPositive( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static writeUnsignedIntLE( byte, int, int ): void","static writeUnsignedIntLE( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
<Package>org.apache.kafka.connect.cli,org.apache.kafka.connect.cli,low,low,low,low,,,,,,0,70,,,,,,,,,,,,,2,2,0,70,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.cli.ConnectDistributed,ConnectDistributed,low,low,low,low,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
org.apache.kafka.connect.cli.ConnectStandalone,ConnectStandalone,low,low,low,low,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.cli.ConnectStandalone$3858;,Lorg.apache.kafka.connect.cli.ConnectStandalone$3858;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.connector,org.apache.kafka.connect.connector,low,low,low,low,,,,,,14,104,,,,,,,,,,,,,4,2,2,104,0,0,1,1,1,14,,,,,,,
org.apache.kafka.connect.connector.ConnectRecord,ConnectRecord,low,low,low-medium,low,0,1,0,0,0,8,75,10,0,0,1,0,0,0,0,0,0,0,,,,,75,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,1,10,0,0,0
org.apache.kafka.connect.connector.Connector,Connector,low,low,low,low,0,1,0,0,0,1,20,1,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.connector.Connector.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.connector.ConnectorContext,ConnectorContext,low,low,low,low,0,1,0,1,0,2,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectorContext.public abstract requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.connector.Task,Task,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.Task.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.data,org.apache.kafka.connect.data,low,low,medium-high,low,,,,,,49,736,,,,,,,,,,,,,12,11,1,736,0,0,0.083,1,0.083,49,,,,,,,
org.apache.kafka.connect.data.ConnectSchema,ConnectSchema,low,low,low-medium,low,0,3,0,0,0,3,174,9,1,0,3,0,0,0,0,0.667,0,0,,,,,174,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.data.ConnectSchema.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public schema( ): ConnectSchema,schema( ): ConnectSchema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.ConnectSchema->optional,final optional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Date,Date,low,low,low,low,0,0,0,0,0,0,23,0,0,1,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Date->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Decimal,Decimal,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Field,Field,low,low,low,low,0,2,0,0,0,2,25,5,1,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.data.Field.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.Field.public index( ): int,index( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.data.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Schema,Schema,low,low,low-medium,low,0,5,0,1,0,12,62,5,0,18,5,0,0,0,0,1,0,0,,,,,62,,,,,,12,,,,,,,
org.apache.kafka.connect.data.Schema.Type,Type,low,low,low,low,0,2,0,0,0,11,31,15,0,12,2,0,0,0,0,0,0,0,,,,,31,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.data.Schema.public abstract isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract schema( ): Schema,schema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.connect.data.Schema->BOOLEAN_SCHEMA,static final BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->BYTES_SCHEMA,static final BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT32_SCHEMA,static final FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT64_SCHEMA,static final FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT16_SCHEMA,static final INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT32_SCHEMA,static final INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT64_SCHEMA,static final INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT8_SCHEMA,static final INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BOOLEAN_SCHEMA,static final OPTIONAL_BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BYTES_SCHEMA,static final OPTIONAL_BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT32_SCHEMA,static final OPTIONAL_FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT64_SCHEMA,static final OPTIONAL_FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT16_SCHEMA,static final OPTIONAL_INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT32_SCHEMA,static final OPTIONAL_INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT64_SCHEMA,static final OPTIONAL_INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT8_SCHEMA,static final OPTIONAL_INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_STRING_SCHEMA,static final OPTIONAL_STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->STRING_SCHEMA,static final STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaAndValue,SchemaAndValue,low,low,low,low,0,1,0,0,0,1,27,3,0,1,1,0,0,0,0,0,0,0,,,,,27,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaAndValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.SchemaAndValue->NULL,static final NULL : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaBuilder,SchemaBuilder,low,low,low-medium,low,0,13,0,0,0,14,150,31,0,0,3,10,0,0,0,0,0,0,,,,,150,,,,,,14,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaBuilder.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public optional( ): SchemaBuilder,optional( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public required( ): SchemaBuilder,required( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bool( ): SchemaBuilder,static bool( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bytes( ): SchemaBuilder,static bytes( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float32( ): SchemaBuilder,static float32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float64( ): SchemaBuilder,static float64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int16( ): SchemaBuilder,static int16( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int32( ): SchemaBuilder,static int32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int64( ): SchemaBuilder,static int64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int8( ): SchemaBuilder,static int8( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static string( ): SchemaBuilder,static string( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static struct( ): SchemaBuilder,static struct( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.data.SchemaProjector,SchemaProjector,low,low,low-medium,low,0,0,0,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,,,,,114,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Struct,Struct,low,low,low-medium,low,0,2,0,0,0,6,98,10,0,0,2,0,0,0,0,0,0,0,,,,,98,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.data.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.data.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,0,0,0
org.apache.kafka.connect.data.Time,Time,low,low,low,low,0,0,0,0,0,0,24,0,0,1,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Time->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Timestamp,Timestamp,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.errors,org.apache.kafka.connect.errors,low,low,low-medium,low,,,,,,0,57,,,,,,,,,,,,,8,8,0,57,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.errors.AlreadyExistsException,AlreadyExistsException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.ConnectException,ConnectException,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.DataException,DataException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.IllegalWorkerStateException,IllegalWorkerStateException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.NotFoundException,NotFoundException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.RetriableException,RetriableException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaBuilderException,SchemaBuilderException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaProjectorException,SchemaProjectorException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.file,org.apache.kafka.connect.file,low,low,low,low,,,,,,10,227,,,,,,,,,,,,,4,4,0,227,0,0,0,1,0,10,,,,,,,
org.apache.kafka.connect.file.FileStreamSinkConnector,FileStreamSinkConnector,low,low,low,low,0,1,0,0,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSinkTask,FileStreamSinkTask,low,low,low,low,0,2,0,0,0,4,36,5,0,0,2,0,0,0,0,0,0,0,,,,,36,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public FileStreamSinkTask( ): void,FileStreamSinkTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
org.apache.kafka.connect.file.FileStreamSourceConnector,FileStreamSourceConnector,low,low,low,low,0,1,0,0,0,1,36,2,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSourceTask,FileStreamSourceTask,low,low,low-medium,low,0,1,0,0,0,4,127,11,2,0,1,0,0,0,0,0,0,0,,,,,127,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,0,0
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->buffer,buffer : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->offset,offset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.json,org.apache.kafka.connect.json,low,low,low-medium,low,,,,,,6,602,,,,,,,,,,,,,7,5,2,602,0,0,0.286,1,0.286,6,,,,,,,
org.apache.kafka.connect.json.JsonConverter,JsonConverter,low,low,medium-high,low,0,0,0,0,0,0,521,0,2,2,0,0,0,0,0,0,0,0,,,,,521,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonConverter.JsonToConnectTypeConverter,JsonToConnectTypeConverter,low,low,low,low,0,0,0,1,12,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.json.JsonConverter.LogicalTypeConverter,LogicalTypeConverter,low,low,low,low,0,0,0,1,8,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10148;,Lorg.apache.kafka.connect.json.JsonConverter$10148;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10607;,Lorg.apache.kafka.connect.json.JsonConverter$10607;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11197;,Lorg.apache.kafka.connect.json.JsonConverter$11197;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11644;,Lorg.apache.kafka.connect.json.JsonConverter$11644;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12087;,Lorg.apache.kafka.connect.json.JsonConverter$12087;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12535;,Lorg.apache.kafka.connect.json.JsonConverter$12535;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$2679;,Lorg.apache.kafka.connect.json.JsonConverter$2679;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$2926;,Lorg.apache.kafka.connect.json.JsonConverter$2926;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3177;,Lorg.apache.kafka.connect.json.JsonConverter$3177;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3429;,Lorg.apache.kafka.connect.json.JsonConverter$3429;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3673;,Lorg.apache.kafka.connect.json.JsonConverter$3673;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3920;,Lorg.apache.kafka.connect.json.JsonConverter$3920;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4168;,Lorg.apache.kafka.connect.json.JsonConverter$4168;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4415;,Lorg.apache.kafka.connect.json.JsonConverter$4415;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4820;,Lorg.apache.kafka.connect.json.JsonConverter$4820;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5065;,Lorg.apache.kafka.connect.json.JsonConverter$5065;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5573;,Lorg.apache.kafka.connect.json.JsonConverter$5573;,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$7747;,Lorg.apache.kafka.connect.json.JsonConverter$7747;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$9232;,Lorg.apache.kafka.connect.json.JsonConverter$9232;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$9694;,Lorg.apache.kafka.connect.json.JsonConverter$9694;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->cacheSize,cacheSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->enableSchemas,enableSchemas : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_CACHE_SIZE_DEFAULT,static final SCHEMAS_CACHE_SIZE_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_ENABLE_DEFAULT,static final SCHEMAS_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonDeserializer,JsonDeserializer,low,low,low,low,0,2,0,0,0,2,17,3,0,0,2,0,0,0,0,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonDeserializer.public JsonDeserializer( ): void,JsonDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.json.JsonSchema,JsonSchema,low,low,low,low,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSchema.Envelope,Envelope,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSerializer,JsonSerializer,low,low,low,low,0,2,0,0,0,2,15,3,0,0,2,0,0,0,0,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonSerializer.public JsonSerializer( ): void,JsonSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.connect.runtime,org.apache.kafka.connect.runtime,low,low,medium-high,low,,,,,,197,1734,,,,,,,,,,,,,29,26,3,1734,0,2,0.172,1,0.172,197,,,,,,,
org.apache.kafka.connect.runtime.AbstractHerder,AbstractHerder,low,low,low-medium,low,0,4,1,0,0,6,221,21,0,0,4,0,0,0,0,0,0,0,,,,,221,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.AbstractHerder$17700;,Lorg.apache.kafka.connect.runtime.AbstractHerder$17700;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected abstract generation( ): int,abstract generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected startServices( ): void,startServices( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected stopServices( ): void,stopServices( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.private traverseClassPath( ): void,traverseClassPath( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
org.apache.kafka.connect.runtime.AbstractStatus<T>,AbstractStatus,low,low,low-medium,low,1,4,0,0,0,8,58,14,3,0,4,0,0,0.667,0,0.5,0,0,,,,,58,,,,,,8,,,,,,,
org.apache.kafka.connect.runtime.AbstractStatus.State,State,low,low,low,low,0,0,0,0,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,0,0,5
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public id( ): T,id( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->generation,final generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->id,final id : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->state,final state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.Connect,Connect,low,low,low,low,0,3,0,0,0,5,46,24,1,0,3,0,0,0,0,1,0,0,,,,,46,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.Connect.ShutdownHook,ShutdownHook,low,low,low,low,0,2,1,0,0,2,8,7,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.Connect.public awaitStop( ): void,awaitStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.Connect.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,1
<Method>org.apache.kafka.connect.runtime.Connect.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,0,0
<Field>org.apache.kafka.connect.runtime.Connect->shutdownHook,final shutdownHook : ShutdownHook,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig,ConnectorConfig,low,low,low,low,0,1,0,0,0,1,35,2,0,2,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public ConnectorConfig( ): void,ConnectorConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_DEFAULT,static final TASKS_MAX_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MIN_CONFIG,static final TASKS_MIN_CONFIG : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorFactory,ConnectorFactory,low,low,low,low,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus,ConnectorStatus,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus.Listener,Listener,low,low,low,low,0,0,0,1,0,6,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,6,,,,,,,
org.apache.kafka.connect.runtime.Herder,Herder,low,low,low,low,0,2,0,1,0,17,38,2,0,0,2,0,0,0,0,0,0,0,,,,,38,,,,,,17,,,,,,,
org.apache.kafka.connect.runtime.Herder.Created<T>,Created,low,low,low,low,1,4,0,0,0,4,20,10,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.Herder.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.runtime.HerderConnectorContext,HerderConnectorContext,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.SinkConnectorConfig,SinkConnectorConfig,low,low,low,low,0,1,0,0,0,1,13,2,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public SinkConnectorConfig( ): void,SinkConnectorConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.SourceConnectorConfig,SourceConnectorConfig,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter,SourceTaskOffsetCommitter,low,low,low,low,0,1,0,0,0,3,48,6,0,0,1,0,0,0,0,0,0,0,,,,,48,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3517;,Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3517;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public close( long ): void,close( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,0,0
org.apache.kafka.connect.runtime.TargetState,TargetState,low,low,low,low,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->PAUSED,static final PAUSED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->STARTED,static final STARTED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.TaskConfig,TaskConfig,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.TaskConfig.public TaskConfig( ): void,TaskConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.TaskStatus,TaskStatus,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.TaskStatus.Listener,Listener,low,low,low,low,0,0,0,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.Worker,Worker,low,low,low-medium,low,0,4,2,0,0,7,238,24,0,0,4,0,0,0,0,0,0,0,,,,,238,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.runtime.Worker.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.connect.runtime.Worker.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,0,2,0
<Method>org.apache.kafka.connect.runtime.Worker.public stopAndAwaitTasks( ): void,stopAndAwaitTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.Worker.private stopConnectors( ): void,stopConnectors( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
org.apache.kafka.connect.runtime.WorkerConfig,WorkerConfig,low,low,low-medium,low,0,0,0,0,0,0,113,0,0,3,0,0,0,0,0,0,0,0,,,,,113,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_DEFAULT,static final OFFSET_COMMIT_INTERVAL_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_DEFAULT,static final OFFSET_COMMIT_TIMEOUT_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_DEFAULT,static final REST_PORT_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector,WorkerConnector,low,low,low-medium,low,0,7,1,0,0,19,117,53,1,0,7,0,0,0,0,0.667,0,0,,,,,117,,,,,,19,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerConnector$3332;,Lorg.apache.kafka.connect.runtime.WorkerConnector$3332;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector.State,State,low,low,low,low,0,0,0,0,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private doStart( ): boolean,doStart( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,0,0,3
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isSinkConnector( ): boolean,isSinkConnector( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private pause( ): void,pause( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,0,0,4
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public shutdown( ): void,shutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,0,3
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Field>org.apache.kafka.connect.runtime.WorkerConnector->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask,WorkerSinkTask,low-medium,low,medium-high,low,0,13,9,0,0,47,321,155,6,0,13,0,0,0.778,0.59,1,0,0,,,,,321,,,,,,47,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.HandleRebalance,HandleRebalance,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSinkTask$10060;,Lorg.apache.kafka.connect.runtime.WorkerSinkTask$10060;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private closePartitions( ): void,closePartitions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public commitFailures( ): int,commitFailures( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private commitOffsets( long, boolean ): void","commitOffsets( long, boolean ): void",low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,45,2,0,8
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private deliverMessages( ): void,deliverMessages( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,19,0,2,3
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public execute( ): void,execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,3,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected initializeAndStart( ): void,initializeAndStart( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected iteration( ): void,iteration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,26,0,4,9
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private pauseAll( ): void,pauseAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,2,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private resumeAll( ): void,resumeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private rewind( ): void,rewind( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitFailures,commitFailures : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitSeqno,commitSeqno : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitStarted,commitStarted : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->committing,committing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->nextCommit,nextCommit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->pausedForRedelivery,pausedForRedelivery : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTaskContext,WorkerSinkTaskContext,low,low,low-medium,low,0,6,0,0,0,6,60,14,2,0,6,0,0,0.625,0.417,0.733,0,0,,,,,60,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearCommitRequest( ): void,clearCommitRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearOffsets( ): void,clearOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public isCommitRequested( ): boolean,isCommitRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public requestCommit( ): void,requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( ): long,timeout( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->timeoutMs,timeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask,WorkerSourceTask,low-medium,low,low-medium,low,0,8,5,0,0,32,228,154,4,1,8,0,0,0.8,0,0.667,0,0,,,,,228,,,,,,32,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$15164;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$15164;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$9005;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$9005;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public commitOffsets( ): boolean,commitOffsets( ): boolean,low,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,57,0,10,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private commitSourceTask( ): void,commitSourceTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public execute( ): void,execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,28,0,2,3
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private sendRecords( ): boolean,sendRecords( ): boolean,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,41,0,0,4
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishFailedFlush( ): void,synchronized finishFailedFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishSuccessfulFlush( ): void,synchronized finishSuccessfulFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->finishedStart,finishedStart : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->flushing,flushing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->lastSendFailed,lastSendFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->startedShutdownBeforeStartCompleted,startedShutdownBeforeStartCompleted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->SEND_FAILED_BACKOFF_MS,static final SEND_FAILED_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTaskContext,WorkerSourceTaskContext,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask,WorkerTask,low-medium,low,low-medium,low,0,15,8,0,0,26,98,68,2,0,15,0,0,0.6,0.467,1,0,0,,,,,98,,,,,,26,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected awaitUnpause( ): boolean,awaitUnpause( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doClose( ): void,doClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doRun( ): void,doRun( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,0,4,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected isStopping( ): boolean,isStopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private onShutdown( ): void,onShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,2,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public shouldPause( ): boolean,shouldPause( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onPause( ): void,synchronized onPause( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onResume( ): void,synchronized onResume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.private triggerStop( ): void,triggerStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerTask->cancelled,volatile cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->stopping,volatile stopping : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.distributed,org.apache.kafka.connect.runtime.distributed,low,low,medium-high,low,,,,,,85,1430,,,,,,,,,,,,,18,17,1,1430,0,0,0.056,1,0.056,85,,,,,,,
org.apache.kafka.connect.runtime.distributed.ClusterConfigState,ClusterConfigState,low,low,low-medium,low,0,1,0,0,0,1,70,2,1,2,1,0,0,0,0,0,0,0,,,,,70,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->EMPTY,static final EMPTY : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->NO_OFFSET,static final NO_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol,ConnectProtocol,low,low,low-medium,low,0,1,0,0,0,2,161,3,0,2,0,1,0,0,0,0,0,0,,,,,161,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.Assignment,Assignment,low,low,low,low,0,3,0,0,0,3,57,6,2,2,3,0,0,1,0,0.667,0,0,,,,,57,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState,WorkerState,low,low,low,low,0,1,0,0,0,1,16,2,1,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_TASK,static final CONNECTOR_TASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_V0,static final CONNECT_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedConfig,DistributedConfig,low,low,low-medium,low,0,0,0,0,0,0,153,0,0,1,0,0,0,0,0,0,0,0,,,,,153,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_DEFAULT,static final WORKER_UNSYNC_BACKOFF_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder,DistributedHerder,medium-high,low,medium-high,low,0,13,8,0,0,55,687,171,7,2,13,0,0,1,0.423,1,0,0,,,,,687,,,,,,55,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.HerderRequest,HerderRequest,low,low,low,low,0,1,0,0,0,2,18,4,2,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$19868;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$19868;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20518;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20518;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21562;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21562;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22067;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22067;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$24443;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$24443;,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$26637;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$26637;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$26912;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$26912;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27666;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27666;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$28951;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$28951;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$29900;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$29900;,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$31466;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$31466;,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40034;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40034;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40644;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40644;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$42105;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$42105;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$42768;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$42768;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43261;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43261;,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44043;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44043;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44374;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44374;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$47500;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$47500;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$52934;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$52934;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$9166;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$9166;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.RebalanceListener,RebalanceListener,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private backoff( long ): void,backoff( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public halt( ): void,halt( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private handleRebalanceCompleted( ): boolean,handleRebalanceCompleted( ): boolean,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,33,0,3,4
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private peekWithoutException( ): HerderRequest,peekWithoutException( ): HerderRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private readConfigToEnd( long ): boolean,readConfigToEnd( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,0,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startWork( ): void,startWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,17,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public tick( ): void,tick( ): void,medium-high,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,5,50,0,4,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private updateDeletedConnectorStatus( ): void,updateDeletedConnectorStatus( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->canReadConfigs,canReadConfigs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerSyncTimeoutMs,final workerSyncTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerTasksShutdownTimeoutMs,final workerTasksShutdownTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerUnsyncBackoffMs,final workerUnsyncBackoffMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->needsReconfigRebalance,needsReconfigRebalance : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->rebalanceResolved,rebalanceResolved : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS,static final RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->START_STOP_THREAD_POOL_SIZE,static final START_STOP_THREAD_POOL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->generation,volatile generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotAssignedException,NotAssignedException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotLeaderException,NotLeaderException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.RebalanceNeededException,RebalanceNeededException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.RequestTargetException,RequestTargetException,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator,WorkerCoordinator,low,low,low-medium,low,0,5,1,0,0,8,228,29,2,0,5,0,0,1,0.4,1,0,0,,,,,228,,,,,,8,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.LeaderState,LeaderState,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.WorkerCoordinatorMetrics,WorkerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,19,1,1,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->leaderState,leaderState : LeaderState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->rejoinRequested,rejoinRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerGroupMember,WorkerGroupMember,low,low,low-medium,low,0,7,1,0,0,11,106,27,2,0,7,0,0,1,0.571,1,0,0,,,,,106,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ensureActive( ): void,ensureActive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public maybeLeaveGroup( ): void,maybeLeaveGroup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.private stop( boolean ): void,stop( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->stopped,stopped : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener,WorkerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest,org.apache.kafka.connect.runtime.rest,low,low,low,low,,,,,,4,137,,,,,,,,,,,,,2,2,0,137,0,1,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer,RestServer,low,low,low-medium,low,0,1,0,0,0,2,137,10,0,1,1,0,0,0,0,0,0,0,,,,,137,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer.HttpResponse<T>,HttpResponse,low,low,low,low,1,2,0,0,0,2,14,4,2,0,2,0,0,1,0,1,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,0,0
<Field>org.apache.kafka.connect.runtime.rest.RestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.entities,org.apache.kafka.connect.runtime.rest.entities,low,low,medium-high,low,,,,,,18,443,,,,,,,,,,,,,14,14,0,443,0,0,0.071,1,0.071,18,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigInfo,ConfigInfo,low,low,low,low,0,1,0,0,0,1,28,3,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConfigInfos,ConfigInfos,low,low,low-medium,low,0,2,0,0,0,2,55,6,1,0,2,0,0,0,0,0,0,0,,,,,55,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public errorCount( ): int,errorCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->errorCount,final errorCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo,ConfigKeyInfo,low,low,low-medium,low,0,3,0,0,0,3,114,9,2,0,3,0,0,0.5,0,0.333,0,0,,,,,114,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public orderInGroup( ): int,orderInGroup( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public required( ): boolean,required( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->orderInGroup,final orderInGroup : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->required,final required : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo,ConfigValueInfo,low,low,low-medium,low,0,2,0,0,0,2,61,6,1,0,2,0,0,0,0,0,0,0,,,,,61,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo,ConnectorInfo,low,low,low,low,0,1,0,0,0,1,31,3,0,0,1,0,0,0,0,0,0,0,,,,,31,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo,ConnectorPluginInfo,low,low,low,low,0,1,0,0,0,1,22,3,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo,ConnectorStateInfo,low,low,low-medium,low,0,1,0,0,0,1,52,3,1,0,1,0,0,0,0,0,0,0,,,,,52,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.AbstractState,AbstractState,low,low,low,low,0,0,0,0,2,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.ConnectorState,ConnectorState,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.TaskState,TaskState,low,low,low,low,0,2,0,1,0,2,11,6,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public connector( ): ConnectorState,connector( ): ConnectorState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->connector,final connector : ConnectorState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest,CreateConnectorRequest,low,low,low,low,0,1,0,0,0,1,23,3,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ErrorMessage,ErrorMessage,low,low,low,low,0,2,0,0,0,2,23,6,1,0,2,0,0,0,0,0,0,0,,,,,23,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ServerInfo,ServerInfo,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public ServerInfo( ): void,ServerInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.TaskInfo,TaskInfo,low,low,low,low,0,1,0,0,0,1,22,3,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.connect.runtime.rest.errors,org.apache.kafka.connect.runtime.rest.errors,low,low,low,low,,,,,,2,49,,,,,,,,,,,,,3,3,0,49,0,0,0,1,0,2,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.BadRequestException,BadRequestException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper,ConnectExceptionMapper,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectRestException,ConnectRestException,low,low,low,low,0,2,0,0,0,2,25,4,2,0,2,0,0,1,0,1,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.resources,org.apache.kafka.connect.runtime.rest.resources,low,low,low-medium,low,,,,,,1,202,,,,,,,,,,,,,6,5,1,202,0,0,0.167,1,0.167,1,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource,ConnectorPluginsResource,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource,ConnectorsResource,low,low,low-medium,low,0,0,0,0,0,0,176,0,0,1,0,0,0,0,0,0,0,0,,,,,176,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.CreatedConnectorInfoTranslator,CreatedConnectorInfoTranslator,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.IdentityTranslator<T>,IdentityTranslator,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3622;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3622;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4528;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4528;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6923;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6923;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8600;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8600;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.Translator<T,U>",Translator,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->REQUEST_TIMEOUT_MS,static final REQUEST_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.RootResource,RootResource,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.runtime.standalone,org.apache.kafka.connect.runtime.standalone,low,low,low,low,,,,,,4,203,,,,,,,,,,,,,3,3,0,203,0,0,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneConfig,StandaloneConfig,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder,StandaloneHerder,low,low,low-medium,low,0,3,0,0,0,4,191,14,0,0,3,0,0,0,0,0,0,0,,,,,191,,,,,,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$5011;,Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$5011;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,0
<Package>org.apache.kafka.connect.sink,org.apache.kafka.connect.sink,low,low,low,low,,,,,,10,73,,,,,,,,,,,,,4,3,1,73,0,0,0.75,1,0.75,10,,,,,,,
org.apache.kafka.connect.sink.SinkConnector,SinkConnector,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.sink.SinkRecord,SinkRecord,low,low,low,low,0,2,0,0,0,2,39,8,1,0,2,0,0,0,0,0,0,0,,,,,39,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.connect.sink.SinkRecord.public kafkaOffset( ): long,kafkaOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.sink.SinkRecord->kafkaOffset,final kafkaOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkTask,SinkTask,low,low,low,low,0,1,0,0,0,1,22,1,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.sink.SinkTaskContext,SinkTaskContext,low,low,low,low,0,2,0,1,0,7,9,2,0,0,2,0,0,0,0.25,0,0,0,,,,,9,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract requestCommit( ): void,requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.connect.source,org.apache.kafka.connect.source,low,low,low,low,,,,,,6,71,,,,,,,,,,,,,4,3,1,71,0,0,0.75,1,0.75,6,,,,,,,
org.apache.kafka.connect.source.SourceConnector,SourceConnector,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.connect.source.SourceRecord,SourceRecord,low,low,low-medium,low,0,1,0,0,0,3,55,6,0,0,1,0,0,0,0,0,0,0,,,,,55,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.source.SourceRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,0,0
org.apache.kafka.connect.source.SourceTask,SourceTask,low,low,low,low,0,2,0,0,0,2,11,2,0,0,2,0,0,0,0,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.source.SourceTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.source.SourceTaskContext,SourceTaskContext,low,low,low,low,0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Package>org.apache.kafka.connect.storage,org.apache.kafka.connect.storage,low,low,medium-high,low,,,,,,89,1130,,,,,,,,,,,,,21,15,6,1130,0,1,0.286,1,0.286,89,,,,,,,
org.apache.kafka.connect.storage.ConfigBackingStore,ConfigBackingStore,low,low,low,low,0,3,0,1,0,11,17,3,0,0,3,0,0,0,0.333,0,0,0,,,,,17,,,,,,11,,,,,,,
org.apache.kafka.connect.storage.ConfigBackingStore.UpdateListener,UpdateListener,low,low,low,low,0,0,0,1,0,4,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract setUpdateListener( UpdateListener ): void,setUpdateListener( UpdateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.Converter,Converter,low,low,low,low,0,0,0,1,0,3,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
org.apache.kafka.connect.storage.FileOffsetBackingStore,FileOffsetBackingStore,low,low,low,low,0,5,1,0,0,15,46,39,0,0,5,0,0,0,0,0,0,0,,,,,46,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public FileOffsetBackingStore( ): void,FileOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.private load( ): void,load( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,17,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
org.apache.kafka.connect.storage.KafkaConfigBackingStore,KafkaConfigBackingStore,low,low,medium-high,low,0,2,0,0,0,2,302,11,2,1,2,0,0,0,0,1,0,0,,,,,302,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.KafkaConfigBackingStore.ConsumeCallback,ConsumeCallback,low,low,low,low,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,,,,,112,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->READ_TO_END_TIMEOUT_MS,static final READ_TO_END_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->offset,volatile offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->started,volatile started : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore,KafkaOffsetBackingStore,low,low,low-medium,low,0,2,0,0,0,2,111,10,0,0,2,0,0,0,0,0,0,0,,,,,111,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4446;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4446;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore.SetCallbackFuture,SetCallbackFuture,low,low,low,low,0,3,0,0,0,3,50,9,2,0,3,0,0,0,0.333,1,0,0,,,,,50,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.connect.storage.KafkaStatusBackingStore,KafkaStatusBackingStore,low,low,low-medium,low,0,3,0,0,0,3,263,10,1,0,3,0,0,0,0,1,0,0,,,,,263,,,,,,3,,,,,,,
org.apache.kafka.connect.storage.KafkaStatusBackingStore.CacheEntry<T>,CacheEntry,low,low,low,low,1,7,1,0,0,7,20,16,3,0,7,0,0,0.778,0.476,0.762,0,0,,,,,20,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6322;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6322;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$8740;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$8740;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->generation,generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore,MemoryConfigBackingStore,low,low,low-medium,low,0,2,0,0,0,2,89,4,0,0,2,0,0,0,0,0,0,0,,,,,89,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore.ConnectorState,ConnectorState,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.storage.MemoryOffsetBackingStore,MemoryOffsetBackingStore,low,low,low,low,0,4,0,0,0,7,50,17,0,0,4,0,0,0,0,0,0,0,,,,,50,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2997;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2997;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3660;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3660;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public MemoryOffsetBackingStore( ): void,MemoryOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,0,0,0
org.apache.kafka.connect.storage.MemoryStatusBackingStore,MemoryStatusBackingStore,low,low,low,low,0,4,0,0,0,4,44,9,0,0,4,0,0,0,0,0,0,0,,,,,44,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public MemoryStatusBackingStore( ): void,MemoryStatusBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.storage.OffsetBackingStore,OffsetBackingStore,low,low,low,low,0,2,0,1,0,5,9,2,0,0,2,0,0,0,0,0,0,0,,,,,9,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.OffsetStorageReader,OffsetStorageReader,low,low,low,low,0,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageReaderImpl,OffsetStorageReaderImpl,low,low,low-medium,low,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageWriter,OffsetStorageWriter,low,low,low-medium,low,0,3,1,0,0,6,74,19,1,0,3,0,0,0,0,1,0,0,,,,,74,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7925;,Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7925;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.private flushing( ): boolean,flushing( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized beginFlush( ): boolean,synchronized beginFlush( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,2,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized cancelFlush( ): void,synchronized cancelFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,1
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->currentFlushId,currentFlushId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetUtils,OffsetUtils,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.StatusBackingStore,StatusBackingStore,low,low,low,low,0,3,0,1,0,12,13,3,0,0,3,0,0,0,0,0,0,0,,,,,13,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.StringConverter,StringConverter,low,low,low,low,0,1,0,0,0,1,28,1,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.storage.StringConverter.public StringConverter( ): void,StringConverter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.tools,org.apache.kafka.connect.tools,low,low,medium-high,low,,,,,,15,472,,,,,,,,,,,,,11,11,0,472,0,0,0,1,0,15,,,,,,,
org.apache.kafka.connect.tools.MockConnector,MockConnector,low,low,low,low,0,1,0,0,0,4,47,9,0,1,1,0,0,0,0,0,0,0,,,,,47,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.tools.MockConnector$3135;,Lorg.apache.kafka.connect.tools.MockConnector$3135;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.tools.MockConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
<Field>org.apache.kafka.connect.tools.MockConnector->DEFAULT_FAILURE_DELAY_MS,static final DEFAULT_FAILURE_DELAY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSinkConnector,MockSinkConnector,low,low,low,low,0,1,0,0,0,1,32,3,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.tools.MockSinkTask,MockSinkTask,low,low,low,low,0,2,0,0,0,2,33,4,2,0,2,0,0,0,0,0,0,0,,,,,33,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkTask.private setTimeout( ): void,setTimeout( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.tools.MockSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.MockSinkTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSinkTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSourceConnector,MockSourceConnector,low,low,low,low,0,1,0,0,0,1,32,3,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.tools.MockSourceTask,MockSourceTask,low,low,low,low,0,1,0,0,0,1,28,2,2,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.MockSourceTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSourceTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.SchemaSourceConnector,SchemaSourceConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.SchemaSourceTask,SchemaSourceTask,low,low,low-medium,low,0,1,0,0,0,1,113,3,7,0,1,0,0,0,0,0,0,0,,,,,113,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->count,count : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->maxNumMsgs,maxNumMsgs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->multipleSchema,multipleSchema : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->partitionCount,partitionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSinkConnector,VerifiableSinkConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSinkTask,VerifiableSinkTask,low,low,low-medium,low,0,1,0,0,0,1,51,2,1,0,1,0,0,0,0,0,0,0,,,,,51,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSourceConnector,VerifiableSourceConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSourceTask,VerifiableSourceTask,low,low,low-medium,low,0,1,0,0,0,1,64,3,3,0,1,0,0,0,0,0,0,0,,,,,64,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.util,org.apache.kafka.connect.util,low,low,medium-high,low,,,,,,58,354,,,,,,,,,,,,,12,11,1,354,0,1,0.25,1,0.25,58,,,,,,,
org.apache.kafka.connect.util.Callback<V>,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ConnectorTaskId,ConnectorTaskId,low,low,low,low,0,3,0,0,0,5,39,14,1,0,3,0,0,0,0.333,0,0,0,,,,,39,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public compareTo( ConnectorTaskId ): int,compareTo( ConnectorTaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,0,2
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public task( ): int,task( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.util.ConnectorTaskId->task,final task : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ConnectorUtils,ConnectorUtils,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>",ConvertingFutureCallback,low,low,low,low,1,6,1,0,0,7,39,18,1,0,6,0,0,0,0.556,1,0,0,,,,,39,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public abstract convert( U ): T",abstract convert( U ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public cancel( boolean ): boolean",cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public get( ): T",get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isCancelled( ): boolean",isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isDone( ): boolean",isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.private result( ): T",result( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,1
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->result",result : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.FutureCallback<T>,FutureCallback,low,low,low,low,0,2,0,0,0,2,8,5,0,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public FutureCallback( ): void,FutureCallback( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public convert( T ): T,convert( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.connect.util.KafkaBasedLog<K,V>",KafkaBasedLog,low,low,low-medium,low-medium,0,6,2,0,0,19,142,68,1,1,6,0,0,1,0.625,1,0,0,,,,,142,,,,,,19,,,,,,,
org.apache.kafka.connect.util.KafkaBasedLog.WorkThread,WorkThread,low,low,low,low,0,4,2,0,0,9,29,28,0,0,2,0,0,0,0,0,0,0,,,,,29,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private poll( long ): void",poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private readToLogEnd( ): void",readToLogEnd( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,0,1,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public send( K, V ): void","send( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public start( ): void",start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,22,0,1,1
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public stop( ): void",stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,0,1
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->CREATE_TOPIC_TIMEOUT_MS",static final CREATE_TOPIC_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->stopRequested",stopRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil,ReflectionsUtil,low,low,low,low,0,1,0,0,0,1,34,5,0,0,0,1,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil.EmptyUrlType,EmptyUrlType,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.util.ReflectionsUtil.public static registerUrlTypes( ): void,static registerUrlTypes( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.connect.util.ShutdownableThread,ShutdownableThread,low,low,low,low,0,5,1,0,0,6,41,19,0,0,5,0,0,0,0,0,0,0,,,,,41,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.util.ShutdownableThread.public abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public forceShutdown( ): void,forceShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public getRunning( ): boolean,getRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,1,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public startGracefulShutdown( ): void,startGracefulShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.util.SinkUtils,SinkUtils,low,low,low,low,0,1,0,0,0,1,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.util.SinkUtils.private SinkUtils( ): void,SinkUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.connect.util.Table<R,C,V>",Table,low,low,low,low,0,3,0,0,0,7,28,19,0,0,3,0,0,0,0.167,0,0,0,,,,,28,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public get( R, C ): V","get( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,0,0
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public put( R, C, V ): V","put( R, C, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,0,0
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public remove( R, C ): V","remove( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,0,0
<Package>org.apache.kafka.log4jappender,org.apache.kafka.log4jappender,low,low,low,low,,,,,,29,150,,,,,,,,,,,,,1,1,0,150,0,0,0,1,0,29,,,,,,,
org.apache.kafka.log4jappender.KafkaLog4jAppender,KafkaLog4jAppender,low-medium,low,low-medium,low,0,9,0,0,0,29,150,56,3,0,9,0,0,0.722,0.556,0.806,0,0,,,,,150,,,,,,29,,,,,,,
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public activateOptions( ): void,activateOptions( ): void,medium-high,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,3,36,0,0,4
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRequiredNumAcks( ): int,getRequiredNumAcks( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRetries( ): int,getRetries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSyncSend( ): boolean,getSyncSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public requiresLayout( ): boolean,requiresLayout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRequiredNumAcks( int ): void,setRequiredNumAcks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRetries( int ): void,setRetries( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSyncSend( boolean ): void,setSyncSend( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->requiredNumAcks,requiredNumAcks : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->retries,retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->syncSend,syncSend : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams,org.apache.kafka.streams,low,low,low-medium,low,,,,,,25,443,,,,,,,,,,,,,9,6,3,443,0,1,0.333,1,0.333,25,,,,,,,
org.apache.kafka.streams.KafkaClientSupplier,KafkaClientSupplier,low,low,low,low,0,0,0,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.streams.KafkaStreams,KafkaStreams,low,low,low-medium,low,0,10,4,0,0,13,170,36,3,1,7,0,0,0.833,0.571,0.7,0,0,,,,,170,,,,,,13,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.KafkaStreams$14729;,Lorg.apache.kafka.streams.KafkaStreams$14729;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.KafkaStreams.State,State,low,low,low,low,0,3,1,0,0,3,11,6,0,5,3,0,0,1.4,0.333,1,0,0,,,,,11,,,,,,3,,,,,,,
org.apache.kafka.streams.KafkaStreams.StateListener,StateListener,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.KafkaStreams.StreamStateListener,StreamStateListener,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.KafkaStreams.public cleanUp( ): void,cleanUp( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,0,1,1
<Method>org.apache.kafka.streams.KafkaStreams.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.KafkaStreams.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.KafkaStreams.private synchronized setState( State ): void,synchronized setState( State ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,7
<Method>org.apache.kafka.streams.KafkaStreams.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,1,1
<Method>org.apache.kafka.streams.KafkaStreams.public synchronized state( ): State,synchronized state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.KafkaStreams.private validateIsRunning( ): void,validateIsRunning( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,2
<Field>org.apache.kafka.streams.KafkaStreams->streamStateListener,final streamStateListener : StreamStateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->DEFAULT_CLOSE_TIMEOUT,static final DEFAULT_CLOSE_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.KeyValue<K,V>",KeyValue,low,low,low,low,2,3,0,0,0,3,22,8,2,0,2,1,0,0,0.222,0.667,0,0,,,,,22,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public KeyValue( K, V ): void","KeyValue( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public static pair( K, V ): KeyValue","static pair( K, V ): KeyValue",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Field>org.apache.kafka.streams.KeyValue<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.KeyValue<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsConfig,StreamsConfig,low,low,low-medium,low,0,0,0,0,0,0,244,0,0,0,0,0,0,0,0,0,0,0,,,,,244,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamsConfig.InternalConfig,InternalConfig,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamsMetrics,StreamsMetrics,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.streams.errors,org.apache.kafka.streams.errors,low,low,low-medium,low,,,,,,0,43,,,,,,,,,,,,,7,7,0,43,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.errors.InvalidStateStoreException,InvalidStateStoreException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.LockException,LockException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.LockException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.ProcessorStateException,ProcessorStateException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.ProcessorStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.StreamsException,StreamsException,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.TaskAssignmentException,TaskAssignmentException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskIdFormatException,TaskIdFormatException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskIdFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TopologyBuilderException,TopologyBuilderException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TopologyBuilderException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.examples.pageview,org.apache.kafka.streams.examples.pageview,low,low,low-medium,low,,,,,,4,202,,,,,,,,,,,,,10,10,0,202,0,0,0,1,0,4,,,,,,,
org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>,JsonPOJODeserializer,low,low,low,low,0,2,0,0,0,2,20,3,0,0,2,0,0,0,0,0,0,0,,,,,20,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>.public JsonPOJODeserializer( ): void,JsonPOJODeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>,JsonPOJOSerializer,low,low,low,low,0,2,0,0,0,2,18,3,0,0,2,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>.public JsonPOJOSerializer( ): void,JsonPOJOSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.examples.pageview.JsonTimestampExtractor,JsonTimestampExtractor,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo,PageViewTypedDemo,low,low,low-medium,low,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,,,,,102,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$7292;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$7292;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8002;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8002;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8675;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8675;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageView,PageView,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageViewByRegion,PageViewByRegion,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.RegionCount,RegionCount,low,low,low,low,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.UserProfile,UserProfile,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.WindowedPageViewByRegion,WindowedPageViewByRegion,low,low,low,low,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewUntypedDemo,PageViewUntypedDemo,low,low,low-medium,low,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4132;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4132;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4422;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4422;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4958;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4958;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5606;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5606;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.examples.pipe,org.apache.kafka.streams.examples.pipe,low,low,low,low,,,,,,0,14,,,,,,,,,,,,,1,1,0,14,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.pipe.PipeDemo,PipeDemo,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.examples.wordcount,org.apache.kafka.streams.examples.wordcount,low,low,low,low,,,,,,0,80,,,,,,,,,,,,,3,3,0,80,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountDemo,WordCountDemo,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3095;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3095;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3379;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3379;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo,WordCountProcessorDemo,low,low,low-medium,low,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo.MyProcessorSupplier,MyProcessorSupplier,low,low,low,low,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.kstream,org.apache.kafka.streams.kstream,low,low,medium-high,low,,,,,,141,431,,,,,,,,,,,,,23,7,16,431,0,1,0.783,1,0.783,141,,,,,,,
"org.apache.kafka.streams.kstream.Aggregator<K,V,T>",Aggregator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Aggregator<K,V,T>.public abstract apply( K, V, T ): T","apply( K, V, T ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"org.apache.kafka.streams.kstream.ForeachAction<K,V>",ForeachAction,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ForeachAction<K,V>.public abstract apply( K, V ): void","apply( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.kstream.Initializer<T>,Initializer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.Initializer<T>.public abstract apply( ): T,apply( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.JoinWindows,JoinWindows,low,low,low,low,0,6,0,0,0,7,34,20,2,0,5,1,0,0.25,0.167,0.5,0,0,,,,,34,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.JoinWindows.private JoinWindows( long, long ): void","JoinWindows( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,0,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public after( long ): JoinWindows,after( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.JoinWindows.public before( long ): JoinWindows,before( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.JoinWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public static of( long ): JoinWindows,static of( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.kstream.JoinWindows->after,final after : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.JoinWindows->before,final before : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.KGroupedStream<K,V>",KGroupedStream,low,low,low,low,0,0,0,1,0,12,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,12,,,,,,,
"org.apache.kafka.streams.kstream.KGroupedTable<K,V>",KGroupedTable,low,low,low,low,0,0,0,1,0,7,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,7,,,,,,,
"org.apache.kafka.streams.kstream.KStream<K,V>",KStream,low-medium,low,low-medium,low,0,1,0,1,0,42,102,1,0,0,1,0,0,0,0,0,0,0,,,,,102,,,,,,42,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.KStreamBuilder,KStreamBuilder,low,low,low,low,0,1,0,0,0,1,38,2,0,0,1,0,0,0,0,0,0,0,,,,,38,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.KStreamBuilder.public KStreamBuilder( ): void,KStreamBuilder( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.kstream.KTable<K,V>",KTable,low-medium,low,low,low,0,1,0,1,0,28,30,1,0,0,1,0,0,0,0,0,0,0,,,,,30,,,,,,28,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.KeyValueMapper<K,V,R>",KeyValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KeyValueMapper<K,V,R>.public abstract apply( K, V ): R","apply( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Predicate<K,V>",Predicate,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Predicate<K,V>.public abstract test( K, V ): boolean","test( K, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.kstream.Reducer<V>,Reducer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Reducer<V>.public abstract apply( V, V ): V","apply( V, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.kstream.TimeWindows,TimeWindows,low,low,low,low,0,5,0,0,0,8,41,21,2,0,4,1,0,0.333,0.2,0.5,0,0,,,,,41,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TimeWindows.private TimeWindows( long, long ): void","TimeWindows( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,0,2
<Method>org.apache.kafka.streams.kstream.TimeWindows.public advanceBy( long ): TimeWindows,advanceBy( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,4
<Method>org.apache.kafka.streams.kstream.TimeWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindows.public static of( long ): TimeWindows,static of( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.kstream.TimeWindows->advance,final advance : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindows->size,final size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Transformer<K,V,R>",Transformer,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.5,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract punctuate( long ): R",punctuate( long ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract transform( K, V ): R","transform( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.TransformerSupplier<K,V,R>",TransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.UnlimitedWindows,UnlimitedWindows,low,low,low,low,0,5,0,0,0,6,32,15,1,1,4,1,0,0.75,0.3,1,0,0,,,,,32,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.private UnlimitedWindows( long ): void,UnlimitedWindows( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public startOn( long ): UnlimitedWindows,startOn( long ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public static of( ): UnlimitedWindows,static of( ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->start,final start : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->DEFAULT_START_TIMESTAMP,static final DEFAULT_START_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,R>",ValueJoiner,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,R>.public abstract apply( V1, V2 ): R","apply( V1, V2 ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueMapper<V1,V2>",ValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueMapper<V1,V2>.public abstract apply( V1 ): V2",apply( V1 ): V2,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformer<V,R>",ValueTransformer,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.444,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract punctuate( long ): R",punctuate( long ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract transform( V ): R",transform( V ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformerSupplier<V,R>",ValueTransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.Window,Window,low,low,low,low,0,5,2,0,0,5,24,13,2,0,5,0,0,0.333,0.533,0.5,0,0,,,,,24,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Window.public Window( long, long ): void","Window( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.Window.public end( ): long,end( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.streams.kstream.Window.public overlap( Window ): boolean,overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,0
<Method>org.apache.kafka.streams.kstream.Window.public start( ): long,start( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.Window->end,end : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Window->start,start : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Windowed<K>,Windowed,low,low,low,low,1,2,0,0,0,2,25,6,1,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public key( ): K,key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.Windowed<K>->key,key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Windows<W>,Windows,low,low,low,low,0,5,0,0,0,5,18,12,2,2,5,0,0,0.75,0.533,0.667,0,0,,,,,18,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected Windows( ): void,Windows( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,4
<Method>org.apache.kafka.streams.kstream.Windows<W>.public abstract size( ): long,abstract size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected segments( int ): Windows,segments( int ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.public until( long ): Windows,until( long ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.streams.kstream.Windows<W>->maintainDurationMs,maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->segments,segments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->DEFAULT_MAINTAIN_DURATION,static final DEFAULT_MAINTAIN_DURATION : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->DEFAULT_NUM_SEGMENTS,static final DEFAULT_NUM_SEGMENTS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals,org.apache.kafka.streams.kstream.internals,low,low,very-high,low,,,,,,129,2209,,,,,,,,,,,,,100,95,5,2209,0,1,0.07,1,0.07,129,,,,,,,
"org.apache.kafka.streams.kstream.internals.AbstractKTableKTableJoinValueGetterSupplier<K,R,V1,V2>",AbstractKTableKTableJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.AbstractStream<K>,AbstractStream,low,low,low,low,0,1,0,0,0,1,50,4,0,0,1,0,0,0,0,0,0,0,,,,,50,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2559;,Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2559;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K>.public AbstractStream( AbstractStream ): void,AbstractStream( AbstractStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"org.apache.kafka.streams.kstream.internals.CacheFlushListener<K,V>",CacheFlushListener,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.CacheFlushListener<K,V>.public abstract apply( K, V, V ): void","apply( K, V, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.internals.Change<T>,Change,low,low,low,low,1,1,0,0,0,1,9,3,2,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public Change( T, T ): void","Change( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->newValue,final newValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->oldValue,final oldValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>,ChangedDeserializer,low,low,low,low,0,1,0,0,0,1,22,3,0,1,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>,ChangedSerializer,low,low,low,low,0,1,0,0,0,1,30,3,0,1,1,0,0,0,0,0,0,0,,,,,30,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>",ForwardingCacheFlushListener,low,low,low,low,0,1,0,0,0,2,19,11,1,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>.public apply( K, V, V ): void","apply( K, V, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,3,0,1
"<Field>org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>->sendOldValues",final sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>",KGroupedStreamImpl,low,low,low-medium,low,0,0,0,0,0,0,139,0,1,0,0,0,0,0,0,0,0,0,,,,,139,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$7407;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$7407;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$7541;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$7541;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$8296;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$8296;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$8470;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$8470;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>",KGroupedTableImpl,low,low,low-medium,low,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,,,,,91,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7102;,Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7102;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7292;,Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7292;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7516;,Lorg.apache.kafka.streams.kstream.internals.KGroupedTableImpl$7516;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>",KStreamAggProcessorSupplier,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>",KStreamAggregate,low,low,low-medium,low,0,1,0,0,0,1,54,3,1,0,1,0,0,0,0,0,0,0,,,,,54,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateProcessor,KStreamAggregateProcessor,low,low,low,low,0,1,0,0,0,4,21,12,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateValueGetter,KStreamAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$3116;,Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$3116;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>",KStreamBranch,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamBranch.KStreamBranchProcessor,KStreamBranchProcessor,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>",KStreamFilter,low,low,low,low,0,0,0,0,0,0,14,0,1,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFilter.KStreamFilterProcessor,KStreamFilterProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>",KStreamFlatMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMap.KStreamFlatMapProcessor,KStreamFlatMapProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>",KStreamFlatMapValues,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues.KStreamFlatMapValuesProcessor,KStreamFlatMapValuesProcessor,low,low,low,low,0,1,0,0,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamForeach<K,V>",KStreamForeach,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamForeach.KStreamForeachProcessor,KStreamForeachProcessor,low,low,low,low,0,1,0,0,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>",KStreamImpl,low,low,medium-high,low,0,1,0,0,0,1,431,3,1,0,1,0,0,0,0,0,0,0,,,,,431,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamImpl.KStreamImplJoin,KStreamImplJoin,low,low,low,low,0,1,0,0,0,1,49,3,2,0,1,0,0,0,0,0,0,0,,,,,49,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$19896;,Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$19896;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$5577;,Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$5577;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>",KStreamJoinWindow,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamJoinWindow.KStreamJoinWindowProcessor,KStreamJoinWindowProcessor,low,low,low,low,0,1,0,0,0,2,12,5,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>",KStreamKStreamJoin,low,low,low,low,0,0,0,0,0,0,34,0,3,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin.KStreamKStreamJoinProcessor,KStreamKStreamJoinProcessor,low,low,low,low,0,1,0,0,0,5,19,13,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,5,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinAfterMs",final joinAfterMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinBeforeMs",final joinBeforeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->outer",final outer : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>",KStreamKTableJoin,low,low,low,low,0,0,0,0,0,0,27,0,1,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamKTableJoin.KStreamKTableJoinProcessor,KStreamKTableJoinProcessor,low,low,low,low,0,1,0,0,0,5,16,6,1,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,5,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>",KStreamMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMap.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>",KStreamMapValues,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMapValues.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough<K,V>",KStreamPassThrough,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough.KStreamPassThroughProcessor<K,V>",KStreamPassThroughProcessor,low,low,low,low,0,1,0,0,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>",KStreamReduce,low,low,low-medium,low,0,1,0,0,0,1,53,3,1,0,1,0,0,0,0,0,0,0,,,,,53,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceProcessor,KStreamReduceProcessor,low,low,low,low,0,1,0,0,0,4,22,13,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceValueGetter,KStreamReduceValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$2992;,Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$2992;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform<K,V,K1,V1>",KStreamTransform,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform.KStreamTransformProcessor<K1,V1,K2,V2>",KStreamTransformProcessor,low,low,low,low,0,3,0,0,0,5,21,13,0,0,3,0,0,0,0.5,0,0,0,,,,,21,,,,,,5,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>",KStreamTransformValues,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues.KStreamTransformValuesProcessor<K,V,R>",KStreamTransformValuesProcessor,low,low,low,low,0,3,0,0,0,4,20,11,0,0,3,0,0,0,0.5,0,0,0,,,,,20,,,,,,4,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>",KStreamWindowAggregate,low,low,low-medium,low,0,1,0,0,0,1,76,3,1,0,1,0,0,0,0,0,0,0,,,,,76,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateProcessor,KStreamWindowAggregateProcessor,low,low,low,low,0,1,0,0,0,9,37,28,0,0,1,0,0,0,0,0,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateValueGetter,KStreamWindowAggregateValueGetter,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$5311;,Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$5311;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>",KStreamWindowReduce,low,low,low-medium,low,0,1,0,0,0,1,74,3,1,0,1,0,0,0,0,0,0,0,,,,,74,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowReduce.KStreamWindowReduceProcessor,KStreamWindowReduceProcessor,low,low,low,low,0,1,0,0,0,9,37,28,0,0,1,0,0,0,0,0,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowReduce.KStreamWindowReduceValueGetter,KStreamWindowReduceValueGetter,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamWindowReduce$5069;,Lorg.apache.kafka.streams.kstream.internals.KStreamWindowReduce$5069;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>",KTableAggregate,low,low,low-medium,low,0,1,0,0,0,1,58,3,1,0,1,0,0,0,0,0,0,0,,,,,58,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableAggregate.KTableAggregateProcessor,KTableAggregateProcessor,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableAggregate.KTableAggregateValueGetter,KTableAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableAggregate$3690;,Lorg.apache.kafka.streams.kstream.internals.KTableAggregate$3690;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>",KTableFilter,low,low,low,low,0,2,0,0,0,4,49,9,2,0,2,0,0,1,0.333,0,0,0,,,,,49,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterProcessor,KTableFilterProcessor,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterValueGetter,KTableFilterValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableFilter$1835;,Lorg.apache.kafka.streams.kstream.internals.KTableFilter$1835;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.private computeValue( K, V ): V","computeValue( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,2,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>",KTableImpl,low,low,low-medium,low,0,3,0,0,0,6,211,16,1,0,3,0,0,0,0,0,0,0,,,,,211,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$7001;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$7001;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$9069;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$9069;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. enableSendingOldValues( ): void", enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. sendingOldValueEnabled( ): boolean", sendingOldValueEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>",KTableKTableAbstractJoin,low,low,low,low,0,1,0,0,0,1,20,5,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>.public final enableSendingOldValues( ): void",final enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoin<K,R,V1,V2>",KTableKTableJoin,low,low,low-medium,low,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,,,,,56,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinProcessor,KTableKTableJoinProcessor,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinValueGetter,KTableKTableJoinValueGetter,low,low,low,low,0,1,0,0,0,3,19,9,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinValueGetterSupplier,KTableKTableJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>",KTableKTableJoinMerger,low,low,low,low,0,1,0,0,0,1,20,4,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger.KTableKTableJoinMergeProcessor<K,V>",KTableKTableJoinMergeProcessor,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>",KTableKTableLeftJoin,low,low,low-medium,low,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,,,,,55,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinProcessor,KTableKTableLeftJoinProcessor,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetter,KTableKTableLeftJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetterSupplier,KTableKTableLeftJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>",KTableKTableOuterJoin,low,low,low-medium,low,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,,,,,55,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinProcessor,KTableKTableOuterJoinProcessor,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetter,KTableKTableOuterJoinValueGetter,low,low,low,low,0,1,0,0,0,3,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetterSupplier,KTableKTableOuterJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>",KTableKTableRightJoin,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinProcessor,KTableKTableRightJoinProcessor,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetter,KTableKTableRightJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetterSupplier,KTableKTableRightJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>",KTableMapValues,low,low,low,low,0,2,0,0,0,3,45,9,1,0,2,0,0,0,0.25,0,0,0,,,,,45,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesProcessor,KTableMapValuesProcessor,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesValueGetter,KTableMapValuesValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1754;,Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1754;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.private computeValue( V ): V1",computeValue( V ): V1,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>",KTableProcessorSupplier,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>",KTableReduce,low,low,low-medium,low,0,1,0,0,0,1,57,3,1,0,1,0,0,0,0,0,0,0,,,,,57,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableReduce.KTableAggregateValueGetter,KTableAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableReduce.KTableReduceProcessor,KTableReduceProcessor,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableReduce$3573;,Lorg.apache.kafka.streams.kstream.internals.KTableReduce$3573;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>",KTableRepartitionMap,low,low,low,low,0,1,0,0,0,1,43,3,0,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapProcessor,KTableMapProcessor,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapValueGetter,KTableMapValueGetter,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2124;,Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2124;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableSource<K,V>",KTableSource,low,low,low,low,0,1,0,0,0,1,26,2,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSource.KTableSourceProcessor,KTableSourceProcessor,low,low,low,low,0,1,0,0,0,2,16,7,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>",KTableSourceValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier.KTableSourceValueGetter,KTableSourceValueGetter,low,low,low,low,0,1,0,0,0,1,7,2,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>",KTableValueGetter,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>",KTableValueGetterSupplier,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KeyValuePrinter<K,V>",KeyValuePrinter,low,low,low-medium,low,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,,,,,56,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KeyValuePrinter.KeyValuePrinterProcessor,KeyValuePrinterProcessor,low,low,low,low,0,2,0,0,0,3,36,12,0,0,2,0,0,0,0.333,0,0,0,,,,,36,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.TimeWindow,TimeWindow,low,low,low,low,0,1,0,0,0,1,6,2,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindow.public TimeWindow( long, long ): void","TimeWindow( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>",TupleForwarder,low,low,low,low,0,1,0,0,0,3,20,9,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>.public maybeForward( K, V, V, boolean ): void","maybeForward( K, V, V, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,4,0,1
"<Field>org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>->cached",final cached : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.UnlimitedWindow,UnlimitedWindow,low,low,low,low,0,1,0,0,0,1,6,2,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.UnlimitedWindow.public UnlimitedWindow( long ): void,UnlimitedWindow( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>,WindowedDeserializer,low,low,low,low,0,1,0,0,0,1,16,3,0,1,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>,WindowedSerializer,low,low,low,low,0,1,0,0,0,1,19,3,0,1,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>",WindowedStreamPartitioner,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.processor,org.apache.kafka.streams.processor,low,low,medium-high,low,,,,,,53,631,,,,,,,,,,,,,24,15,9,631,0,0,0.417,1,0.417,53,,,,,,,
"org.apache.kafka.streams.processor.AbstractProcessor<K,V>",AbstractProcessor,low,low,low,low,0,3,0,0,0,3,12,5,0,0,3,0,0,0,0.333,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.protected AbstractProcessor( ): void",AbstractProcessor( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.processor.DefaultPartitionGrouper,DefaultPartitionGrouper,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.ExtractRecordMetadataTimestamp,ExtractRecordMetadataTimestamp,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.FailOnInvalidTimestamp,FailOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp,LogAndSkipOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.PartitionGrouper,PartitionGrouper,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.Processor<K,V>",Processor,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.5,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.ProcessorContext,ProcessorContext,low,low,low,low-medium,0,7,0,1,0,19,21,7,0,0,7,0,0,0,0.629,0,0,0,,,,,21,,,,,,19,,,,,,,
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.ProcessorSupplier<K,V>",ProcessorSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.StateRestoreCallback,StateRestoreCallback,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.StateRestoreCallback.public abstract restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.StateStore,StateStore,low,low,low,low,0,4,0,1,0,6,7,4,0,0,4,0,0,0,0,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStore.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.StateStoreSupplier<T>,StateStoreSupplier,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStoreSupplier<T>.public abstract get( ): T,get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStoreSupplier<T>.public abstract loggingEnabled( ): boolean,loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.StreamPartitioner<K,V>",StreamPartitioner,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TaskId,TaskId,low,low,low,low,0,3,0,0,0,7,48,15,2,0,3,0,0,0,0.444,0,0,0,,,,,48,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.processor.TaskId.public TaskId( int, int ): void","TaskId( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public compareTo( TaskId ): int,compareTo( TaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,1,0,8
<Method>org.apache.kafka.streams.processor.TaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.streams.processor.TaskId->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.TaskId->topicGroupId,final topicGroupId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.TimestampExtractor,TimestampExtractor,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder,TopologyBuilder,low,low,medium-high,low,0,2,0,0,0,4,454,7,0,0,2,0,0,0,0,0,0,0,,,,,454,,,,,,4,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.NodeFactory,NodeFactory,low,low,low,low,0,0,0,0,3,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.ProcessorNodeFactory,ProcessorNodeFactory,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.SinkNodeFactory,SinkNodeFactory,low,low,low,low,0,0,0,1,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.SourceNodeFactory,SourceNodeFactory,low,low,low,low,0,0,0,1,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.StateStoreFactory,StateStoreFactory,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.TopicsInfo,TopicsInfo,low,low,low,low,0,1,0,0,0,1,29,4,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.TopologyBuilder.public TopologyBuilder( ): void,TopologyBuilder( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.TopologyBuilder.private setRegexMatchedTopicsToSourceNodes( ): void,setRegexMatchedTopicsToSourceNodes( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,0,0
org.apache.kafka.streams.processor.UsePreviousTimeOnInvalidTimestamp,UsePreviousTimeOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.WallclockTimestampExtractor,WallclockTimestampExtractor,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.processor.internals,org.apache.kafka.streams.processor.internals,low-medium,low,very-high,low,,,,,,234,2792,,,,,,,,,,,,,49,41,8,2792,0,1,0.184,1,0.184,234,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractTask,AbstractTask,low,low,low-medium,low,0,9,1,0,0,17,86,29,0,0,9,0,0,0,0.444,0,0,0,,,,,86,,,,,,17,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. closeStateManager( boolean ): void, closeStateManager( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract closeTopology( ): void,abstract closeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract commit( ): void,abstract commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract commitOffsets( ): void,abstract commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract initTopology( ): void,abstract initTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.protected initializeOffsetLimits( ): void,initializeOffsetLimits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,11,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.protected initializeStateStores( ): void,initializeStateStores( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier,DefaultKafkaClientSupplier,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
"org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>",DefaultStreamPartitioner,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalProcessorContext,InternalProcessorContext,low,low,low,low,0,0,0,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicConfig,InternalTopicConfig,low,low,low,low,0,4,0,0,0,5,47,10,0,0,4,0,0,0,0.375,0,0,0,,,,,47,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicConfig.CleanupPolicy,CleanupPolicy,low,low,low,low,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig. isCompacted( ): boolean, isCompacted( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.private isCompactDelete( ): boolean,isCompactDelete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public setRetentionMs( long ): void,setRetentionMs( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,0
org.apache.kafka.streams.processor.internals.InternalTopicManager,InternalTopicManager,low,low,low-medium,low,0,1,0,0,0,1,133,4,2,0,1,0,0,0,0,0,0,0,,,,,133,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.InternalTopicManager$6212;,Lorg.apache.kafka.streams.processor.internals.InternalTopicManager$6212;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicManager.ZKStringSerializer,ZKStringSerializer,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalTopicManager.public InternalTopicManager( ): void,InternalTopicManager( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->replicationFactor,final replicationFactor : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->windowChangeLogAdditionalRetention,final windowChangeLogAdditionalRetention : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>,MinTimestampTracker,low,low,low,low,0,2,0,0,0,3,23,8,1,0,2,0,0,0,0,1,0,0,,,,,23,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,1
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>->lastKnownTime,lastKnownTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup,PartitionGroup,low,low,low-medium,low,0,5,0,0,0,9,69,18,1,0,5,0,0,0,0,1,0,0,,,,,69,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2220;,Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2220;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup.RecordInfo,RecordInfo,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public numBuffered( ): int,numBuffered( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public topQueueSize( ): int,topQueueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->totalBuffered,totalBuffered : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorContextImpl,ProcessorContextImpl,low,low,low-medium,low-medium,0,8,0,0,0,12,148,41,1,0,8,0,0,0,0.65,1,0,0,,,,,148,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,3,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>",ProcessorNode,low,low,low,low,0,3,0,0,0,4,42,9,0,0,3,0,0,0,0.5,0,0,0,,,,,42,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public addChild( ProcessorNode ): void",addChild( ProcessorNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.streams.processor.internals.ProcessorRecordContext,ProcessorRecordContext,low,low,low,low,0,4,0,0,0,4,35,10,3,0,4,0,0,0.667,0,0.5,0,0,,,,,35,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,3
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorStateManager,ProcessorStateManager,low,low,low-medium,low,0,0,0,0,0,0,211,0,2,0,0,0,0,0,0,0,0,0,,,,,211,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->defaultPartition,final defaultPartition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->isStandby,final isStandby : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorTopology,ProcessorTopology,low,low,low-medium,low,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,,,,,58,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationQueue,PunctuationQueue,low,low,low,low,0,1,0,0,0,1,20,3,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,0
org.apache.kafka.streams.processor.internals.PunctuationSchedule,PunctuationSchedule,low,low,low,low,0,1,0,0,0,2,14,5,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public next( long ): PunctuationSchedule,next( long ): PunctuationSchedule,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,4
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->interval,final interval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.Punctuator,Punctuator,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.QuickUnion<T>,QuickUnion,low,low,low,low,0,5,2,0,0,9,25,23,0,0,5,0,0,0,0,0,0,0,,,,,25,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public add( T ): void,add( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public exists( T ): boolean,exists( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public root( T ): T,root( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public unite( T, T ): void","unite( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,1,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.private unitePair( T, T ): void","unitePair( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,0
org.apache.kafka.streams.processor.internals.RecordCollector,RecordCollector,low,low,low,low,0,2,0,1,0,5,9,2,0,0,2,0,0,0,0,0,0,0,,,,,9,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.RecordCollector.Supplier,Supplier,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.RecordCollectorImpl,RecordCollectorImpl,low,low,low-medium,low,0,3,1,0,0,4,64,12,0,2,3,0,0,0,0,1,0,0,,,,,64,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$3588;,Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$3588;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.private checkForException( ): void,checkForException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->MAX_SEND_ATTEMPTS,static final MAX_SEND_ATTEMPTS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->SEND_RETRY_BACKOFF,static final SEND_RETRY_BACKOFF : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RecordContext,RecordContext,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.RecordQueue,RecordQueue,low,low,low-medium,low,0,4,0,0,0,4,63,8,1,0,4,0,0,0,0,1,0,0,,,,,63,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->partitionTime,partitionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.SinkNode<K,V>",SinkNode,low,low,low,low,0,2,0,0,0,4,48,20,0,0,2,0,0,0,0.333,0,0,0,,,,,48,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,2,0,0
"org.apache.kafka.streams.processor.internals.SourceNode<K,V>",SourceNode,low,low,low,low,0,2,0,0,0,2,38,5,0,0,2,0,0,0,0.333,0,0,0,,,,,38,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
org.apache.kafka.streams.processor.internals.Stamped<V>,Stamped,low,low,low,low,1,1,0,0,0,1,12,3,2,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public Stamped( V, long ): void","Stamped( V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->value,final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StampedRecord,StampedRecord,low,low,low,low,0,2,0,0,0,2,16,4,0,0,2,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.StandbyContextImpl,StandbyContextImpl,low,low,low-medium,low-medium,0,8,0,0,0,8,116,23,1,0,8,0,0,0,0.65,1,0,0,,,,,116,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.processor.internals.StandbyContextImpl->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StandbyTask,StandbyTask,low,low,low,low,0,5,0,0,0,5,38,12,0,0,5,0,0,0,0,0,0,0,,,,,38,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public closeTopology( ): void,closeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public commitOffsets( ): void,commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public initTopology( ): void,initTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.StateDirectory,StateDirectory,low,low,low-medium,low,0,1,0,0,0,9,83,20,0,0,1,0,0,0,0,0,0,0,,,,,83,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StateDirectory$6711;,Lorg.apache.kafka.streams.processor.internals.StateDirectory$6711;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public cleanRemovedTasks( ): void,cleanRemovedTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,20,0,0,0
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor,StreamPartitionAssignor,low,low,medium-high,low,0,0,0,0,0,0,385,0,1,2,0,0,0,0,0,0,0,0,,,,,385,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.AssignedPartition,AssignedPartition,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.ClientMetadata,ClientMetadata,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.InternalTopicMetadata,InternalTopicMetadata,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.SubscriptionUpdates,SubscriptionUpdates,low,low,low,low,0,1,0,0,0,1,14,2,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->numStandbyReplicas,numStandbyReplicas : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->NOT_AVAILABLE,static final NOT_AVAILABLE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->UNKNOWN,static final UNKNOWN : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamTask,StreamTask,low-medium,low,low-medium,low,0,12,2,0,0,24,175,99,4,0,12,0,0,0.75,0.458,0.924,0,0,,,,,175,,,,,,24,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public closeTopology( ): void,closeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commitNeeded( ): boolean,commitNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commitOffsets( ): void,commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public initTopology( ): void,initTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public maybePunctuate( ): boolean,maybePunctuate( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public needCommit( ): void,needCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public process( ): int,process( ): int,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,33,0,0,7
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public requiresPoll( ): boolean,requiresPoll( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitOffsetNeeded,commitOffsetNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->maxBufferedSize,final maxBufferedSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->requiresPoll,requiresPoll : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread,StreamThread,medium-high,low,medium-high,low-medium,0,26,16,0,0,77,686,247,12,0,23,0,0,0.951,0.623,0.8,0,0,,,,,686,,,,,,77,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.AbstractTaskAction,AbstractTaskAction,low,low,low,low,0,0,0,1,5,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.AbstractTaskCreator,AbstractTaskCreator,low,low,low,low,0,0,0,0,2,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamThread$21134;,Lorg.apache.kafka.streams.processor.internals.StreamThread$21134;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamThread$21631;,Lorg.apache.kafka.streams.processor.internals.StreamThread$21631;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamThread$22026;,Lorg.apache.kafka.streams.processor.internals.StreamThread$22026;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamThread$41496;,Lorg.apache.kafka.streams.processor.internals.StreamThread$41496;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamThread$41910;,Lorg.apache.kafka.streams.processor.internals.StreamThread$41910;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StandbyTaskCreator,StandbyTaskCreator,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.State,State,low,low,low,low,0,2,0,0,0,2,9,4,0,5,2,0,0,0,0.25,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StateListener,StateListener,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StreamsMetricsImpl,StreamsMetricsImpl,low,low,low,low,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,,,,,86,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.TaskCreator,TaskCreator,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private addStandbyTasks( ): void,addStandbyTasks( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,25,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private closeNonAssignedSuspendedStandbyTasks( ): void,closeNonAssignedSuspendedStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,15,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private closeNonAssignedSuspendedTasks( ): void,closeNonAssignedSuspendedTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private commitAll( ): void,commitAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private computeLatency( ): long,computeLatency( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.protected maybeClean( ): void,maybeClean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.protected maybeCommit( ): void,maybeCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,6
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybeUpdateStandbyTasks( ): void,maybeUpdateStandbyTasks( ): void,low-medium,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,7,26,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private removeStandbyTasks( ): void,removeStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private removeStreamTasks( ): void,removeStreamTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,0,2,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private runLoop( ): void,runLoop( ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,45,0,6,6
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private shutdown( ): void,shutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,21,0,4,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private shutdownTasksAndState( ): void,shutdownTasksAndState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private suspendTasksAndState( ): void,suspendTasksAndState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public synchronized isInitialized( ): boolean,synchronized isInitialized( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private synchronized setState( State ): void,synchronized setState( State ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,7
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private synchronized setStateWhenNotInPendingShutdown( State ): void,synchronized setStateWhenNotInPendingShutdown( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public synchronized state( ): State,synchronized state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public synchronized stillRunning( ): boolean,synchronized stillRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private updateSuspendedTasks( ): void,updateSuspendedTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.streams.processor.internals.StreamThread->cleanRun,cleanRun : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->cleanTimeMs,final cleanTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->commitTimeMs,final commitTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->pollTimeMs,final pollTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->sensors,final sensors : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->taskCreator,final taskCreator : TaskCreator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastCleanMs,lastCleanMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastCommitMs,lastCommitMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->processStandbyRecords,processStandbyRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->timerStartedMs,timerStartedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState,StreamsMetadataState,low,low,low-medium,low,0,1,0,0,0,1,105,2,0,0,1,0,0,0,0,0,0,0,,,,,105,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState.SourceTopicsInfo,SourceTopicsInfo,low,low,low,low,0,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private isInitialized( ): boolean,isInitialized( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.TimestampTracker<E>,TimestampTracker,low,low,low,low,0,2,0,1,0,4,6,2,0,1,2,0,0,0,0,1,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.streams.processor.internals.TimestampTracker<E>->NOT_KNOWN,static final NOT_KNOWN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.processor.internals.assignment,org.apache.kafka.streams.processor.internals.assignment,low,low,low-medium,low,,,,,,20,337,,,,,,,,,,,,,5,5,0,337,0,1,0,1,0,20,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo,AssignmentInfo,low,low,low-medium,low,0,1,0,0,0,1,96,3,1,1,1,0,0,0,0,0,0,0,,,,,96,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->CURRENT_VERSION,static final CURRENT_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.ClientState<T>,ClientState,low,low,low,low,0,4,0,0,0,7,45,17,2,3,4,0,0,1,0.562,1,0,0,,,,,45,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public ClientState( ): void,ClientState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public ClientState( double ): void,ClientState( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public assign( T, boolean ): void","assign( T, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,2,0,4
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public copy( ): ClientState,copy( ): ClientState,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->capacity,capacity : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->cost,cost : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_ACTIVE,static final COST_ACTIVE : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_LOAD,static final COST_LOAD : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_STANDBY,static final COST_STANDBY : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo,SubscriptionInfo,low,low,low-medium,low,0,1,0,0,0,2,82,6,1,1,1,0,0,0,0,0,0,0,,,,,82,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->CURRENT_VERSION,static final CURRENT_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>",TaskAssignor,low,low,low-medium,low,0,4,1,0,0,8,114,21,3,0,4,0,0,0,0.562,0,0,0,,,,,114,,,,,,8,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.TaskAssignor.TaskPair<T>,TaskPair,low,low,low,low,1,2,0,0,0,2,16,6,2,0,2,0,0,0,0.25,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private assignStandbyTasks( int ): void",assignStandbyTasks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private assignTasks( ): void",assignTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private assignTasks( boolean ): void",assignTasks( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private pair( T, T ): TaskPair","pair( T, T ): TaskPair",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,0
"<Field>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>->maxNumTaskPairs",final maxNumTaskPairs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>->prevAssignmentBalanced",prevAssignmentBalanced : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>->prevClientsUnchanged",prevClientsUnchanged : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.state,org.apache.kafka.streams.state,low,low,medium-high,low,,,,,,49,295,,,,,,,,,,,,,21,10,11,295,0,0,0.619,1,0.619,49,,,,,,,
org.apache.kafka.streams.state.HostInfo,HostInfo,low,low,low,low,0,2,0,0,0,2,28,7,1,0,2,0,0,0,0,0,0,0,,,,,28,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.HostInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.streams.state.HostInfo.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.HostInfo->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.KeyValueIterator<K,V>",KeyValueIterator,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.KeyValueStore<K,V>",KeyValueStore,low,low,low,low,0,3,0,1,0,4,6,3,0,0,3,0,0,0,0.111,0,0,0,,,,,6,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.QueryableStoreType<T>,QueryableStoreType,low,low,low,low,0,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
org.apache.kafka.streams.state.QueryableStoreTypes,QueryableStoreTypes,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.KeyValueStoreType<K,V>",KeyValueStoreType,low,low,low,low,0,1,0,1,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.streams.state.QueryableStoreTypes.QueryableStoreTypeMatcher<T>,QueryableStoreTypeMatcher,low,low,low,low,0,0,0,0,2,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.WindowStoreType<K,V>",WindowStoreType,low,low,low,low,0,1,0,1,0,1,7,2,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>",ReadOnlyKeyValueStore,low,low,low,low,0,2,0,1,0,4,6,2,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>",ReadOnlyWindowStore,low,low,low,low,0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.streams.state.RocksDBConfigSetter,RocksDBConfigSetter,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.StateSerdes<K,V>",StateSerdes,low,low,low,low,0,4,0,0,0,4,39,8,0,0,4,0,0,0,0.5,0,0,0,,,,,39,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keyFrom( byte ): K",keyFrom( byte ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawKey( K ): byte",rawKey( K ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawValue( V ): byte",rawValue( V ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueFrom( byte ): V",valueFrom( byte ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.state.Stores,Stores,low,low,low-medium,low,0,0,0,0,0,0,125,0,0,0,0,0,0,0,0,0,0,0,,,,,125,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.Stores.InMemoryKeyValueFactory<K,V>",InMemoryKeyValueFactory,low,low,low,low,0,2,0,1,1,4,5,2,0,0,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.Stores.KeyValueFactory<K,V>",KeyValueFactory,low,low,low,low,2,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$1972;,Lorg.apache.kafka.streams.state.Stores$1972;,low,low,low,low,0,0,0,1,0,0,75,0,0,0,0,0,0,0,0,0,0,0,,,,,75,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2113;,Lorg.apache.kafka.streams.state.Stores$2113;,low,low,low,low,0,0,0,1,0,0,71,0,0,0,0,0,0,0,0,0,0,0,,,,,71,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2292;,Lorg.apache.kafka.streams.state.Stores$2292;,low,low,low,low,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,,,,,67,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2478;,Lorg.apache.kafka.streams.state.Stores$2478;,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$5164;,Lorg.apache.kafka.streams.state.Stores$5164;,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.Stores.PersistentKeyValueFactory<K,V>",PersistentKeyValueFactory,low,low,low,low,0,3,0,1,1,5,6,3,0,0,3,0,0,0,0.5,0,0,0,,,,,6,,,,,,5,,,,,,,
org.apache.kafka.streams.state.Stores.StoreFactory,StoreFactory,low,low,low,low,1,6,0,0,1,6,16,12,0,0,6,0,0,0,0,0,0,0,,,,,16,,,,,,6,,,,,,,
org.apache.kafka.streams.state.Stores.ValueFactory<K>,ValueFactory,low,low,low,low,1,6,0,0,2,6,16,12,0,0,6,0,0,0,0,0,0,0,,,,,16,,,,,,6,,,,,,,
org.apache.kafka.streams.state.StreamsMetadata,StreamsMetadata,low,low,low,low,0,2,0,0,0,2,44,8,0,1,2,0,0,0,0,1,0,0,,,,,44,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.StreamsMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,0
<Method>org.apache.kafka.streams.state.StreamsMetadata.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.state.StreamsMetadata->NOT_AVAILABLE,static final NOT_AVAILABLE : StreamsMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.WindowStore<K,V>",WindowStore,low,low,low,low,0,2,0,1,0,2,4,2,0,0,2,0,0,0,0.125,0,0,0,,,,,4,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.state.WindowStoreIterator<E>,WindowStoreIterator,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.WindowStoreIterator<E>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.streams.state.internals,org.apache.kafka.streams.state.internals,low-medium,low,very-high,low,,,,,,286,2162,,,,,,,,,,,,,51,43,8,2162,0,1,0.176,1,0.176,286,,,,,,,
"org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>",AbstractStoreSupplier,low,low,low,low,0,1,0,0,0,1,20,2,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>->logged",final logged : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CachedStateStore<K,V>",CachedStateStore,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>",CachingKeyValueStore,low,low,low-medium,low,0,12,5,0,0,18,133,62,0,0,12,0,0,0,0.562,0,0,0,,,,,133,,,,,,18,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CachingKeyValueStore$3371;,Lorg.apache.kafka.streams.state.internals.CachingKeyValueStore$3371;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.private get( byte ): V",get( byte ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized approximateNumEntries( ): long",synchronized approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,3,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.private synchronized put( byte, V ): void","synchronized put( byte, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,3,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.private validateStoreOpen( ): void",validateStoreOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,0
"org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>",CachingWindowStore,low,low,low-medium,low,0,7,4,0,0,8,102,28,1,0,7,0,0,0,0.571,1,0,0,,,,,102,,,,,,8,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CachingWindowStore$3352;,Lorg.apache.kafka.streams.state.internals.CachingWindowStore$3352;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public synchronized put( K, V, long ): void","synchronized put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.private validateStoreOpen( ): void",validateStoreOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,0
"<Field>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>->windowSize",final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>",CompositeReadOnlyKeyValueStore,low,low,low-medium,low,0,2,0,0,0,7,82,18,0,0,2,0,0,0,0.25,0,0,0,,,,,82,,,,,,7,,,,,,,
org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore.CompositeKeyValueIterator,CompositeKeyValueIterator,low,low,low,low,1,3,1,0,0,7,28,15,1,0,3,0,0,0,0,1,0,0,,,,,28,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2894;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2894;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3732;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3732;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore.NextIteratorFunction<K,V>",NextIteratorFunction,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,1,0,0
"org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>",CompositeReadOnlyWindowStore,low,low,low,low,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$2812;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$2812;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>",DelegatingPeekingKeyValueIterator,low,low,low,low,0,4,1,0,0,7,31,19,0,0,4,0,0,0,0,0,0,0,,,,,31,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,0,0
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.state.internals.DelegatingPeekingWindowIterator<V>,DelegatingPeekingWindowIterator,low,low,low,low,0,3,0,0,0,5,31,14,0,0,3,0,0,0,0,0,0,0,,,,,31,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingWindowIterator<V>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingWindowIterator<V>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,0,0
<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingWindowIterator<V>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>",InMemoryKeyValueLoggedStore,low,low,low-medium,low,0,10,1,0,0,11,77,35,0,0,10,0,0,0,0.433,0,0,0,,,,,77,,,,,,11,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore$2666;,Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore$2666;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.protected removed( K ): void",removed( K ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"org.apache.kafka.streams.state.internals.InMemoryKeyValueStoreSupplier<K,V>",InMemoryKeyValueStoreSupplier,low,low,low-medium,low,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,,,,,96,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryKeyValueStoreSupplier.MemoryStore<K,V>",MemoryStore,low,low,low,low,0,9,2,0,0,10,88,29,1,0,9,0,0,0,0.444,0.972,0,0,,,,,88,,,,,,10,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryLRUCacheStoreSupplier<K,V>",InMemoryLRUCacheStoreSupplier,low,low,low,low,0,0,0,0,0,0,10,0,1,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryLRUCacheStoreSupplier<K,V>->capacity",final capacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.LRUCacheEntry,LRUCacheEntry,low,low,low,low,0,7,0,0,0,7,43,17,6,0,7,0,0,1,0.429,1,0,0,,,,,43,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. LRUCacheEntry( byte ): void, LRUCacheEntry( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. isDirty( ): boolean, isDirty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. markClean( ): void, markClean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->isDirty, isDirty : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->sizeBytes,sizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>",MemoryLRUCache,low,low,low-medium,low,0,11,2,0,0,12,90,35,2,0,11,0,0,0.75,0.591,0.982,0,0,,,,,90,,,,,,12,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryLRUCache.EldestEntryRemovalListener<K,V>",EldestEntryRemovalListener,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$2814;,Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$2814;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$4112;,Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$4112;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public whenEldestRemoved( EldestEntryRemovalListener ): MemoryLRUCache",whenEldestRemoved( EldestEntryRemovalListener ): MemoryLRUCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>->listener",listener : EldestEntryRemovalListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache<K,V>",MemoryNavigableLRUCache,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.CacheIterator<K,V>",CacheIterator,low,low,low,low,1,3,0,0,0,3,18,7,1,0,3,0,0,0,0,1,0,0,,,,,18,,,,,,3,,,,,,,
"org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueStoreIterator<K,V>",MergedSortedCacheKeyValueStoreIterator,low,low,low-medium,low,0,3,0,0,0,7,57,16,0,0,3,0,0,0,0,0,0,0,,,,,57,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueStoreIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueStoreIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,9,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueStoreIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.MergedSortedCachedWindowStoreIterator<K,V>",MergedSortedCachedWindowStoreIterator,low,low,low,low,0,3,0,0,0,3,48,10,0,0,3,0,0,0,0,0,0,0,,,,,48,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCachedWindowStoreIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCachedWindowStoreIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCachedWindowStoreIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>",MeteredKeyValueStore,low,low,low-medium,low,0,9,0,0,0,9,122,47,0,0,9,0,0,0,0.444,0,0,0,,,,,122,,,,,,9,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredKeyValueStore.MeteredKeyValueIterator<K1,V1>",MeteredKeyValueIterator,low,low,low,low,0,3,0,0,0,3,23,12,1,0,3,0,0,0,0,1,0,0,,,,,23,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,0,0
"org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>",MeteredWindowStore,low,low,low-medium,low,0,6,0,0,0,6,87,30,0,0,6,0,0,0,0.542,0,0,0,,,,,87,,,,,,6,,,,,,,
org.apache.kafka.streams.state.internals.MeteredWindowStore.MeteredWindowStoreIterator<E>,MeteredWindowStoreIterator,low,low,low,low,0,3,0,0,0,3,23,12,1,0,3,0,0,0,0,1,0,0,,,,,23,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,3,0,0
org.apache.kafka.streams.state.internals.NamedCache,NamedCache,low-medium,low,low-medium,low,0,17,8,0,0,27,190,75,7,0,16,0,0,0.87,0.375,0,0,0,,,,,190,,,,,,27,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache.LRUNode,LRUNode,low,low,low,low,0,3,0,0,0,3,24,10,2,0,3,0,0,1,0,0,0,0,,,,,24,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.NamedCache.private flush( LRUNode ): void,flush( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,20,1,4,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private putHead( LRUNode ): void,putHead( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,7
<Method>org.apache.kafka.streams.state.internals.NamedCache.private remove( LRUNode ): void,remove( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,0,2
<Method>org.apache.kafka.streams.state.internals.NamedCache.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized close( ): void,synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,3
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized dirtySize( ): long,synchronized dirtySize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized evict( ): void,synchronized evict( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,3,3
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flush( ): void,synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flushes( ): long,synchronized flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized head( ): LRUNode,synchronized head( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized hits( ): long,synchronized hits( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized misses( ): long,synchronized misses( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized overwrites( ): long,synchronized overwrites( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized sizeInBytes( ): long,synchronized sizeInBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized tail( ): LRUNode,synchronized tail( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private updateLRU( LRUNode ): void,updateLRU( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Field>org.apache.kafka.streams.state.internals.NamedCache->currentSizeBytes,currentSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->head,head : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numOverwrites,numOverwrites : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadHits,numReadHits : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadMisses,numReadMisses : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->tail,tail : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.OffsetCheckpoint,OffsetCheckpoint,low,low,low-medium,low,0,1,0,0,0,1,75,2,0,1,1,0,0,0,0,0,0,0,,,,,75,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public delete( ): void,delete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->VERSION,static final VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K,V>",PeekingKeyValueIterator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K,V>.public abstract peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.internals.PeekingWindowIterator<V>,PeekingWindowIterator,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.QueryableStoreProvider,QueryableStoreProvider,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBKeyValueStoreSupplier<K,V>",RocksDBKeyValueStoreSupplier,low,low,low,low,0,0,0,0,0,0,17,0,1,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBKeyValueStoreSupplier<K,V>->enableCaching",final enableCaching : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBStore<K,V>",RocksDBStore,low-medium,low,low-medium,low-medium,0,16,8,0,0,30,253,99,2,6,16,0,0,1.167,0.662,0.972,0,0,,,,,253,,,,,,30,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.RocksDBStore$6761;,Lorg.apache.kafka.streams.state.internals.RocksDBStore$6761;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDBRangeIterator,RocksDBRangeIterator,low,low,low,low,0,3,2,1,0,1,10,3,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDbIterator,RocksDbIterator,low,low,low,low,0,4,0,0,1,5,31,15,1,0,4,0,0,0,0,0.667,0,0,,,,,31,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private closeOpenIterators( ): void",closeOpenIterators( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private flushInternal( ): void",flushInternal( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private getInternal( byte ): byte",getInternal( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private isOverflowing( long ): boolean",isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private putInternal( byte, byte ): void","putInternal( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,2,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,1,2
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,2,2,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.synchronized writeToStore( K, V ): void","synchronized writeToStore( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private validateStoreOpen( ): void",validateStoreOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->loggingEnabled",loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->BLOCK_CACHE_SIZE",static final BLOCK_CACHE_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->BLOCK_SIZE",static final BLOCK_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->MAX_WRITE_BUFFERS",static final MAX_WRITE_BUFFERS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->TTL_NOT_USED",static final TTL_NOT_USED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->TTL_SECONDS",static final TTL_SECONDS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->WRITE_BUFFER_SIZE",static final WRITE_BUFFER_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>",RocksDBWindowStore,low-medium,low,low-medium,low-medium,0,17,9,0,0,42,235,106,7,1,16,0,0,0.913,0.677,0.905,0,0,,,,,235,,,,,,42,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.RocksDBWindowStore$7147;,Lorg.apache.kafka.streams.state.internals.RocksDBWindowStore$7147;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBWindowStore.RocksDBWindowStoreIterator<V>,RocksDBWindowStoreIterator,low,low,low,low,0,3,1,0,0,9,38,17,0,0,3,0,0,0,0,0,0,0,,,,,38,,,,,,9,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBWindowStore.Segment,Segment,low,low,low,low,0,1,0,0,0,1,11,2,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private cleanup( ): void",cleanup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,0,1,2
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public enableLogging( ): RocksDBWindowStore",enableLogging( ): RocksDBWindowStore,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private getInternal( byte ): byte",getInternal( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private getOrCreateSegment( long ): Segment",getOrCreateSegment( long ): Segment,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,2,4
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private getSegment( long ): Segment",getSegment( long ): Segment,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private isSegment( Segment, long ): boolean","isSegment( Segment, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private openExistingSegments( ): void",openExistingSegments( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,17,0,1,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,3,1,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private putAndReturnInternalKey( K, byte, long ): byte","putAndReturnInternalKey( K, byte, long ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,3,3,6
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private putInternal( byte, byte ): void","putInternal( byte, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,2
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.private segmentId( long ): long",segmentId( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->currentSegmentId",currentSegmentId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->numSegments",final numSegments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->retainDuplicates",final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->segmentInterval",final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->loggingEnabled",loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->seqnum",seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->MIN_SEGMENT_INTERVAL",static final MIN_SEGMENT_INTERVAL : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>",RocksDBWindowStoreSupplier,low,low,low,low,0,1,0,0,0,1,25,2,5,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->enableCaching",final enableCaching : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->numSegments",final numSegments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->retainDuplicates",final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->retentionPeriod",final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->windowSize",final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.StateStoreProvider,StateStoreProvider,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>",StoreChangeLogger,low,low,low,low,0,1,0,0,0,2,19,5,1,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>. logChange( K, V ): void"," logChange( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,1
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider,StreamThreadStateStoreProvider,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache,ThreadCache,low,low,low-medium,low,0,8,1,0,0,12,171,26,5,0,8,0,0,1.067,0.375,1,0,0,,,,,171,,,,,,12,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntry,DirtyEntry,low,low,low,low,0,1,0,0,0,1,14,2,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntryFlushListener,DirtyEntryFlushListener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.MemoryLRUCacheBytesIterator,MemoryLRUCacheBytesIterator,low,low,low,low,0,5,2,0,0,10,40,22,0,0,5,0,0,0,0,0,0,0,,,,,40,,,,,,10,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.NullThreadCacheMetrics,NullThreadCacheMetrics,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ThreadCache. sizeBytes( ): long, sizeBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public ThreadCache( long ): void,ThreadCache( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public evicts( ): long,evicts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public flushes( ): long,flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public gets( ): long,gets( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private isOverflowing( long ): boolean,isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public puts( ): long,puts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,2,0
<Field>org.apache.kafka.streams.state.internals.ThreadCache->maxCacheSizeBytes,final maxCacheSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numEvicts,numEvicts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numGets,numGets : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numPuts,numPuts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCacheMetrics,ThreadCacheMetrics,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreUtils,WindowStoreUtils,low,low,low,low,0,2,0,0,0,2,25,4,0,2,0,2,0,0.5,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WindowStoreUtils.public static sequenceNumberFromBinaryKey( byte ): int,static sequenceNumberFromBinaryKey( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.WindowStoreUtils.public static timestampFromBinaryKey( byte ): long,static timestampFromBinaryKey( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Field>org.apache.kafka.streams.state.internals.WindowStoreUtils->SEQNUM_SIZE,static final SEQNUM_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowStoreUtils->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WrappingStoreProvider,WrappingStoreProvider,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Package>org.apache.kafka.tools,org.apache.kafka.tools,low,low,medium-high,low,,,,,,47,975,,,,,,,,,,,,,18,18,0,975,0,0,0,1,0,47,,,,,,,
org.apache.kafka.tools.ProducerPerformance,ProducerPerformance,low,low,low-medium,low,0,0,0,0,0,0,201,0,0,0,0,0,0,0,0,0,0,0,,,,,201,,,,,,0,,,,,,,
org.apache.kafka.tools.ProducerPerformance.PerfCallback,PerfCallback,low,low,low,low,1,1,0,0,0,1,16,5,4,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.tools.ProducerPerformance.Stats,Stats,low,low,low,low,0,6,3,0,0,9,90,70,15,0,5,1,0,0.533,0.5,0.2,0,0,,,,,90,,,,,,9,,,,,,,
org.apache.kafka.tools.ThroughputThrottler,ThroughputThrottler,low,low,low-medium,low,0,4,0,0,0,14,52,43,5,3,4,0,0,0.833,0.25,0.333,0,0,,,,,52,,,,,,14,,,,,,,
"<Method>org.apache.kafka.tools.ThroughputThrottler.public ThroughputThrottler( long, long ): void","ThroughputThrottler( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,0,4
"<Method>org.apache.kafka.tools.ThroughputThrottler.public shouldThrottle( long, long ): boolean","shouldThrottle( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,3
<Method>org.apache.kafka.tools.ThroughputThrottler.public throttle( ): void,throttle( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,28,0,0,13
<Method>org.apache.kafka.tools.ThroughputThrottler.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,1
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepTimeNs,final sleepTimeNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->targetThroughput,final targetThroughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepDeficitNs,sleepDeficitNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->MIN_SLEEP_NS,static final MIN_SLEEP_NS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_MS,static final NS_PER_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_SEC,static final NS_PER_SEC : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->wakeup,wakeup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableConsumer,VerifiableConsumer,low,low,medium-high,low,0,5,1,0,0,12,369,44,5,0,5,0,0,1,0,1,0,0,,,,,369,,,,,,12,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.CommitData,CommitData,low,low,low,low,0,1,0,1,0,1,8,3,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ConsumerEvent,ConsumerEvent,low,low,low,low,0,1,0,0,6,1,7,3,1,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$21501;,Lorg.apache.kafka.tools.VerifiableConsumer$21501;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$5521;,Lorg.apache.kafka.tools.VerifiableConsumer$5521;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.OffsetsCommitted,OffsetsCommitted,low,low,low,low,0,1,0,1,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionData,PartitionData,low,low,low,low,0,1,0,0,2,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsAssigned,PartitionsAssigned,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsRevoked,PartitionsRevoked,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordData,RecordData,low,low,low,low,0,2,0,1,0,2,22,6,0,0,2,0,0,0,0,0,0,0,,,,,22,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordSetSummary,RecordSetSummary,low,low,low,low,0,3,0,1,0,3,18,9,3,0,3,0,0,1,0,1,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordsConsumed,RecordsConsumed,low,low,low,low,0,1,0,1,0,1,15,3,1,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.VerifiableConsumer.private addKafkaSerializerModule( ): void,addKafkaSerializerModule( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.private hasMessageLimit( ): boolean,hasMessageLimit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.tools.VerifiableConsumer.private isFinished( ): boolean,isFinished( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.tools.VerifiableConsumer.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,0,0,2
<Field>org.apache.kafka.tools.VerifiableConsumer->consumedMessages,consumedMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAsyncCommit,final useAsyncCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAutoCommit,final useAutoCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->verbose,final verbose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableLog4jAppender,VerifiableLog4jAppender,low,low,low-medium,low,0,0,0,0,0,0,154,0,2,0,0,0,0,0,0,0,0,0,,,,,154,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableLog4jAppender$10095;,Lorg.apache.kafka.tools.VerifiableLog4jAppender$10095;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->stopLogging,volatile stopLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableProducer,VerifiableProducer,low,low,low-medium,low,0,1,0,0,0,1,199,3,5,0,1,0,0,0,0,0,0,0,,,,,199,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableProducer$12970;,Lorg.apache.kafka.tools.VerifiableProducer$12970;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.PrintInfoCallback,PrintInfoCallback,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.VerifiableProducer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.tools.VerifiableProducer->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numAcked,numAcked : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numSent,numSent : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->stopProducing,stopProducing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->throughput,throughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
