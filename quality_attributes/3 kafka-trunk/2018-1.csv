QualifiedName,Name,Complexity,Coupling,Size,Lack of Cohesion,CBO,RFC,SRFC,DIT,NOC,WMC,LOC,CMLOC,NOF,NOSF,NOM,NOSM,NORM,LCOM,LCAM,LTCC,ATFD,SI,Coverage,#(C&I),#C,#I,LOC,AC,EC,Abs,Ins,ND,WMC,Coverage,MCC,NBD,LOC,#Pa,#MC,#AF
kafka-96df93522f84173ff47f47ec78ec408991140b65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>$,$,low,low,low,low,,,,,,0,91,,,,,,,,,,,,,3,3,0,91,0,0,0,1,0,0,,,,,,,
$.LineSplit,LineSplit,low,low,low,low,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : L$.LineSplit$2229;,L$.LineSplit$2229;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : L$.LineSplit$3146;,L$.LineSplit$3146;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
$.Pipe,Pipe,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : L$.Pipe$2314;,L$.Pipe$2314;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
$.WordCount,WordCount,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
<Anonymous> : L$.WordCount$2565;,L$.WordCount$2565;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : L$.WordCount$2872;,L$.WordCount$2872;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : L$.WordCount$4199;,L$.WordCount$4199;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Package>kafka.examples,kafka.examples,low,low,low-medium,low,,,,,,10,139,,,,,,,,,,,,,6,6,0,139,0,0,0,1,0,10,,,,,,,
kafka.examples.Consumer,Consumer,low,low,low,low,0,2,0,0,0,3,27,9,0,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,3,,,,,,,
<Method>kafka.examples.Consumer.public doWork( ): void,doWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>kafka.examples.Consumer.public isInterruptible( ): boolean,isInterruptible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
kafka.examples.DemoCallBack,DemoCallBack,low,low,low,low,0,0,0,0,0,0,17,0,2,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>kafka.examples.DemoCallBack->key,final key : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.DemoCallBack->startTime,final startTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.KafkaConsumerProducerDemo,KafkaConsumerProducerDemo,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
kafka.examples.KafkaProperties,KafkaProperties,low,low,low,low,0,1,0,0,0,1,10,1,0,3,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>kafka.examples.KafkaProperties.private KafkaProperties( ): void,KafkaProperties( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>kafka.examples.KafkaProperties->CONNECTION_TIMEOUT,static final CONNECTION_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_PRODUCER_BUFFER_SIZE,static final KAFKA_PRODUCER_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_SERVER_PORT,static final KAFKA_SERVER_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.Producer,Producer,low,low,low,low,1,1,0,0,0,4,31,18,0,0,1,0,0,0,0,0,0,0,,,,,31,,,,,,4,,,,,,,
<Method>kafka.examples.Producer.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,18,0,0,0
kafka.examples.SimpleConsumerDemo,SimpleConsumerDemo,low,low,low,low,0,1,0,0,0,2,47,9,0,0,0,1,0,0,0,0,0,0,,,,,47,,,,,,2,,,,,,,
<Method>kafka.examples.SimpleConsumerDemo.private static generateData( ): void,static generateData( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Package>kafka.javaapi.consumer,kafka.javaapi.consumer,low,low,low,low,,,,,,12,18,,,,,,,,,,,,,2,0,2,18,0,0,1,1,1,12,,,,,,,
kafka.javaapi.consumer.ConsumerConnector,ConsumerConnector,low,low,low,low,0,3,0,1,0,10,14,3,0,0,3,0,0,0,0.333,0,0,0,,,,,14,,,,,,10,,,,,,,
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( ): void,commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( boolean ): void,commitOffsets( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
kafka.javaapi.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
<Package>kafka.tools,kafka.tools,low,low,low-medium,low,,,,,,0,381,,,,,,,,,,,,,1,1,0,381,0,0,0,1,0,0,,,,,,,
kafka.tools.StreamsResetter,StreamsResetter,low,low,medium-high,low,0,0,0,0,0,0,381,0,0,2,0,0,0,0,0,0,0,0,,,,,381,,,,,,0,,,,,,,
<Field>kafka.tools.StreamsResetter->EXIT_CODE_ERROR,static final EXIT_CODE_ERROR : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->EXIT_CODE_SUCCESS,static final EXIT_CODE_SUCCESS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients,org.apache.kafka.clients,low,low,medium-high,low,,,,,,104,1269,,,,,,,,,,,,,20,16,4,1269,0,0,0.2,1,0.2,104,,,,,,,
org.apache.kafka.clients.ApiVersions,ApiVersions,low,low,low,low,0,2,0,0,0,3,19,8,1,0,2,0,0,0,0,0,0,0,,,,,19,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.ApiVersions.private computeMaxUsableProduceMagic( ): byte,computeMaxUsableProduceMagic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.clients.ApiVersions.public synchronized maxUsableProduceMagic( ): byte,synchronized maxUsableProduceMagic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ApiVersions->maxUsableProduceMagic,maxUsableProduceMagic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientRequest,ClientRequest,low,low,low,low,0,3,0,0,0,3,48,6,3,0,3,0,0,1,0,1,0,0,,,,,48,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.ClientRequest.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public createdTimeMs( ): long,createdTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public expectResponse( ): boolean,expectResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientRequest->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->createdTimeMs,final createdTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->expectResponse,final expectResponse : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientResponse,ClientResponse,low,low,low-medium,low,0,5,0,0,0,6,56,11,3,0,5,0,0,1,0,1,0,0,,,,,56,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.ClientResponse.public hasResponse( ): boolean,hasResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ClientResponse.public onComplete( ): void,onComplete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.clients.ClientResponse.public receivedTimeMs( ): long,receivedTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public requestLatencyMs( ): long,requestLatencyMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public wasDisconnected( ): boolean,wasDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientResponse->disconnected,final disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->latencyMs,final latencyMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->receivedTimeMs,final receivedTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientUtils,ClientUtils,low,low,low,low,0,1,0,0,0,1,34,1,0,0,1,0,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.ClientUtils.private ClientUtils( ): void,ClientUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.ClusterConnectionStates,ClusterConnectionStates,low,low,low-medium,low,0,4,0,0,0,8,111,22,3,1,4,0,0,0.375,0.417,1,0,0,,,,,111,,,,,,8,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates.NodeConnectionState,NodeConnectionState,low,low,low,low,0,0,0,0,0,0,14,0,3,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public ClusterConnectionStates( long, long ): void","ClusterConnectionStates( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,5
<Method>org.apache.kafka.clients.ClusterConnectionStates.public hasReadyNodes( ): boolean,hasReadyNodes( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,0,0,0
<Method>org.apache.kafka.clients.ClusterConnectionStates.private resetReconnectBackoff( NodeConnectionState ): void,resetReconnectBackoff( NodeConnectionState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.private updateReconnectBackoff( NodeConnectionState ): void,updateReconnectBackoff( NodeConnectionState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,0,5
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffInitMs,final reconnectBackoffInitMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMaxExp,final reconnectBackoffMaxExp : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMaxMs,final reconnectBackoffMaxMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->RECONNECT_BACKOFF_EXP_BASE,static final RECONNECT_BACKOFF_EXP_BASE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.CommonClientConfigs,CommonClientConfigs,low,low,low-medium,low,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
org.apache.kafka.clients.ConnectionState,ConnectionState,low,low,low,low,0,1,0,0,0,1,4,2,0,5,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.ConnectionState.public isDisconnected( ): boolean,isDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Field>org.apache.kafka.clients.ConnectionState->AUTHENTICATION_FAILED,static final AUTHENTICATION_FAILED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CHECKING_API_VERSIONS,static final CHECKING_API_VERSIONS : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CONNECTING,static final CONNECTING : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->DISCONNECTED,static final DISCONNECTED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->READY,static final READY : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.InFlightRequests,InFlightRequests,low,low,low-medium,low,0,3,0,0,0,6,57,12,1,0,3,0,0,0,0.333,1,0,0,,,,,57,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.InFlightRequests.public InFlightRequests( int ): void,InFlightRequests( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.InFlightRequests.public count( ): int,count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.clients.InFlightRequests.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Field>org.apache.kafka.clients.InFlightRequests->maxInFlightRequestsPerConnection,final maxInFlightRequestsPerConnection : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.KafkaClient,KafkaClient,low,low,low,low,0,4,0,1,0,18,21,4,0,0,4,0,0,0,0,0,0,0,,,,,21,,,,,,18,,,,,,,
<Method>org.apache.kafka.clients.KafkaClient.public abstract hasInFlightRequests( ): boolean,hasInFlightRequests( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract hasReadyNodes( ): boolean,hasReadyNodes( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.ManualMetadataUpdater,ManualMetadataUpdater,low,low,low,low,0,4,0,0,0,4,27,10,0,0,4,0,0,0,0.25,0,0,0,,,,,27,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public ManualMetadataUpdater( ): void,ManualMetadataUpdater( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.Metadata,Metadata,low-medium,low,low-medium,low-medium,0,13,2,0,0,21,157,45,9,2,13,0,0,0.96,0.677,0.879,0,0,,,,,157,,,,,,21,,,,,,,
org.apache.kafka.clients.Metadata.Listener,Listener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.Metadata.public Metadata( long, long, boolean ): void","Metadata( long, long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.clients.Metadata.public allowAutoTopicCreation( ): boolean,allowAutoTopicCreation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized addListener( Listener ): void,synchronized addListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.Metadata.public synchronized awaitUpdate( int, long ): void","synchronized awaitUpdate( int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,15,2,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized lastSuccessfulUpdate( ): long,synchronized lastSuccessfulUpdate( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( ): boolean,synchronized needMetadataForAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( boolean ): void,synchronized needMetadataForAllTopics( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,1,2
<Method>org.apache.kafka.clients.Metadata.public synchronized removeListener( Listener ): void,synchronized removeListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.Metadata.public synchronized requestUpdate( ): int,synchronized requestUpdate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.Metadata.private synchronized requestUpdateForNewTopics( ): void,synchronized requestUpdateForNewTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.Metadata.public synchronized timeToNextUpdate( long ): long,synchronized timeToNextUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,5
<Method>org.apache.kafka.clients.Metadata.public synchronized updateRequested( ): boolean,synchronized updateRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized version( ): int,synchronized version( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.Metadata->allowAutoTopicCreation,final allowAutoTopicCreation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->metadataExpireMs,final metadataExpireMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->refreshBackoffMs,final refreshBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->topicExpiryEnabled,final topicExpiryEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastRefreshMs,lastRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastSuccessfulRefreshMs,lastSuccessfulRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needMetadataForAllTopics,needMetadataForAllTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needUpdate,needUpdate : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->TOPIC_EXPIRY_MS,static final TOPIC_EXPIRY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->TOPIC_EXPIRY_NEEDS_UPDATE,static final TOPIC_EXPIRY_NEEDS_UPDATE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->version,version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.MetadataUpdater,MetadataUpdater,low,low,low,low,0,3,0,1,0,7,8,3,0,0,3,0,0,0,0.167,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.NetworkClient,NetworkClient,low,low,medium-high,low,0,8,0,0,0,13,553,37,6,0,8,0,0,1.667,0.437,1,0,0,,,,,553,,,,,,13,,,,,,,
org.apache.kafka.clients.NetworkClient.DefaultMetadataUpdater,DefaultMetadataUpdater,low,low,low,low,0,4,0,0,0,9,78,23,1,0,4,0,0,0,0.25,0.667,0,0,,,,,78,,,,,,9,,,,,,,
org.apache.kafka.clients.NetworkClient.InFlightRequest,InFlightRequest,low,low,low,low,0,0,0,0,0,0,43,0,4,0,0,0,0,0,0,0,0,0,,,,,43,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.NetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public discoverBrokerVersions( ): boolean,discoverBrokerVersions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.NetworkClient.private handleConnections( ): void,handleConnections( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,0,1
<Method>org.apache.kafka.clients.NetworkClient.private handleInitiateApiVersionRequests( long ): void,handleInitiateApiVersionRequests( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,0,0
<Method>org.apache.kafka.clients.NetworkClient.public hasInFlightRequests( ): boolean,hasInFlightRequests( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public hasReadyNodes( ): boolean,hasReadyNodes( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.clients.NetworkClient->correlation,correlation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->discoverBrokerVersions,final discoverBrokerVersions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->reconnectBackoffMs,final reconnectBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketReceiveBuffer,final socketReceiveBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketSendBuffer,final socketSendBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.NetworkClientUtils,NetworkClientUtils,low,low,low,low,0,1,0,0,0,1,33,1,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.NetworkClientUtils.private NetworkClientUtils( ): void,NetworkClientUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.NodeApiVersions,NodeApiVersions,low,low,low-medium,low,0,1,0,0,0,1,88,2,0,0,0,1,0,0,0,0,0,0,,,,,88,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.NodeApiVersions.public static create( ): NodeApiVersions,static create( ): NodeApiVersions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.RequestCompletionHandler,RequestCompletionHandler,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.clients.admin,org.apache.kafka.clients.admin,low,low,very-high,low,,,,,,63,1854,,,,,,,,,,,,,53,52,1,1854,0,0,0.057,1,0.057,63,,,,,,,
org.apache.kafka.clients.admin.AbstractOptions<T>,AbstractOptions,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AdminClient,AdminClient,low,low,low-medium,low,0,1,0,0,0,1,60,3,0,0,1,0,0,0,0,0,0,0,,,,,60,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.AdminClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.clients.admin.AdminClientConfig,AdminClientConfig,low,low,low-medium,low,0,0,0,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,,,,,110,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterConfigsOptions,AlterConfigsOptions,low,low,low,low,0,2,0,0,0,2,11,5,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterConfigsOptions.public shouldValidateOnly( ): boolean,shouldValidateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigsOptions.public validateOnly( boolean ): AlterConfigsOptions,validateOnly( boolean ): AlterConfigsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.AlterConfigsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterConfigsResult,AlterConfigsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterReplicaLogDirsOptions,AlterReplicaLogDirsOptions,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterReplicaLogDirsResult,AlterReplicaLogDirsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.Config,Config,low,low,low,low,0,1,0,0,0,1,26,3,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.Config.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.clients.admin.ConfigEntry,ConfigEntry,low,low,low-medium,low,0,4,0,0,0,8,57,16,3,0,4,0,0,0.667,0,0.5,0,0,,,,,57,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.admin.ConfigEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,10,0,0,3
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isDefault( ): boolean,isDefault( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isReadOnly( ): boolean,isReadOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isSensitive( ): boolean,isSensitive( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ConfigEntry->isDefault,final isDefault : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->isReadOnly,final isReadOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->isSensitive,final isSensitive : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateAclsOptions,CreateAclsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.CreateAclsResult,CreateAclsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.CreatePartitionsOptions,CreatePartitionsOptions,low,low,low,low,0,3,0,0,0,3,9,6,1,0,3,0,0,0,0.333,0.667,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public CreatePartitionsOptions( ): void,CreatePartitionsOptions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public validateOnly( boolean ): CreatePartitionsOptions,validateOnly( boolean ): CreatePartitionsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.CreatePartitionsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreatePartitionsResult,CreatePartitionsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.CreateTopicsOptions,CreateTopicsOptions,low,low,low,low,0,2,0,0,0,2,11,5,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateTopicsOptions.public shouldValidateOnly( ): boolean,shouldValidateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreateTopicsOptions.public validateOnly( boolean ): CreateTopicsOptions,validateOnly( boolean ): CreateTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.CreateTopicsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateTopicsResult,CreateTopicsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsOptions,DeleteAclsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsResult,DeleteAclsResult,low,low,low,low,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,,,,,41,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsResult.FilterResult,FilterResult,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsResult.FilterResults,FilterResults,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DeleteAclsResult$3516;,Lorg.apache.kafka.clients.admin.DeleteAclsResult$3516;,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteRecordsOptions,DeleteRecordsOptions,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteRecordsResult,DeleteRecordsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteTopicsOptions,DeleteTopicsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteTopicsResult,DeleteTopicsResult,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeletedRecords,DeletedRecords,low,low,low,low,0,2,0,0,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DeletedRecords.public DeletedRecords( long ): void,DeletedRecords( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeletedRecords.public lowWatermark( ): long,lowWatermark( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeletedRecords->lowWatermark,final lowWatermark : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeAclsOptions,DescribeAclsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeAclsResult,DescribeAclsResult,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeClusterOptions,DescribeClusterOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeClusterResult,DescribeClusterResult,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeConfigsOptions,DescribeConfigsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeConfigsResult,DescribeConfigsResult,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeConfigsResult$2057;,Lorg.apache.kafka.clients.admin.DescribeConfigsResult$2057;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeLogDirsOptions,DescribeLogDirsOptions,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeLogDirsResult,DescribeLogDirsResult,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeLogDirsResult$2113;,Lorg.apache.kafka.clients.admin.DescribeLogDirsResult$2113;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsOptions,DescribeReplicaLogDirsOptions,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult,DescribeReplicaLogDirsResult,low,low,low-medium,low,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,,,,,57,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeReplicaLogDirsResult$2202;,Lorg.apache.kafka.clients.admin.DescribeReplicaLogDirsResult$2202;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult.ReplicaLogDirInfo,ReplicaLogDirInfo,low,low,low,low,0,3,0,0,0,3,37,6,2,0,3,0,0,1,0,1,0,0,,,,,37,,,,,,3,,,,,,,
org.apache.kafka.clients.admin.DescribeTopicsOptions,DescribeTopicsOptions,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeTopicsResult,DescribeTopicsResult,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeTopicsResult$1986;,Lorg.apache.kafka.clients.admin.DescribeTopicsResult$1986;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient,KafkaAdminClient,low,low,high,low,0,1,0,0,0,3,1103,7,4,1,0,1,0,0,0,0,0,0,,,,,1103,,,,,,3,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.AdminClientRunnable,AdminClientRunnable,low,low,low,low,3,6,4,0,0,15,217,68,0,0,4,0,0,0,0.437,0,0,0,,,,,217,,,,,,15,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.Call,Call,low,low,low,low,1,0,0,0,18,0,54,0,4,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.ConstantNodeIdProvider,ConstantNodeIdProvider,low,low,low,low,0,1,0,0,0,1,7,2,1,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.ControllerNodeProvider,ControllerNodeProvider,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.LeastLoadedNodeProvider,LeastLoadedNodeProvider,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$46727;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$46727;,low,low,low,low,0,0,0,1,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$49367;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$49367;,low,low,low,low,0,0,0,1,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$51703;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$51703;,low,low,low,low,0,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$53550;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$53550;,low,low,low,low,0,0,0,1,0,0,51,0,0,0,0,0,1,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$55855;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$55855;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$57668;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$57668;,low,low,low,low,0,0,0,1,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$59513;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$59513;,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$61342;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$61342;,low,low,low,low,0,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$63597;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$63597;,low,low,low,low,0,0,0,1,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$67081;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$67081;,low,low,low,low,0,0,0,1,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$69593;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$69593;,low,low,low,low,0,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$73269;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$73269;,low,low,low,low,0,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$76021;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$76021;,low,low,low,low,0,0,0,1,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$78404;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$78404;,low,low,low,low,0,0,0,1,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$81356;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$81356;,low,low,low,low,0,0,0,1,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$85916;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$85916;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$88286;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$88286;,low,low,low,low,0,0,0,1,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$90675;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$90675;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.NodeProvider,NodeProvider,low,low,low,low,0,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.TimeoutProcessor,TimeoutProcessor,low,low,low,low,1,4,1,0,0,4,26,11,2,0,3,0,0,0.25,0.444,0,0,0,,,,,26,,,,,,4,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.TimeoutProcessorFactory,TimeoutProcessorFactory,low,low,low,low,1,1,0,0,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static calcTimeoutMsRemainingAsInt( long, long ): int","static calcTimeoutMsRemainingAsInt( long, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,2,0,0
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->defaultTimeoutMs,final defaultTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->maxRetries,final maxRetries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->runnable,final runnable : AdminClientRunnable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->timeoutProcessorFactory,final timeoutProcessorFactory : TimeoutProcessorFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->INVALID_SHUTDOWN_TIME,static final INVALID_SHUTDOWN_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListTopicsOptions,ListTopicsOptions,low,low,low,low,0,2,0,0,0,2,11,5,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ListTopicsOptions.public listInternal( boolean ): ListTopicsOptions,listInternal( boolean ): ListTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.ListTopicsOptions.public shouldListInternal( ): boolean,shouldListInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListTopicsOptions->listInternal,listInternal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListTopicsResult,ListTopicsResult,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListTopicsResult$1780;,Lorg.apache.kafka.clients.admin.ListTopicsResult$1780;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListTopicsResult$2228;,Lorg.apache.kafka.clients.admin.ListTopicsResult$2228;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.NewPartitions,NewPartitions,low,low,low,low,0,2,0,0,0,2,18,4,1,0,1,1,0,0,0.25,1,0,0,,,,,18,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.NewPartitions.public static increaseTo( int ): NewPartitions,static increaseTo( int ): NewPartitions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.admin.NewPartitions.public totalCount( ): int,totalCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.NewPartitions->totalCount,totalCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.NewTopic,NewTopic,low,low,low,low,0,2,0,0,0,2,50,4,2,0,2,0,0,1,0,1,0,0,,,,,50,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.NewTopic.public numPartitions( ): int,numPartitions( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.NewTopic.public replicationFactor( ): short,replicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.NewTopic->numPartitions,final numPartitions : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->replicationFactor,final replicationFactor : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RecordsToDelete,RecordsToDelete,low,low,low,low,0,4,0,0,0,4,21,9,1,0,3,1,0,0,0.25,0.667,0,0,,,,,21,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.admin.RecordsToDelete.private RecordsToDelete( long ): void,RecordsToDelete( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public beforeOffset( ): long,beforeOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public static beforeOffset( long ): RecordsToDelete,static beforeOffset( long ): RecordsToDelete,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.clients.admin.RecordsToDelete->offset,offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.TopicDescription,TopicDescription,low,low,low,low,0,2,0,0,0,5,32,8,1,0,2,0,0,0,0,0,0,0,,,,,32,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.admin.TopicDescription.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,0,0,1
<Method>org.apache.kafka.clients.admin.TopicDescription.public isInternal( ): boolean,isInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.TopicDescription->internal,final internal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.TopicListing,TopicListing,low,low,low,low,0,1,0,0,0,1,13,2,1,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.TopicListing.public isInternal( ): boolean,isInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.TopicListing->internal,final internal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.consumer,org.apache.kafka.clients.consumer,low,low,medium-high,low,,,,,,94,1928,,,,,,,,,,,,,25,21,4,1928,0,1,0.2,1,0.2,94,,,,,,,
org.apache.kafka.clients.consumer.CommitFailedException,CommitFailedException,low,low,low,low,0,1,0,0,0,1,9,7,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.CommitFailedException.public CommitFailedException( ): void,CommitFailedException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Field>org.apache.kafka.clients.consumer.CommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.Consumer<K,V>",Consumer,low-medium,low,low,low,0,5,0,1,0,31,32,5,0,0,5,0,0,0,0,0,0,0,,,,,32,,,,,,31,,,,,,,
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerConfig,ConsumerConfig,low,low,medium-high,low,0,0,0,0,0,0,310,0,0,3,0,0,0,0,0,0,0,0,,,,,310,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_EXCLUDE_INTERNAL_TOPICS,static final DEFAULT_EXCLUDE_INTERNAL_TOPICS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_FETCH_MAX_BYTES,static final DEFAULT_FETCH_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_MAX_PARTITION_FETCH_BYTES,static final DEFAULT_MAX_PARTITION_FETCH_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>",ConsumerInterceptor,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecord<K,V>",ConsumerRecord,low,low,low-medium,low,2,8,0,0,0,9,91,19,7,3,8,0,0,1,0,0.893,0,0,,,,,91,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public checksum( ): long",checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,3
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public offset( ): long",offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public partition( ): int",partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedKeySize( ): int",serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedValueSize( ): int",serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public timestamp( ): long",timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->offset",final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedKeySize",final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedValueSize",final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->timestamp",final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NO_TIMESTAMP",static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_CHECKSUM",static final NULL_CHECKSUM : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_SIZE",static final NULL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords<K,V>",ConsumerRecords,low,low,low-medium,low,0,3,0,0,0,4,52,10,0,1,2,1,0,0,0,1,0,0,,,,,52,,,,,,4,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords.ConcatenatedIterable<K,V>",ConcatenatedIterable,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public count( ): int",count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public static empty( ): ConsumerRecords",static empty( ): ConsumerRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>->EMPTY",static final EMPTY : ConsumerRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.InvalidOffsetException,InvalidOffsetException,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.clients.consumer.KafkaConsumer<K,V>",KafkaConsumer,low,low,medium-high,low,0,10,3,0,0,20,547,64,3,2,10,0,0,1,0.6,1,0,0,,,,,547,,,,,,20,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.KafkaConsumer$69048;,Lorg.apache.kafka.clients.consumer.KafkaConsumer$69048;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquire( ): void",acquire( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquireAndEnsureOpen( ): void",acquireAndEnsureOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private close( long, boolean ): void","close( long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,22,2,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private release( ): void",release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private throwIfNoAssignorsConfigured( ): void",throwIfNoAssignorsConfigured( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->requestTimeoutMs",final requestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->DEFAULT_CLOSE_TIMEOUT_MS",static final DEFAULT_CLOSE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->NO_CURRENT_THREAD",static final NO_CURRENT_THREAD : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->closed",volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.MockConsumer<K,V>",MockConsumer,low,low,low-medium,low,0,8,1,0,0,9,253,26,1,0,8,0,0,0,0,1,0,0,,,,,253,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.MockConsumer$14124;,Lorg.apache.kafka.clients.consumer.MockConsumer$14124;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized closed( ): boolean",synchronized closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitAsync( ): void",synchronized commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitSync( ): void",synchronized commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized scheduleNopPollTask( ): void",synchronized scheduleNopPollTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized unsubscribe( ): void",synchronized unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized wakeup( ): void",synchronized wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.NoOffsetForPartitionException,NoOffsetForPartitionException,low,low,low,low,0,0,0,0,0,0,14,0,0,1,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.NoOffsetForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndMetadata,OffsetAndMetadata,low,low,low,low,0,3,0,0,0,3,33,9,1,0,3,0,0,0,0.333,0.667,0,0,,,,,33,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long ): void,OffsetAndMetadata( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndTimestamp,OffsetAndTimestamp,low,low,low,low,0,4,0,0,0,4,24,12,2,0,4,0,0,0.333,0.375,0.167,0,0,,,,,24,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public OffsetAndTimestamp( long, long ): void","OffsetAndTimestamp( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,4
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetCommitCallback,OffsetCommitCallback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.OffsetOutOfRangeException,OffsetOutOfRangeException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetResetStrategy,OffsetResetStrategy,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->EARLIEST,static final EARLIEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->LATEST,static final LATEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->NONE,static final NONE : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RangeAssignor,RangeAssignor,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.RetriableCommitFailedException,RetriableCommitFailedException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.RetriableCommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RoundRobinAssignor,RoundRobinAssignor,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.StickyAssignor,StickyAssignor,low,low,medium-high,low,0,2,1,0,0,1,465,2,1,0,1,0,0,0,0,0,0,0,,,,,465,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.StickyAssignor.ConsumerPair,ConsumerPair,low,low,low,low,0,1,0,0,0,3,28,7,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,3,,,,,,,
org.apache.kafka.clients.consumer.StickyAssignor.PartitionComparator,PartitionComparator,low,low,low,low,0,0,0,0,0,0,13,0,0,1,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.StickyAssignor.PartitionMovements,PartitionMovements,low,low,low,low,0,1,0,0,0,3,89,9,0,0,1,0,0,0,0,0,0,0,,,,,89,,,,,,3,,,,,,,
org.apache.kafka.clients.consumer.StickyAssignor.SubscriptionComparator,SubscriptionComparator,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.StickyAssignor. isSticky( ): boolean, isSticky( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.clients.consumer.StickyAssignor->partitionMovements,partitionMovements : PartitionMovements,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.consumer.internals,org.apache.kafka.clients.consumer.internals,low-medium,low,very-high,low,,,,,,286,2888,,,,,,,,,,,,,49,45,4,2888,0,0,0.143,1,0.143,286,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator,AbstractCoordinator,medium-high,low,medium-high,low,0,24,16,0,0,52,550,130,10,0,21,0,0,0.925,0.405,1,0,0,,,,,550,,,,,,52,,,,,,,
"org.apache.kafka.clients.consumer.internals.AbstractCoordinator.CoordinatorResponseHandler<R,T>",CoordinatorResponseHandler,low,low,low,low,0,0,0,0,4,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.Generation,Generation,low,low,low,low,0,0,0,0,0,0,12,0,1,1,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorMetrics,GroupCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorResponseHandler,GroupCoordinatorResponseHandler,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatResponseHandler,HeartbeatResponseHandler,low,low,low,low,0,0,0,1,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatThread,HeartbeatThread,low,low,low,low,1,10,4,0,0,21,80,74,2,0,6,0,0,0.5,0,0.333,0,0,,,,,80,,,,,,21,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.JoinGroupResponseHandler,JoinGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,38,0,0,0,0,0,0,0,0,0,0,0,,,,,38,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.LeaveGroupResponseHandler,LeaveGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$18515;,Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$18515;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.MemberState,MemberState,low,low,low,low,0,0,0,0,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.SyncGroupResponseHandler,SyncGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.UnjoinedGroupException,UnjoinedGroupException,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator. joinGroupIfNeeded( ): void, joinGroupIfNeeded( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,22,0,5,9
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected close( long ): void,close( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private closeHeartbeatThread( ): void,closeHeartbeatThread( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,0,1,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public coordinatorUnknown( ): boolean,coordinatorUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public ensureActiveGroup( ): void,ensureActiveGroup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public final close( ): void,final close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized clearFindCoordinatorFuture( ): void,synchronized clearFindCoordinatorFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized coordinatorDead( ): void,synchronized coordinatorDead( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized disableHeartbeatThread( ): void,synchronized disableHeartbeatThread( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized ensureCoordinatorReady( ): void,synchronized ensureCoordinatorReady( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized ensureCoordinatorReady( long, long ): boolean","synchronized ensureCoordinatorReady( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,21,2,3,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized generation( ): Generation,synchronized generation( ): Generation,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized maybeLeaveGroup( ): void,synchronized maybeLeaveGroup( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,2,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized needRejoin( ): boolean,synchronized needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized pollHeartbeat( long ): void,synchronized pollHeartbeat( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,1,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized rejoinIncomplete( ): boolean,synchronized rejoinIncomplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized requestRejoin( ): void,synchronized requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized resetGeneration( ): void,synchronized resetGeneration( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized resetJoinGroupFuture( ): void,synchronized resetJoinGroupFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized startHeartbeatThreadIfNeeded( ): void,synchronized startHeartbeatThreadIfNeeded( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized timeToNextHeartbeat( long ): long,synchronized timeToNextHeartbeat( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,1
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->leaveGroupOnClose,final leaveGroupOnClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rebalanceTimeoutMs,final rebalanceTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sensors,final sensors : GroupCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sessionTimeoutMs,final sessionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->generation,generation : Generation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->heartbeatThread,heartbeatThread : HeartbeatThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->needsJoinPrepare,needsJoinPrepare : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rejoinNeeded,rejoinNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->state,state : MemberState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor,AbstractPartitionAssignor,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator,ConsumerCoordinator,low-medium,low,medium-high,low,0,12,6,0,0,42,540,110,8,0,11,0,0,0.969,0.273,0.933,0,0,,,,,540,,,,,,42,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.ConsumerCoordinatorMetrics,ConsumerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.DefaultOffsetCommitCallback,DefaultOffsetCommitCallback,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$23966;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$23966;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$25284;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$25284;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$28984;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$28984;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$7918;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$7918;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.MetadataSnapshot,MetadataSnapshot,low,low,low,low,0,1,0,0,0,2,16,3,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitCompletion,OffsetCommitCompletion,low,low,low,low,0,1,0,0,0,2,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitResponseHandler,OffsetCommitResponseHandler,low,low,low,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetFetchResponseHandler,OffsetFetchResponseHandler,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator. invokeCompletedOffsetCommitCallbacks( ): void, invokeCompletedOffsetCommitCallbacks( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private addMetadataListener( ): void,addMetadataListener( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,15,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public close( long ): void,close( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private doAutoCommitOffsetsAsync( ): void,doAutoCommitOffsetsAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,13,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsAsync( long ): void,maybeAutoCommitOffsetsAsync( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,1,1,5
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public maybeAutoCommitOffsetsNow( ): void,maybeAutoCommitOffsetsNow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsSync( long ): void,maybeAutoCommitOffsetsSync( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,9,0,0,3
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public poll( long, long ): void","poll( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,19,2,3,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public refreshCommittedOffsetsIfNeeded( ): void,refreshCommittedOffsetsIfNeeded( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public timeToNextPoll( long ): long,timeToNextPoll( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,3
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->assignmentSnapshot,assignmentSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitEnabled,final autoCommitEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitIntervalMs,final autoCommitIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->excludeInternalTopics,final excludeInternalTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->sensors,final sensors : ConsumerCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->isLeader,isLeader : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->metadataSnapshot,metadataSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->nextAutoCommitDeadline,nextAutoCommitDeadline : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>",ConsumerInterceptors,low,low,low,low,0,1,0,0,0,3,26,7,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
org.apache.kafka.clients.consumer.internals.ConsumerMetrics,ConsumerMetrics,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,ConsumerNetworkClient,low-medium,low,low-medium,low-medium,0,24,16,0,0,43,274,107,4,1,19,0,0,0.84,0.618,0.967,0,0,,,,,274,,,,,,43,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.PollCondition,PollCondition,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.RequestFutureCompletionHandler,RequestFutureCompletionHandler,low,low,low,low,0,2,0,0,0,5,26,15,0,0,2,0,0,0,0,0,0,0,,,,,26,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.UnsentRequests,UnsentRequests,low,low,low,low,0,4,0,0,0,9,55,19,0,0,4,0,0,0,0,0,0,0,,,,,55,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( ): void,awaitMetadataUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( long ): boolean,awaitMetadataUpdate( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private checkDisconnects( long ): void,checkDisconnects( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public disableWakeups( ): void,disableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public ensureFreshMetadata( ): void,ensureFreshMetadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private failExpiredRequests( long ): void,failExpiredRequests( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private firePendingCompletedRequests( ): void,firePendingCompletedRequests( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public hasPendingRequests( ): boolean,hasPendingRequests( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private maybeThrowInterruptException( ): void,maybeThrowInterruptException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public maybeTriggerWakeup( ): void,maybeTriggerWakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pendingRequestCount( ): int,pendingRequestCount( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long, long, PollCondition ): void","poll( long, long, PollCondition ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long, long, PollCondition, boolean ): void","poll( long, long, PollCondition, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,4,10,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pollNoWakeup( ): void,pollNoWakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public synchronized hasReadyNodes( ): boolean,synchronized hasReadyNodes( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private trySend( long ): boolean,trySend( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->maxPollTimeoutMs,final maxPollTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->unsent,final unsent : UnsentRequests,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->unsentExpiryMs,final unsentExpiryMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->MAX_POLL_TIMEOUT_MS,static final MAX_POLL_TIMEOUT_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerProtocol,ConsumerProtocol,low,low,low-medium,low,0,1,0,0,0,2,74,3,0,1,0,1,0,0,0,0,0,0,,,,,74,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_V0,static final CONSUMER_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.Fetcher<K,V>",Fetcher,low-medium,low,medium-high,low,0,7,1,0,0,26,815,110,9,0,5,0,0,1.778,0.4,1,0,0,,,,,815,,,,,,26,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.CompletedFetch,CompletedFetch,low,low,low,low,1,0,0,0,0,0,16,0,3,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchManagerMetrics,FetchManagerMetrics,low,low,low,low,0,0,0,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,,,,,75,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchResponseMetricAggregator,FetchResponseMetricAggregator,low,low,low,low,1,0,0,0,0,0,30,0,2,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$30084;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$30084;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$32354;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$32354;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$8627;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$8627;,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.OffsetData,OffsetData,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.PartitionRecords,PartitionRecords,low,low,low,low,1,3,1,0,0,9,142,18,6,0,3,0,0,0,0.333,0,0,0,,,,,142,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private endTimestamp( ): long",endTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public hasCompletedFetches( ): boolean",hasCompletedFetches( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private parseCompletedFetch( CompletedFetch ): PartitionRecords",parseCompletedFetch( CompletedFetch ): PartitionRecords,medium-high,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,5,68,1,0,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public sendFetches( ): int",sendFetches( ): int,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,33,0,0,0
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->checkCrcs",final checkCrcs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->fetchSize",final fetchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxBytes",final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxPollRecords",final maxPollRecords : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxWaitMs",final maxWaitMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->minBytes",final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->sensors",final sensors : FetchManagerMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->nextInLineRecords",nextInLineRecords : PartitionRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry,FetcherMetricsRegistry,low,low,low-medium,low,0,1,0,0,0,1,108,2,0,0,1,0,0,0,0,0,0,0,,,,,108,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry.public FetcherMetricsRegistry( ): void,FetcherMetricsRegistry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.consumer.internals.Heartbeat,Heartbeat,low,low,low-medium,low,0,12,1,0,0,15,54,44,9,0,12,0,0,0.833,0.125,0.712,0,0,,,,,54,,,,,,15,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public Heartbeat( long, long, long, long ): void","Heartbeat( long, long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,4,0,4
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public failHeartbeat( ): void,failHeartbeat( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public interval( ): long,interval( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public lastHeartbeatSend( ): long,lastHeartbeatSend( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public pollTimeoutExpired( long ): boolean,pollTimeoutExpired( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public receiveHeartbeat( long ): void,receiveHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public resetTimeouts( long ): void,resetTimeouts( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sentHeartbeat( long ): void,sentHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sessionTimeoutExpired( long ): boolean,sessionTimeoutExpired( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public shouldHeartbeat( long ): boolean,shouldHeartbeat( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public timeToNextHeartbeat( long ): long,timeToNextHeartbeat( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,5
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->heartbeatInterval,final heartbeatInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->maxPollInterval,final maxPollInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->sessionTimeout,final sessionTimeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->heartbeatFailed,heartbeatFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatReceive,lastHeartbeatReceive : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastPoll,lastPoll : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastSessionReset,lastSessionReset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatSend,volatile lastHeartbeatSend : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException,NoAvailableBrokersException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener,NoOpConsumerRebalanceListener,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor,PartitionAssignor,low,low,low,low,0,1,0,1,0,4,39,1,0,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Assignment,Assignment,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Subscription,Subscription,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract onAssignment( Assignment ): void,onAssignment( Assignment ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.RequestFuture<T>,RequestFuture,low-medium,low,low-medium,low-medium,0,15,6,0,0,22,103,60,0,0,10,5,0,0,0.622,0,0,0,,,,,103,,,,,,22,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7687;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7687;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$8110;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$8110;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public chain( RequestFuture ): void,chain( RequestFuture ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public complete( T ): void,complete( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public failed( ): boolean,failed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireFailure( ): void,fireFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireSuccess( ): void,fireSuccess( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isRetriable( ): boolean,isRetriable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public shouldBlock( ): boolean,shouldBlock( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static coordinatorNotAvailable( ): RequestFuture,static coordinatorNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static leaderNotAvailable( ): RequestFuture,static leaderNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static noBrokersAvailable( ): RequestFuture,static noBrokersAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static staleMetadata( ): RequestFuture,static staleMetadata( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static voidSuccess( ): RequestFuture,static voidSuccess( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public succeeded( ): boolean,succeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public value( ): T,value( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,0
"org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>",RequestFutureAdapter,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>,RequestFutureListener,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>.public abstract onSuccess( T ): void,onSuccess( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.StaleMetadataException,StaleMetadataException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.StaleMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState,SubscriptionState,low,low,low-medium,low-medium,0,12,0,0,0,14,237,31,2,0,12,0,0,0.571,0.611,0.836,0,0,,,,,237,,,,,,14,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.Listener,Listener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.SubscriptionType,SubscriptionType,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState,TopicPartitionState,low,low,low,low,0,8,1,0,0,9,36,24,1,0,8,0,0,0,0.375,1,0,0,,,,,36,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public addListener( Listener ): void,addListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public commitsRefreshed( ): void,commitsRefreshed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasAllFetchPositions( ): boolean,hasAllFetchPositions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasDefaultOffsetResetPolicy( ): boolean,hasDefaultOffsetResetPolicy( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasNoSubscriptionOrUserAssignment( ): boolean,hasNoSubscriptionOrUserAssignment( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasPatternSubscription( ): boolean,hasPatternSubscription( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public needRefreshCommits( ): void,needRefreshCommits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public partitionsAutoAssigned( ): boolean,partitionsAutoAssigned( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public refreshCommitsNeeded( ): boolean,refreshCommitsNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public resetGroupSubscription( ): void,resetGroupSubscription( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private setSubscriptionType( SubscriptionType ): void,setSubscriptionType( SubscriptionType ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public unsubscribe( ): void,unsubscribe( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->needsFetchCommittedOffsets,needsFetchCommittedOffsets : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->subscriptionType,subscriptionType : SubscriptionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer,org.apache.kafka.clients.producer,low,low,medium-high,low,,,,,,79,1124,,,,,,,,,,,,,14,10,4,1124,0,1,0.286,1,0.286,79,,,,,,,
org.apache.kafka.clients.producer.BufferExhaustedException,BufferExhaustedException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.BufferExhaustedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Callback,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer<K,V>",KafkaProducer,low,low,medium-high,low,0,8,1,0,0,12,480,45,4,0,8,0,0,0,0.437,1,0,0,,,,,480,,,,,,12,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.ClusterAndWaitTime,ClusterAndWaitTime,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.FutureFailure,FutureFailure,low,low,low,low,0,3,0,0,0,3,19,9,0,0,3,0,0,0,0.333,0,0,0,,,,,19,,,,,,3,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer.InterceptorCallback<K,V>",InterceptorCallback,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private ensureValidRecordSize( int ): void",ensureValidRecordSize( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public initTransactions( ): void",initTransactions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private throwIfNoTransactionManager( ): void",throwIfNoTransactionManager( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxBlockTimeMs",final maxBlockTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxRequestSize",final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->requestTimeoutMs",final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->totalMemorySize",final totalMemorySize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.MockProducer<K,V>",MockProducer,low-medium,low,low-medium,low,0,21,5,0,0,28,242,93,9,0,21,0,0,0.852,0,0.843,0,0,,,,,242,,,,,,28,,,,,,,
org.apache.kafka.clients.producer.MockProducer.Completion,Completion,low,low,low,low,0,0,0,0,0,0,21,0,1,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public MockProducer( ): void",MockProducer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,4,3
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,2,4
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public closed( ): boolean",closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public commitCount( ): long",commitCount( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,0,4,4
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public fenceProducer( ): void",fenceProducer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public flushed( ): boolean",flushed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public initTransactions( ): void",initTransactions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,2
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public sentOffsets( ): boolean",sentOffsets( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,0,5
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized completeNext( ): boolean",synchronized completeNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionAborted( ): boolean",transactionAborted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionCommitted( ): boolean",transactionCommitted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionInFlight( ): boolean",transactionInFlight( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionInitialized( ): boolean",transactionInitialized( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private verifyNoTransactionInFlight( ): void",verifyNoTransactionInFlight( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private verifyProducerState( ): void",verifyProducerState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,2
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private verifyTransactionsInitialized( ): void",verifyTransactionsInitialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->autoComplete",autoComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->commitCount",commitCount : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->producerFenced",producerFenced : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->sentOffsets",sentOffsets : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionAborted",transactionAborted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionCommitted",transactionCommitted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionInFlight",transactionInFlight : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionInitialized",transactionInitialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Partitioner,Partitioner,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.Partitioner.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.clients.producer.Producer<K,V>",Producer,low,low,low,low,0,6,0,1,0,12,14,6,0,0,6,0,0,0,0,0,0,0,,,,,14,,,,,,12,,,,,,,
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract initTransactions( ): void",initTransactions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.producer.ProducerConfig,ProducerConfig,low,low,low-medium,low,0,0,0,0,0,0,249,0,0,0,0,0,0,0,0,0,0,0,,,,,249,,,,,,0,,,,,,,
"org.apache.kafka.clients.producer.ProducerInterceptor<K,V>",ProducerInterceptor,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.clients.producer.ProducerRecord<K,V>",ProducerRecord,low,low,low-medium,low,2,3,0,0,0,9,81,13,2,0,3,0,0,0.5,0,0.333,0,0,,,,,81,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,9,0,0,4
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.RecordMetadata,RecordMetadata,low,low,low,low,0,8,0,0,0,9,45,19,4,1,8,0,0,0.867,0,0.786,0,0,,,,,45,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.producer.RecordMetadata.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,3
<Method>org.apache.kafka.clients.producer.RecordMetadata.public hasOffset( ): boolean,hasOffset( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public hasTimestamp( ): boolean,hasTimestamp( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedKeySize( ): int,serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedValueSize( ): int,serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.RecordMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->UNKNOWN_PARTITION,static final UNKNOWN_PARTITION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer.internals,org.apache.kafka.clients.producer.internals,low-medium,low,medium-high,low,,,,,,232,2403,,,,,,,,,,,,,29,29,0,2403,0,0,0,1,0,232,,,,,,,
org.apache.kafka.clients.producer.internals.BufferPool,BufferPool,low,low,low-medium,low,0,7,1,0,0,9,145,27,3,0,7,0,0,0.75,0.429,0.8,0,0,,,,,145,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,1,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.protected freeSize( ): int,freeSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.BufferPool.private freeUp( int ): void,freeUp( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,0,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public poolableSize( ): int,poolableSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public queued( ): int,queued( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,0
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public totalMemory( ): long,totalMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public unallocatedMemory( ): long,unallocatedMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,1
<Field>org.apache.kafka.clients.producer.internals.BufferPool->poolableSize,final poolableSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->totalMemory,final totalMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->nonPooledAvailableMemory,nonPooledAvailableMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.DefaultPartitioner,DefaultPartitioner,low,low,low,low,0,1,0,0,0,1,25,1,0,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.producer.internals.ErrorLoggingCallback,ErrorLoggingCallback,low,low,low,low,0,0,0,0,0,0,22,0,4,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->key,key : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->logAsString,logAsString : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->valueLength,valueLength : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.FutureRecordMetadata,FutureRecordMetadata,low,low,low-medium,low,0,5,2,0,0,8,62,18,5,0,5,0,0,1.2,0.533,1,0,0,,,,,62,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata. chain( FutureRecordMetadata ): void, chain( FutureRecordMetadata ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,3
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public cancel( boolean ): boolean,cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isCancelled( ): boolean,isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.private timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->createTimestamp,final createTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->relativeOffset,final relativeOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->nextRecordMetadata,volatile nextRecordMetadata : FutureRecordMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.IncompleteBatches,IncompleteBatches,low,low,low,low,0,2,0,0,0,2,18,5,0,0,2,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public IncompleteBatches( ): void,IncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,0
org.apache.kafka.clients.producer.internals.ProduceRequestResult,ProduceRequestResult,low,low,low,low,0,6,0,0,0,7,32,14,1,0,6,0,0,0,0,0.933,0,0,,,,,32,,,,,,7,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public done( ): void,done( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public hasLogAppendTime( ): boolean,hasLogAppendTime( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public logAppendTime( ): long,logAppendTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->logAppendTime,volatile logAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch,ProducerBatch,low-medium,low,low-medium,low-medium,0,26,5,0,0,35,230,69,9,0,26,0,0,0.951,0.683,0.993,0,0,,,,,230,,,,,,35,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch.FinalState,FinalState,low,low,low,low,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch.Thunk,Thunk,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. attempts( ): int, attempts( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. createdTimeMs( long ): long, createdTimeMs( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. drained( long ): void, drained( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. isSplitBatch( ): boolean, isSplitBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. maybeExpire( int, long, long, long, boolean ): boolean"," maybeExpire( int, long, long, long, boolean ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,1,11,5,8,2
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. queueTimeMs( ): long, queueTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. reenqueued( long ): void, reenqueued( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,5
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. waitedTimeMs( long ): long, waitedTimeMs( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public abortRecordAppends( ): void,abortRecordAppends( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public closeForRecordAppends( ): void,closeForRecordAppends( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public compressionRatio( ): double,compressionRatio( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public estimatedSizeInBytes( ): int,estimatedSizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public hasSequence( ): boolean,hasSequence( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public inRetry( ): boolean,inRetry( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isWritable( ): boolean,isWritable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public sequenceHasBeenReset( ): boolean,sequenceHasBeenReset( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->maxRecordSize, maxRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->recordCount, recordCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->drainedMs,drainedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->createdMs,final createdMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->isSplitBatch,final isSplitBatch : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->lastAppendTime,lastAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->lastAttemptMs,lastAttemptMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->reopened,reopened : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->retry,retry : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch,ProducerIdAndEpoch,low,low,low,low,0,2,0,0,0,2,12,5,2,1,2,0,0,1,0.333,0,0,0,,,,,12,,,,,,2,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch. ProducerIdAndEpoch( long, short ): void"," ProducerIdAndEpoch( long, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch->epoch,final epoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch->NONE,static final NONE : ProducerIdAndEpoch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>",ProducerInterceptors,low,low,low,low,0,1,0,0,0,3,42,7,0,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
org.apache.kafka.clients.producer.internals.ProducerMetrics,ProducerMetrics,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator,RecordAccumulator,low,low,medium-high,low,0,10,2,0,0,14,358,33,5,0,10,0,0,0,0,1,0,0,,,,,358,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6518;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6518;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6930;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6930;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7356;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7356;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.ReadyCheckResult,ReadyCheckResult,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.RecordAppendResult,RecordAppendResult,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. bufferPoolAvailableMemory( ): long, bufferPoolAvailableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. flushInProgress( ): boolean, flushInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private abortBatches( ): void,abortBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public abortIncompleteBatches( ): void,abortIncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private appendsInProgress( ): boolean,appendsInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public awaitFlushCompletion( ): void,awaitFlushCompletion( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public beginFlush( ): void,beginFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasIncomplete( ): boolean,hasIncomplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasUndrained( ): boolean,hasUndrained( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->drainIndex,drainIndex : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->batchSize,final batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->lingerMs,final lingerMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->closed,volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.Sender,Sender,medium-high,low,medium-high,low,0,8,6,0,0,60,495,161,9,0,8,0,0,0.926,0.312,0.667,0,0,,,,,495,,,,,,60,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.Sender$35014;,Lorg.apache.kafka.clients.producer.internals.Sender$35014;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.Sender.SenderMetrics,SenderMetrics,low,low,low,low,0,1,0,0,0,1,118,2,0,0,1,0,0,0,0,0,0,0,,,,,118,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.Sender. run( long ): void, run( long ): void,low-medium,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,26,1,3,2
<Method>org.apache.kafka.clients.producer.internals.Sender.public forceClose( ): void,forceClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.public initiateClose( ): void,initiateClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeSendTransactionalRequest( long ): boolean,maybeSendTransactionalRequest( long ): boolean,low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,42,1,0,3
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeWaitForProducerId( ): void,maybeWaitForProducerId( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,29,0,0,3
<Method>org.apache.kafka.clients.producer.internals.Sender.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,21,0,2,3
<Method>org.apache.kafka.clients.producer.internals.Sender.private sendProducerData( long ): long,sendProducerData( long ): long,low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,34,1,0,4
<Method>org.apache.kafka.clients.producer.internals.Sender.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.Sender->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->guaranteeMessageOrder,final guaranteeMessageOrder : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->maxRequestSize,final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->requestTimeout,final requestTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->sensors,final sensors : SenderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->forceClose,volatile forceClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->running,volatile running : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.SenderMetricsRegistry,SenderMetricsRegistry,low,low,low-medium,low,0,0,0,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,,,,,140,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager,TransactionManager,medium-high,low,medium-high,high,0,34,14,0,0,55,777,132,5,2,32,0,0,0.893,0.812,1,0,0,,,,,777,,,,,,55,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.AddOffsetsToTxnHandler,AddOffsetsToTxnHandler,low,low,low,low,1,1,0,1,0,1,34,3,0,0,1,0,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.AddPartitionsToTxnHandler,AddPartitionsToTxnHandler,low,low,low,low,1,3,0,1,0,4,71,9,1,0,3,0,1,0,0,0,0,0.333,,,,,71,,,,,,4,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.EndTxnHandler,EndTxnHandler,low,low,low,low,1,2,0,1,0,2,33,6,0,0,2,0,1,0,0,0,0,0.5,,,,,33,,,,,,2,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.FindCoordinatorHandler,FindCoordinatorHandler,low,low,low,low,1,1,0,1,0,1,39,3,0,0,1,0,2,0,0,0,0,2,,,,,39,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.InitProducerIdHandler,InitProducerIdHandler,low,low,low,low,1,1,0,1,0,1,29,3,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.TransactionManager$19874;,Lorg.apache.kafka.clients.producer.internals.TransactionManager$19874;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.TransactionManager$9317;,Lorg.apache.kafka.clients.producer.internals.TransactionManager$9317;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.Priority,Priority,low,low,low,low,0,1,0,0,0,1,8,2,1,4,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.State,State,low,low,low,low,0,1,0,0,0,8,26,17,0,8,1,0,0,0,0,0,0,0,,,,,26,,,,,,8,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TxnOffsetCommitHandler,TxnOffsetCommitHandler,low,low,low,low,1,1,0,1,0,1,56,3,0,0,1,0,2,0,0,0,0,2,,,,,56,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TxnRequestHandler,TxnRequestHandler,low,low,low,low,1,9,1,0,6,8,59,17,1,0,8,0,0,0,0,0,0,0,,,,,59,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. TransactionManager( ): void, TransactionManager( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. clearInFlightTransactionalRequestCorrelationId( ): void, clearInFlightTransactionalRequestCorrelationId( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasAbortableError( ): boolean, hasAbortableError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasFatalError( ): boolean, hasFatalError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasInFlightTransactionalRequest( ): boolean, hasInFlightTransactionalRequest( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasProducerId( long ): boolean, hasProducerId( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasProducerIdAndEpoch( long, short ): boolean"," hasProducerIdAndEpoch( long, short ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. lookupCoordinator( TxnRequestHandler ): void, lookupCoordinator( TxnRequestHandler ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. setInFlightTransactionalRequestCorrelationId( int ): void, setInFlightTransactionalRequestCorrelationId( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private enqueueRequest( TxnRequestHandler ): void,enqueueRequest( TxnRequestHandler ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private ensureTransactional( ): void,ensureTransactional( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeFailWithError( ): void,maybeFailWithError( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeTerminateRequestWithError( TxnRequestHandler ): boolean,maybeTerminateRequestWithError( TxnRequestHandler ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,2,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private synchronized addPartitionsToTransactionHandler( ): TxnRequestHandler,synchronized addPartitionsToTransactionHandler( ): TxnRequestHandler,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized beginTransaction( ): void,synchronized beginTransaction( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private synchronized completeTransaction( ): void,synchronized completeTransaction( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized failIfNotReadyForSend( ): void,synchronized failIfNotReadyForSend( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,10,0,3,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasError( ): boolean,synchronized hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasOngoingTransaction( ): boolean,synchronized hasOngoingTransaction( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasPartitionsToAdd( ): boolean,synchronized hasPartitionsToAdd( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasPendingOffsetCommits( ): boolean,synchronized hasPendingOffsetCommits( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasUnresolvedSequences( ): boolean,synchronized hasUnresolvedSequences( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isAborting( ): boolean,synchronized isAborting( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isCompleting( ): boolean,synchronized isCompleting( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isReady( ): boolean,synchronized isReady( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized nextRequestHandler( boolean ): TxnRequestHandler,synchronized nextRequestHandler( boolean ): TxnRequestHandler,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,23,1,6,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized resetProducerId( ): void,synchronized resetProducerId( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized retry( TxnRequestHandler ): void,synchronized retry( TxnRequestHandler ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized shouldResetProducerStateAfterResolvingSequences( ): boolean,synchronized shouldResetProducerStateAfterResolvingSequences( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,12,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private transitionTo( State ): void,transitionTo( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionTimeoutMs,final transactionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->inFlightRequestCorrelationId,inFlightRequestCorrelationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->ADD_PARTITIONS_RETRY_BACKOFF_MS,static final ADD_PARTITIONS_RETRY_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->NO_INFLIGHT_REQUEST_CORRELATION_ID,static final NO_INFLIGHT_REQUEST_CORRELATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->currentState,volatile currentState : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionStarted,volatile transactionStarted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionalRequestResult,TransactionalRequestResult,low,low,low,low,0,5,1,0,0,8,29,17,0,1,5,0,0,0,0,1,0,0,,,,,29,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public TransactionalRequestResult( ): void,TransactionalRequestResult( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public done( ): void,done( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public isCompleted( ): boolean,isCompleted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public isSuccessful( ): boolean,isSuccessful( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.TransactionalRequestResult->COMPLETE,static final COMPLETE : TransactionalRequestResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common,org.apache.kafka.common,low,low,medium-high,low,,,,,,54,544,,,,,,,,,,,,,17,14,3,544,0,0,0.353,1,0.353,54,,,,,,,
org.apache.kafka.common.Cluster,Cluster,low,low,low-medium,low,0,2,0,0,0,2,125,5,1,0,1,1,0,0,0,1,0,0,,,,,125,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.Cluster.public isBootstrapConfigured( ): boolean,isBootstrapConfigured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public static empty( ): Cluster,static empty( ): Cluster,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.Cluster->isBootstrapConfigured,final isBootstrapConfigured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.ClusterResource,ClusterResource,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.ClusterResourceListener,ClusterResourceListener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.Configurable,Configurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.KafkaException,KafkaException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.KafkaException.public KafkaException( ): void,KafkaException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.KafkaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.KafkaFuture<T>,KafkaFuture,low,low,low-medium,medium-high,0,11,2,0,0,12,53,23,0,0,9,2,0,0,0.766,0,0,0,,,,,53,,,,,,12,,,,,,,
org.apache.kafka.common.KafkaFuture.AllOfAdapter<R>,AllOfAdapter,low,low,low,low,0,3,2,1,0,3,20,7,2,0,2,0,0,0,0.333,0,0,0,,,,,20,,,,,,3,,,,,,,
"org.apache.kafka.common.KafkaFuture.BiConsumer<A,B>",BiConsumer,low,low,low,low,0,1,0,0,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.common.KafkaFuture.Function<A,B>",Function,low,low,low,low,0,1,0,0,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.KafkaFuture<T>.protected abstract addWaiter( BiConsumer ): void,abstract addWaiter( BiConsumer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract cancel( boolean ): boolean,abstract cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.protected abstract complete( T ): boolean,abstract complete( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract get( ): T,abstract get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract getNow( T ): T,abstract getNow( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isCancelled( ): boolean,abstract isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isCompletedExceptionally( ): boolean,abstract isCompletedExceptionally( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isDone( ): boolean,abstract isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract thenApply( Function ): KafkaFuture,abstract thenApply( Function ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public static allOf( KafkaFuture ): KafkaFuture,static allOf( KafkaFuture ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public static completedFuture( U ): KafkaFuture,static completedFuture( U ): KafkaFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
org.apache.kafka.common.Metric,Metric,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.Metric.public abstract value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.MetricName,MetricName,low,low,low-medium,low,0,1,0,0,0,5,59,11,1,0,1,0,0,0,0,0,0,0,,,,,59,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.MetricName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,0,0,3
<Field>org.apache.kafka.common.MetricName->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.MetricNameTemplate,MetricNameTemplate,low,low,low,low,0,1,0,0,0,1,40,3,0,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.MetricNameTemplate.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.Node,Node,low,low,low-medium,low,0,6,0,0,0,8,68,19,2,1,5,1,0,0.75,0,0.733,0,0,,,,,68,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.Node.public hasRack( ): boolean,hasRack( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.Node.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,0,0,2
<Method>org.apache.kafka.common.Node.public id( ): int,id( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public static noNode( ): Node,static noNode( ): Node,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.Node->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->NO_NODE,static final NO_NODE : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.PartitionInfo,PartitionInfo,low,low,low,low,0,1,0,0,0,1,45,2,1,0,1,0,0,0,0,0,0,0,,,,,45,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.PartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.PartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartition,TopicPartition,low,low,low,low,0,2,0,0,0,4,41,12,2,0,2,0,0,0.5,0,0,0,0,,,,,41,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.TopicPartition.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,0,0,4
<Method>org.apache.kafka.common.TopicPartition.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartition->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartitionInfo,TopicPartitionInfo,low,low,low,low,0,2,0,0,0,5,37,9,1,0,2,0,0,0,0,0,0,0,,,,,37,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.TopicPartitionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,0,0,1
<Method>org.apache.kafka.common.TopicPartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartitionReplica,TopicPartitionReplica,low,low,low,low,0,3,0,0,0,5,48,15,3,0,3,0,0,0.667,0,0.333,0,0,,,,,48,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.TopicPartitionReplica.public brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionReplica.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,0,5
<Method>org.apache.kafka.common.TopicPartitionReplica.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartitionReplica->brokerId,final brokerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionReplica->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionReplica->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.acl,org.apache.kafka.common.acl,low,low,low-medium,low,,,,,,22,267,,,,,,,,,,,,,7,7,0,267,0,0,0,1,0,22,,,,,,,
org.apache.kafka.common.acl.AccessControlEntry,AccessControlEntry,low,low,low,low,0,2,0,0,0,2,37,5,0,0,2,0,0,0,0,0,0,0,,,,,37,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.acl.AccessControlEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.acl.AccessControlEntry.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.acl.AccessControlEntryData,AccessControlEntryData,low,low,low-medium,low,0,2,0,0,0,2,52,5,0,0,2,0,0,0,0,0,0,0,,,,,52,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.acl.AccessControlEntryData. isUnknown( ): boolean, isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.acl.AccessControlEntryData.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.acl.AccessControlEntryFilter,AccessControlEntryFilter,low,low,low,low,0,3,0,0,0,3,47,7,0,1,3,0,0,0,0,1,0,0,,,,,47,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.acl.AccessControlEntryFilter->ANY,static final ANY : AccessControlEntryFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclBinding,AclBinding,low,low,low,low,0,2,0,0,0,2,29,5,0,0,2,0,0,0,0,0,0,0,,,,,29,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.acl.AclBinding.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.acl.AclBinding.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.acl.AclBindingFilter,AclBindingFilter,low,low,low,low,0,3,0,0,0,3,39,7,0,1,3,0,0,0,0,1,0,0,,,,,39,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.acl.AclBindingFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.acl.AclBindingFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.acl.AclBindingFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.acl.AclBindingFilter->ANY,static final ANY : AclBindingFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclOperation,AclOperation,low,low,low,low,0,4,0,0,0,5,36,11,1,13,3,1,0,1.238,0.25,0.667,0,0,,,,,36,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.acl.AclOperation.private AclOperation( byte ): void,AclOperation( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public static fromCode( byte ): AclOperation,static fromCode( byte ): AclOperation,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Field>org.apache.kafka.common.acl.AclOperation->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALL,static final ALL : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALTER,static final ALTER : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALTER_CONFIGS,static final ALTER_CONFIGS : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ANY,static final ANY : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->CLUSTER_ACTION,static final CLUSTER_ACTION : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->CREATE,static final CREATE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DELETE,static final DELETE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DESCRIBE,static final DESCRIBE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DESCRIBE_CONFIGS,static final DESCRIBE_CONFIGS : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->IDEMPOTENT_WRITE,static final IDEMPOTENT_WRITE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->READ,static final READ : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->UNKNOWN,static final UNKNOWN : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->WRITE,static final WRITE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclPermissionType,AclPermissionType,low,low,low,low,0,4,0,0,0,5,27,11,1,4,3,1,0,1.067,0.25,0.667,0,0,,,,,27,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.acl.AclPermissionType.private AclPermissionType( byte ): void,AclPermissionType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public static fromCode( byte ): AclPermissionType,static fromCode( byte ): AclPermissionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Field>org.apache.kafka.common.acl.AclPermissionType->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->ALLOW,static final ALLOW : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->ANY,static final ANY : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->DENY,static final DENY : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->UNKNOWN,static final UNKNOWN : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.annotation,org.apache.kafka.common.annotation,low,low,low,low,,,,,,0,11,,,,,,,,,,,,,4,1,3,11,0,0,0.75,1,0.75,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability,InterfaceStability,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Evolving,Evolving,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Stable,Stable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Unstable,Unstable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.cache,org.apache.kafka.common.cache,low,low,low,low,,,,,,13,41,,,,,,,,,,,,,3,2,1,41,0,0,0.333,1,0.333,13,,,,,,,
"org.apache.kafka.common.cache.Cache<K,V>",Cache,low,low,low,low,0,4,0,1,0,4,5,4,0,0,4,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.common.cache.LRUCache<K,V>",LRUCache,low,low,low,low,0,5,0,0,0,5,20,18,0,0,5,0,0,0,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.cache.LRUCache$1116;,Lorg.apache.kafka.common.cache.LRUCache$1116;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public LRUCache( int ): void",LRUCache( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.common.cache.SynchronizedCache<K,V>",SynchronizedCache,low,low,low,low,0,4,0,0,0,4,16,12,0,0,4,0,0,0,0.333,0,0,0,,,,,16,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized remove( K ): boolean",synchronized remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized size( ): long",synchronized size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.config,org.apache.kafka.common.config,low,low,medium-high,low,,,,,,23,1090,,,,,,,,,,,,,21,19,2,1090,0,0,0.095,1,0.095,23,,,,,,,
org.apache.kafka.common.config.AbstractConfig,AbstractConfig,low,low,low-medium,low,0,3,0,0,0,5,181,18,0,0,3,0,0,0,0,0,0,0,,,,,181,,,,,,5,,,,,,,
org.apache.kafka.common.config.AbstractConfig.RecordingMap<V>,RecordingMap,low,low,low,low,0,1,0,0,0,1,27,2,1,0,1,0,0,0,0,0,0,0,,,,,27,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.AbstractConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.private logAll( ): void,logAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.public logUnused( ): void,logUnused( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
org.apache.kafka.common.config.Config,Config,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef,ConfigDef,low,low,medium-high,low,0,5,0,0,0,8,569,21,0,0,5,0,0,0,0.533,0,0,0,,,,,569,,,,,,8,,,,,,,
org.apache.kafka.common.config.ConfigDef.ConfigKey,ConfigKey,low,low,low,low,5,1,0,0,0,1,36,2,7,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Importance,Importance,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$50025;,Lorg.apache.kafka.common.config.ConfigDef$50025;,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$52344;,Lorg.apache.kafka.common.config.ConfigDef$52344;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$53360;,Lorg.apache.kafka.common.config.ConfigDef$53360;,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.NonEmptyString,NonEmptyString,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Range,Range,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Recommender,Recommender,low,low,low,low,0,0,0,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigDef.Type,Type,low,low,low,low,0,0,0,0,0,0,2,0,0,9,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidList,ValidList,low,low,low,low,1,0,0,0,0,0,14,0,1,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidString,ValidString,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Validator,Validator,low,low,low,low,0,0,0,1,5,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Width,Width,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.config.ConfigDef.public ConfigDef( ): void,ConfigDef( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public ConfigDef( ConfigDef ): void,ConfigDef( ConfigDef ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public define( ConfigKey ): ConfigDef,define( ConfigKey ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSaslSupport( ): ConfigDef,withClientSaslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSslSupport( ): ConfigDef,withClientSslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.config.ConfigException,ConfigException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.ConfigException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigResource,ConfigResource,low,low,low,low,0,2,0,0,0,2,30,7,1,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigResource.Type,Type,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.config.ConfigResource.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.common.config.ConfigResource.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.ConfigResource->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigValue,ConfigValue,low,low,low-medium,low,0,3,0,0,0,3,60,7,1,0,3,0,0,0,0.333,0,0,0,,,,,60,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.config.ConfigValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( boolean ): void,visible( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.config.ConfigValue->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SaslConfigs,SaslConfigs,low,low,low,low,0,0,0,0,0,0,45,0,0,3,0,0,0,0,0,0,0,0,,,,,45,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN,static final DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_JITTER,static final DEFAULT_KERBEROS_TICKET_RENEW_JITTER : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR,static final DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SslConfigs,SslConfigs,low,low,low-medium,low,0,0,0,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,,,,,74,,,,,,0,,,,,,,
org.apache.kafka.common.config.TopicConfig,TopicConfig,low,low,low-medium,low,0,0,0,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,,,,,117,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.config.internals,org.apache.kafka.common.config.internals,low,low,low,low,,,,,,0,34,,,,,,,,,,,,,1,1,0,34,0,0,0,1,0,0,,,,,,,
org.apache.kafka.common.config.internals.BrokerSecurityConfigs,BrokerSecurityConfigs,low,low,low,low,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.config.types,org.apache.kafka.common.config.types,low,low,low,low,,,,,,1,19,,,,,,,,,,,,,1,1,0,19,0,0,0,1,0,1,,,,,,,
org.apache.kafka.common.config.types.Password,Password,low,low,low,low,0,1,0,0,0,1,19,3,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.types.Password.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.errors,org.apache.kafka.common.errors,low,low,very-high,low,,,,,,24,534,,,,,,,,,,,,,75,75,0,534,0,0,0.027,1,0.027,24,,,,,,,
org.apache.kafka.common.errors.ApiException,ApiException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( ): void,ApiException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.ApiException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthenticationException,AuthenticationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.AuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthorizationException,AuthorizationException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.errors.BrokerNotAvailableException,BrokerNotAvailableException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.BrokerNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ClusterAuthorizationException,ClusterAuthorizationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ClusterAuthorizationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ConcurrentTransactionsException,ConcurrentTransactionsException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ConcurrentTransactionsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ControllerMovedException,ControllerMovedException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ControllerMovedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CoordinatorLoadInProgressException,CoordinatorLoadInProgressException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.CoordinatorLoadInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CoordinatorNotAvailableException,CoordinatorNotAvailableException,low,low,low,low,0,1,0,0,0,1,9,2,0,2,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.CoordinatorNotAvailableException.private CoordinatorNotAvailableException( ): void,CoordinatorNotAvailableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.CoordinatorNotAvailableException->INSTANCE,static final INSTANCE : CoordinatorNotAvailableException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.CoordinatorNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CorruptRecordException,CorruptRecordException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( ): void,CorruptRecordException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.CorruptRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DisconnectException,DisconnectException,low,low,low,low,0,1,0,0,0,1,11,2,0,2,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( ): void,DisconnectException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.DisconnectException->INSTANCE,static final INSTANCE : DisconnectException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.DisconnectException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DuplicateSequenceException,DuplicateSequenceException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.GroupAuthorizationException,GroupAuthorizationException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException,GroupCoordinatorNotAvailableException,low,low,low,low,0,1,0,0,0,1,12,2,0,2,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException.public GroupCoordinatorNotAvailableException( ): void,GroupCoordinatorNotAvailableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException->INSTANCE,static final INSTANCE : GroupCoordinatorNotAvailableException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupLoadInProgressException,GroupLoadInProgressException,low,low,low,low,0,1,0,0,0,1,11,2,0,1,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupLoadInProgressException.public GroupLoadInProgressException( ): void,GroupLoadInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupLoadInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalGenerationException,IllegalGenerationException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( ): void,IllegalGenerationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.IllegalGenerationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalSaslStateException,IllegalSaslStateException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.IllegalSaslStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InconsistentGroupProtocolException,InconsistentGroupProtocolException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InconsistentGroupProtocolException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InterruptException,InterruptException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InterruptException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidCommitOffsetSizeException,InvalidCommitOffsetSizeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidCommitOffsetSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidConfigurationException,InvalidConfigurationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidConfigurationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidFetchSizeException,InvalidFetchSizeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidFetchSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidGroupIdException,InvalidGroupIdException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidGroupIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidMetadataException,InvalidMetadataException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( ): void,InvalidMetadataException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidOffsetException,InvalidOffsetException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidOffsetException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidPartitionsException,InvalidPartitionsException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidPartitionsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidPidMappingException,InvalidPidMappingException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.InvalidReplicaAssignmentException,InvalidReplicaAssignmentException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidReplicaAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidReplicationFactorException,InvalidReplicationFactorException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidReplicationFactorException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequestException,InvalidRequestException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidRequestException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequiredAcksException,InvalidRequiredAcksException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidRequiredAcksException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidSessionTimeoutException,InvalidSessionTimeoutException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidSessionTimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTimestampException,InvalidTimestampException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidTimestampException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTopicException,InvalidTopicException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( ): void,InvalidTopicException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidTopicException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTxnStateException,InvalidTxnStateException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.InvalidTxnTimeoutException,InvalidTxnTimeoutException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidTxnTimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.KafkaStorageException,KafkaStorageException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.KafkaStorageException.public KafkaStorageException( ): void,KafkaStorageException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.KafkaStorageException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LeaderNotAvailableException,LeaderNotAvailableException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.LeaderNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LogDirNotFoundException,LogDirNotFoundException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.LogDirNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NetworkException,NetworkException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( ): void,NetworkException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NetworkException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotControllerException,NotControllerException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotControllerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotCoordinatorException,NotCoordinatorException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotCoordinatorException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotCoordinatorForGroupException,NotCoordinatorForGroupException,low,low,low,low,0,1,0,0,0,1,11,2,0,1,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotCoordinatorForGroupException.public NotCoordinatorForGroupException( ): void,NotCoordinatorForGroupException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotCoordinatorForGroupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException,NotEnoughReplicasAfterAppendException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasException,NotEnoughReplicasException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( ): void,NotEnoughReplicasException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotEnoughReplicasException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotLeaderForPartitionException,NotLeaderForPartitionException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( ): void,NotLeaderForPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotLeaderForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetMetadataTooLarge,OffsetMetadataTooLarge,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( ): void,OffsetMetadataTooLarge( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.OffsetMetadataTooLarge->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetOutOfRangeException,OffsetOutOfRangeException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OperationNotAttemptedException,OperationNotAttemptedException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.OutOfOrderSequenceException,OutOfOrderSequenceException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.PolicyViolationException,PolicyViolationException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.errors.ProducerFencedException,ProducerFencedException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.ReassignmentInProgressException,ReassignmentInProgressException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.errors.RebalanceInProgressException,RebalanceInProgressException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( ): void,RebalanceInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RebalanceInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordBatchTooLargeException,RecordBatchTooLargeException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( ): void,RecordBatchTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordBatchTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordTooLargeException,RecordTooLargeException,low,low,low,low,0,1,0,0,0,1,16,2,0,1,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( ): void,RecordTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ReplicaNotAvailableException,ReplicaNotAvailableException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ReplicaNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RetriableException,RetriableException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( ): void,RetriableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.RetriableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SaslAuthenticationException,SaslAuthenticationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.SaslAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SecurityDisabledException,SecurityDisabledException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.SecurityDisabledException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SerializationException,SerializationException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( ): void,SerializationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.SerializationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SslAuthenticationException,SslAuthenticationException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.SslAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TimeoutException,TimeoutException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( ): void,TimeoutException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.TimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicAuthorizationException,TopicAuthorizationException,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.errors.TopicExistsException,TopicExistsException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.TopicExistsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TransactionCoordinatorFencedException,TransactionCoordinatorFencedException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.TransactionCoordinatorFencedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TransactionalIdAuthorizationException,TransactionalIdAuthorizationException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.UnknownMemberIdException,UnknownMemberIdException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( ): void,UnknownMemberIdException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.UnknownMemberIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownProducerIdException,UnknownProducerIdException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.UnknownServerException,UnknownServerException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( ): void,UnknownServerException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownServerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownTopicOrPartitionException,UnknownTopicOrPartitionException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( ): void,UnknownTopicOrPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownTopicOrPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedForMessageFormatException,UnsupportedForMessageFormatException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedForMessageFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedSaslMechanismException,UnsupportedSaslMechanismException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedSaslMechanismException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedVersionException,UnsupportedVersionException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.UnsupportedVersionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.WakeupException,WakeupException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.WakeupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.header,org.apache.kafka.common.header,low,low,low,low,,,,,,8,10,,,,,,,,,,,,,2,0,2,10,0,0,1,1,1,8,,,,,,,
org.apache.kafka.common.header.Header,Header,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.header.Header.public abstract value( ): byte,value( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.header.Headers,Headers,low,low,low,low,0,0,0,1,0,6,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,6,,,,,,,
<Package>org.apache.kafka.common.header.internals,org.apache.kafka.common.header.internals,low,low,low,low,,,,,,11,146,,,,,,,,,,,,,3,3,0,146,0,0,0,1,0,11,,,,,,,
org.apache.kafka.common.header.internals.RecordHeader,RecordHeader,low,low,low,low,0,2,1,0,0,5,36,10,1,0,2,0,0,0,0,1,0,0,,,,,36,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.header.internals.RecordHeader.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,0
<Method>org.apache.kafka.common.header.internals.RecordHeader.public value( ): byte,value( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,3
<Field>org.apache.kafka.common.header.internals.RecordHeader->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.header.internals.RecordHeaders,RecordHeaders,low,low,low-medium,low,0,4,0,0,0,6,110,10,1,0,4,0,0,0,0,1,0,0,,,,,110,,,,,,6,,,,,,,
org.apache.kafka.common.header.internals.RecordHeaders.FilterByKeyIterator,FilterByKeyIterator,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.header.internals.RecordHeaders$3337;,Lorg.apache.kafka.common.header.internals.RecordHeaders$3337;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.header.internals.RecordHeaders$4265;,Lorg.apache.kafka.common.header.internals.RecordHeaders$4265;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public RecordHeaders( ): void,RecordHeaders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.private canWrite( ): void,canWrite( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public setReadOnly( ): void,setReadOnly( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.header.internals.RecordHeaders->isReadOnly,volatile isReadOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.internals,org.apache.kafka.common.internals,low,low,low-medium,low,,,,,,26,260,,,,,,,,,,,,,8,8,0,260,0,2,0,1,0,26,,,,,,,
org.apache.kafka.common.internals.ClusterResourceListeners,ClusterResourceListeners,low,low,low,low,0,1,0,0,0,1,13,2,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public ClusterResourceListeners( ): void,ClusterResourceListeners( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.internals.FatalExitError,FatalExitError,low,low,low,low,0,3,0,0,0,4,11,8,1,1,3,0,0,1,0.333,0.667,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.internals.FatalExitError.public FatalExitError( ): void,FatalExitError( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.internals.FatalExitError.public FatalExitError( int ): void,FatalExitError( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,1
<Method>org.apache.kafka.common.internals.FatalExitError.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.internals.FatalExitError->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.FatalExitError->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.KafkaFutureImpl<T>,KafkaFutureImpl,low,low,low-medium,low,1,8,1,0,0,12,134,39,2,0,7,0,0,0.25,0.524,0.857,0,0,,,,,134,,,,,,12,,,,,,,
"org.apache.kafka.common.internals.KafkaFutureImpl.Applicant<A,B>",Applicant,low,low,low,low,0,0,0,0,0,0,16,0,1,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.internals.KafkaFutureImpl.SingleWaiter<R>,SingleWaiter,low,low,low,low,1,1,0,0,0,4,32,7,2,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public get( ): T,get( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized cancel( boolean ): boolean,synchronized cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized complete( T ): boolean,synchronized complete( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,0,3
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized getNow( T ): T,synchronized getNow( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,2
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isCancelled( ): boolean,synchronized isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isCompletedExceptionally( ): boolean,synchronized isCompletedExceptionally( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isDone( ): boolean,synchronized isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->done,done : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->value,value : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.PartitionStates<S>,PartitionStates,low,low,low-medium,low,0,3,0,0,0,3,70,5,0,0,3,0,0,0,0,0,0,0,,,,,70,,,,,,3,,,,,,,
org.apache.kafka.common.internals.PartitionStates.PartitionState<S>,PartitionState,low,low,low,low,1,2,0,0,0,2,26,7,1,0,2,0,0,0,0,0,0,0,,,,,26,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public PartitionStates( ): void,PartitionStates( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.internals.Topic,Topic,low,low,low,low,0,0,0,0,0,0,32,0,0,1,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.internals.Topic->MAX_NAME_LENGTH,static final MAX_NAME_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.memory,org.apache.kafka.common.memory,low,low,low-medium,low,,,,,,18,173,,,,,,,,,,,,,6,5,1,173,0,0,0.167,1,0.167,18,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool,GarbageCollectedMemoryPool,low,low,low-medium,low,0,1,0,0,0,1,79,4,2,0,1,0,0,0,0,0,0,0,,,,,79,,,,,,1,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.BufferMetadata,BufferMetadata,low,low,low,low,0,1,0,0,0,1,4,2,1,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.BufferReference,BufferReference,low,low,low,low,0,1,0,0,0,1,24,3,1,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.GarbageCollectionListener,GarbageCollectionListener,low,low,low,low,2,1,0,0,0,4,15,14,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->gcListener,final gcListener : GarbageCollectionListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->alive,volatile alive : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.memory.MemoryPool,MemoryPool,low,low,low,low,0,3,0,1,0,5,25,3,0,1,3,0,0,0,0,1,0,0,,,,,25,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract isOutOfMemory( ): boolean,isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.memory.MemoryPool->NONE,static final NONE : MemoryPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.memory.SimpleMemoryPool,SimpleMemoryPool,low,low,low-medium,low,0,4,0,0,0,6,69,14,3,0,4,0,0,0,0,1,0,0,,,,,69,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public isOutOfMemory( ): boolean,isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.protected maybeRecordEndOfDrySpell( ): void,maybeRecordEndOfDrySpell( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,0,0
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->maxSingleAllocationSize,final maxSingleAllocationSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->sizeBytes,final sizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->strict,final strict : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.metrics,org.apache.kafka.common.metrics,low,low,medium-high,low,,,,,,67,645,,,,,,,,,,,,,18,11,7,645,0,0,0.389,1,0.389,67,,,,,,,
org.apache.kafka.common.metrics.CompoundStat,CompoundStat,low,low,low,low,0,0,0,1,0,1,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.CompoundStat.NamedMeasurable,NamedMeasurable,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.Gauge<T>,Gauge,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.JmxReporter,JmxReporter,low,low,low-medium,low,0,4,1,0,0,8,138,19,0,0,4,0,0,0,0.25,0,0,0,,,,,138,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.JmxReporter.KafkaMbean,KafkaMbean,low,low,low,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.JmxReporter.public JmxReporter( ): void,JmxReporter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.JmxReporter.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private reregister( KafkaMbean ): void,reregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private unregister( KafkaMbean ): void,unregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,0
org.apache.kafka.common.metrics.KafkaMetric,KafkaMetric,low,low,low,low,0,2,1,0,0,3,48,10,0,0,2,0,0,0,0.25,0,0,0,,,,,48,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.metrics.KafkaMetric. measurableValue( long ): double, measurableValue( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
<Method>org.apache.kafka.common.metrics.KafkaMetric.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,0,1,0
org.apache.kafka.common.metrics.Measurable,Measurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.MeasurableStat,MeasurableStat,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.MetricConfig,MetricConfig,low,low,low,low,0,6,0,0,0,7,47,22,3,0,6,0,0,0.667,0.556,0.533,0,0,,,,,47,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricConfig.public MetricConfig( ): void,MetricConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,3
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( ): long,eventWindow( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( long ): MetricConfig,eventWindow( long ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( ): int,samples( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( int ): MetricConfig,samples( int ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public timeWindowMs( ): long,timeWindowMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.MetricConfig->eventWindow,eventWindow : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->samples,samples : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->timeWindowMs,timeWindowMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.MetricValueProvider<T>,MetricValueProvider,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.Metrics,Metrics,low,low,low-medium,low,0,2,0,0,0,5,213,12,0,0,2,0,0,0,0,0,0,0,,,,,213,,,,,,5,,,,,,,
org.apache.kafka.common.metrics.Metrics.ExpireSensorTask,ExpireSensorTask,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$6071;,Lorg.apache.kafka.common.metrics.Metrics$6071;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$6554;,Lorg.apache.kafka.common.metrics.Metrics$6554;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( ): void,Metrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.Metrics.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,0,0,0
org.apache.kafka.common.metrics.MetricsReporter,MetricsReporter,low,low,low,low,0,1,0,1,0,4,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.metrics.Quota,Quota,low,low,low,low,0,7,0,0,0,8,34,20,2,0,5,2,0,0.25,0.429,0.571,0,0,,,,,34,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.metrics.Quota.public Quota( double, boolean ): void","Quota( double, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.Quota.public acceptable( double ): boolean,acceptable( double ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,4
<Method>org.apache.kafka.common.metrics.Quota.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,0,2
<Method>org.apache.kafka.common.metrics.Quota.public isUpperBound( ): boolean,isUpperBound( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public static lowerBound( double ): Quota,static lowerBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.Quota.public static upperBound( double ): Quota,static upperBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.metrics.Quota->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Quota->upper,final upper : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.QuotaViolationException,QuotaViolationException,low,low,low,low,0,2,0,0,0,2,20,4,2,1,2,0,0,1.333,0,1,0,0,,,,,20,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.QuotaViolationException->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->value,final value : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Sensor,Sensor,low,low,low-medium,low,0,9,6,0,0,18,119,34,4,0,8,0,0,0.875,0.531,0.964,0,0,,,,,119,,,,,,18,,,,,,,
org.apache.kafka.common.metrics.Sensor.RecordingLevel,RecordingLevel,low,low,low,low,0,2,0,0,0,5,31,10,1,5,1,1,0,1.167,0,1,0,0,,,,,31,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( ): void,checkQuotas( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( long ): void,checkQuotas( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,10,1,0,0
<Method>org.apache.kafka.common.metrics.Sensor.public hasExpired( ): boolean,hasExpired( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.metrics.Sensor.public record( ): void,record( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,0
<Method>org.apache.kafka.common.metrics.Sensor.public record( double ): void,record( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,0
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long ): void","record( double, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long, boolean ): void","record( double, long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,10,3,3,2
<Method>org.apache.kafka.common.metrics.Sensor.public shouldRecord( ): boolean,shouldRecord( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.metrics.Sensor->inactiveSensorExpirationTimeMs,final inactiveSensorExpirationTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->parents,final parents : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->recordingLevel,final recordingLevel : RecordingLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->lastRecordTime,volatile lastRecordTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Stat,Stat,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.common.metrics.stats,org.apache.kafka.common.metrics.stats,low,low,medium-high,low,,,,,,67,507,,,,,,,,,,,,,24,23,1,507,0,0,0.083,1,0.083,67,,,,,,,
org.apache.kafka.common.metrics.stats.Avg,Avg,low,low,low,low,0,1,0,0,0,1,14,2,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Avg.public Avg( ): void,Avg( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Count,Count,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Count.public Count( ): void,Count( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Frequencies,Frequencies,low,low,low-medium,low,0,2,0,0,0,3,77,8,0,0,2,0,0,0,0.25,0,0,0,,,,,77,,,,,,3,,,,,,,
org.apache.kafka.common.metrics.stats.Frequencies.HistogramSample,HistogramSample,low,low,low,low,0,1,0,0,0,1,9,4,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Frequencies$6087;,Lorg.apache.kafka.common.metrics.stats.Frequencies$6087;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Frequencies. totalCount( ): double, totalCount( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.common.metrics.stats.Frequencies.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.metrics.stats.Frequency,Frequency,low,low,low,low,0,1,0,0,0,1,10,2,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Frequency.public centerValue( ): double,centerValue( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Frequency->centerValue,final centerValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram,Histogram,low,low,low-medium,low,0,8,3,0,0,11,105,27,3,0,5,0,0,0.25,0.467,0,0,0,,,,,105,,,,,,11,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.BinScheme,BinScheme,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.ConstantBinScheme,ConstantBinScheme,low,low,low,low,0,4,0,0,0,9,30,23,5,1,4,0,0,0.556,0.333,0.333,0,0,,,,,30,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.LinearBinScheme,LinearBinScheme,low,low,low,low,0,4,0,0,0,9,27,23,3,0,4,0,0,0.333,0.333,0,0,0,,,,,27,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Histogram.public Histogram( BinScheme ): void,Histogram( BinScheme ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public counts( ): float,counts( ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Histogram.public record( double ): void,record( double ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public value( double ): double,value( double ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,14,1,2,7
<Field>org.apache.kafka.common.metrics.stats.Histogram->count,count : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->hist,final hist : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Max,Max,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Max.public Max( ): void,Max( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Meter,Meter,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Min,Min,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Min.public Min( ): void,Min( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Percentile,Percentile,low,low,low,low,0,1,0,0,0,1,11,2,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentile.public percentile( ): double,percentile( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Percentile->percentile,final percentile : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles,Percentiles,low,low,low-medium,low,0,1,0,0,0,1,66,3,1,0,1,0,0,0,0,0,0,0,,,,,66,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.BucketSizing,BucketSizing,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.HistogramSample,HistogramSample,low,low,low,low,0,1,0,0,0,1,9,4,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Percentiles$2785;,Lorg.apache.kafka.common.metrics.stats.Percentiles$2785;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentiles.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.metrics.stats.Percentiles->buckets,final buckets : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Rate,Rate,low,low,low-medium,low,0,2,0,0,0,9,59,20,0,0,2,0,0,0,0.25,0,0,0,,,,,59,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Rate.SampledTotal,SampledTotal,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( ): void,Rate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.stats.Rate.private convert( long ): double,convert( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,1,0,0
org.apache.kafka.common.metrics.stats.SampledStat,SampledStat,low,low,low-medium,low,0,4,1,0,0,8,66,18,2,0,4,0,0,0.75,0.333,1,0,0,,,,,66,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.stats.SampledStat.Sample,Sample,low,low,low,low,0,2,0,0,0,2,16,9,4,0,2,0,0,0,0.167,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public SampledStat( double ): void,SampledStat( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public current( long ): Sample,current( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected newSample( long ): Sample,newSample( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public oldest( long ): Sample,oldest( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,1,0
<Field>org.apache.kafka.common.metrics.stats.SampledStat->current,current : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.SampledStat->initialValue,initialValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.SimpleRate,SimpleRate,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Sum,Sum,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Sum.public Sum( ): void,Sum( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Total,Total,low,low,low,low,0,2,0,0,0,2,12,4,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( ): void,Total( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( double ): void,Total( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.metrics.stats.Total->total,total : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Value,Value,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Value->value,value : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.network,org.apache.kafka.common.network,low-medium,low,medium-high,low,,,,,,227,1807,,,,,,,,,,,,,29,23,6,1807,0,0,0.207,1,0.207,227,,,,,,,
org.apache.kafka.common.network.Authenticator,Authenticator,low,low,low,low,0,2,0,1,0,3,4,2,0,0,2,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Authenticator.public abstract authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ByteBufferSend,ByteBufferSend,low,low,low,low,0,2,0,0,0,2,29,6,3,0,2,0,0,1,0,1,0,0,,,,,29,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.ByteBufferSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.network.ByteBufferSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.ByteBufferSend->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ChannelBuilder,ChannelBuilder,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ChannelBuilders,ChannelBuilders,low,low,low-medium,low,0,1,0,0,0,1,90,1,0,0,1,0,0,0,0,0,0,0,,,,,90,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilders.private ChannelBuilders( ): void,ChannelBuilders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ChannelState,ChannelState,low,low,low,low,0,2,0,0,0,2,27,4,1,6,2,0,0,0,0.25,1,0,0,,,,,27,,,,,,2,,,,,,,
org.apache.kafka.common.network.ChannelState.State,State,low,low,low,low,0,0,0,0,0,0,8,0,0,7,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.network.ChannelState.public ChannelState( State ): void,ChannelState( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.network.ChannelState.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.network.ChannelState->state,final state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->AUTHENTICATE,static final AUTHENTICATE : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->EXPIRED,static final EXPIRED : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->FAILED_SEND,static final FAILED_SEND : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->LOCAL_CLOSE,static final LOCAL_CLOSE : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->NOT_CONNECTED,static final NOT_CONNECTED : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->READY,static final READY : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.InvalidReceiveException,InvalidReceiveException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.network.KafkaChannel,KafkaChannel,low-medium,low,low-medium,low,0,15,1,0,0,26,130,53,4,0,15,0,0,0.792,0.467,0.974,0,0,,,,,130,,,,,,26,,,,,,,
<Method>org.apache.kafka.common.network.KafkaChannel. mute( ): void, mute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.common.network.KafkaChannel. unmute( ): void, unmute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.common.network.KafkaChannel.public addNetworkThreadTimeNanos( long ): void,addNetworkThreadTimeNanos( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,1,0
<Method>org.apache.kafka.common.network.KafkaChannel.public getAndResetNetworkThreadTimeNanos( ): long,getAndResetNetworkThreadTimeNanos( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.common.network.KafkaChannel.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public hasSend( ): boolean,hasSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isInMutableState( ): boolean,isInMutableState( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public prepare( ): void,prepare( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,11,0,1,0
<Method>org.apache.kafka.common.network.KafkaChannel.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.network.KafkaChannel->disconnected,disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->muted,muted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->networkThreadTimeNanos,networkThreadTimeNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ListenerName,ListenerName,low,low,low,low,0,1,0,0,0,1,26,3,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ListenerName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.network.Mode,Mode,low,low,low,low,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.Mode->CLIENT,static final CLIENT : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Mode->SERVER,static final SERVER : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.MultiSend,MultiSend,low,low,low,low,0,3,0,0,0,4,48,11,2,0,3,0,0,0,0,1,0,0,,,,,48,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.MultiSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.MultiSend.private nextSendOrDone( ): void,nextSendOrDone( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.common.network.MultiSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.MultiSend->size,final size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.MultiSend->totalWritten,totalWritten : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkReceive,NetworkReceive,low,low,low-medium,low,0,5,0,0,0,7,86,16,2,1,5,0,0,0,0,1,0,0,,,,,86,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( ): void,NetworkReceive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public memoryAllocated( ): boolean,memoryAllocated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public requiredMemoryAmountKnown( ): boolean,requiredMemoryAmountKnown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.NetworkReceive->maxSize,final maxSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->requestedBufferSize,requestedBufferSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->UNLIMITED,static final UNLIMITED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkSend,NetworkSend,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.common.network.PlaintextChannelBuilder,PlaintextChannelBuilder,low,low,low,low,0,1,0,0,0,1,36,2,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
org.apache.kafka.common.network.PlaintextChannelBuilder.PlaintextAuthenticator,PlaintextAuthenticator,low,low,low,low,0,3,0,0,0,4,19,9,0,0,3,0,0,0,0,0,0,0,,,,,19,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.PlaintextTransportLayer,PlaintextTransportLayer,low,low,low-medium,low,0,12,0,0,0,13,76,39,0,0,12,0,0,0,0.417,0,0,0,,,,,76,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.network.Receive,Receive,low,low,low,low,0,3,0,1,0,5,6,3,0,0,3,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.network.Receive.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract memoryAllocated( ): boolean,memoryAllocated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract requiredMemoryAmountKnown( ): boolean,requiredMemoryAmountKnown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SaslChannelBuilder,SaslChannelBuilder,low,low,low-medium,low,0,1,0,0,0,2,106,5,1,0,1,0,0,0,0,0,0,0,,,,,106,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Field>org.apache.kafka.common.network.SaslChannelBuilder->handshakeRequestEnable,final handshakeRequestEnable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selectable,Selectable,low,low,low,low,0,5,0,1,0,15,17,5,0,1,5,0,0,0,0.4,1,0,0,,,,,17,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.network.Selectable.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.network.Selectable->USE_DEFAULT_BUFFER_SIZE,static final USE_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selector,Selector,low-medium,low,medium-high,low,0,13,6,0,0,47,593,114,7,1,12,0,0,1,0.375,0.9,0,0,,,,,593,,,,,,47,,,,,,,
org.apache.kafka.common.network.Selector.IdleExpiryManager,IdleExpiryManager,low,low,low,low,0,0,0,0,0,0,25,0,2,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.network.Selector.SelectorMetrics,SelectorMetrics,low,low,low,low,0,1,0,0,0,3,142,5,1,0,1,0,0,0,0,0,0,0,,,,,142,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Selector. isMadeReadProgressLastPoll( ): boolean, isMadeReadProgressLastPoll( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.Selector. isOutOfMemory( ): boolean, isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.Selector.private addToCompletedReceives( ): void,addToCompletedReceives( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,0,0,0
<Method>org.apache.kafka.common.network.Selector.private clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,0,0,1
<Method>org.apache.kafka.common.network.Selector.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,1,1
<Method>org.apache.kafka.common.network.Selector.private hasStagedReceives( ): boolean,hasStagedReceives( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.common.network.Selector.private maybeCloseOldestConnection( long ): void,maybeCloseOldestConnection( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,0,2
<Method>org.apache.kafka.common.network.Selector.public muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public poll( long ): void,poll( long ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,4,36,1,5,6
<Method>org.apache.kafka.common.network.Selector.private select( long ): int,select( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,0
<Method>org.apache.kafka.common.network.Selector.public unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.network.Selector->idleExpiryManager,final idleExpiryManager : IdleExpiryManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->lowMemThreshold,final lowMemThreshold : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->recordTimePerConnection,final recordTimePerConnection : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->sensors,final sensors : SelectorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->madeReadProgressLastPoll,madeReadProgressLastPoll : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->outOfMemory,outOfMemory : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->NO_IDLE_TIMEOUT_MS,static final NO_IDLE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Send,Send,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.Send.public abstract completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SslChannelBuilder,SslChannelBuilder,low,low,low-medium,low,0,1,0,0,0,1,52,2,0,0,1,0,0,0,0,0,0,0,,,,,52,,,,,,1,,,,,,,
org.apache.kafka.common.network.SslChannelBuilder.SslAuthenticator,SslAuthenticator,low,low,low,low,0,3,0,0,0,4,20,9,0,0,3,0,0,0,0,0,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.SslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.SslTransportLayer,SslTransportLayer,medium-high,low,medium-high,low,0,20,8,0,0,64,434,194,1,0,20,0,0,0,0.45,0.848,0,0,,,,,434,,,,,,64,,,,,,,
org.apache.kafka.common.network.SslTransportLayer.State,State,low,low,low,low,0,0,0,0,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.network.SslTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected applicationBufferSize( ): int,applicationBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,21,0,1,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private doHandshake( ): void,doHandshake( ): void,high,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22,5,70,0,6,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public handshake( ): void,handshake( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,24,0,4,2
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFinished( ): void,handshakeFinished( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private maybeThrowSslAuthenticationException( ): void,maybeThrowSslAuthenticationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netReadBufferSize( ): int,netReadBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netWriteBufferSize( ): int,netWriteBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected readFromSocketChannel( ): int,readFromSocketChannel( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected startHandshake( ): void,startHandshake( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,13,0,3,3
<Field>org.apache.kafka.common.network.SslTransportLayer->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.TransportLayer,TransportLayer,low,low,low,low,0,10,0,1,0,14,15,10,0,0,10,0,0,0,0.4,0,0,0,,,,,15,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayer.public abstract addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.network.TransportLayers,TransportLayers,low,low,low,low,0,1,0,0,0,1,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayers.private TransportLayers( ): void,TransportLayers( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.common.protocol,org.apache.kafka.common.protocol,low,low,low-medium,low,,,,,,12,778,,,,,,,,,,,,,5,4,1,778,0,0,0.2,1,0.2,12,,,,,,,
org.apache.kafka.common.protocol.ApiKeys,ApiKeys,low,low,low-medium,low,0,5,3,0,0,6,172,13,4,41,3,2,0,1.889,0.467,0.9,0,0,,,,,172,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.protocol.ApiKeys$17356;,Lorg.apache.kafka.common.protocol.ApiKeys$17356;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.protocol.ApiKeys.public isVersionSupported( short ): boolean,isVersionSupported( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public latestVersion( ): short,latestVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public oldestVersion( ): short,oldestVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public static forId( int ): ApiKeys,static forId( int ): ApiKeys,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,3
<Method>org.apache.kafka.common.protocol.ApiKeys.public static hasId( int ): boolean,static hasId( int ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Field>org.apache.kafka.common.protocol.ApiKeys->clusterAction,final clusterAction : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->minRequiredInterBrokerMagic,final minRequiredInterBrokerMagic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->requiresDelayedAllocation,final requiresDelayedAllocation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ADD_OFFSETS_TO_TXN,static final ADD_OFFSETS_TO_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ADD_PARTITIONS_TO_TXN,static final ADD_PARTITIONS_TO_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ALTER_CONFIGS,static final ALTER_CONFIGS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ALTER_REPLICA_LOG_DIRS,static final ALTER_REPLICA_LOG_DIRS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->API_VERSIONS,static final API_VERSIONS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CONTROLLED_SHUTDOWN,static final CONTROLLED_SHUTDOWN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_ACLS,static final CREATE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_PARTITIONS,static final CREATE_PARTITIONS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_TOPICS,static final CREATE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_ACLS,static final DELETE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_RECORDS,static final DELETE_RECORDS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_TOPICS,static final DELETE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_ACLS,static final DESCRIBE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_CONFIGS,static final DESCRIBE_CONFIGS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_GROUPS,static final DESCRIBE_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_LOG_DIRS,static final DESCRIBE_LOG_DIRS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->END_TXN,static final END_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FETCH,static final FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FIND_COORDINATOR,static final FIND_COORDINATOR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->HEARTBEAT,static final HEARTBEAT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ID_TO_TYPE,static final ID_TO_TYPE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->INIT_PRODUCER_ID,static final INIT_PRODUCER_ID : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->JOIN_GROUP,static final JOIN_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEADER_AND_ISR,static final LEADER_AND_ISR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEAVE_GROUP,static final LEAVE_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_GROUPS,static final LIST_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_OFFSETS,static final LIST_OFFSETS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MAX_API_KEY,static final MAX_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->METADATA,static final METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MIN_API_KEY,static final MIN_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_COMMIT,static final OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FETCH,static final OFFSET_FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FOR_LEADER_EPOCH,static final OFFSET_FOR_LEADER_EPOCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->PRODUCE,static final PRODUCE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SASL_AUTHENTICATE,static final SASL_AUTHENTICATE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SASL_HANDSHAKE,static final SASL_HANDSHAKE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->STOP_REPLICA,static final STOP_REPLICA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SYNC_GROUP,static final SYNC_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->TXN_OFFSET_COMMIT,static final TXN_OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->UPDATE_METADATA,static final UPDATE_METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->WRITE_TXN_MARKERS,static final WRITE_TXN_MARKERS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.CommonFields,CommonFields,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.Errors,Errors,low,low,medium-high,low,0,3,0,0,0,5,465,12,2,62,2,1,0,1.969,0.333,1,0,0,,,,,465,,,,,,5,,,,,,,
org.apache.kafka.common.protocol.Errors.ApiExceptionBuilder,ApiExceptionBuilder,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.Errors.public code( ): short,code( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.Errors.public maybeThrow( ): void,maybeThrow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.common.protocol.Errors.public static forCode( short ): Errors,static forCode( short ): Errors,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,1
<Field>org.apache.kafka.common.protocol.Errors->builder,final builder : ApiExceptionBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->code,final code : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->BROKER_NOT_AVAILABLE,static final BROKER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CLUSTER_AUTHORIZATION_FAILED,static final CLUSTER_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CONCURRENT_TRANSACTIONS,static final CONCURRENT_TRANSACTIONS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->COORDINATOR_LOAD_IN_PROGRESS,static final COORDINATOR_LOAD_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->COORDINATOR_NOT_AVAILABLE,static final COORDINATOR_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CORRUPT_MESSAGE,static final CORRUPT_MESSAGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DUPLICATE_SEQUENCE_NUMBER,static final DUPLICATE_SEQUENCE_NUMBER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_AUTHORIZATION_FAILED,static final GROUP_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_GENERATION,static final ILLEGAL_GENERATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_SASL_STATE,static final ILLEGAL_SASL_STATE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INCONSISTENT_GROUP_PROTOCOL,static final INCONSISTENT_GROUP_PROTOCOL : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_COMMIT_OFFSET_SIZE,static final INVALID_COMMIT_OFFSET_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_CONFIG,static final INVALID_CONFIG : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_FETCH_SIZE,static final INVALID_FETCH_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_GROUP_ID,static final INVALID_GROUP_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PARTITIONS,static final INVALID_PARTITIONS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PRODUCER_EPOCH,static final INVALID_PRODUCER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PRODUCER_ID_MAPPING,static final INVALID_PRODUCER_ID_MAPPING : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICATION_FACTOR,static final INVALID_REPLICATION_FACTOR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICA_ASSIGNMENT,static final INVALID_REPLICA_ASSIGNMENT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUEST,static final INVALID_REQUEST : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUIRED_ACKS,static final INVALID_REQUIRED_ACKS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_SESSION_TIMEOUT,static final INVALID_SESSION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TIMESTAMP,static final INVALID_TIMESTAMP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TOPIC_EXCEPTION,static final INVALID_TOPIC_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TRANSACTION_TIMEOUT,static final INVALID_TRANSACTION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TXN_STATE,static final INVALID_TXN_STATE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->KAFKA_STORAGE_ERROR,static final KAFKA_STORAGE_ERROR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LEADER_NOT_AVAILABLE,static final LEADER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LOG_DIR_NOT_FOUND,static final LOG_DIR_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->MESSAGE_TOO_LARGE,static final MESSAGE_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NETWORK_EXCEPTION,static final NETWORK_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NONE,static final NONE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_CONTROLLER,static final NOT_CONTROLLER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_COORDINATOR,static final NOT_COORDINATOR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS,static final NOT_ENOUGH_REPLICAS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS_AFTER_APPEND,static final NOT_ENOUGH_REPLICAS_AFTER_APPEND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_LEADER_FOR_PARTITION,static final NOT_LEADER_FOR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_METADATA_TOO_LARGE,static final OFFSET_METADATA_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_OUT_OF_RANGE,static final OFFSET_OUT_OF_RANGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OPERATION_NOT_ATTEMPTED,static final OPERATION_NOT_ATTEMPTED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OUT_OF_ORDER_SEQUENCE_NUMBER,static final OUT_OF_ORDER_SEQUENCE_NUMBER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->POLICY_VIOLATION,static final POLICY_VIOLATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REASSIGNMENT_IN_PROGRESS,static final REASSIGNMENT_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REBALANCE_IN_PROGRESS,static final REBALANCE_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->RECORD_LIST_TOO_LARGE,static final RECORD_LIST_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REPLICA_NOT_AVAILABLE,static final REPLICA_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REQUEST_TIMED_OUT,static final REQUEST_TIMED_OUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->SASL_AUTHENTICATION_FAILED,static final SASL_AUTHENTICATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->SECURITY_DISABLED,static final SECURITY_DISABLED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->STALE_CONTROLLER_EPOCH,static final STALE_CONTROLLER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_ALREADY_EXISTS,static final TOPIC_ALREADY_EXISTS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_AUTHORIZATION_FAILED,static final TOPIC_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TRANSACTIONAL_ID_AUTHORIZATION_FAILED,static final TRANSACTIONAL_ID_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TRANSACTION_COORDINATOR_FENCED,static final TRANSACTION_COORDINATOR_FENCED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_PRODUCER_ID,static final UNKNOWN_PRODUCER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_SERVER_ERROR,static final UNKNOWN_SERVER_ERROR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_TOPIC_OR_PARTITION,static final UNKNOWN_TOPIC_OR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_FOR_MESSAGE_FORMAT,static final UNSUPPORTED_FOR_MESSAGE_FORMAT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_SASL_MECHANISM,static final UNSUPPORTED_SASL_MECHANISM : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_VERSION,static final UNSUPPORTED_VERSION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Protocol,Protocol,low,low,low-medium,low,0,0,0,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,,,,,115,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.protocol.types,org.apache.kafka.common.protocol.types,low,low,medium-high,low,,,,,,14,774,,,,,,,,,,,,,14,14,0,774,0,0,0.143,1,0.143,14,,,,,,,
org.apache.kafka.common.protocol.types.ArrayOf,ArrayOf,low,low,low-medium,low,0,1,0,0,0,1,61,3,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.protocol.types.ArrayOf->nullable,final nullable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.BoundField,BoundField,low,low,low,low,0,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.BoundField->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Field,Field,low,low,low,low,0,0,0,0,6,0,42,0,1,0,0,0,0,0,0,0,0,0,,,,,42,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int16,Int16,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int32,Int32,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int64,Int64,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int8,Int8,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.NullableStr,NullableStr,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field.Str,Str,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->hasDefaultValue,final hasDefaultValue : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Schema,Schema,low,low,low-medium,low,0,2,0,0,0,2,92,5,0,0,2,0,0,0,0.25,0,0,0,,,,,92,,,,,,2,,,,,,,
org.apache.kafka.common.protocol.types.Schema.Visitor,Visitor,low,low,low,low,0,1,0,0,0,1,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Schema.public numFields( ): int,numFields( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Schema.public walk( Visitor ): void,walk( Visitor ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.protocol.types.SchemaException,SchemaException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.SchemaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Struct,Struct,low,low,low-medium,low,0,4,0,0,0,9,219,22,0,0,4,0,0,0,0,0,0,0,,,,,219,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Struct.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,16,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.protocol.types.Type,Type,low,low,medium-high,low,0,1,0,0,0,1,345,2,0,13,1,0,0,0,0,0,0,0,,,,,345,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Type.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.protocol.types.Type->BOOLEAN,static final BOOLEAN : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->BYTES,static final BYTES : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT16,static final INT16 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT32,static final INT32 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT64,static final INT64 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT8,static final INT8 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_BYTES,static final NULLABLE_BYTES : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_STRING,static final NULLABLE_STRING : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->RECORDS,static final RECORDS : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->STRING,static final STRING : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->UNSIGNED_INT32,static final UNSIGNED_INT32 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->VARINT,static final VARINT : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->VARLONG,static final VARLONG : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.record,org.apache.kafka.common.record,low-medium,low,very-high,low,,,,,,443,3424,,,,,,,,,,,,,48,43,5,3424,0,1,0.229,1,0.229,443,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch,AbstractLegacyRecordBatch,low-medium,low,medium-high,low,0,23,1,0,2,23,346,69,0,0,23,0,0,0,0.478,0,0,0,,,,,346,,,,,,23,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.BasicLegacyRecordBatch,BasicLegacyRecordBatch,low,low,low,low,0,2,0,1,0,3,26,8,1,0,2,0,0,0,0,0,0,0,,,,,26,,,,,,3,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.ByteBufferLegacyRecordBatch,ByteBufferLegacyRecordBatch,low,low,low,low,0,4,0,1,0,5,48,12,0,0,4,0,0,0,0.5,0,0,0,,,,,48,,,,,,5,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.DataLogInputStream,DataLogInputStream,low,low,low,low,1,1,0,0,0,5,25,17,1,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,5,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.DeepRecordsIterator,DeepRecordsIterator,low,low,low,low,0,1,0,0,0,1,70,2,2,0,1,0,0,0,0,0,0,0,,,,,70,,,,,,1,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.LegacyFileChannelRecordBatch,LegacyFileChannelRecordBatch,low,low,low,low,0,10,0,0,0,10,43,30,0,0,10,0,0,0,0,0,0,0,,,,,43,,,,,,10,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.AbstractLegacyRecordBatch$6301;,Lorg.apache.kafka.common.record.AbstractLegacyRecordBatch$6301;,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public lastSequence( ): int,lastSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public sequence( ): int,sequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.record.AbstractRecordBatch,AbstractRecordBatch,low,low,low,low,0,3,0,0,0,3,10,9,0,0,3,0,0,0,0,0,0,0,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public nextOffset( ): long,nextOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.record.AbstractRecords,AbstractRecords,low,low,low-medium,low,0,2,0,0,0,6,133,12,0,0,2,0,0,0,0,0,0,0,,,,,133,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.AbstractRecords$6749;,Lorg.apache.kafka.common.record.AbstractRecords$6749;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.record.AbstractRecords.RecordBatchAndRecords,RecordBatchAndRecords,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.AbstractRecords.public hasCompatibleMagic( byte ): boolean,hasCompatibleMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,0
<Method>org.apache.kafka.common.record.AbstractRecords.public hasMatchingMagic( byte ): boolean,hasMatchingMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,0
org.apache.kafka.common.record.BufferSupplier,BufferSupplier,low,low,low,low,0,2,0,0,1,2,35,3,0,1,1,1,0,0,0,1,0,0,,,,,35,,,,,,2,,,,,,,
org.apache.kafka.common.record.BufferSupplier.DefaultSupplier,DefaultSupplier,low,low,low,low,0,1,0,1,0,1,20,3,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.BufferSupplier.public abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.record.BufferSupplier.public static create( ): BufferSupplier,static create( ): BufferSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.record.BufferSupplier->NO_CACHING,static final NO_CACHING : BufferSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ByteBufferLogInputStream,ByteBufferLogInputStream,low,low,low,low,0,0,0,0,0,0,28,0,1,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.record.ByteBufferLogInputStream->maxMessageSize,final maxMessageSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionRatioEstimator,CompressionRatioEstimator,low,low,low,low,0,1,0,0,0,2,40,5,0,2,0,1,0,0,0,0,0,0,,,,,40,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.CompressionRatioEstimator.private static initialCompressionRatio( ): float,static initialCompressionRatio( ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Field>org.apache.kafka.common.record.CompressionRatioEstimator->COMPRESSION_RATIO_DETERIORATE_STEP,static final COMPRESSION_RATIO_DETERIORATE_STEP : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionRatioEstimator->COMPRESSION_RATIO_IMPROVING_STEP,static final COMPRESSION_RATIO_IMPROVING_STEP : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionType,CompressionType,low,low,low-medium,low,0,1,0,0,0,5,94,12,2,4,0,1,0,0,0,0,0,0,,,,,94,,,,,,5,,,,,,,
org.apache.kafka.common.record.CompressionType.SnappyConstructors,SnappyConstructors,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.CompressionType.public static forId( int ): CompressionType,static forId( int ): CompressionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,0,4
<Field>org.apache.kafka.common.record.CompressionType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->rate,final rate : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->GZIP,static final GZIP : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->LZ4,static final LZ4 : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->NONE,static final NONE : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->SNAPPY,static final SNAPPY : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ControlRecordType,ControlRecordType,low,low,low,low,0,2,0,0,0,4,42,10,1,5,1,1,0,1.333,0,0,0,0,,,,,42,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.record.ControlRecordType.private ControlRecordType( short ): void,ControlRecordType( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.ControlRecordType.public static fromTypeId( short ): ControlRecordType,static fromTypeId( short ): ControlRecordType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,3
<Field>org.apache.kafka.common.record.ControlRecordType->type,final type : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->ABORT,static final ABORT : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->COMMIT,static final COMMIT : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->CURRENT_CONTROL_RECORD_KEY_SIZE,static final CURRENT_CONTROL_RECORD_KEY_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->CURRENT_CONTROL_RECORD_KEY_VERSION,static final CURRENT_CONTROL_RECORD_KEY_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->UNKNOWN,static final UNKNOWN : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ConvertedRecords<T>,ConvertedRecords,low,low,low,low,1,1,0,0,0,1,10,2,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.ConvertedRecords<T>.public records( ): T,records( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.ConvertedRecords<T>->records,final records : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.DefaultRecord,DefaultRecord,low,low,medium-high,low-medium,0,15,0,0,0,19,303,54,5,2,14,1,0,0.914,0.7,0.952,0,0,,,,,303,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.record.DefaultRecord.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,0,0,7
<Method>org.apache.kafka.common.record.DefaultRecord.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public sequence( ): int,sequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.record.DefaultRecord.public static computePartialChecksum( long, int, int ): long","static computePartialChecksum( long, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Field>org.apache.kafka.common.record.DefaultRecord->attributes,final attributes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->sequence,final sequence : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->sizeInBytes,final sizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->MAX_RECORD_OVERHEAD,static final MAX_RECORD_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->NULL_VARINT_SIZE_BYTES,static final NULL_VARINT_SIZE_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch,DefaultRecordBatch,low-medium,low,medium-high,low-medium,0,24,9,0,0,29,387,75,0,32,23,1,0,1.02,0.625,0.982,0,0,,,,,387,,,,,,29,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch.DefaultFileChannelRecordBatch,DefaultFileChannelRecordBatch,low,low,low,low,0,11,0,0,0,11,46,33,0,0,11,0,0,0,0,0,0,0,,,,,46,,,,,,11,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.DefaultRecordBatch$10794;,Lorg.apache.kafka.common.record.DefaultRecordBatch$10794;,low,low,low,low,0,0,0,1,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.DefaultRecordBatch$12217;,Lorg.apache.kafka.common.record.DefaultRecordBatch$12217;,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch.RecordIterator,RecordIterator,low,low,low,low,0,10,6,0,2,6,35,17,5,0,4,0,0,0.8,0,0.667,0,0,,,,,35,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private count( ): int,count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,5,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public firstTimestamp( ): long,firstTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private lastOffsetDelta( ): int,lastOffsetDelta( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public lastSequence( ): int,lastSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public setLastOffset( long ): void,setLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public setPartitionLeaderEpoch( int ): void,setPartitionLeaderEpoch( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.static incrementSequence( int, int ): int","static incrementSequence( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,0,0
<Field>org.apache.kafka.common.record.DefaultRecordBatch->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->ATTRIBUTE_LENGTH,static final ATTRIBUTE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_OFFSET_LENGTH,static final BASE_OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_OFFSET_OFFSET,static final BASE_OFFSET_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_SEQUENCE_LENGTH,static final BASE_SEQUENCE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_SEQUENCE_OFFSET,static final BASE_SEQUENCE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CONTROL_FLAG_MASK,static final CONTROL_FLAG_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->FIRST_TIMESTAMP_LENGTH,static final FIRST_TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->FIRST_TIMESTAMP_OFFSET,static final FIRST_TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LAST_OFFSET_DELTA_LENGTH,static final LAST_OFFSET_DELTA_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LAST_OFFSET_DELTA_OFFSET,static final LAST_OFFSET_DELTA_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LENGTH_LENGTH,static final LENGTH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LENGTH_OFFSET,static final LENGTH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAX_TIMESTAMP_LENGTH,static final MAX_TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAX_TIMESTAMP_OFFSET,static final MAX_TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PARTITION_LEADER_EPOCH_LENGTH,static final PARTITION_LEADER_EPOCH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PARTITION_LEADER_EPOCH_OFFSET,static final PARTITION_LEADER_EPOCH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_EPOCH_LENGTH,static final PRODUCER_EPOCH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_EPOCH_OFFSET,static final PRODUCER_EPOCH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_ID_LENGTH,static final PRODUCER_ID_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_ID_OFFSET,static final PRODUCER_ID_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_COUNT_LENGTH,static final RECORDS_COUNT_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_COUNT_OFFSET,static final RECORDS_COUNT_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_OFFSET,static final RECORDS_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORD_BATCH_OVERHEAD,static final RECORD_BATCH_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->TIMESTAMP_TYPE_MASK,static final TIMESTAMP_TYPE_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->TRANSACTIONAL_FLAG_MASK,static final TRANSACTIONAL_FLAG_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.EndTransactionMarker,EndTransactionMarker,low,low,low-medium,low,0,2,0,0,0,3,63,7,1,3,2,0,0,1.5,0,0,0,0,,,,,63,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.EndTransactionMarker.public coordinatorEpoch( ): int,coordinatorEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.EndTransactionMarker.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Field>org.apache.kafka.common.record.EndTransactionMarker->coordinatorEpoch,final coordinatorEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_MARKER_VALUE_SIZE,static final CURRENT_END_TXN_MARKER_VALUE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_MARKER_VERSION,static final CURRENT_END_TXN_MARKER_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_SCHEMA_RECORD_SIZE,static final CURRENT_END_TXN_SCHEMA_RECORD_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileLogInputStream,FileLogInputStream,low,low,low-medium,low,0,2,1,0,0,5,136,21,2,0,1,0,0,0,0,0,0,0,,,,,136,,,,,,5,,,,,,,
org.apache.kafka.common.record.FileLogInputStream.FileChannelRecordBatch,FileChannelRecordBatch,low,low,low,low,0,9,0,0,0,10,104,28,4,0,9,0,0,0.833,0,0.929,0,0,,,,,104,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.record.FileLogInputStream.public nextBatch( ): FileChannelRecordBatch,nextBatch( ): FileChannelRecordBatch,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,21,0,1,8
<Field>org.apache.kafka.common.record.FileLogInputStream->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->position,position : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileRecords,FileRecords,low-medium,low,low-medium,low,0,11,4,0,0,27,232,57,3,0,11,0,0,0,0.455,1,0,0,,,,,232,,,,,,27,,,,,,,
org.apache.kafka.common.record.FileRecords.LogOffsetPosition,LogOffsetPosition,low,low,low,low,0,2,0,0,0,2,31,10,3,0,2,0,0,0,0.333,0,0,0,,,,,31,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.FileRecords$14028;,Lorg.apache.kafka.common.record.FileRecords$14028;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.common.record.FileRecords.TimestampAndOffset,TimestampAndOffset,low,low,low,low,0,2,0,0,0,2,24,8,2,0,2,0,0,0,0.25,0,0,0,,,,,24,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.FileRecords.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.common.record.FileRecords.public closeHandlers( ): void,closeHandlers( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public deleteIfExists( ): boolean,deleteIfExists( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public largestTimestampAfter( int ): TimestampAndOffset,largestTimestampAfter( int ): TimestampAndOffset,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,0,0
"<Method>org.apache.kafka.common.record.FileRecords.public read( int, int ): FileRecords","read( int, int ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,2,2,4
"<Method>org.apache.kafka.common.record.FileRecords.public searchForOffsetWithSize( long, int ): LogOffsetPosition","searchForOffsetWithSize( long, int ): LogOffsetPosition",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.record.FileRecords.public searchForTimestamp( long, int, long ): TimestampAndOffset","searchForTimestamp( long, int, long ): TimestampAndOffset",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,8,3,0,0
<Method>org.apache.kafka.common.record.FileRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.FileRecords.public trim( ): void,trim( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.record.FileRecords.public truncateTo( int ): int,truncateTo( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,1,0
<Field>org.apache.kafka.common.record.FileRecords->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->isSlice,final isSlice : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->start,final start : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.InvalidRecordException,InvalidRecordException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.record.InvalidRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockInputStream,KafkaLZ4BlockInputStream,low-medium,low,low-medium,low-medium,0,11,2,0,0,39,141,117,3,0,11,0,0,0.667,0.659,0.917,0,0,,,,,141,,,,,,39,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public available( ): int,available( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public ignoreFlagDescriptorChecksum( ): boolean,ignoreFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public mark( int ): void,mark( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public markSupported( ): boolean,markSupported( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,2,2
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,3,3,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readBlock( ): void,readBlock( ): void,low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,4,46,0,0,5
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readHeader( ): void,readHeader( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,0,0,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public skip( long ): long,skip( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,3,2
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->ignoreFlagDescriptorChecksum,final ignoreFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->maxBlockSize,maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream,KafkaLZ4BlockOutputStream,low,low,low-medium,low,0,12,6,0,0,20,199,72,8,7,9,0,0,0.942,0.556,0.8,1,0,,,,,199,,,,,,20,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.BD,BD,low,low,low,low,0,7,1,0,0,11,29,25,3,0,6,1,0,0.222,0.524,0.9,0,0,,,,,29,,,,,,11,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.FLG,FLG,low,low,low,low,0,11,1,0,0,15,58,50,6,1,10,1,0,0.732,0.682,0.861,0,0,,,,,58,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,2,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private ensureNotFinished( ): void,ensureNotFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,1,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public useBrokenFlagDescriptorChecksum( ): boolean,useBrokenFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,2,10
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,4
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeBlock( ): void,writeBlock( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,0,1,11
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeEndMark( ): void,writeEndMark( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeHeader( ): void,writeHeader( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,2,17
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bd,final bd : BD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->buffer,final buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->compressedBuffer,final compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->flg,final flg : FLG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->useBrokenFlagDescriptorChecksum,final useBrokenFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_1MB,static final BLOCKSIZE_1MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_256KB,static final BLOCKSIZE_256KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_4MB,static final BLOCKSIZE_4MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_64KB,static final BLOCKSIZE_64KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_FRAME_INCOMPRESSIBLE_MASK,static final LZ4_FRAME_INCOMPRESSIBLE_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_MAX_HEADER_LENGTH,static final LZ4_MAX_HEADER_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->MAGIC,static final MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LegacyRecord,LegacyRecord,low-medium,low,low-medium,low-medium,0,20,9,0,0,33,276,69,0,21,14,6,0,1.017,0.637,0.983,0,0,,,,,276,,,,,,33,,,,,,,
<Method>org.apache.kafka.common.record.LegacyRecord.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LegacyRecord.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LegacyRecord.public computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.LegacyRecord.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,5,1
<Method>org.apache.kafka.common.record.LegacyRecord.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.public hasNullValue( ): boolean,hasNullValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.LegacyRecord.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.LegacyRecord.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
<Method>org.apache.kafka.common.record.LegacyRecord.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LegacyRecord.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static computeChecksum( byte, byte, long, byte, byte ): long","static computeChecksum( byte, byte, long, byte, byte ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static create( byte, long, byte, byte ): LegacyRecord","static create( byte, long, byte, byte ): LegacyRecord",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
<Method>org.apache.kafka.common.record.LegacyRecord.static headerSize( byte ): int,static headerSize( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
<Method>org.apache.kafka.common.record.LegacyRecord.private static keyOffset( byte ): int,static keyOffset( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
<Method>org.apache.kafka.common.record.LegacyRecord.static recordOverhead( byte ): int,static recordOverhead( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
"<Method>org.apache.kafka.common.record.LegacyRecord.public static recordSize( byte, int, int ): int","static recordSize( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,1,1
<Method>org.apache.kafka.common.record.LegacyRecord.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.private valueSizeOffset( ): int,valueSizeOffset( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,2
<Field>org.apache.kafka.common.record.LegacyRecord->ATTRIBUTES_LENGTH,static final ATTRIBUTES_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->HEADER_SIZE_V0,static final HEADER_SIZE_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->HEADER_SIZE_V1,static final HEADER_SIZE_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_OFFSET_V0,static final KEY_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_OFFSET_V1,static final KEY_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_LENGTH,static final KEY_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_OFFSET_V0,static final KEY_SIZE_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_OFFSET_V1,static final KEY_SIZE_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->NO_TIMESTAMP,static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->RECORD_OVERHEAD_V0,static final RECORD_OVERHEAD_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->RECORD_OVERHEAD_V1,static final RECORD_OVERHEAD_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_LENGTH,static final TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_OFFSET,static final TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_TYPE_MASK,static final TIMESTAMP_TYPE_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->VALUE_SIZE_LENGTH,static final VALUE_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LogInputStream<T>,LogInputStream,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.LogInputStream<T>.public abstract nextBatch( ): T,nextBatch( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.record.MemoryRecords,MemoryRecords,low,low,medium-high,low,0,3,0,0,0,5,392,14,1,1,3,0,0,0,0,1,0,0,,,,,392,,,,,,5,,,,,,,
org.apache.kafka.common.record.MemoryRecords.FilterResult,FilterResult,low,low,low,low,0,0,0,0,0,0,25,0,7,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.record.MemoryRecords.RecordFilter,RecordFilter,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.MemoryRecords.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecords.public validBytes( ): int,validBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,0,3
<Field>org.apache.kafka.common.record.MemoryRecords->EMPTY,static final EMPTY : MemoryRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->validBytes,validBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder,MemoryRecordsBuilder,medium-high,low,medium-high,medium-high,0,30,7,0,0,67,372,165,20,1,30,0,0,0.899,0.761,0.9,0,0,,,,,372,,,,,,67,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder.RecordsInfo,RecordsInfo,low,low,low,low,0,1,0,0,0,1,7,4,2,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public abort( ): void,abort( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,19,0,4,9
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public closeForRecordAppends( ): void,closeForRecordAppends( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public compressionRatio( ): double,compressionRatio( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private ensureOpenForRecordAppend( ): void,ensureOpenForRecordAppend( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private ensureOpenForRecordBatchWrite( ): void,ensureOpenForRecordBatchWrite( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private estimatedBytesWritten( ): int,estimatedBytesWritten( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,6
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public estimatedSizeInBytes( ): int,estimatedSizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public info( ): RecordsInfo,info( ): RecordsInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,17,0,0,7
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,3
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private nextSequentialOffset( ): long,nextSequentialOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public numRecords( ): int,numRecords( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public overrideLastOffset( long ): void,overrideLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private recordWritten( long, long, int ): void","recordWritten( long, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,3,0,9
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public reopenAndRewriteProducerState( long, short, int, boolean ): void","reopenAndRewriteProducerState( long, short, int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,0,5
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public setEstimatedCompressionRatio( float ): void,setEstimatedCompressionRatio( float ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public setProducerState( long, short, int, boolean ): void","setProducerState( long, short, int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,1,4
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private toInnerOffset( long ): long,toInnerOffset( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public uncompressedBytesWritten( ): int,uncompressedBytesWritten( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private validateProducerState( ): void,validateProducerState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,10,0,0,8
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private writeDefaultBatchHeader( ): int,writeDefaultBatchHeader( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,18,0,1,14
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private writeLegacyCompressedWrapperHeader( ): int,writeLegacyCompressedWrapperHeader( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,12,0,1,6
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->aborted,aborted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->actualCompressionRatio,actualCompressionRatio : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->appendStreamIsClosed,appendStreamIsClosed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->baseSequence,baseSequence : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->estimatedCompressionRatio,estimatedCompressionRatio : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->baseOffset,final baseOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->batchHeaderSizeInBytes,final batchHeaderSizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->initialPosition,final initialPosition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->isControlBatch,final isControlBatch : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->logAppendTime,final logAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->magic,final magic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->partitionLeaderEpoch,final partitionLeaderEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->writeLimit,final writeLimit : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->isTransactional,isTransactional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->maxTimestamp,maxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->numRecords,numRecords : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->offsetOfMaxTimestamp,offsetOfMaxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->producerEpoch,producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->producerId,producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->COMPRESSION_RATE_ESTIMATION_FACTOR,static final COMPRESSION_RATE_ESTIMATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->uncompressedRecordsSizeInBytes,uncompressedRecordsSizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MutableRecordBatch,MutableRecordBatch,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract setLastOffset( long ): void,setLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract setPartitionLeaderEpoch( int ): void,setPartitionLeaderEpoch( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.record.Record,Record,low,low,low,low,0,12,0,1,0,17,19,12,0,0,12,0,0,0,0.458,0,0,0,,,,,19,,,,,,17,,,,,,,
<Method>org.apache.kafka.common.record.Record.public abstract ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract sequence( ): int,sequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.record.RecordBatch,RecordBatch,low-medium,low,low,low,0,18,0,1,0,23,33,18,0,9,18,0,0,0,0,1,0,0,,,,,33,,,,,,23,,,,,,,
<Method>org.apache.kafka.common.record.RecordBatch.public abstract baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract lastSequence( ): int,lastSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract nextOffset( ): long,nextOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.record.RecordBatch->CURRENT_MAGIC_VALUE,static final CURRENT_MAGIC_VALUE : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V0,static final MAGIC_VALUE_V0 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V1,static final MAGIC_VALUE_V1 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V2,static final MAGIC_VALUE_V2 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PARTITION_LEADER_EPOCH,static final NO_PARTITION_LEADER_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PRODUCER_EPOCH,static final NO_PRODUCER_EPOCH : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PRODUCER_ID,static final NO_PRODUCER_ID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_SEQUENCE,static final NO_SEQUENCE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_TIMESTAMP,static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordBatchIterator<T>,RecordBatchIterator,low,low,low,low,0,1,0,0,0,3,13,9,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.RecordBatchIterator<T>.protected makeNext( ): T,makeNext( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,0,0
org.apache.kafka.common.record.Records,Records,low,low,low,low,0,3,0,1,0,7,16,3,0,8,3,0,0,0,0.167,1,0,0,,,,,16,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.record.Records.public abstract hasCompatibleMagic( byte ): boolean,hasCompatibleMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Records.public abstract hasMatchingMagic( byte ): boolean,hasMatchingMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Records.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.record.Records->HEADER_SIZE_UP_TO_MAGIC,static final HEADER_SIZE_UP_TO_MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->LOG_OVERHEAD,static final LOG_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_LENGTH,static final OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_OFFSET,static final OFFSET_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_LENGTH,static final SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_OFFSET,static final SIZE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordsProcessingStats,RecordsProcessingStats,low,low,low,low,0,4,0,0,0,4,19,10,3,1,4,0,0,0.833,0.5,0.5,0,0,,,,,19,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.record.RecordsProcessingStats.public RecordsProcessingStats( long, int, long ): void","RecordsProcessingStats( long, int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.record.RecordsProcessingStats.public conversionTimeNanos( ): long,conversionTimeNanos( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordsProcessingStats.public numRecordsConverted( ): int,numRecordsConverted( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordsProcessingStats.public temporaryMemoryBytes( ): long,temporaryMemoryBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.RecordsProcessingStats->conversionTimeNanos,final conversionTimeNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsProcessingStats->numRecordsConverted,final numRecordsConverted : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsProcessingStats->temporaryMemoryBytes,final temporaryMemoryBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsProcessingStats->EMPTY,static final EMPTY : RecordsProcessingStats,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.SimpleRecord,SimpleRecord,low,low,low-medium,low,0,6,0,0,0,8,57,17,1,0,6,0,0,0,0.333,0.933,0,0,,,,,57,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( byte ): void,SimpleRecord( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( byte, byte ): void","SimpleRecord( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, byte ): void","SimpleRecord( long, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, byte, byte ): void","SimpleRecord( long, byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.common.record.SimpleRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,0,2
<Method>org.apache.kafka.common.record.SimpleRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.SimpleRecord->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.TimestampType,TimestampType,low,low,low,low,0,0,0,0,0,0,15,0,1,3,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->CREATE_TIME,static final CREATE_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->LOG_APPEND_TIME,static final LOG_APPEND_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->NO_TIMESTAMP_TYPE,static final NO_TIMESTAMP_TYPE : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.requests,org.apache.kafka.common.requests,low-medium,low,very-high,low,,,,,,247,7994,,,,,,,,,,,,,166,166,0,7994,0,0,0.024,1,0.024,247,,,,,,,
org.apache.kafka.common.requests.AbstractRequest,AbstractRequest,low,low,low-medium,low,0,2,0,0,0,2,127,4,1,0,2,0,0,0,0.25,0,0,0,,,,,127,,,,,,2,,,,,,,
org.apache.kafka.common.requests.AbstractRequest.Builder<T>,Builder,low,low,low,low,0,4,2,0,0,4,21,7,2,0,4,0,0,1,0.375,1,0,0,,,,,21,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.AbstractRequest.public AbstractRequest( short ): void,AbstractRequest( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.AbstractRequest.public version( ): short,version( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AbstractRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AbstractRequestResponse,AbstractRequestResponse,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AbstractResponse,AbstractResponse,low,low,low-medium,low,0,0,0,0,0,0,106,0,0,1,0,0,0,0,0,0,0,0,,,,,106,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.requests.AbstractResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnRequest,AddOffsetsToTxnRequest,low,low,low-medium,low,0,2,0,0,0,2,71,4,2,0,2,0,0,1,0,1,0,0,,,,,71,,,,,,2,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,26,3,2,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnResponse,AddOffsetsToTxnResponse,low,low,low,low,0,1,0,0,0,1,35,2,1,0,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnRequest,AddPartitionsToTxnRequest,low,low,low-medium,low,0,2,0,0,0,2,95,4,2,0,2,0,0,1,0,1,0,0,,,,,95,,,,,,2,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,26,3,2,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnResponse,AddPartitionsToTxnResponse,low,low,low-medium,low,0,1,0,0,0,1,61,2,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest,AlterConfigsRequest,low,low,low-medium,low,0,1,0,0,0,1,112,2,1,0,1,0,0,0,0,0,0,0,,,,,112,,,,,,1,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,10,3,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.Config,Config,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.ConfigEntry,ConfigEntry,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->validateOnly,final validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterConfigsResponse,AlterConfigsResponse,low,low,low-medium,low,0,1,0,0,0,1,52,2,1,0,1,0,0,0,0,0,0,0,,,,,52,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterReplicaLogDirsRequest,AlterReplicaLogDirsRequest,low,low,low-medium,low,0,0,0,0,0,0,84,0,0,0,0,0,0,0,0,0,0,0,,,,,84,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,16,3,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.common.requests.AlterReplicaLogDirsResponse,AlterReplicaLogDirsResponse,low,low,low-medium,low,0,1,0,0,0,1,57,2,1,0,1,0,0,0,0,0,0,0,,,,,57,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiError,ApiError,low,low,low,low,0,2,1,0,0,2,37,4,0,1,2,0,0,0,0,1,0,0,,,,,37,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ApiError.public isFailure( ): boolean,isFailure( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.ApiError.public isSuccess( ): boolean,isSuccess( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.ApiError->NONE,static final NONE : ApiError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiVersionsRequest,ApiVersionsRequest,low,low,low,low,0,2,0,0,0,2,42,4,0,0,2,0,0,0,0.25,0,0,0,,,,,42,,,,,,2,,,,,,,
org.apache.kafka.common.requests.ApiVersionsRequest.Builder,Builder,low,low,low,low,0,3,0,0,0,3,11,7,0,0,3,0,0,0,0.167,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public ApiVersionsRequest( short ): void,ApiVersionsRequest( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public hasUnsupportedRequestVersion( ): boolean,hasUnsupportedRequestVersion( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.ApiVersionsResponse,ApiVersionsResponse,low,low,low-medium,low,0,5,2,0,0,10,102,18,1,1,2,3,0,1,0.5,1,0,0,,,,,102,,,,,,10,,,,,,,
org.apache.kafka.common.requests.ApiVersionsResponse.ApiVersion,ApiVersion,low,low,low,low,0,1,0,0,0,1,17,4,3,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public apiVersion( short ): ApiVersion,apiVersion( short ): ApiVersion,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static apiVersionsResponse( int, byte ): ApiVersionsResponse","static apiVersionsResponse( int, byte ): ApiVersionsResponse",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,2,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static createApiVersionsResponse( int, byte ): ApiVersionsResponse","static createApiVersionsResponse( int, byte ): ApiVersionsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,0,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static defaultApiVersionsResponse( ): ApiVersionsResponse,static defaultApiVersionsResponse( ): ApiVersionsResponse,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,3
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ApiVersionsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ApiVersionsResponse->defaultApiVersionsResponse,static volatile defaultApiVersionsResponse : ApiVersionsResponse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.BasePartitionState,BasePartitionState,low,low,low,low,0,0,0,0,0,0,14,0,4,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.requests.BasePartitionState->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.BasePartitionState->leader,final leader : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.BasePartitionState->leaderEpoch,final leaderEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.BasePartitionState->zkVersion,final zkVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownRequest,ControlledShutdownRequest,low,low,low,low,0,2,0,0,0,2,49,5,1,0,2,0,0,0,0.333,0,0,0,,,,,49,,,,,,2,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownRequest.Builder,Builder,low,low,low,low,0,2,0,0,0,2,15,6,1,0,2,0,0,0,0.167,0,0,0,,,,,15,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.private ControlledShutdownRequest( int, short ): void","ControlledShutdownRequest( int, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownRequest->brokerId,final brokerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownResponse,ControlledShutdownResponse,low,low,low,low,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,,,,,47,,,,,,0,,,,,,,
org.apache.kafka.common.requests.CreateAclsRequest,CreateAclsRequest,low,low,low-medium,low,0,0,0,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,,,,,75,,,,,,0,,,,,,,
org.apache.kafka.common.requests.CreateAclsRequest.AclCreation,AclCreation,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.requests.CreateAclsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.common.requests.CreateAclsResponse,CreateAclsResponse,low,low,low-medium,low,0,1,0,0,0,1,53,2,1,0,1,0,0,0,0,0,0,0,,,,,53,,,,,,1,,,,,,,
org.apache.kafka.common.requests.CreateAclsResponse.AclCreationResponse,AclCreationResponse,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreateAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsRequest,CreatePartitionsRequest,low,low,low-medium,low,0,2,0,0,0,2,129,4,2,0,2,0,0,1,0,1,0,0,,,,,129,,,,,,2,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,21,3,2,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->validateOnly,final validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsResponse,CreatePartitionsResponse,low,low,low,low,0,1,0,0,0,1,50,2,1,0,1,0,0,0,0,0,0,0,,,,,50,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest,CreateTopicsRequest,low,low,low-medium,low,0,2,0,0,0,2,209,4,1,2,2,0,0,0,0,1,0,0,,,,,209,,,,,,2,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,3,26,6,2,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,3,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest.TopicDetails,TopicDetails,low,low,low,low,0,1,0,0,0,1,34,3,2,0,1,0,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->validateOnly,final validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_NUM_PARTITIONS,static final NO_NUM_PARTITIONS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_REPLICATION_FACTOR,static final NO_REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsResponse,CreateTopicsResponse,low,low,low-medium,low,0,1,0,0,0,1,55,2,1,0,1,0,0,0,0,0,0,0,,,,,55,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreateTopicsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteAclsRequest,DeleteAclsRequest,low,low,low-medium,low,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,,,,,63,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DeleteAclsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse,DeleteAclsResponse,low,low,low-medium,low,0,1,0,0,0,1,104,2,1,0,1,0,0,0,0,0,0,0,,,,,104,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse.AclDeletionResult,AclDeletionResult,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse.AclFilterResponse,AclFilterResponse,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsRequest,DeleteRecordsRequest,low,low,low-medium,low,0,1,0,0,0,1,90,2,1,1,1,0,0,0,0,0,0,0,,,,,90,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,18,3,1,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->HIGH_WATERMARK,static final HIGH_WATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsResponse,DeleteRecordsResponse,low,low,low-medium,low,0,1,0,0,0,1,83,2,1,1,1,0,0,0,0,0,0,0,,,,,83,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsResponse.PartitionResponse,PartitionResponse,low,low,low,low,0,0,0,0,0,0,16,0,1,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->INVALID_LOW_WATERMARK,static final INVALID_LOW_WATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsRequest,DeleteTopicsRequest,low,low,low-medium,low,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,,,,,67,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,18,3,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsResponse,DeleteTopicsResponse,low,low,low-medium,low,0,1,0,0,0,1,51,2,1,0,1,0,0,0,0,0,0,0,,,,,51,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DeleteTopicsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeAclsRequest,DescribeAclsRequest,low,low,low,low,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,,,,,50,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeAclsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeAclsResponse,DescribeAclsResponse,low,low,low-medium,low,0,1,0,0,0,1,73,2,1,0,1,0,0,0,0,0,0,0,,,,,73,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsRequest,DescribeConfigsRequest,low,low,low-medium,low,0,0,0,0,0,0,82,0,0,0,0,0,0,0,0,0,0,0,,,,,82,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,15,3,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse,DescribeConfigsResponse,low,low,low-medium,low,0,1,0,0,0,1,124,2,1,0,1,0,0,0,0,0,0,0,,,,,124,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.Config,Config,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.ConfigEntry,ConfigEntry,low,low,low,low,0,3,0,0,0,3,22,6,3,0,3,0,0,1,0,1,0,0,,,,,22,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsRequest,DescribeGroupsRequest,low,low,low,low,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,,,,,48,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,11,3,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse,DescribeGroupsResponse,low,low,low-medium,low,0,1,0,0,0,1,171,2,1,0,1,0,0,0,0,0,0,0,,,,,171,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMember,GroupMember,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMetadata,GroupMetadata,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DescribeGroupsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsRequest,DescribeLogDirsRequest,low,low,low-medium,low,0,1,0,0,0,1,76,2,0,0,1,0,0,0,0,0,0,0,,,,,76,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,16,3,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public isAllTopicPartitions( ): boolean,isAllTopicPartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.DescribeLogDirsResponse,DescribeLogDirsResponse,low,low,low-medium,low,0,1,0,0,0,1,128,2,1,1,1,0,0,0,0,0,0,0,,,,,128,,,,,,1,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsResponse.LogDirInfo,LogDirInfo,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsResponse.ReplicaInfo,ReplicaInfo,low,low,low,low,0,1,0,0,0,1,19,4,3,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->INVALID_OFFSET_LAG,static final INVALID_OFFSET_LAG : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EndTxnRequest,EndTxnRequest,low,low,low-medium,low,0,2,0,0,0,2,72,4,2,0,2,0,0,1,0,1,0,0,,,,,72,,,,,,2,,,,,,,
org.apache.kafka.common.requests.EndTxnRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,26,3,2,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.EndTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EndTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.EndTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EndTxnResponse,EndTxnResponse,low,low,low,low,0,1,0,0,0,1,35,2,1,0,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.EndTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.EndTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EpochEndOffset,EpochEndOffset,low,low,low,low,0,4,0,0,0,4,35,12,1,2,4,0,0,1,0.375,0.5,0,0,,,,,35,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.EpochEndOffset.public EpochEndOffset( long ): void,EpochEndOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public endOffset( ): long,endOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.EpochEndOffset.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,2
<Field>org.apache.kafka.common.requests.EpochEndOffset->endOffset,endOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->UNDEFINED_EPOCH,static final UNDEFINED_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->UNDEFINED_EPOCH_OFFSET,static final UNDEFINED_EPOCH_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchRequest,FetchRequest,low,low,low-medium,low,0,5,0,0,0,5,246,10,4,3,5,0,0,1.071,0,0.9,0,0,,,,,246,,,,,,5,,,,,,,
org.apache.kafka.common.requests.FetchRequest.Builder,Builder,low,low,low,low,0,2,0,0,0,3,47,8,4,0,2,0,0,0.75,0.333,0,0,0,,,,,47,,,,,,3,,,,,,,
org.apache.kafka.common.requests.FetchRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,11,4,3,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchRequest.TopicAndPartitionData<T>,TopicAndPartitionData,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.FetchRequest.public isFromFollower( ): boolean,isFromFollower( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxBytes( ): int,maxBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxWait( ): int,maxWait( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public minBytes( ): int,minBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchRequest->maxBytes,final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->maxWait,final maxWait : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->minBytes,final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->DEFAULT_RESPONSE_MAX_BYTES,static final DEFAULT_RESPONSE_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->INVALID_LOG_START_OFFSET,static final INVALID_LOG_START_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchResponse,FetchResponse,low,low,low-medium,low,0,1,0,0,0,1,284,2,1,3,1,0,0,0,0,0,0,0,,,,,284,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchResponse.AbortedTransaction,AbortedTransaction,low,low,low,low,0,2,0,0,0,2,22,8,2,0,2,0,0,0,0.25,0,0,0,,,,,22,,,,,,2,,,,,,,
org.apache.kafka.common.requests.FetchResponse.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,4,49,9,3,0,1,0,0,0,0,0,0,0,,,,,49,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.FetchResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->INVALID_HIGHWATERMARK,static final INVALID_HIGHWATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->INVALID_LAST_STABLE_OFFSET,static final INVALID_LAST_STABLE_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->INVALID_LOG_START_OFFSET,static final INVALID_LOG_START_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest,FindCoordinatorRequest,low,low,low-medium,low,0,1,0,0,0,1,94,2,1,0,1,0,0,0,0,0,0,0,,,,,94,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest.Builder,Builder,low,low,low,low,1,2,0,0,0,3,28,8,2,0,2,0,0,0.5,0.25,0,0,0,,,,,28,,,,,,3,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest.CoordinatorType,CoordinatorType,low,low,low,low,0,2,0,0,0,4,13,10,1,2,1,1,0,1,0,0,0,0,,,,,13,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.FindCoordinatorRequest.public coordinatorType( ): CoordinatorType,coordinatorType( ): CoordinatorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FindCoordinatorRequest->coordinatorType,final coordinatorType : CoordinatorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorResponse,FindCoordinatorResponse,low,low,low-medium,low,0,1,0,0,0,1,71,2,1,0,1,0,0,0,0,0,0,0,,,,,71,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FindCoordinatorResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatRequest,HeartbeatRequest,low,low,low-medium,low,0,1,0,0,0,1,68,2,1,0,1,0,0,0,0,0,0,0,,,,,68,,,,,,1,,,,,,,
org.apache.kafka.common.requests.HeartbeatRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatRequest.public groupGenerationId( ): int,groupGenerationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatRequest->groupGenerationId,final groupGenerationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatResponse,HeartbeatResponse,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.InitProducerIdRequest,InitProducerIdRequest,low,low,low-medium,low,0,1,0,0,0,1,53,2,1,1,1,0,0,0,0,0,0,0,,,,,53,,,,,,1,,,,,,,
org.apache.kafka.common.requests.InitProducerIdRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,20,3,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.InitProducerIdRequest.public transactionTimeoutMs( ): int,transactionTimeoutMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.InitProducerIdRequest->transactionTimeoutMs,final transactionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.InitProducerIdRequest->NO_TRANSACTION_TIMEOUT_MS,static final NO_TRANSACTION_TIMEOUT_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.InitProducerIdResponse,InitProducerIdResponse,low,low,low-medium,low,0,3,0,0,0,3,53,6,3,0,3,0,0,1,0,1,0,0,,,,,53,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public epoch( ): short,epoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.InitProducerIdResponse->epoch,final epoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.InitProducerIdResponse->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.InitProducerIdResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.IsolationLevel,IsolationLevel,low,low,low,low,0,3,0,0,0,5,15,12,1,2,2,1,0,0.833,0.167,1,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.requests.IsolationLevel.private IsolationLevel( byte ): void,IsolationLevel( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.IsolationLevel.public id( ): byte,id( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.IsolationLevel.public static forId( byte ): IsolationLevel,static forId( byte ): IsolationLevel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,2
<Field>org.apache.kafka.common.requests.IsolationLevel->id,final id : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.IsolationLevel->READ_COMMITTED,static final READ_COMMITTED : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.IsolationLevel->READ_UNCOMMITTED,static final READ_UNCOMMITTED : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest,JoinGroupRequest,low,low,low-medium,low,0,2,0,0,0,2,168,4,2,0,2,0,0,1,0,1,0,0,,,,,168,,,,,,2,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest.Builder,Builder,low,low,low,low,0,2,0,0,0,3,37,9,2,0,2,0,0,0.5,0.333,0,0,0,,,,,37,,,,,,3,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest.ProtocolMetadata,ProtocolMetadata,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public rebalanceTimeout( ): int,rebalanceTimeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public sessionTimeout( ): int,sessionTimeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.JoinGroupRequest->rebalanceTimeout,final rebalanceTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupRequest->sessionTimeout,final sessionTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupResponse,JoinGroupResponse,low,low,low-medium,low,0,3,0,0,0,3,119,6,2,1,3,0,0,1.333,0,1,0,0,,,,,119,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.JoinGroupResponse->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_GENERATION_ID,static final UNKNOWN_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest,LeaderAndIsrRequest,low,low,low-medium,low,0,2,0,0,0,2,195,4,2,0,2,0,0,1,0,1,0,0,,,,,195,,,,,,2,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,25,3,2,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest.PartitionState,PartitionState,low,low,low,low,0,0,0,0,0,0,21,0,1,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrResponse,LeaderAndIsrResponse,low,low,low-medium,low,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
org.apache.kafka.common.requests.LeaveGroupRequest,LeaveGroupRequest,low,low,low-medium,low,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,,,,,58,,,,,,0,,,,,,,
org.apache.kafka.common.requests.LeaveGroupRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,18,3,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.common.requests.LeaveGroupResponse,LeaveGroupResponse,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaveGroupResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListGroupsRequest,ListGroupsRequest,low,low,low,low,0,1,0,0,0,1,34,2,0,0,1,0,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListGroupsRequest.Builder,Builder,low,low,low,low,0,2,0,0,0,2,9,5,0,0,2,0,0,0,0.25,0,0,0,,,,,9,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsRequest.public ListGroupsRequest( short ): void,ListGroupsRequest( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.requests.ListGroupsResponse,ListGroupsResponse,low,low,low-medium,low,0,1,0,0,0,1,67,2,1,0,1,0,0,0,0,0,0,0,,,,,67,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListGroupsResponse.Group,Group,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListGroupsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest,ListOffsetRequest,low,low,low-medium,low,0,1,0,0,0,1,219,2,1,4,1,0,0,0,0,0,0,0,,,,,219,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.Builder,Builder,low,low,low,low,1,2,0,0,0,9,58,24,1,0,1,1,0,0,0.167,1,0,0,,,,,58,,,,,,9,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,14,3,2,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListOffsetRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->DEBUGGING_REPLICA_ID,static final DEBUGGING_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->EARLIEST_TIMESTAMP,static final EARLIEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LATEST_TIMESTAMP,static final LATEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse,ListOffsetResponse,low,low,low-medium,low,0,1,0,0,0,1,138,2,1,2,1,0,0,0,0,0,0,0,,,,,138,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListOffsetResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_OFFSET,static final UNKNOWN_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_TIMESTAMP,static final UNKNOWN_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.MetadataRequest,MetadataRequest,low,low,low-medium,low,0,2,0,0,0,2,110,4,1,0,2,0,0,0,0,1,0,0,,,,,110,,,,,,2,,,,,,,
org.apache.kafka.common.requests.MetadataRequest.Builder,Builder,low,low,low,low,0,3,0,0,0,6,33,12,1,0,2,1,0,0,0.333,1,0,0,,,,,33,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.requests.MetadataRequest.public allowAutoTopicCreation( ): boolean,allowAutoTopicCreation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.MetadataRequest.public isAllTopics( ): boolean,isAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.MetadataRequest->allowAutoTopicCreation,final allowAutoTopicCreation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.MetadataResponse,MetadataResponse,low,low,medium-high,low,0,1,0,0,0,1,320,2,1,1,1,0,0,0,0,0,0,0,,,,,320,,,,,,1,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.PartitionMetadata,PartitionMetadata,low,low,low,low,0,1,0,0,0,1,40,2,1,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,1,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.TopicMetadata,TopicMetadata,low,low,low,low,0,1,0,0,0,1,21,2,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.MetadataResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.MetadataResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->NO_CONTROLLER_ID,static final NO_CONTROLLER_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest,OffsetCommitRequest,low,low,low-medium,low,0,2,0,0,0,2,211,4,2,3,2,0,0,1.6,0,1,0,0,,,,,211,,,,,,2,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest.Builder,Builder,low,low,low,low,0,3,0,0,0,8,43,19,2,0,3,0,0,0.5,0.5,0.333,0,0,,,,,43,,,,,,8,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,20,0,2,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public retentionTime( ): long,retentionTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->retentionTime,final retentionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_GENERATION_ID,static final DEFAULT_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_RETENTION_TIME,static final DEFAULT_RETENTION_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_TIMESTAMP,static final DEFAULT_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitResponse,OffsetCommitResponse,low,low,low-medium,low,0,1,0,0,0,1,65,2,1,0,1,0,0,0,0,0,0,0,,,,,65,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.OffsetCommitResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetFetchRequest,OffsetFetchRequest,low,low,low-medium,low,0,1,0,0,0,1,123,2,0,0,1,0,0,0,0,0,0,0,,,,,123,,,,,,1,,,,,,,
org.apache.kafka.common.requests.OffsetFetchRequest.Builder,Builder,low,low,low,low,0,2,1,0,0,4,27,8,0,0,2,0,0,0,0.25,0,0,0,,,,,27,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public isAllPartitions( ): boolean,isAllPartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.OffsetFetchResponse,OffsetFetchResponse,low,low,low-medium,low,0,4,1,0,0,5,112,9,1,3,3,0,0,0,0,1,0,0,,,,,112,,,,,,5,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,10,2,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public maybeThrowFirstPartitionError( ): void,maybeThrowFirstPartitionError( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,1,0
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->UNAUTHORIZED_PARTITION,static final UNAUTHORIZED_PARTITION : PartitionData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->UNKNOWN_PARTITION,static final UNKNOWN_PARTITION : PartitionData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest,OffsetsForLeaderEpochRequest,low,low,low-medium,low,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,0,,,,,81,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.Builder,Builder,low,low,low,low,0,2,0,0,0,2,22,5,0,0,2,0,0,0,0.25,0,0,0,,,,,22,,,,,,2,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse,OffsetsForLeaderEpochResponse,low,low,low-medium,low,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,,,,,61,,,,,,0,,,,,,,
org.apache.kafka.common.requests.ProduceRequest,ProduceRequest,low,low,low-medium,low,0,6,0,0,0,12,226,24,4,0,5,1,0,1,0.417,1,0,0,,,,,226,,,,,,12,,,,,,,
org.apache.kafka.common.requests.ProduceRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,47,3,2,0,1,0,0,0,0,0,0,0,,,,,47,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceRequest.public acks( ): short,acks( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public clearPartitionRecords( ): void,clearPartitionRecords( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public isIdempotent( ): boolean,isIdempotent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public static requiredMagicForVersion( short ): byte,static requiredMagicForVersion( short ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,14,1,0,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceRequest->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->idempotent,idempotent : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->transactional,transactional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceResponse,ProduceResponse,low,low,low-medium,low,0,1,0,0,0,1,141,2,1,1,1,0,0,0,0,0,0,0,,,,,141,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ProduceResponse.PartitionResponse,PartitionResponse,low,low,low,low,0,0,0,0,0,0,26,0,3,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceResponse.public getThrottleTime( ): int,getThrottleTime( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceResponse->throttleTime,final throttleTime : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RecordsSend,RecordsSend,low,low,low,low,0,2,0,0,0,2,31,6,2,0,2,0,0,0,0,1,0,0,,,,,31,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.RecordsSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.requests.RecordsSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.requests.RecordsSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RecordsSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestAndSize,RequestAndSize,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.requests.RequestAndSize->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestContext,RequestContext,low,low,low,low,0,2,1,0,0,3,45,6,0,0,2,0,0,0,0,0,0,0,,,,,45,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.RequestContext.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,0
<Method>org.apache.kafka.common.requests.RequestContext.private isUnsupportedApiVersionsRequest( ): boolean,isUnsupportedApiVersionsRequest( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.RequestHeader,RequestHeader,low,low,low-medium,low,0,3,0,0,0,4,92,11,2,0,3,0,0,0.5,0,0.333,0,0,,,,,92,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.RequestHeader.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,0,2
<Field>org.apache.kafka.common.requests.RequestHeader->apiVersion,final apiVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestUtils,RequestUtils,low,low,low,low,0,1,0,0,0,1,40,1,0,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.RequestUtils.private RequestUtils( ): void,RequestUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.requests.Resource,Resource,low,low,low,low,0,1,0,0,0,1,26,5,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.Resource.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.common.requests.ResourceType,ResourceType,low,low,low,low,0,3,0,0,0,5,14,10,1,6,2,1,0,1.214,0.167,1,0,0,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.requests.ResourceType.private ResourceType( byte ): void,ResourceType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.ResourceType.public id( ): byte,id( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ResourceType.public static forId( byte ): ResourceType,static forId( byte ): ResourceType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,3
<Field>org.apache.kafka.common.requests.ResourceType->id,final id : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->ANY,static final ANY : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->BROKER,static final BROKER : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->GROUP,static final GROUP : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->TOPIC,static final TOPIC : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->UNKNOWN,static final UNKNOWN : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ResourceType->VALUES,static final VALUES : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ResponseHeader,ResponseHeader,low,low,low,low,0,3,0,0,0,3,19,6,1,0,3,0,0,0,0.333,0.667,0,0,,,,,19,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.ResponseHeader.public ResponseHeader( int ): void,ResponseHeader( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.ResponseHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ResponseHeader.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.ResponseHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateRequest,SaslAuthenticateRequest,low,low,low,low,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,,,,,46,,,,,,0,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,13,3,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateResponse,SaslAuthenticateResponse,low,low,low,low,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeRequest,SaslHandshakeRequest,low,low,low-medium,low,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,15,3,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeResponse,SaslHandshakeResponse,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
org.apache.kafka.common.requests.StopReplicaRequest,StopReplicaRequest,low,low,low-medium,low,0,3,0,0,0,3,100,6,3,0,3,0,0,1,0,1,0,0,,,,,100,,,,,,3,,,,,,,
org.apache.kafka.common.requests.StopReplicaRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,26,4,3,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public deletePartitions( ): boolean,deletePartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->deletePartitions,final deletePartitions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.StopReplicaResponse,StopReplicaResponse,low,low,low,low,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,,,,,50,,,,,,0,,,,,,,
org.apache.kafka.common.requests.SyncGroupRequest,SyncGroupRequest,low,low,low-medium,low,0,1,0,0,0,1,102,2,1,0,1,0,0,0,0,0,0,0,,,,,102,,,,,,1,,,,,,,
org.apache.kafka.common.requests.SyncGroupRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,26,3,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SyncGroupResponse,SyncGroupResponse,low,low,low,low,0,1,0,0,0,1,42,2,1,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.TransactionResult,TransactionResult,low,low,low,low,0,2,0,0,0,3,9,6,1,2,1,1,0,1,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.TransactionResult.private TransactionResult( boolean ): void,TransactionResult( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.TransactionResult.public static forId( boolean ): TransactionResult,static forId( boolean ): TransactionResult,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,2
<Field>org.apache.kafka.common.requests.TransactionResult->id,final id : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.TransactionResult->ABORT,static final ABORT : TransactionResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.TransactionResult->COMMIT,static final COMMIT : TransactionResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest,TxnOffsetCommitRequest,low,low,low-medium,low,0,2,0,0,0,2,144,4,2,0,2,0,0,1,0,1,0,0,,,,,144,,,,,,2,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,32,3,2,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest.CommittedOffset,CommittedOffset,low,low,low,low,0,1,0,0,0,1,15,2,1,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.TxnOffsetCommitRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.TxnOffsetCommitRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitResponse,TxnOffsetCommitResponse,low,low,low-medium,low,0,1,0,0,0,1,69,2,1,0,1,0,0,0,0,0,0,0,,,,,69,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.TxnOffsetCommitResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest,UpdateMetadataRequest,low,low,medium-high,low,0,2,0,0,0,2,309,4,2,0,2,0,0,1,0,1,0,0,,,,,309,,,,,,2,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.Broker,Broker,low,low,low,low,0,0,0,0,0,0,16,0,1,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.Builder,Builder,low,low,low,low,1,1,0,0,0,5,29,7,2,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,5,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.EndPoint,EndPoint,low,low,low,low,0,0,0,0,0,0,14,0,1,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.PartitionState,PartitionState,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataResponse,UpdateMetadataResponse,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersRequest,WriteTxnMarkersRequest,low,low,low-medium,low,0,1,0,0,0,1,148,3,0,0,1,0,0,0,0,0,0,0,,,,,148,,,,,,1,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersRequest.Builder,Builder,low,low,low,low,0,1,0,0,0,1,8,3,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersRequest.TxnMarkerEntry,TxnMarkerEntry,low,low,low,low,0,4,0,0,0,4,48,9,3,0,4,0,0,0.667,0,0.5,0,0,,,,,48,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.requests.WriteTxnMarkersResponse,WriteTxnMarkersResponse,low,low,low-medium,low,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,,,,,80,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.resource,org.apache.kafka.common.resource,low,low,low,low,,,,,,10,103,,,,,,,,,,,,,3,3,0,103,0,0,0,1,0,10,,,,,,,
org.apache.kafka.common.resource.Resource,Resource,low,low,low,low,0,2,0,0,0,2,31,5,0,1,2,0,0,0,0,1,0,0,,,,,31,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.resource.Resource.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.resource.Resource.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.resource.Resource->CLUSTER,static final CLUSTER : Resource,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourceFilter,ResourceFilter,low,low,low,low,0,3,0,0,0,3,43,7,0,1,3,0,0,0,0,1,0,0,,,,,43,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.resource.ResourceFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.resource.ResourceFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.resource.ResourceFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.resource.ResourceFilter->ANY,static final ANY : ResourceFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourceType,ResourceType,low,low,low,low,0,4,0,0,0,5,29,11,1,6,3,1,0,1.143,0.25,0.667,0,0,,,,,29,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.resource.ResourceType.private ResourceType( byte ): void,ResourceType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public static fromCode( byte ): ResourceType,static fromCode( byte ): ResourceType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Field>org.apache.kafka.common.resource.ResourceType->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->ANY,static final ANY : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->CLUSTER,static final CLUSTER : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->GROUP,static final GROUP : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->TOPIC,static final TOPIC : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->TRANSACTIONAL_ID,static final TRANSACTIONAL_ID : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->UNKNOWN,static final UNKNOWN : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security,org.apache.kafka.common.security,low,low,low,low,,,,,,6,174,,,,,,,,,,,,,4,4,0,174,0,0,0,1,0,6,,,,,,,
org.apache.kafka.common.security.JaasConfig,JaasConfig,low,low,low-medium,low,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,,,,,58,,,,,,0,,,,,,,
org.apache.kafka.common.security.JaasContext,JaasContext,low,low,low-medium,low,0,1,0,0,0,1,94,2,1,0,1,0,0,0,0,0,0,0,,,,,94,,,,,,1,,,,,,,
org.apache.kafka.common.security.JaasContext.Type,Type,low,low,low,low,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.JaasContext.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.JaasContext->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.JaasUtils,JaasUtils,low,low,low,low,0,2,0,0,0,5,22,16,0,0,1,1,0,0,0,0,0,0,,,,,22,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.JaasUtils.private JaasUtils( ): void,JaasUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.JaasUtils.public static isZkSecurityEnabled( ): boolean,static isZkSecurityEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,0,0,0
<Package>org.apache.kafka.common.security.auth,org.apache.kafka.common.security.auth,low,low,low-medium,low,,,,,,9,118,,,,,,,,,,,,,9,6,3,118,0,0,0.333,1,0.333,9,,,,,,,
org.apache.kafka.common.security.auth.AuthenticationContext,AuthenticationContext,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.security.auth.DefaultPrincipalBuilder,DefaultPrincipalBuilder,low,low,low,low,0,1,0,0,0,1,9,1,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.KafkaPrincipal,KafkaPrincipal,low,low,low,low,0,1,0,0,0,1,31,5,0,1,1,0,0,0,0,0,0,0,,,,,31,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->ANONYMOUS,static final ANONYMOUS : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.KafkaPrincipalBuilder,KafkaPrincipalBuilder,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.security.auth.PlaintextAuthenticationContext,PlaintextAuthenticationContext,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.common.security.auth.PrincipalBuilder,PrincipalBuilder,low,low,low,low,0,1,0,1,0,3,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.SaslAuthenticationContext,SaslAuthenticationContext,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.security.auth.SecurityProtocol,SecurityProtocol,low,low,low,low,0,1,0,0,0,1,27,2,1,4,0,1,0,0,0,0,0,0,,,,,27,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.SecurityProtocol.public static forId( short ): SecurityProtocol,static forId( short ): SecurityProtocol,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->PLAINTEXT,static final PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SASL_PLAINTEXT,static final SASL_PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SASL_SSL,static final SASL_SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SSL,static final SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.SslAuthenticationContext,SslAuthenticationContext,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.security.authenticator,org.apache.kafka.common.security.authenticator,low,low,medium-high,low,,,,,,119,820,,,,,,,,,,,,,15,13,2,820,0,0,0.2,1,0.2,119,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin,AbstractLogin,low,low,low,low,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin.LoginCallbackHandler,LoginCallbackHandler,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.AuthCallbackHandler,AuthCallbackHandler,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.AuthCallbackHandler.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.authenticator.CredentialCache,CredentialCache,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.CredentialCache.Cache<C>,Cache,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder,DefaultKafkaPrincipalBuilder,low,low,low-medium,low,0,1,0,0,0,2,63,4,0,0,1,0,0,0,0,0,0,0,,,,,63,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
org.apache.kafka.common.security.authenticator.DefaultLogin,DefaultLogin,low,low,low,low,0,1,0,0,0,1,6,2,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.DefaultLogin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.security.authenticator.Login,Login,low,low,low,low,0,1,0,1,0,5,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.Login.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.authenticator.LoginManager,LoginManager,low,low,low-medium,low,0,3,0,0,0,8,60,22,1,0,2,1,0,0,0,1,0,0,,,,,60,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.LoginManager.private acquire( ): LoginManager,acquire( ): LoginManager,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public release( ): void,release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,0,0,3
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public static closeAll( ): void,static closeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,0,0
<Field>org.apache.kafka.common.security.authenticator.LoginManager->refCount,refCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator,SaslClientAuthenticator,medium-high,low,low-medium,low-medium,0,11,8,0,0,51,264,143,4,1,11,0,0,0.767,0.691,0.667,0,0,,,,,264,,,,,,51,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$17194;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$17194;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$7138;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$7138;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,0,0,0,10,0,0,9,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public authenticate( ): void,authenticate( ): void,medium-high,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,3,54,0,14,3
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private createSaslToken( byte, boolean ): byte","createSaslToken( byte, boolean ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,23,2,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveResponseOrToken( ): byte,receiveResponseOrToken( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveToken( ): byte,receiveToken( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,0,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.protected saslAuthenticateVersion( short ): void,saslAuthenticateVersion( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendSaslClientToken( byte, boolean ): boolean","sendSaslClientToken( byte, boolean ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,2,1,4
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,0,3
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->correlationId,correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslAuthenticateVersion,saslAuthenticateVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->DISABLE_KAFKA_SASL_AUTHENTICATE_HEADER,static final DISABLE_KAFKA_SASL_AUTHENTICATE_HEADER : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler,SaslClientCallbackHandler,low,low,low,low,0,1,0,0,0,1,43,2,1,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler->isKerberos,isKerberos : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator,SaslServerAuthenticator,low-medium,low,low-medium,low-medium,0,9,5,0,0,48,284,136,3,1,9,0,0,0.85,0.639,0.667,0,0,,,,,284,,,,,,48,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$11635;,Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$11635;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$8608;,Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$8608;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,0,0,0,7,0,0,6,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public authenticate( ): void,authenticate( ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,4,37,0,6,3
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.protected enableKafkaSaslAuthenticateHeaders( boolean ): void,enableKafkaSaslAuthenticateHeaders( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,1,2
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleKafkaRequest( byte ): boolean,handleKafkaRequest( byte ): boolean,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,5,40,1,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleSaslToken( byte ): void,handleSaslToken( byte ): void,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,31,1,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->enableKafkaSaslAuthenticateHeaders,enableKafkaSaslAuthenticateHeaders : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->MAX_RECEIVE_SIZE,static final MAX_RECEIVE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler,SaslServerCallbackHandler,low,low,low,low,0,1,0,0,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.security.kerberos,org.apache.kafka.common.security.kerberos,low,low,low-medium,low,,,,,,12,414,,,,,,,,,,,,,6,6,0,414,0,0,0,1,0,12,,,,,,,
org.apache.kafka.common.security.kerberos.BadFormatString,BadFormatString,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosLogin,KerberosLogin,low,low,low-medium,low,0,5,2,0,0,12,220,34,6,0,5,0,0,1.333,0,0,0,0,,,,,220,,,,,,12,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.kerberos.KerberosLogin$5633;,Lorg.apache.kafka.common.security.kerberos.KerberosLogin$5633;,low,low,low,low,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,,,,,96,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentElapsedTime( ): long,currentElapsedTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentWallTime( ): long,currentWallTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private hasSufficientTimeElapsed( ): boolean,hasSufficientTimeElapsed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,1,3
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private synchronized reLogin( ): void,synchronized reLogin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,2,2
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isKrbTicket,isKrbTicket : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isUsingTicketCache,isUsingTicketCache : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->lastLogin,lastLogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->minTimeBeforeRelogin,minTimeBeforeRelogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewJitter,ticketRenewJitter : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewWindowFactor,ticketRenewWindowFactor : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosName,KerberosName,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosRule,KerberosRule,low,low,low-medium,low,0,0,0,0,0,0,105,0,4,0,0,0,0,0,0,0,0,0,,,,,105,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->isDefault,final isDefault : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->numOfComponents,final numOfComponents : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->repeat,final repeat : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->toLowerCase,final toLowerCase : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosShortNamer,KerberosShortNamer,low,low,low,low,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.NoMatchingRule,NoMatchingRule,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.security.plain,org.apache.kafka.common.security.plain,low,low,low,low,,,,,,20,111,,,,,,,,,,,,,4,4,0,111,0,0,0,1,0,20,,,,,,,
org.apache.kafka.common.security.plain.PlainLoginModule,PlainLoginModule,low,low,low,low,0,4,0,0,0,4,25,12,0,0,4,0,0,0,0,0,0,0,,,,,25,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.security.plain.PlainSaslServer,PlainSaslServer,low,low,low-medium,low,0,5,0,0,0,14,78,40,1,0,5,0,0,0,0.333,0.4,0,0,,,,,78,,,,,,14,,,,,,,
org.apache.kafka.common.security.plain.PlainSaslServer.PlainSaslServerFactory,PlainSaslServerFactory,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,25,1,0,1
<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,0,1
"<Method>org.apache.kafka.common.security.plain.PlainSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,0,1
<Field>org.apache.kafka.common.security.plain.PlainSaslServer->complete,complete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.plain.PlainSaslServerProvider,PlainSaslServerProvider,low,low,low,low,0,2,0,0,0,2,8,6,0,1,1,1,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainSaslServerProvider.protected PlainSaslServerProvider( ): void,PlainSaslServerProvider( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.plain.PlainSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.scram,org.apache.kafka.common.security.scram,low,low,medium-high,low,,,,,,91,665,,,,,,,,,,,,,21,21,0,665,0,0,0,1,0,91,,,,,,,
org.apache.kafka.common.security.scram.ScramCredential,ScramCredential,low,low,low,low,0,5,0,0,0,5,18,13,4,0,5,0,0,0.75,0.533,0.6,0,0,,,,,18,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.security.scram.ScramCredential.public ScramCredential( byte, byte, byte, int ): void","ScramCredential( byte, byte, byte, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.common.security.scram.ScramCredential.public iterations( ): int,iterations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public salt( ): byte,salt( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public serverKey( ): byte,serverKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public storedKey( ): byte,storedKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.scram.ScramCredential->iterations,final iterations : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->salt,final salt : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->serverKey,final serverKey : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->storedKey,final storedKey : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramCredentialCallback,ScramCredentialCallback,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.security.scram.ScramCredentialUtils,ScramCredentialUtils,low,low,low,low,0,1,0,0,0,1,39,1,0,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramCredentialUtils.private ScramCredentialUtils( ): void,ScramCredentialUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.scram.ScramFormatter,ScramFormatter,low,low,low-medium,low,0,9,3,0,0,12,83,33,0,0,9,0,0,0,0.333,0,0,0,,,,,83,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramFormatter.public clientKey( byte ): byte,clientKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.security.scram.ScramFormatter.public hash( byte ): byte,hash( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.security.scram.ScramFormatter.public hi( byte, byte, int ): byte","hi( byte, byte, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,3,2,0
"<Method>org.apache.kafka.common.security.scram.ScramFormatter.public hmac( byte, byte ): byte","hmac( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.common.security.scram.ScramFormatter.public secureRandomBytes( ): byte,secureRandomBytes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramFormatter.public serverKey( byte ): byte,serverKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.security.scram.ScramFormatter.public storedKey( byte ): byte,storedKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.scram.ScramFormatter.public storedKey( byte, byte ): byte","storedKey( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.security.scram.ScramFormatter.public xor( byte, byte ): byte","xor( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,2,0,0
org.apache.kafka.common.security.scram.ScramLoginModule,ScramLoginModule,low,low,low,low,0,4,0,0,0,4,26,12,0,0,4,0,0,0,0,0,0,0,,,,,26,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.security.scram.ScramMechanism,ScramMechanism,low,low,low,low,0,1,0,0,0,1,32,2,1,2,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramMechanism.public minIterations( ): int,minIterations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.scram.ScramMechanism->minIterations,final minIterations : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramMechanism->SCRAM_SHA_256,static final SCRAM_SHA_256 : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramMechanism->SCRAM_SHA_512,static final SCRAM_SHA_512 : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages,ScramMessages,low,low,low-medium,low,0,0,0,0,0,0,160,0,0,0,0,0,0,0,0,0,0,0,,,,,160,,,,,,0,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages.AbstractScramMessage,AbstractScramMessage,low,low,low,low,0,1,0,0,4,1,15,2,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages.ClientFinalMessage,ClientFinalMessage,low,low,low,low,0,4,0,1,0,5,37,14,2,0,4,0,0,0.5,0.25,0.333,0,0,,,,,37,,,,,,5,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages.ClientFirstMessage,ClientFirstMessage,low,low,low,low,0,1,0,1,0,3,36,9,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,3,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages.ServerFinalMessage,ServerFinalMessage,low,low,low,low,0,2,0,1,0,5,35,17,1,0,2,0,0,0,0.25,0,0,0,,,,,35,,,,,,5,,,,,,,
org.apache.kafka.common.security.scram.ScramMessages.ServerFirstMessage,ServerFirstMessage,low,low,low,low,0,3,0,1,0,6,36,18,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,36,,,,,,6,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslClient,ScramSaslClient,low-medium,low,low-medium,low,0,8,3,0,0,23,138,73,2,0,8,0,0,0.667,0.531,0.933,0,0,,,,,138,,,,,,23,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslClient.ScramSaslClientFactory,ScramSaslClientFactory,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslClient.State,State,low,low,low,low,0,0,0,0,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public evaluateChallenge( byte ): byte,evaluateChallenge( byte ): byte,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,4,44,1,5,2
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.private handleServerFinalMessage( byte ): void,handleServerFinalMessage( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,1
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public hasInitialResponse( ): boolean,hasInitialResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramSaslClient.private setState( State ): void,setState( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,0
"<Method>org.apache.kafka.common.security.scram.ScramSaslClient.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,0
<Field>org.apache.kafka.common.security.scram.ScramSaslClient->saltedPassword,saltedPassword : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramSaslClient->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslClientProvider,ScramSaslClientProvider,low,low,low,low,0,2,0,0,0,3,9,7,0,1,1,1,0,0,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramSaslClientProvider.protected ScramSaslClientProvider( ): void,ScramSaslClientProvider( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslClientProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.scram.ScramSaslClientProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslServer,ScramSaslServer,low,low,low-medium,low,0,7,3,0,0,18,127,69,1,0,7,0,0,0,0.536,0.9,0,0,,,,,127,,,,,,18,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslServer.ScramSaslServerFactory,ScramSaslServerFactory,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslServer.State,State,low,low,low,low,0,0,0,0,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramSaslServer.private clearCredentials( ): void,clearCredentials( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,47,1,5,2
<Method>org.apache.kafka.common.security.scram.ScramSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramSaslServer.private setState( State ): void,setState( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.common.security.scram.ScramSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,0
"<Method>org.apache.kafka.common.security.scram.ScramSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,0
<Field>org.apache.kafka.common.security.scram.ScramSaslServer->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramSaslServerProvider,ScramSaslServerProvider,low,low,low,low,0,2,0,0,0,3,9,7,0,1,1,1,0,0,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramSaslServerProvider.protected ScramSaslServerProvider( ): void,ScramSaslServerProvider( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.security.scram.ScramSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramServerCallbackHandler,ScramServerCallbackHandler,low,low,low,low,0,1,0,0,0,1,18,2,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.security.ssl,org.apache.kafka.common.security.ssl,low,low,low,low,,,,,,0,134,,,,,,,,,,,,,2,2,0,134,0,0,0,1,0,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory,SslFactory,low,low,low-medium,low,0,0,0,0,0,0,134,0,4,0,0,0,0,0,0,0,0,0,,,,,134,,,,,,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory.SecurityStore,SecurityStore,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->keystore,keystore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->needClientAuth,needClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->truststore,truststore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->wantClientAuth,wantClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.serialization,org.apache.kafka.common.serialization,low,low,high,low,,,,,,42,389,,,,,,,,,,,,,36,31,5,389,0,0,0.139,1,0.139,42,,,,,,,
org.apache.kafka.common.serialization.ByteArrayDeserializer,ByteArrayDeserializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArrayDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ByteArraySerializer,ByteArraySerializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArraySerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ByteBufferDeserializer,ByteBufferDeserializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteBufferDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.ByteBufferSerializer,ByteBufferSerializer,low,low,low,low,0,1,0,0,0,1,15,1,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteBufferSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.BytesDeserializer,BytesDeserializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.BytesDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.BytesSerializer,BytesSerializer,low,low,low,low,0,1,0,0,0,1,7,1,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.BytesSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Deserializer<T>,Deserializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Deserializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.DoubleDeserializer,DoubleDeserializer,low,low,low,low,0,1,0,0,0,1,16,2,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.DoubleDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.DoubleSerializer,DoubleSerializer,low,low,low,low,0,1,0,0,0,1,20,2,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.DoubleSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ExtendedDeserializer<T>,ExtendedDeserializer,low,low,low,low,0,0,0,1,1,1,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.ExtendedDeserializer.Wrapper<T>,Wrapper,low,low,low,low,0,1,0,0,0,1,18,3,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.ExtendedSerializer<T>,ExtendedSerializer,low,low,low,low,0,0,0,1,1,1,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.ExtendedSerializer.Wrapper<T>,Wrapper,low,low,low,low,0,1,0,0,0,1,18,3,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.FloatDeserializer,FloatDeserializer,low,low,low,low,0,1,0,0,0,1,16,2,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.FloatDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.FloatSerializer,FloatSerializer,low,low,low,low,0,1,0,0,0,1,16,2,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.FloatSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.IntegerDeserializer,IntegerDeserializer,low,low,low,low,0,1,0,0,0,1,13,1,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.IntegerSerializer,IntegerSerializer,low,low,low,low,0,1,0,0,0,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongDeserializer,LongDeserializer,low,low,low,low,0,1,0,0,0,1,13,1,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongSerializer,LongSerializer,low,low,low,low,0,1,0,0,0,1,16,1,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serde<T>,Serde,low,low,low,low,0,1,0,1,0,4,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.serialization.Serde<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serdes,Serdes,low,low,low-medium,low,0,0,0,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,,,,,94,,,,,,0,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteArraySerde,ByteArraySerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteBufferSerde,ByteBufferSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.BytesSerde,BytesSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.DoubleSerde,DoubleSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.FloatSerde,FloatSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.IntegerSerde,IntegerSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.LongSerde,LongSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.ShortSerde,ShortSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.StringSerde,StringSerde,low,low,low,low,0,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.WrapperSerde<T>,WrapperSerde,low,low,low,low,0,1,0,0,9,1,20,4,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serializer<T>,Serializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Serializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.ShortDeserializer,ShortDeserializer,low,low,low,low,0,1,0,0,0,1,13,1,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ShortDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.ShortSerializer,ShortSerializer,low,low,low,low,0,1,0,0,0,1,10,1,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ShortSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.StringDeserializer,StringDeserializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.StringSerializer,StringSerializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.utils,org.apache.kafka.common.utils,low,low,very-high,low,,,,,,196,2474,,,,,,,,,,,,,49,39,10,2474,0,2,0.245,1,0.245,196,,,,,,,
org.apache.kafka.common.utils.AbstractIterator<T>,AbstractIterator,low,low,low,low,1,6,1,0,0,12,43,30,2,0,6,0,0,0.5,0,0.667,0,0,,,,,43,,,,,,12,,,,,,,
org.apache.kafka.common.utils.AbstractIterator.State,State,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected abstract makeNext( ): T,abstract makeNext( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected allDone( ): T,allDone( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public next( ): T,next( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,1,3
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->next,next : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.AppInfoParser,AppInfoParser,low,low,low-medium,low,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,,,,,63,,,,,,0,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfo,AppInfo,low,low,low,low,0,1,0,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfoMBean,AppInfoMBean,low,low,low,low,0,0,0,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.ImmutableValue<T>,ImmutableValue,low,low,low,low,1,1,0,0,0,1,7,2,1,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Base64,Base64,low,low,low-medium,low,0,7,3,0,0,4,145,7,0,1,1,3,0,0,0,0,0,0,,,,,145,,,,,,4,,,,,,,
org.apache.kafka.common.utils.Base64.Decoder,Decoder,low,low,low,low,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Base64.Encoder,Encoder,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Base64.Factory,Factory,low,low,low,low,2,3,0,1,2,3,4,3,0,0,3,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.utils.Base64.Java7Factory,Java7Factory,low,low,low,low,2,3,0,0,0,3,48,9,0,3,3,0,0,1,0,1,0,0,,,,,48,,,,,,3,,,,,,,
org.apache.kafka.common.utils.Base64.Java8Factory,Java8Factory,low,low,low,low,2,3,0,0,0,3,75,9,0,3,3,0,0,1,0,1,0,0,,,,,75,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.utils.Base64.private Base64( ): void,Base64( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Base64.public static decoder( ): Decoder,static decoder( ): Decoder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.utils.Base64.public static encoder( ): Encoder,static encoder( ): Encoder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.utils.Base64.public static urlEncoderNoPadding( ): Encoder,static urlEncoderNoPadding( ): Encoder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.utils.Base64->FACTORY,static final FACTORY : Factory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteBufferInputStream,ByteBufferInputStream,low,low,low,low,0,2,0,0,0,4,14,10,0,0,2,0,0,0,0.333,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.ByteBufferInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
"<Method>org.apache.kafka.common.utils.ByteBufferInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,0,0
org.apache.kafka.common.utils.ByteBufferOutputStream,ByteBufferOutputStream,low,low,low,low,0,11,3,0,0,13,47,33,2,1,11,0,0,1,0.545,1,0,0,,,,,47,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ByteBufferOutputStream( int ): void,ByteBufferOutputStream( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ByteBufferOutputStream( int, boolean ): void","ByteBufferOutputStream( int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,0,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ensureRemaining( int ): void,ensureRemaining( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.private expandBuffer( int ): void,expandBuffer( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,1,2
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public limit( ): int,limit( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public position( ): int,position( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public position( int ): void,position( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public remaining( ): int,remaining( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->initialCapacity,final initialCapacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->initialPosition,final initialPosition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->REALLOCATION_FACTOR,static final REALLOCATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteUtils,ByteUtils,low,low,low-medium,low,0,5,0,0,0,7,120,25,0,0,1,4,0,0,0.45,0,0,0,,,,,120,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.utils.ByteUtils.private ByteUtils( ): void,ByteUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedIntLE( byte, int ): int","static readUnsignedIntLE( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static sizeOfVarint( int ): int,static sizeOfVarint( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static sizeOfVarlong( long ): int,static sizeOfVarlong( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedIntLE( byte, int, int ): void","static writeUnsignedIntLE( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
org.apache.kafka.common.utils.Bytes,Bytes,low,low,low-medium,low,0,6,1,0,0,7,74,17,2,2,4,1,0,0.75,0.467,0.4,0,0,,,,,74,,,,,,7,,,,,,,
org.apache.kafka.common.utils.Bytes.ByteArrayComparator,ByteArrayComparator,low,low,low,low,0,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Bytes.LexicographicByteArrayComparator,LexicographicByteArrayComparator,low,low,low,low,0,2,1,0,0,8,18,17,0,0,2,0,0,0,0.167,0,0,0,,,,,18,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.utils.Bytes.public Bytes( byte ): void,Bytes( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.common.utils.Bytes.public compareTo( Bytes ): int,compareTo( Bytes ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.utils.Bytes.public get( ): byte,get( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Bytes.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,4
<Method>org.apache.kafka.common.utils.Bytes.public static wrap( byte ): Bytes,static wrap( byte ): Bytes,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Field>org.apache.kafka.common.utils.Bytes->bytes,final bytes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->hashCode,hashCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->BYTES_LEXICO_COMPARATOR,static final BYTES_LEXICO_COMPARATOR : ByteArrayComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->HEX_CHARS_UPPER,static final HEX_CHARS_UPPER : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Checksums,Checksums,low,low,low,low,0,1,0,0,0,1,25,1,0,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.Checksums.private Checksums( ): void,Checksums( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.utils.CircularIterator<T>,CircularIterator,low,low,low,low,0,4,0,0,0,4,20,13,1,0,4,0,0,0,0,0.833,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public next( ): T,next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,3
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.CircularIterator<T>->i, i : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.CloseableIterator<T>,CloseableIterator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.CloseableIterator<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.utils.CollectionUtils,CollectionUtils,low,low,low,low,0,1,0,0,0,1,23,1,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.CollectionUtils.private CollectionUtils( ): void,CollectionUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.common.utils.CopyOnWriteMap<K,V>",CopyOnWriteMap,low,low,low-medium,low,0,8,1,0,0,12,76,36,0,0,8,0,0,0,0.333,0,0,0,,,,,76,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public CopyOnWriteMap( ): void",CopyOnWriteMap( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized put( K, V ): V","synchronized put( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V ): V","synchronized replace( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V, V ): boolean","synchronized replace( K, V, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,1,0
org.apache.kafka.common.utils.Crc32,Crc32,low,low,low-medium,low,0,7,4,0,0,18,299,52,1,9,5,2,0,0.833,0.381,0.714,0,0,,,,,299,,,,,,18,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32.public Crc32( ): void,Crc32( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Crc32.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.Crc32.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte ): long,static crc32( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte, int, int ): long","static crc32( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
"<Method>org.apache.kafka.common.utils.Crc32.public update( byte, int, int ): void","update( byte, int, int ): void",low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,35,3,0,32
<Field>org.apache.kafka.common.utils.Crc32->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Crc32C,Crc32C,low,low,low,low,0,2,0,0,0,2,38,5,0,1,1,1,0,0,0.333,0,0,0,,,,,38,,,,,,2,,,,,,,
org.apache.kafka.common.utils.Crc32C.ChecksumFactory,ChecksumFactory,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Crc32C.Java9ChecksumFactory,Java9ChecksumFactory,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Crc32C.PureJavaChecksumFactory,PureJavaChecksumFactory,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32C.private Crc32C( ): void,Crc32C( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.utils.Crc32C.public static compute( byte, int, int ): long","static compute( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Field>org.apache.kafka.common.utils.Crc32C->CHECKSUM_FACTORY,static final CHECKSUM_FACTORY : ChecksumFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Exit,Exit,low,low,low,low,0,6,0,0,0,6,31,12,0,4,0,6,0,0.833,0.444,0.867,0,0,,,,,31,,,,,,6,,,,,,,
org.apache.kafka.common.utils.Exit.Procedure,Procedure,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.Exit.public static exit( int ): void,static exit( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.Exit.public static halt( int ): void,static halt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.Exit.public static resetExitProcedure( ): void,static resetExitProcedure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Exit.public static resetHaltProcedure( ): void,static resetHaltProcedure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Exit.public static setExitProcedure( Procedure ): void,static setExitProcedure( Procedure ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Exit.public static setHaltProcedure( Procedure ): void,static setHaltProcedure( Procedure ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.utils.Exit->DEFAULT_EXIT_PROCEDURE,static final DEFAULT_EXIT_PROCEDURE : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->DEFAULT_HALT_PROCEDURE,static final DEFAULT_HALT_PROCEDURE : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->exitProcedure,static volatile exitProcedure : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->haltProcedure,static volatile haltProcedure : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Java,Java,low,low,low,low,0,2,0,0,0,2,30,3,0,3,1,1,0,0,0,0,0,0,,,,,30,,,,,,2,,,,,,,
org.apache.kafka.common.utils.Java.Version,Version,low,low,low,low,0,3,0,0,0,3,14,7,2,0,3,0,0,0.25,0.333,0,0,0,,,,,14,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.utils.Java.private Java( ): void,Java( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Java.public static isIbmJdk( ): boolean,static isIbmJdk( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.utils.Java->IS_JAVA8_COMPATIBLE,static final IS_JAVA8_COMPATIBLE : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Java->IS_JAVA9_COMPATIBLE,static final IS_JAVA9_COMPATIBLE : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Java->VERSION,static final VERSION : Version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.KafkaThread,KafkaThread,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.KafkaThread$1772;,Lorg.apache.kafka.common.utils.KafkaThread$1772;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.utils.LogContext,LogContext,low,low,low-medium,low,0,1,0,0,0,1,219,2,0,0,1,0,0,0,0,0,0,0,,,,,219,,,,,,1,,,,,,,
org.apache.kafka.common.utils.LogContext.KafkaLogger,KafkaLogger,low,low,low,low,0,5,0,0,0,5,209,15,0,0,5,0,0,0,0,0,0,0,,,,,209,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.LogContext.public LogContext( ): void,LogContext( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.utils.MappedByteBuffers,MappedByteBuffers,low,low,low-medium,low,0,1,0,0,0,1,60,1,0,0,1,0,0,0,0,0,0,0,,,,,60,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.MappedByteBuffers.private MappedByteBuffers( ): void,MappedByteBuffers( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.utils.OperatingSystem,OperatingSystem,low,low,low,low,0,1,0,0,0,1,7,1,0,1,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.OperatingSystem.private OperatingSystem( ): void,OperatingSystem( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.utils.OperatingSystem->IS_WINDOWS,static final IS_WINDOWS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.PureJavaCrc32C,PureJavaCrc32C,low,low,medium-high,low,0,5,1,0,0,13,571,47,1,9,5,0,0,0.833,0.467,0.4,0,0,,,,,571,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public PureJavaCrc32C( ): void,PureJavaCrc32C( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public update( byte, int, int ): void","update( byte, int, int ): void",low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,35,3,0,32
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Sanitizer,Sanitizer,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Scheduler,Scheduler,low,low,low,low,0,0,0,1,0,2,5,0,0,1,0,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
<Field>org.apache.kafka.common.utils.Scheduler->SYSTEM,static final SYSTEM : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SecurityUtils,SecurityUtils,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell,Shell,low,low,low-medium,low,0,4,1,0,1,12,123,59,2,0,4,0,0,0.5,0.375,1,0,0,,,,,123,,,,,,12,,,,,,,
org.apache.kafka.common.utils.Shell.ExitCodeException,ExitCodeException,low,low,low,low,0,1,0,0,0,1,8,2,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Shell$3493;,Lorg.apache.kafka.common.utils.Shell$3493;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell.ShellCommandExecutor,ShellCommandExecutor,low,low,low,low,0,3,1,1,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Shell.ShellTimeoutTimerTask,ShellTimeoutTimerTask,low,low,low,low,0,2,0,0,0,5,12,10,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.Shell.public Shell( long ): void,Shell( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Shell.public exitCode( ): int,exitCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Shell.protected run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.utils.Shell.private runCommand( ): void,runCommand( ): void,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,52,0,0,5
<Field>org.apache.kafka.common.utils.Shell->exitCode,exitCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->timeout,final timeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SystemScheduler,SystemScheduler,low,low,low,low,0,1,0,0,0,1,9,1,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.SystemScheduler. SystemScheduler( ): void, SystemScheduler( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.utils.SystemTime,SystemTime,low,low,low,low,0,4,1,0,0,5,16,15,0,0,4,0,0,0,0.375,0,0,0,,,,,16,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.SystemTime.public hiResClockMs( ): long,hiResClockMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.utils.SystemTime.public milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
org.apache.kafka.common.utils.Time,Time,low,low,low,low,0,4,0,1,0,4,6,4,0,1,4,0,0,0,0.375,1,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.Time.public abstract hiResClockMs( ): long,hiResClockMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.common.utils.Time->SYSTEM,static final SYSTEM : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Utils,Utils,low-medium,low,medium-high,low-medium,0,10,0,0,0,21,357,58,0,0,1,9,0,0,0.683,0,0,0,,,,,357,,,,,,21,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Utils$21291;,Lorg.apache.kafka.common.utils.Utils$21291;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.Utils.private Utils( ): void,Utils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Utils.public static abs( int ): int,static abs( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static longHashcode( long ): int,static longHashcode( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static max( long, long ): long","static max( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( long, long ): long","static min( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( short, short ): short","static min( short, short ): short",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static murmur2( byte ): int,static murmur2( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,27,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static notNull( T ): T,static notNull( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static sleep( long ): void,static sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static toPositive( int ): int,static toPositive( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Package>org.apache.kafka.connect.cli,org.apache.kafka.connect.cli,low,low,low,low,,,,,,0,82,,,,,,,,,,,,,2,2,0,82,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.cli.ConnectDistributed,ConnectDistributed,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.connect.cli.ConnectStandalone,ConnectStandalone,low,low,low,low,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,,,,,45,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.cli.ConnectStandalone$4252;,Lorg.apache.kafka.connect.cli.ConnectStandalone$4252;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.connector,org.apache.kafka.connect.connector,low,low,low,low,,,,,,14,101,,,,,,,,,,,,,4,2,2,101,0,0,1,1,1,14,,,,,,,
org.apache.kafka.connect.connector.ConnectRecord<R>,ConnectRecord,low,low,low-medium,low,0,1,0,0,0,8,75,10,0,0,1,0,0,0,0,0,0,0,,,,,75,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,1,10,0,0,0
org.apache.kafka.connect.connector.Connector,Connector,low,low,low,low,0,1,0,0,0,1,19,1,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.connector.Connector.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.connector.ConnectorContext,ConnectorContext,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectorContext.public abstract requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.connector.Task,Task,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.Task.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.converters,org.apache.kafka.connect.converters,low,low,low,low,,,,,,0,13,,,,,,,,,,,,,1,1,0,13,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.converters.ByteArrayConverter,ByteArrayConverter,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.data,org.apache.kafka.connect.data,low,low,medium-high,low,,,,,,50,758,,,,,,,,,,,,,12,11,1,758,0,0,0.083,1,0.083,50,,,,,,,
org.apache.kafka.connect.data.ConnectSchema,ConnectSchema,low,low,low-medium,low,0,3,0,0,0,4,185,12,1,0,3,0,0,0,0,0.667,0,0,,,,,185,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.data.ConnectSchema.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public schema( ): ConnectSchema,schema( ): ConnectSchema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.ConnectSchema->optional,final optional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Date,Date,low,low,low,low,0,0,0,0,0,0,23,0,0,1,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Date->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Decimal,Decimal,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Field,Field,low,low,low,low,0,2,0,0,0,2,25,5,1,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.data.Field.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.Field.public index( ): int,index( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.data.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Schema,Schema,low,low,low-medium,low,0,5,0,1,0,12,62,5,0,18,5,0,0,0,0,1,0,0,,,,,62,,,,,,12,,,,,,,
org.apache.kafka.connect.data.Schema.Type,Type,low,low,low,low,0,2,0,0,0,11,31,15,0,12,2,0,0,0,0,0,0,0,,,,,31,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.data.Schema.public abstract isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract schema( ): Schema,schema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.connect.data.Schema->BOOLEAN_SCHEMA,static final BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->BYTES_SCHEMA,static final BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT32_SCHEMA,static final FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT64_SCHEMA,static final FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT16_SCHEMA,static final INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT32_SCHEMA,static final INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT64_SCHEMA,static final INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT8_SCHEMA,static final INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BOOLEAN_SCHEMA,static final OPTIONAL_BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BYTES_SCHEMA,static final OPTIONAL_BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT32_SCHEMA,static final OPTIONAL_FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT64_SCHEMA,static final OPTIONAL_FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT16_SCHEMA,static final OPTIONAL_INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT32_SCHEMA,static final OPTIONAL_INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT64_SCHEMA,static final OPTIONAL_INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT8_SCHEMA,static final OPTIONAL_INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_STRING_SCHEMA,static final OPTIONAL_STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->STRING_SCHEMA,static final STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaAndValue,SchemaAndValue,low,low,low,low,0,1,0,0,0,1,27,3,0,1,1,0,0,0,0,0,0,0,,,,,27,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaAndValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.SchemaAndValue->NULL,static final NULL : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaBuilder,SchemaBuilder,low,low,low-medium,low,0,13,0,0,0,14,161,31,0,0,3,10,0,0,0,0,0,0,,,,,161,,,,,,14,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaBuilder.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public optional( ): SchemaBuilder,optional( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public required( ): SchemaBuilder,required( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bool( ): SchemaBuilder,static bool( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bytes( ): SchemaBuilder,static bytes( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float32( ): SchemaBuilder,static float32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float64( ): SchemaBuilder,static float64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int16( ): SchemaBuilder,static int16( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int32( ): SchemaBuilder,static int32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int64( ): SchemaBuilder,static int64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int8( ): SchemaBuilder,static int8( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static string( ): SchemaBuilder,static string( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static struct( ): SchemaBuilder,static struct( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.data.SchemaProjector,SchemaProjector,low,low,low-medium,low,0,0,0,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,,,,,114,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Struct,Struct,low,low,low-medium,low,0,2,0,0,0,6,98,10,0,0,2,0,0,0,0,0,0,0,,,,,98,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.data.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.data.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,0,0,0
org.apache.kafka.connect.data.Time,Time,low,low,low,low,0,0,0,0,0,0,24,0,0,1,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Time->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Timestamp,Timestamp,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.errors,org.apache.kafka.connect.errors,low,low,low-medium,low,,,,,,0,56,,,,,,,,,,,,,8,8,0,56,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.errors.AlreadyExistsException,AlreadyExistsException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.ConnectException,ConnectException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.DataException,DataException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.IllegalWorkerStateException,IllegalWorkerStateException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.NotFoundException,NotFoundException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.RetriableException,RetriableException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaBuilderException,SchemaBuilderException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaProjectorException,SchemaProjectorException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.file,org.apache.kafka.connect.file,low,low,low,low,,,,,,10,229,,,,,,,,,,,,,4,4,0,229,0,0,0,1,0,10,,,,,,,
org.apache.kafka.connect.file.FileStreamSinkConnector,FileStreamSinkConnector,low,low,low,low,0,1,0,0,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSinkTask,FileStreamSinkTask,low,low,low,low,0,2,0,0,0,4,37,5,0,0,2,0,0,0,0,0,0,0,,,,,37,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public FileStreamSinkTask( ): void,FileStreamSinkTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
org.apache.kafka.connect.file.FileStreamSourceConnector,FileStreamSourceConnector,low,low,low,low,0,1,0,0,0,1,36,2,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSourceTask,FileStreamSourceTask,low,low,low-medium,low,0,1,0,0,0,4,128,11,2,0,1,0,0,0,0,0,0,0,,,,,128,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,0,0
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->buffer,buffer : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->offset,offset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.json,org.apache.kafka.connect.json,low,low,low-medium,low,,,,,,6,603,,,,,,,,,,,,,7,5,2,603,0,0,0.286,1,0.286,6,,,,,,,
org.apache.kafka.connect.json.JsonConverter,JsonConverter,low,low,medium-high,low,0,0,0,0,0,0,522,0,2,2,0,0,0,0,0,0,0,0,,,,,522,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonConverter.JsonToConnectTypeConverter,JsonToConnectTypeConverter,low,low,low,low,0,0,0,1,12,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.json.JsonConverter.LogicalTypeConverter,LogicalTypeConverter,low,low,low,low,0,0,0,1,8,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10175;,Lorg.apache.kafka.connect.json.JsonConverter$10175;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10634;,Lorg.apache.kafka.connect.json.JsonConverter$10634;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11224;,Lorg.apache.kafka.connect.json.JsonConverter$11224;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11671;,Lorg.apache.kafka.connect.json.JsonConverter$11671;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12114;,Lorg.apache.kafka.connect.json.JsonConverter$12114;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12562;,Lorg.apache.kafka.connect.json.JsonConverter$12562;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$2706;,Lorg.apache.kafka.connect.json.JsonConverter$2706;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$2953;,Lorg.apache.kafka.connect.json.JsonConverter$2953;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3204;,Lorg.apache.kafka.connect.json.JsonConverter$3204;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3456;,Lorg.apache.kafka.connect.json.JsonConverter$3456;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3700;,Lorg.apache.kafka.connect.json.JsonConverter$3700;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3947;,Lorg.apache.kafka.connect.json.JsonConverter$3947;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4195;,Lorg.apache.kafka.connect.json.JsonConverter$4195;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4442;,Lorg.apache.kafka.connect.json.JsonConverter$4442;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4847;,Lorg.apache.kafka.connect.json.JsonConverter$4847;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5092;,Lorg.apache.kafka.connect.json.JsonConverter$5092;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5600;,Lorg.apache.kafka.connect.json.JsonConverter$5600;,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$7774;,Lorg.apache.kafka.connect.json.JsonConverter$7774;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$9259;,Lorg.apache.kafka.connect.json.JsonConverter$9259;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$9721;,Lorg.apache.kafka.connect.json.JsonConverter$9721;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->cacheSize,cacheSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->enableSchemas,enableSchemas : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_CACHE_SIZE_DEFAULT,static final SCHEMAS_CACHE_SIZE_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_ENABLE_DEFAULT,static final SCHEMAS_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonDeserializer,JsonDeserializer,low,low,low,low,0,2,0,0,0,2,17,3,0,0,2,0,0,0,0,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonDeserializer.public JsonDeserializer( ): void,JsonDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.json.JsonSchema,JsonSchema,low,low,low,low,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSchema.Envelope,Envelope,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSerializer,JsonSerializer,low,low,low,low,0,2,0,0,0,2,15,3,0,0,2,0,0,0,0,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonSerializer.public JsonSerializer( ): void,JsonSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.connect.runtime,org.apache.kafka.connect.runtime,low-medium,low,very-high,low,,,,,,272,3008,,,,,,,,,,,,,45,41,4,3008,0,2,0.133,1,0.133,272,,,,,,,
org.apache.kafka.connect.runtime.AbstractHerder,AbstractHerder,low,low,low-medium,low,0,3,0,0,0,3,222,9,0,0,3,0,0,0,0,0,0,0,,,,,222,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected abstract generation( ): int,abstract generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected startServices( ): void,startServices( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected stopServices( ): void,stopServices( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
org.apache.kafka.connect.runtime.AbstractStatus<T>,AbstractStatus,low,low,low-medium,low,1,4,0,0,0,8,58,14,3,0,4,0,0,0.667,0,0.5,0,0,,,,,58,,,,,,8,,,,,,,
org.apache.kafka.connect.runtime.AbstractStatus.State,State,low,low,low,low,0,0,0,0,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,0,0,5
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public id( ): T,id( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->generation,final generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->id,final id : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->state,final state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.Connect,Connect,low,low,low,low,0,3,0,0,0,5,45,24,1,0,3,0,0,0,0,1,0,0,,,,,45,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.Connect.ShutdownHook,ShutdownHook,low,low,low,low,0,2,1,0,0,2,8,7,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.Connect.public awaitStop( ): void,awaitStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.Connect.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,1
<Method>org.apache.kafka.connect.runtime.Connect.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,0,0
<Field>org.apache.kafka.connect.runtime.Connect->shutdownHook,final shutdownHook : ShutdownHook,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics,ConnectMetrics,low,low,low-medium,low,0,1,0,0,0,1,146,4,0,0,1,0,0,0,0,0,0,0,,,,,146,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.LiteralSupplier<T>,LiteralSupplier,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.MetricGroup,MetricGroup,low,low,low,low,1,3,0,0,0,6,54,13,1,0,3,0,0,0,0.333,0,0,0,,,,,54,,,,,,6,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.MetricGroupId,MetricGroupId,low,low,low,low,0,1,0,0,0,1,35,3,1,0,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
org.apache.kafka.connect.runtime.ConnectMetricsRegistry,ConnectMetricsRegistry,low,low,low-medium,low,0,1,0,0,0,1,270,2,0,0,1,0,0,0,0,0,0,0,,,,,270,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public ConnectMetricsRegistry( ): void,ConnectMetricsRegistry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.ConnectorConfig,ConnectorConfig,low,low,low-medium,low,0,0,0,0,0,0,130,0,1,2,0,0,0,0,0,0,0,0,,,,,130,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig.EnrichedConnectorConfig,EnrichedConnectorConfig,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.ConnectorConfig$5592;,Lorg.apache.kafka.connect.runtime.ConnectorConfig$5592;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.ConnectorConfig$9281;,Lorg.apache.kafka.connect.runtime.ConnectorConfig$9281;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig.TransformationClassRecommender,TransformationClassRecommender,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->enrichedConfig,final enrichedConfig : EnrichedConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_DEFAULT,static final TASKS_MAX_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MIN_CONFIG,static final TASKS_MIN_CONFIG : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus,ConnectorStatus,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus.Listener,Listener,low,low,low,low,0,0,0,1,0,6,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,6,,,,,,,
org.apache.kafka.connect.runtime.Herder,Herder,low,low,low,low,0,2,0,1,0,18,39,2,0,0,2,0,0,0,0,0,0,0,,,,,39,,,,,,18,,,,,,,
org.apache.kafka.connect.runtime.Herder.Created<T>,Created,low,low,low,low,1,4,0,0,0,4,20,10,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.Herder.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.runtime.HerderConnectorContext,HerderConnectorContext,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.SinkConnectorConfig,SinkConnectorConfig,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.SourceConnectorConfig,SourceConnectorConfig,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter,SourceTaskOffsetCommitter,low,low,low,low,0,1,0,0,0,3,48,6,0,0,1,0,0,0,0,0,0,0,,,,,48,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3505;,Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3505;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public close( long ): void,close( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,0,0
org.apache.kafka.connect.runtime.StateTracker,StateTracker,low,low,low-medium,low,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,,,,,79,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.StateTracker.StateChange,StateChange,low,low,low,low,0,1,0,0,0,1,71,2,6,0,1,0,0,0,0,0,0,0,,,,,71,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.TargetState,TargetState,low,low,low,low,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->PAUSED,static final PAUSED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->STARTED,static final STARTED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.TaskConfig,TaskConfig,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.TaskConfig.public TaskConfig( ): void,TaskConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.TaskStatus,TaskStatus,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.TaskStatus.Listener,Listener,low,low,low,low,0,0,0,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.TransformationChain<R>,TransformationChain,low,low,low,low,0,4,0,0,0,8,24,14,0,0,3,1,0,0,0.375,0,0,0,,,,,24,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,1,0,0
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public static noOp( ): TransformationChain,static noOp( ): TransformationChain,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.Worker,Worker,low,low,medium-high,low,0,6,3,0,0,8,394,28,1,0,5,0,0,0,0,1,0,0,,,,,394,,,,,,8,,,,,,,
org.apache.kafka.connect.runtime.Worker.WorkerMetricsGroup,WorkerMetricsGroup,low,low,low,low,0,5,0,0,0,5,65,18,0,0,5,0,0,0,0,0,0,0,,,,,65,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.Worker. workerMetricsGroup( ): WorkerMetricsGroup, workerMetricsGroup( ): WorkerMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.connect.runtime.Worker.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,0,3,1
<Method>org.apache.kafka.connect.runtime.Worker.public stopAndAwaitTasks( ): void,stopAndAwaitTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.Worker.private stopConnectors( ): void,stopConnectors( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Field>org.apache.kafka.connect.runtime.Worker->workerMetricsGroup,final workerMetricsGroup : WorkerMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConfig,WorkerConfig,low,low,low-medium,low,0,0,0,0,0,0,154,0,0,3,0,0,0,0,0,0,0,0,,,,,154,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_DEFAULT,static final OFFSET_COMMIT_INTERVAL_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_DEFAULT,static final OFFSET_COMMIT_TIMEOUT_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_DEFAULT,static final REST_PORT_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector,WorkerConnector,low-medium,low,low-medium,low,0,10,2,0,0,21,189,59,2,0,9,0,0,0.5,0,0.833,0,0,,,,,189,,,,,,21,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector.ConnectorMetricsGroup,ConnectorMetricsGroup,low,low,low,low,0,5,0,0,0,5,58,10,0,0,5,0,0,0,0,0,0,0,,,,,58,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerConnector$3783;,Lorg.apache.kafka.connect.runtime.WorkerConnector$3783;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector.State,State,low,low,low,low,0,0,0,0,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerConnector. metrics( ): ConnectorMetricsGroup, metrics( ): ConnectorMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private doStart( ): boolean,doStart( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,0,0,3
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isSinkConnector( ): boolean,isSinkConnector( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isSourceConnector( ): boolean,isSourceConnector( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private pause( ): void,pause( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,0,0,4
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public shutdown( ): void,shutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,0,1,4
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Field>org.apache.kafka.connect.runtime.WorkerConnector->metrics,final metrics : ConnectorMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerInfo,WorkerInfo,low,low,low,low,0,4,2,0,0,5,45,35,0,0,4,0,0,0,0,0,0,0,,,,,45,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerInfo.public WorkerInfo( ): void,WorkerInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.connect.runtime.WorkerInfo.protected addRuntimeInfo( ): void,addRuntimeInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerInfo.protected addSystemInfo( ): void,addSystemInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerInfo.public logAll( ): void,logAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,0,0
org.apache.kafka.connect.runtime.WorkerSinkTask,WorkerSinkTask,medium-high,low,medium-high,low-medium,0,24,16,0,0,54,489,191,7,0,18,0,0,0.825,0.681,1,0,0,,,,,489,,,,,,54,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.HandleRebalance,HandleRebalance,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSinkTask$13546;,Lorg.apache.kafka.connect.runtime.WorkerSinkTask$13546;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup,SinkTaskMetricsGroup,low,low,low,low,0,10,0,0,0,12,91,34,1,0,10,0,0,0,0.5,0,0,0,,,,,91,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask. isCommitting( ): boolean, isCommitting( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask. sinkTaskMetricsGroup( ): SinkTaskMetricsGroup, sinkTaskMetricsGroup( ): SinkTaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private closePartitions( ): void,closePartitions( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public commitFailures( ): int,commitFailures( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private commitOffsets( long, boolean ): void","commitOffsets( long, boolean ): void",low-medium,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,51,2,1,10
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private deliverMessages( ): void,deliverMessages( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,0,4,4
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public execute( ): void,execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,3,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected initializeAndStart( ): void,initializeAndStart( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,22,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected iteration( ): void,iteration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,26,0,4,9
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private pauseAll( ): void,pauseAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,2,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected recordBatch( int ): void,recordBatch( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected recordCommitSuccess( long ): void,recordCommitSuccess( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected releaseResources( ): void,releaseResources( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private resumeAll( ): void,resumeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private rewind( ): void,rewind( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitFailures,commitFailures : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitSeqno,commitSeqno : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitStarted,commitStarted : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->committing,committing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->sinkTaskMetricsGroup,final sinkTaskMetricsGroup : SinkTaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->nextCommit,nextCommit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->pausedForRedelivery,pausedForRedelivery : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTaskContext,WorkerSinkTaskContext,low,low,low-medium,low,0,6,0,0,0,6,60,14,2,0,6,0,0,0.625,0.417,0.733,0,0,,,,,60,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearCommitRequest( ): void,clearCommitRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearOffsets( ): void,clearOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public isCommitRequested( ): boolean,isCommitRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public requestCommit( ): void,requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( ): long,timeout( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->timeoutMs,timeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask,WorkerSourceTask,low-medium,low,medium-high,low-medium,0,17,10,0,0,36,325,185,5,1,11,0,0,0.833,0.606,0.667,0,0,,,,,325,,,,,,36,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$10826;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$10826;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$17342;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$17342;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask.SourceRecordWriteCounter,SourceRecordWriteCounter,low,low,low,low,1,6,2,0,0,10,23,18,4,0,5,0,0,0.583,0.533,0.5,0,0,,,,,23,,,,,,10,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask.SourceTaskMetricsGroup,SourceTaskMetricsGroup,low,low,low,low,0,3,0,0,0,3,39,12,1,0,3,0,0,0,0.333,0,0,0,,,,,39,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask. sourceTaskMetricsGroup( ): SourceTaskMetricsGroup, sourceTaskMetricsGroup( ): SourceTaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public commitOffsets( ): boolean,commitOffsets( ): boolean,low,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,67,0,10,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private commitSourceTask( ): void,commitSourceTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public execute( ): void,execute( ): void,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,31,0,3,3
"<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected recordPollReturned( int, long ): void","recordPollReturned( int, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected releaseResources( ): void,releaseResources( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private sendRecords( ): boolean,sendRecords( ): boolean,low,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,53,0,2,5
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishFailedFlush( ): void,synchronized finishFailedFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishSuccessfulFlush( ): void,synchronized finishSuccessfulFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->sourceTaskMetricsGroup,final sourceTaskMetricsGroup : SourceTaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->finishedStart,finishedStart : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->flushing,flushing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->lastSendFailed,lastSendFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->startedShutdownBeforeStartCompleted,startedShutdownBeforeStartCompleted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->SEND_FAILED_BACKOFF_MS,static final SEND_FAILED_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTaskContext,WorkerSourceTaskContext,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask,WorkerTask,low-medium,low,low-medium,low-medium,0,21,11,0,0,30,210,83,3,0,19,0,0,0.741,0.614,1,0,0,,,,,210,,,,,,30,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask.TaskMetricsGroup,TaskMetricsGroup,low,low,low,low,0,2,0,0,0,2,86,4,0,0,2,0,0,0,0.25,0,0,0,,,,,86,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerTask. taskMetricsGroup( ): TaskMetricsGroup, taskMetricsGroup( ): TaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract releaseResources( ): void,abstract releaseResources( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected awaitUnpause( ): boolean,awaitUnpause( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doClose( ): void,doClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doRun( ): void,doRun( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,0,4,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected isStopping( ): boolean,isStopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private onShutdown( ): void,onShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected recordBatch( int ): void,recordBatch( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected recordCommitSuccess( long ): void,recordCommitSuccess( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,19,0,4,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public shouldPause( ): boolean,shouldPause( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onPause( ): void,synchronized onPause( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onResume( ): void,synchronized onResume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.private triggerStop( ): void,triggerStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerTask->taskMetricsGroup,final taskMetricsGroup : TaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->cancelled,volatile cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->stopping,volatile stopping : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.distributed,org.apache.kafka.connect.runtime.distributed,low,low,medium-high,low,,,,,,89,1534,,,,,,,,,,,,,19,18,1,1534,0,0,0.053,1,0.053,89,,,,,,,
org.apache.kafka.connect.runtime.distributed.ClusterConfigState,ClusterConfigState,low,low,low-medium,low,0,1,0,0,0,1,70,2,1,2,1,0,0,0,0,0,0,0,,,,,70,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->EMPTY,static final EMPTY : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->NO_OFFSET,static final NO_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol,ConnectProtocol,low,low,low-medium,low,0,1,0,0,0,2,161,3,0,2,0,1,0,0,0,0,0,0,,,,,161,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.Assignment,Assignment,low,low,low,low,0,3,0,0,0,3,57,6,2,2,3,0,0,1,0,0.667,0,0,,,,,57,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState,WorkerState,low,low,low,low,0,1,0,0,0,1,16,2,1,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_TASK,static final CONNECTOR_TASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_V0,static final CONNECT_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedConfig,DistributedConfig,low,low,low-medium,low,0,0,0,0,0,0,182,0,0,1,0,0,0,0,0,0,0,0,,,,,182,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_DEFAULT,static final WORKER_UNSYNC_BACKOFF_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder,DistributedHerder,medium-high,low,medium-high,low,0,16,10,0,0,56,755,175,8,2,14,0,0,0.967,0.429,1,0,0,,,,,755,,,,,,56,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.HerderMetrics,HerderMetrics,low,low,low,low,0,3,0,0,0,3,48,11,3,0,3,0,0,0.333,0.167,0,0,0,,,,,48,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.HerderRequest,HerderRequest,low,low,low,low,0,2,0,0,0,3,28,7,2,0,2,0,0,0,0.25,0,0,0,,,,,28,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20452;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20452;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21102;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21102;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22485;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22485;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22990;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22990;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$25365;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$25365;,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27469;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27469;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27744;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$27744;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$28498;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$28498;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$29783;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$29783;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$30732;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$30732;,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32298;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32298;,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40929;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40929;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$41539;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$41539;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43000;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43000;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43663;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43663;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44156;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44156;,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44938;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44938;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$45269;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$45269;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$48216;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$48216;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$54036;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$54036;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$9717;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$9717;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.RebalanceListener,RebalanceListener,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private backoff( long ): void,backoff( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public halt( ): void,halt( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private handleRebalanceCompleted( ): boolean,handleRebalanceCompleted( ): boolean,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,34,0,4,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.protected herderMetrics( ): HerderMetrics,herderMetrics( ): HerderMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private peekWithoutException( ): HerderRequest,peekWithoutException( ): HerderRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private readConfigToEnd( long ): boolean,readConfigToEnd( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,3,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startWork( ): void,startWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,17,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public tick( ): void,tick( ): void,medium-high,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,5,50,0,4,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private updateDeletedConnectorStatus( ): void,updateDeletedConnectorStatus( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->canReadConfigs,canReadConfigs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->herderMetrics,final herderMetrics : HerderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerSyncTimeoutMs,final workerSyncTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerTasksShutdownTimeoutMs,final workerTasksShutdownTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerUnsyncBackoffMs,final workerUnsyncBackoffMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->needsReconfigRebalance,needsReconfigRebalance : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->rebalanceResolved,rebalanceResolved : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS,static final RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->START_STOP_THREAD_POOL_SIZE,static final START_STOP_THREAD_POOL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->generation,volatile generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotAssignedException,NotAssignedException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotLeaderException,NotLeaderException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.RebalanceNeededException,RebalanceNeededException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.RequestTargetException,RequestTargetException,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator,WorkerCoordinator,low,low,low-medium,low,0,4,1,0,0,7,229,26,2,0,4,0,0,1,0.375,1,0,0,,,,,229,,,,,,7,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.LeaderState,LeaderState,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.WorkerCoordinatorMetrics,WorkerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,19,1,1,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->leaderState,leaderState : LeaderState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->rejoinRequested,rejoinRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerGroupMember,WorkerGroupMember,low,low,low-medium,low,0,7,1,0,0,11,112,27,2,0,7,0,0,1,0.571,1,0,0,,,,,112,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ensureActive( ): void,ensureActive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public maybeLeaveGroup( ): void,maybeLeaveGroup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.private stop( boolean ): void,stop( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->stopped,stopped : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener,WorkerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.connect.runtime.isolation,org.apache.kafka.connect.runtime.isolation,low,low,low-medium,low,,,,,,13,660,,,,,,,,,,,,,8,8,0,660,0,0,0,1,0,13,,,,,,,
org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader,DelegatingClassLoader,low,low,low-medium,low,0,2,1,0,0,9,209,29,0,0,2,0,0,0,0,0,0,0,,,,,209,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$4450;,Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$4450;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$8797;,Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$8797;,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private addAllAliases( ): void,addAllAliases( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.protected initLoaders( ): void,initLoaders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,25,0,1,0
org.apache.kafka.connect.runtime.isolation.PluginClassLoader,PluginClassLoader,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginDesc<T>,PluginDesc,low,low,low-medium,low,0,2,0,0,0,3,62,7,0,0,2,0,0,0,0.25,0,0,0,,,,,62,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public compareTo( PluginDesc ): int,compareTo( PluginDesc ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.isolation.PluginScanResult,PluginScanResult,low,low,low,low,0,1,0,0,0,1,20,2,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.isolation.PluginType,PluginType,low,low,low,low,0,0,0,0,0,0,20,0,0,6,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONNECTOR,static final CONNECTOR : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONVERTER,static final CONVERTER : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->SINK,static final SINK : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->SOURCE,static final SOURCE : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->TRANSFORMATION,static final TRANSFORMATION : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->UNKNOWN,static final UNKNOWN : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginUtils,PluginUtils,low,low,low-medium,low,0,0,0,0,0,0,200,0,0,0,0,0,0,0,0,0,0,0,,,,,200,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginUtils.DirectoryEntry,DirectoryEntry,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.isolation.Plugins,Plugins,low,low,low-medium,low,0,0,0,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,,,,,121,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.isolation.Plugins$2220;,Lorg.apache.kafka.connect.runtime.isolation.Plugins$2220;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest,org.apache.kafka.connect.runtime.rest,low,low,low,low,,,,,,4,137,,,,,,,,,,,,,2,2,0,137,0,1,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer,RestServer,low,low,low-medium,low,0,1,0,0,0,2,137,10,0,1,1,0,0,0,0,0,0,0,,,,,137,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer.HttpResponse<T>,HttpResponse,low,low,low,low,1,2,0,0,0,2,14,4,2,0,2,0,0,1,0,1,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,0,0
<Field>org.apache.kafka.connect.runtime.rest.RestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.entities,org.apache.kafka.connect.runtime.rest.entities,low,low,medium-high,low,,,,,,19,504,,,,,,,,,,,,,15,15,0,504,0,0,0.067,1,0.067,19,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigInfo,ConfigInfo,low,low,low,low,0,1,0,0,0,1,28,3,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConfigInfos,ConfigInfos,low,low,low-medium,low,0,2,0,0,0,2,55,6,1,0,2,0,0,0,0,0,0,0,,,,,55,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public errorCount( ): int,errorCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->errorCount,final errorCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo,ConfigKeyInfo,low,low,low-medium,low,0,3,0,0,0,3,114,9,2,0,3,0,0,0.5,0,0.333,0,0,,,,,114,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public orderInGroup( ): int,orderInGroup( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public required( ): boolean,required( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->orderInGroup,final orderInGroup : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->required,final required : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo,ConfigValueInfo,low,low,low-medium,low,0,2,0,0,0,2,61,6,1,0,2,0,0,0,0,0,0,0,,,,,61,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo,ConnectorInfo,low,low,low,low,0,1,0,0,0,1,37,3,0,0,1,0,0,0,0,0,0,0,,,,,37,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo,ConnectorPluginInfo,low,low,low,low,0,1,0,0,0,1,45,3,0,0,1,0,0,0,0,0,0,0,,,,,45,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo,ConnectorStateInfo,low,low,low-medium,low,0,1,0,0,0,1,69,3,1,0,1,0,0,0,0,0,0,0,,,,,69,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.AbstractState,AbstractState,low,low,low,low,0,0,0,0,2,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.ConnectorState,ConnectorState,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.TaskState,TaskState,low,low,low,low,0,3,0,1,0,3,22,9,1,0,3,0,0,0,0.333,0,0,0,,,,,22,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public connector( ): ConnectorState,connector( ): ConnectorState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->connector,final connector : ConnectorState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorType,ConnectorType,low,low,low,low,0,0,0,0,0,0,15,0,0,3,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->SINK,static final SINK : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->SOURCE,static final SOURCE : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->UNKNOWN,static final UNKNOWN : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest,CreateConnectorRequest,low,low,low,low,0,1,0,0,0,1,23,3,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ErrorMessage,ErrorMessage,low,low,low,low,0,2,0,0,0,2,23,6,1,0,2,0,0,0,0,0,0,0,,,,,23,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ServerInfo,ServerInfo,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public ServerInfo( ): void,ServerInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.TaskInfo,TaskInfo,low,low,low,low,0,1,0,0,0,1,22,3,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.connect.runtime.rest.errors,org.apache.kafka.connect.runtime.rest.errors,low,low,low,low,,,,,,2,59,,,,,,,,,,,,,3,3,0,59,0,0,0,1,0,2,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.BadRequestException,BadRequestException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper,ConnectExceptionMapper,low,low,low,low,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectRestException,ConnectRestException,low,low,low,low,0,2,0,0,0,2,25,4,2,0,2,0,0,1,0,1,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.resources,org.apache.kafka.connect.runtime.rest.resources,low,low,low-medium,low,,,,,,1,229,,,,,,,,,,,,,6,5,1,229,0,0,0.167,1,0.167,1,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource,ConnectorPluginsResource,low,low,low,low,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,,,,,43,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource,ConnectorsResource,low,low,low-medium,low,0,0,0,0,0,0,179,0,0,1,0,0,0,0,0,0,0,0,,,,,179,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.CreatedConnectorInfoTranslator,CreatedConnectorInfoTranslator,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.IdentityTranslator<T>,IdentityTranslator,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3617;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3617;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4455;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4455;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6544;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6544;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8293;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8293;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.Translator<T,U>",Translator,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->REQUEST_TIMEOUT_MS,static final REQUEST_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.RootResource,RootResource,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.runtime.standalone,org.apache.kafka.connect.runtime.standalone,low,low,low,low,,,,,,4,197,,,,,,,,,,,,,3,3,0,197,0,0,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneConfig,StandaloneConfig,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder,StandaloneHerder,low,low,low-medium,low,0,3,0,0,0,4,185,14,0,0,3,0,0,0,0,0,0,0,,,,,185,,,,,,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$5082;,Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$5082;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,0
<Package>org.apache.kafka.connect.sink,org.apache.kafka.connect.sink,low,low,low,low,,,,,,10,73,,,,,,,,,,,,,4,3,1,73,0,0,0.75,1,0.75,10,,,,,,,
org.apache.kafka.connect.sink.SinkConnector,SinkConnector,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.connect.sink.SinkRecord,SinkRecord,low,low,low,low,0,2,0,0,0,2,41,8,1,0,2,0,0,0,0,0,0,0,,,,,41,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.connect.sink.SinkRecord.public kafkaOffset( ): long,kafkaOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.sink.SinkRecord->kafkaOffset,final kafkaOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkTask,SinkTask,low,low,low,low,0,1,0,0,0,1,22,1,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.sink.SinkTaskContext,SinkTaskContext,low,low,low,low,0,2,0,1,0,7,8,2,0,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract requestCommit( ): void,requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.connect.source,org.apache.kafka.connect.source,low,low,low,low,,,,,,6,70,,,,,,,,,,,,,4,3,1,70,0,0,0.75,1,0.75,6,,,,,,,
org.apache.kafka.connect.source.SourceConnector,SourceConnector,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.connect.source.SourceRecord,SourceRecord,low,low,low-medium,low,0,1,0,0,0,3,57,6,0,0,1,0,0,0,0,0,0,0,,,,,57,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.source.SourceRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,0,0
org.apache.kafka.connect.source.SourceTask,SourceTask,low,low,low,low,0,2,0,0,0,2,10,2,0,0,2,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.source.SourceTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.source.SourceTaskContext,SourceTaskContext,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.connect.storage,org.apache.kafka.connect.storage,low,low,medium-high,low,,,,,,89,1172,,,,,,,,,,,,,21,15,6,1172,0,1,0.286,1,0.286,89,,,,,,,
org.apache.kafka.connect.storage.ConfigBackingStore,ConfigBackingStore,low,low,low,low,0,3,0,1,0,11,17,3,0,0,3,0,0,0,0.333,0,0,0,,,,,17,,,,,,11,,,,,,,
org.apache.kafka.connect.storage.ConfigBackingStore.UpdateListener,UpdateListener,low,low,low,low,0,0,0,1,0,4,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract setUpdateListener( UpdateListener ): void,setUpdateListener( UpdateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.Converter,Converter,low,low,low,low,0,0,0,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.connect.storage.FileOffsetBackingStore,FileOffsetBackingStore,low,low,low,low,0,5,1,0,0,15,44,37,0,0,5,0,0,0,0,0,0,0,,,,,44,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public FileOffsetBackingStore( ): void,FileOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.private load( ): void,load( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,15,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
org.apache.kafka.connect.storage.KafkaConfigBackingStore,KafkaConfigBackingStore,low,low,medium-high,low,0,2,0,0,0,2,316,11,2,1,2,0,0,0,0,1,0,0,,,,,316,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.KafkaConfigBackingStore.ConsumeCallback,ConsumeCallback,low,low,low,low,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,,,,,112,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaConfigBackingStore$23437;,Lorg.apache.kafka.connect.storage.KafkaConfigBackingStore$23437;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->READ_TO_END_TIMEOUT_MS,static final READ_TO_END_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->offset,volatile offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->started,volatile started : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore,KafkaOffsetBackingStore,low,low,low-medium,low,0,2,0,0,0,2,125,10,0,0,2,0,0,0,0,0,0,0,,,,,125,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4795;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4795;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$5842;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$5842;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore.SetCallbackFuture,SetCallbackFuture,low,low,low,low,0,3,0,0,0,3,50,9,2,0,3,0,0,0,0.333,1,0,0,,,,,50,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.connect.storage.KafkaStatusBackingStore,KafkaStatusBackingStore,low,low,low-medium,low,0,3,0,0,0,3,280,10,1,0,3,0,0,0,0,1,0,0,,,,,280,,,,,,3,,,,,,,
org.apache.kafka.connect.storage.KafkaStatusBackingStore.CacheEntry<T>,CacheEntry,low,low,low,low,1,7,1,0,0,7,20,16,3,0,7,0,0,0.778,0.476,0.762,0,0,,,,,20,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$10119;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$10119;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6821;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6821;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$7671;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$7671;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->generation,generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore,MemoryConfigBackingStore,low,low,low-medium,low,0,2,0,0,0,2,89,4,0,0,2,0,0,0,0,0,0,0,,,,,89,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore.ConnectorState,ConnectorState,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.storage.MemoryOffsetBackingStore,MemoryOffsetBackingStore,low,low,low,low,0,4,0,0,0,7,50,17,0,0,4,0,0,0,0,0,0,0,,,,,50,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2985;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2985;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3648;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3648;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public MemoryOffsetBackingStore( ): void,MemoryOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,0,0,0
org.apache.kafka.connect.storage.MemoryStatusBackingStore,MemoryStatusBackingStore,low,low,low,low,0,4,0,0,0,4,44,9,0,0,4,0,0,0,0,0,0,0,,,,,44,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public MemoryStatusBackingStore( ): void,MemoryStatusBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.storage.OffsetBackingStore,OffsetBackingStore,low,low,low,low,0,2,0,1,0,5,9,2,0,0,2,0,0,0,0,0,0,0,,,,,9,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.OffsetStorageReader,OffsetStorageReader,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageReaderImpl,OffsetStorageReaderImpl,low,low,low-medium,low,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageWriter,OffsetStorageWriter,low,low,low-medium,low,0,3,1,0,0,6,75,19,1,0,3,0,0,0,0,1,0,0,,,,,75,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7941;,Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7941;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.private flushing( ): boolean,flushing( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized beginFlush( ): boolean,synchronized beginFlush( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,2,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized cancelFlush( ): void,synchronized cancelFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,1
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->currentFlushId,currentFlushId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetUtils,OffsetUtils,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.StatusBackingStore,StatusBackingStore,low,low,low,low,0,3,0,1,0,12,13,3,0,0,3,0,0,0,0,0,0,0,,,,,13,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.StringConverter,StringConverter,low,low,low,low,0,1,0,0,0,1,28,1,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.storage.StringConverter.public StringConverter( ): void,StringConverter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.tools,org.apache.kafka.connect.tools,low,low,medium-high,low,,,,,,15,523,,,,,,,,,,,,,13,13,0,523,0,0,0,1,0,15,,,,,,,
org.apache.kafka.connect.tools.MockConnector,MockConnector,low,low,low,low,0,1,0,0,0,4,47,9,0,1,1,0,0,0,0,0,0,0,,,,,47,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.tools.MockConnector$3124;,Lorg.apache.kafka.connect.tools.MockConnector$3124;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.tools.MockConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
<Field>org.apache.kafka.connect.tools.MockConnector->DEFAULT_FAILURE_DELAY_MS,static final DEFAULT_FAILURE_DELAY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSinkConnector,MockSinkConnector,low,low,low,low,0,1,0,0,0,1,32,3,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.tools.MockSinkTask,MockSinkTask,low,low,low,low,0,2,0,0,0,2,33,4,2,0,2,0,0,0,0,0,0,0,,,,,33,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkTask.private setTimeout( ): void,setTimeout( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.tools.MockSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.MockSinkTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSinkTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSourceConnector,MockSourceConnector,low,low,low,low,0,1,0,0,0,1,32,3,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.tools.MockSourceTask,MockSourceTask,low,low,low,low,0,1,0,0,0,1,28,2,2,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.MockSourceTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSourceTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.SchemaSourceConnector,SchemaSourceConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.SchemaSourceTask,SchemaSourceTask,low,low,low-medium,low,0,1,0,0,0,1,112,3,7,0,1,0,0,0,0,0,0,0,,,,,112,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->count,count : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->maxNumMsgs,maxNumMsgs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->multipleSchema,multipleSchema : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->partitionCount,partitionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.TransformationDoc,TransformationDoc,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.connect.tools.TransformationDoc.DocInfo,DocInfo,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.tools.VerifiableSinkConnector,VerifiableSinkConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSinkTask,VerifiableSinkTask,low,low,low-medium,low,0,1,0,0,0,1,51,2,1,0,1,0,0,0,0,0,0,0,,,,,51,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSourceConnector,VerifiableSourceConnector,low,low,low,low,0,1,0,0,0,1,24,2,0,0,1,0,0,0,0,0,0,0,,,,,24,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSourceTask,VerifiableSourceTask,low,low,low-medium,low,0,1,0,0,0,1,79,3,3,0,1,0,0,0,0,0,0,0,,,,,79,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.transforms,org.apache.kafka.connect.transforms,low,low,high,low,,,,,,105,1342,,,,,,,,,,,,,40,33,7,1342,0,0,0.4,1,0.4,105,,,,,,,
org.apache.kafka.connect.transforms.Cast<R>,Cast,low,low,low-medium,low,0,4,2,0,2,10,267,30,0,0,4,0,0,0,0.125,0,0,0,,,,,267,,,,,,10,,,,,,,
org.apache.kafka.connect.transforms.Cast.FieldType,FieldType,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.Cast.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.Cast.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.Cast<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.ExtractField<R>,ExtractField,low,low,low-medium,low,0,2,0,0,2,5,52,11,0,0,2,0,0,0,0.25,0,0,0,,,,,52,,,,,,5,,,,,,,
org.apache.kafka.connect.transforms.ExtractField.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.ExtractField.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,0,0
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.Flatten<R>,Flatten,low,low,low-medium,low,0,4,2,0,2,6,159,25,0,0,4,0,0,0,0.125,0,0,0,,,,,159,,,,,,6,,,,,,,
org.apache.kafka.connect.transforms.Flatten.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.Flatten.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.HoistField<R>,HoistField,low,low,low-medium,low,0,2,0,0,2,4,58,16,0,0,2,0,0,0,0.25,0,0,0,,,,,58,,,,,,4,,,,,,,
org.apache.kafka.connect.transforms.HoistField.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.HoistField.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,1,0,0
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.transforms.InsertField<R>,InsertField,low-medium,low,low-medium,low,0,4,2,0,2,23,146,43,5,0,4,0,0,0,0.125,1,0,0,,,,,146,,,,,,23,,,,,,,
org.apache.kafka.connect.transforms.InsertField.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.InsertField.InsertionSpec,InsertionSpec,low,low,low,low,0,0,0,0,0,0,13,0,1,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.InsertField.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.InsertField.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,14,1,0,10
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,2,20,1,0,10
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.transforms.InsertField<R>->offsetField,offsetField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->partitionField,partitionField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->staticField,staticField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->timestampField,timestampField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->topicField,topicField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.MaskField<R>,MaskField,low,low,low-medium,low,0,4,2,0,2,8,86,21,0,0,4,0,0,0,0.125,0,0,0,,,,,86,,,,,,8,,,,,,,
org.apache.kafka.connect.transforms.MaskField.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.MaskField.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.RegexRouter<R>,RegexRouter,low,low,low,low,0,2,0,0,0,3,31,9,0,0,2,0,0,0,0.25,0,0,0,,,,,31,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.RegexRouter.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,0
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.ReplaceField<R>,ReplaceField,low,low,low-medium,low,0,4,2,0,2,9,117,29,0,0,4,0,0,0,0.125,0,0,0,,,,,117,,,,,,9,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,0,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,0,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.transforms.SetSchemaMetadata<R>,SetSchemaMetadata,low,low,low-medium,low,0,2,0,0,2,7,69,21,0,0,2,0,0,0,0.25,0,0,0,,,,,69,,,,,,7,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,19,1,0,0
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.transforms.TimestampConverter<R>,TimestampConverter,low,low,low-medium,low,0,4,2,0,2,12,259,42,1,0,4,0,0,0,0.125,1,0,0,,,,,259,,,,,,12,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Config,Config,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Key<R>,Key,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$4975;,Lorg.apache.kafka.connect.transforms.TimestampConverter$4975;,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$5988;,Lorg.apache.kafka.connect.transforms.TimestampConverter$5988;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$6683;,Lorg.apache.kafka.connect.transforms.TimestampConverter$6683;,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$7754;,Lorg.apache.kafka.connect.transforms.TimestampConverter$7754;,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$9055;,Lorg.apache.kafka.connect.transforms.TimestampConverter$9055;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.TimestampTranslator,TimestampTranslator,low,low,low,low,0,0,0,1,5,3,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Value<R>,Value,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,0,3
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,25,1,0,4
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->config,config : Config,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.TimestampRouter<R>,TimestampRouter,low,low,low,low,0,2,0,0,0,3,47,16,0,0,2,0,0,0,0.25,0,0,0,,,,,47,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.TimestampRouter.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampRouter$2832;,Lorg.apache.kafka.connect.transforms.TimestampRouter$2832;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,1,0,0
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.transforms.Transformation<R>,Transformation,low,low,low,low,0,2,0,1,0,3,5,2,0,0,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.transforms.Transformation<R>.public abstract apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Transformation<R>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.transforms.ValueToKey<R>,ValueToKey,low,low,low,low,0,4,2,0,0,9,46,29,0,0,4,0,0,0,0.125,0,0,0,,,,,46,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,0,0
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.connect.transforms.util,org.apache.kafka.connect.transforms.util,low,low,low,low,,,,,,0,59,,,,,,,,,,,,,5,5,0,59,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.transforms.util.NonEmptyListValidator,NonEmptyListValidator,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.util.RegexValidator,RegexValidator,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.util.Requirements,Requirements,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.util.SchemaUtil,SchemaUtil,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.util.SimpleConfig,SimpleConfig,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.util,org.apache.kafka.connect.util,low,low,medium-high,low,,,,,,64,487,,,,,,,,,,,,,16,15,1,487,0,1,0.188,1,0.188,64,,,,,,,
org.apache.kafka.connect.util.Callback<V>,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ConnectUtils,ConnectUtils,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.util.ConnectorTaskId,ConnectorTaskId,low,low,low,low,0,3,0,0,0,5,39,14,1,0,3,0,0,0,0.333,0,0,0,,,,,39,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public compareTo( ConnectorTaskId ): int,compareTo( ConnectorTaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,0,2
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public task( ): int,task( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.util.ConnectorTaskId->task,final task : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ConnectorUtils,ConnectorUtils,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
"org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>",ConvertingFutureCallback,low,low,low,low,1,6,1,0,0,7,39,18,1,0,6,0,0,0,0.556,1,0,0,,,,,39,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public abstract convert( U ): T",abstract convert( U ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public cancel( boolean ): boolean",cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public get( ): T",get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isCancelled( ): boolean",isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isDone( ): boolean",isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.private result( ): T",result( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,1
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->result",result : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.FutureCallback<T>,FutureCallback,low,low,low,low,0,2,0,0,0,2,8,5,0,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public FutureCallback( ): void,FutureCallback( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public convert( T ): T,convert( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.connect.util.KafkaBasedLog<K,V>",KafkaBasedLog,low,low,low-medium,low-medium,0,6,2,0,0,19,149,69,1,1,6,0,0,1,0.625,1,0,0,,,,,149,,,,,,19,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.util.KafkaBasedLog$5898;,Lorg.apache.kafka.connect.util.KafkaBasedLog$5898;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.util.KafkaBasedLog.WorkThread,WorkThread,low,low,low,low,0,4,2,0,0,9,29,28,0,0,2,0,0,0,0,0,0,0,,,,,29,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private poll( long ): void",poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private readToLogEnd( ): void",readToLogEnd( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,0,1,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public send( K, V ): void","send( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public start( ): void",start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,23,0,1,1
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public stop( ): void",stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,0,1
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->CREATE_TOPIC_TIMEOUT_MS",static final CREATE_TOPIC_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->stopRequested",stopRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil,ReflectionsUtil,low,low,low,low,0,1,0,0,0,1,34,5,0,0,0,1,0,0,0,0,0,0,,,,,34,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil.EmptyUrlType,EmptyUrlType,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.util.ReflectionsUtil.public static registerUrlTypes( ): void,static registerUrlTypes( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.connect.util.SafeObjectInputStream,SafeObjectInputStream,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.connect.util.ShutdownableThread,ShutdownableThread,low,low,low,low,0,5,1,0,0,6,41,19,0,0,5,0,0,0,0,0,0,0,,,,,41,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.util.ShutdownableThread.public abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public forceShutdown( ): void,forceShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public getRunning( ): boolean,getRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,1,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public startGracefulShutdown( ): void,startGracefulShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.util.SinkUtils,SinkUtils,low,low,low,low,0,1,0,0,0,1,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.util.SinkUtils.private SinkUtils( ): void,SinkUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.connect.util.Table<R,C,V>",Table,low,low,low,low,0,3,0,0,0,7,28,19,0,0,3,0,0,0,0.167,0,0,0,,,,,28,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public get( R, C ): V","get( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,0,0
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public put( R, C, V ): V","put( R, C, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,0,0
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public remove( R, C ): V","remove( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,0,0
org.apache.kafka.connect.util.TopicAdmin,TopicAdmin,low,low,low-medium,low,0,1,0,0,0,1,92,3,0,0,1,0,0,0,0,0,0,0,,,,,92,,,,,,1,,,,,,,
org.apache.kafka.connect.util.TopicAdmin.NewTopicBuilder,NewTopicBuilder,low,low,low,low,0,5,0,0,0,5,32,15,2,0,5,0,0,1,0.55,1,0,0,,,,,32,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.util.TopicAdmin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.jmh.cache,org.apache.kafka.jmh.cache,low,low,low,low,,,,,,2,29,,,,,,,,,,,,,1,1,0,29,0,0,0,1,0,2,,,,,,,
org.apache.kafka.jmh.cache.LRUCacheBenchmark,LRUCacheBenchmark,low,low,low,low,0,1,0,0,0,2,29,6,1,1,1,0,0,0,0,0,0,0,,,,,29,,,,,,2,,,,,,,
<Method>org.apache.kafka.jmh.cache.LRUCacheBenchmark.public setUp( ): void,setUp( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,1
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->counter, counter : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->DISTINCT_KEYS,static final DISTINCT_KEYS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.common,org.apache.kafka.jmh.common,low,low,low,low,,,,,,1,15,,,,,,,,,,,,,2,2,0,15,0,0,0,1,0,1,,,,,,,
org.apache.kafka.jmh.common.TopicBenchmark,TopicBenchmark,low,low,low,low,0,1,0,0,0,1,15,4,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.jmh.common.TopicBenchmark.BenchState,BenchState,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.jmh.common.TopicBenchmark.public testValidate( BenchState ): BenchState,testValidate( BenchState ): BenchState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Package>org.apache.kafka.jmh.producer,org.apache.kafka.jmh.producer,low,low,low,low,,,,,,0,11,,,,,,,,,,,,,1,1,0,11,0,0,0,1,0,0,,,,,,,
org.apache.kafka.jmh.producer.ProducerRecordBenchmark,ProducerRecordBenchmark,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Package>org.apache.kafka.jmh.record,org.apache.kafka.jmh.record,low,low,low,low,,,,,,2,65,,,,,,,,,,,,,2,2,0,65,0,0,0,1,0,2,,,,,,,
org.apache.kafka.jmh.record.RecordBatchIterationBenchmark,RecordBatchIterationBenchmark,low,low,low-medium,low,0,1,0,0,0,2,65,10,7,0,1,0,0,0,0,0,0,0,,,,,65,,,,,,2,,,,,,,
org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.Bytes,Bytes,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.public init( ): void,init( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,0,6
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->batchSizes,batchSizes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->bytes,bytes : Bytes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->batchCount,final batchCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->maxBatchSize,final maxBatchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->startingOffset,final startingOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->messageSize,messageSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->messageVersion,messageVersion : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.log4jappender,org.apache.kafka.log4jappender,low,low,low,low,,,,,,29,138,,,,,,,,,,,,,1,1,0,138,0,0,0,1,0,29,,,,,,,
org.apache.kafka.log4jappender.KafkaLog4jAppender,KafkaLog4jAppender,low-medium,low,low-medium,low,0,9,0,0,0,29,138,56,3,0,9,0,0,0.722,0.556,0.806,0,0,,,,,138,,,,,,29,,,,,,,
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public activateOptions( ): void,activateOptions( ): void,medium-high,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,3,36,0,0,4
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRequiredNumAcks( ): int,getRequiredNumAcks( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRetries( ): int,getRetries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSyncSend( ): boolean,getSyncSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public requiresLayout( ): boolean,requiresLayout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRequiredNumAcks( int ): void,setRequiredNumAcks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRetries( int ): void,setRetries( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSyncSend( boolean ): void,setSyncSend( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->requiredNumAcks,requiredNumAcks : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->retries,retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->syncSend,syncSend : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.server.policy,org.apache.kafka.server.policy,low,low,low,low,,,,,,2,48,,,,,,,,,,,,,4,2,2,48,0,0,0.5,1,0.5,2,,,,,,,
org.apache.kafka.server.policy.AlterConfigPolicy,AlterConfigPolicy,low,low,low,low,0,1,0,1,0,1,16,1,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.server.policy.AlterConfigPolicy.RequestMetadata,RequestMetadata,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.server.policy.AlterConfigPolicy.public abstract validate( RequestMetadata ): void,validate( RequestMetadata ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.server.policy.CreateTopicPolicy,CreateTopicPolicy,low,low,low,low,0,1,0,1,0,1,32,1,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
org.apache.kafka.server.policy.CreateTopicPolicy.RequestMetadata,RequestMetadata,low,low,low,low,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Method>org.apache.kafka.server.policy.CreateTopicPolicy.public abstract validate( RequestMetadata ): void,validate( RequestMetadata ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.streams,org.apache.kafka.streams,low,low,medium-high,low,,,,,,70,1253,,,,,,,,,,,,,21,11,10,1253,0,1,0.476,1,0.476,70,,,,,,,
"org.apache.kafka.streams.Consumed<K,V>",Consumed,low,low,low,low,0,1,0,0,0,1,39,2,0,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.Consumed<K,V>.protected Consumed( Consumed ): void",Consumed( Consumed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.KafkaClientSupplier,KafkaClientSupplier,low,low,low,low,0,0,0,1,0,4,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
org.apache.kafka.streams.KafkaStreams,KafkaStreams,low-medium,low,medium-high,low-medium,0,13,5,0,0,30,406,81,2,1,10,0,0,0.619,0.65,0.9,0,0,,,,,406,,,,,,30,,,,,,,
org.apache.kafka.streams.KafkaStreams.DelegatingStateRestoreListener,DelegatingStateRestoreListener,low,low,low,low,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,,,,,36,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.KafkaStreams$32812;,Lorg.apache.kafka.streams.KafkaStreams$32812;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.KafkaStreams$35473;,Lorg.apache.kafka.streams.KafkaStreams$35473;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.KafkaStreams$38402;,Lorg.apache.kafka.streams.KafkaStreams$38402;,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.streams.KafkaStreams.State,State,low,low,low,low,0,2,0,0,0,2,9,4,0,6,2,0,0,0,0.25,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.streams.KafkaStreams.StateListener,StateListener,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.KafkaStreams.StreamStateListener,StreamStateListener,low,low,low,low,1,5,1,0,0,9,38,13,0,0,2,0,0,0,0,0,0,0,,,,,38,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.KafkaStreams.public cleanUp( ): void,cleanUp( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,0
<Method>org.apache.kafka.streams.KafkaStreams.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.KafkaStreams.private isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,1
<Method>org.apache.kafka.streams.KafkaStreams.private setRunningFromCreated( ): boolean,setRunningFromCreated( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,1,5
<Method>org.apache.kafka.streams.KafkaStreams.private setState( State ): boolean,setState( State ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,16,1,2,8
<Method>org.apache.kafka.streams.KafkaStreams.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,3
<Method>org.apache.kafka.streams.KafkaStreams.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.KafkaStreams.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,17,0,1,0
<Method>org.apache.kafka.streams.KafkaStreams.private validateIsRunning( ): void,validateIsRunning( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,1
"<Method>org.apache.kafka.streams.KafkaStreams.private waitOnState( State, long ): boolean","waitOnState( State, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,19,2,0,1
<Field>org.apache.kafka.streams.KafkaStreams->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->DEFAULT_CLOSE_TIMEOUT,static final DEFAULT_CLOSE_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.KeyValue<K,V>",KeyValue,low,low,low,low,2,3,0,0,0,3,23,8,2,0,2,1,0,0,0.222,0.667,0,0,,,,,23,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public KeyValue( K, V ): void","KeyValue( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public static pair( K, V ): KeyValue","static pair( K, V ): KeyValue",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Field>org.apache.kafka.streams.KeyValue<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.KeyValue<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsBuilder,StreamsBuilder,low,low,low-medium,low,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0,0,0,0,,,,,109,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamsConfig,StreamsConfig,low,low,medium-high,low,0,0,0,0,0,0,478,0,1,2,0,0,0,0,0,0,0,0,,,,,478,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamsConfig.InternalConfig,InternalConfig,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_COMMIT_INTERVAL_MS,static final DEFAULT_COMMIT_INTERVAL_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->EOS_DEFAULT_COMMIT_INTERVAL_MS,static final EOS_DEFAULT_COMMIT_INTERVAL_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsMetrics,StreamsMetrics,low,low,low,low,0,0,0,1,0,8,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,8,,,,,,,
org.apache.kafka.streams.Topology,Topology,low,low,low-medium,low,0,0,0,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,,,,,150,,,,,,0,,,,,,,
org.apache.kafka.streams.Topology.AutoOffsetReset,AutoOffsetReset,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.TopologyDescription,TopologyDescription,low,low,low,low,0,0,0,1,0,2,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
org.apache.kafka.streams.TopologyDescription.GlobalStore,GlobalStore,low,low,low,low,2,2,0,1,0,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.TopologyDescription.Node,Node,low,low,low,low,0,0,0,1,3,3,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.streams.TopologyDescription.Processor,Processor,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.TopologyDescription.Sink,Sink,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.TopologyDescription.Source,Source,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.TopologyDescription.Subtopology,Subtopology,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.streams.errors,org.apache.kafka.streams.errors,low,low,medium-high,low,,,,,,2,148,,,,,,,,,,,,,17,15,2,148,0,0,0.118,1,0.118,2,,,,,,,
org.apache.kafka.streams.errors.BrokerNotFoundException,BrokerNotFoundException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.BrokerNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.DefaultProductionExceptionHandler,DefaultProductionExceptionHandler,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.DeserializationExceptionHandler,DeserializationExceptionHandler,low,low,low,low,0,0,0,1,0,1,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.errors.DeserializationExceptionHandler.DeserializationHandlerResponse,DeserializationHandlerResponse,low,low,low,low,0,0,0,0,0,0,8,0,1,2,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.InvalidStateStoreException,InvalidStateStoreException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.InvalidStateStoreException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.LockException,LockException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.LockException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.LogAndContinueExceptionHandler,LogAndContinueExceptionHandler,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.LogAndFailExceptionHandler,LogAndFailExceptionHandler,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.ProcessorStateException,ProcessorStateException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.ProcessorStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.ProductionExceptionHandler,ProductionExceptionHandler,low,low,low,low,0,0,0,1,0,1,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.errors.ProductionExceptionHandler.ProductionExceptionHandlerResponse,ProductionExceptionHandlerResponse,low,low,low,low,0,0,0,0,0,0,9,0,1,2,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.streams.errors.StreamsException,StreamsException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.StreamsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskAssignmentException,TaskAssignmentException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskIdFormatException,TaskIdFormatException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskIdFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskMigratedException,TaskMigratedException,low,low,low,low,0,0,0,0,0,0,17,0,0,1,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskMigratedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TopologyBuilderException,TopologyBuilderException,low,low,low,low,0,0,0,0,0,0,9,0,0,1,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TopologyBuilderException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TopologyException,TopologyException,low,low,low,low,0,0,0,0,0,0,9,0,0,1,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.errors.TopologyException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.examples.pageview,org.apache.kafka.streams.examples.pageview,low,low,low-medium,low,,,,,,4,201,,,,,,,,,,,,,10,10,0,201,0,0,0,1,0,4,,,,,,,
org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>,JsonPOJODeserializer,low,low,low,low,0,2,0,0,0,2,20,3,0,0,2,0,0,0,0,0,0,0,,,,,20,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>.public JsonPOJODeserializer( ): void,JsonPOJODeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJODeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>,JsonPOJOSerializer,low,low,low,low,0,2,0,0,0,2,15,3,0,0,2,0,0,0,0,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>.public JsonPOJOSerializer( ): void,JsonPOJOSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.examples.pageview.JsonPOJOSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.examples.pageview.JsonTimestampExtractor,JsonTimestampExtractor,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo,PageViewTypedDemo,low,low,low-medium,low,0,0,0,0,0,0,103,0,0,0,0,0,0,0,0,0,0,0,,,,,103,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$7539;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$7539;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8193;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8193;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8769;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$8769;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageView,PageView,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageViewByRegion,PageViewByRegion,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.RegionCount,RegionCount,low,low,low,low,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.UserProfile,UserProfile,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.WindowedPageViewByRegion,WindowedPageViewByRegion,low,low,low,low,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewUntypedDemo,PageViewUntypedDemo,low,low,low-medium,low,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4317;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4317;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4603;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$4603;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5103;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5103;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5629;,Lorg.apache.kafka.streams.examples.pageview.PageViewUntypedDemo$5629;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.examples.pipe,org.apache.kafka.streams.examples.pipe,low,low,low,low,,,,,,0,24,,,,,,,,,,,,,1,1,0,24,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.pipe.PipeDemo,PipeDemo,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pipe.PipeDemo$2841;,Lorg.apache.kafka.streams.examples.pipe.PipeDemo$2841;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.examples.temperature,org.apache.kafka.streams.examples.temperature,low,low,low,low,,,,,,0,53,,,,,,,,,,,,,1,1,0,53,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.temperature.TemperatureDemo,TemperatureDemo,low,low,low-medium,low,0,0,0,0,0,0,53,0,0,2,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$4590;,Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$4590;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$4933;,Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$4933;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$5308;,Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$5308;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$6318;,Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$6318;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.examples.temperature.TemperatureDemo->TEMPERATURE_THRESHOLD,static final TEMPERATURE_THRESHOLD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.examples.temperature.TemperatureDemo->TEMPERATURE_WINDOW_SIZE,static final TEMPERATURE_WINDOW_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.examples.wordcount,org.apache.kafka.streams.examples.wordcount,low,low,low,low,,,,,,0,107,,,,,,,,,,,,,3,3,0,107,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountDemo,WordCountDemo,low,low,low,low,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,,,,,38,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3361;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3361;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3642;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$3642;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$4267;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$4267;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo,WordCountProcessorDemo,low,low,low-medium,low,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,,,,,69,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo$6181;,Lorg.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo$6181;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo.MyProcessorSupplier,MyProcessorSupplier,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.kstream,org.apache.kafka.streams.kstream,low-medium,low,high,low,,,,,,258,1208,,,,,,,,,,,,,33,13,20,1208,0,1,0.667,1,0.667,258,,,,,,,
"org.apache.kafka.streams.kstream.Aggregator<K,V,VA>",Aggregator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Aggregator<K,V,VA>.public abstract apply( K, V, VA ): VA","apply( K, V, VA ): VA",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"org.apache.kafka.streams.kstream.ForeachAction<K,V>",ForeachAction,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ForeachAction<K,V>.public abstract apply( K, V ): void","apply( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.GlobalKTable<K,V>",GlobalKTable,low,low,low,low,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.Initializer<VA>,Initializer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.Initializer<VA>.public abstract apply( ): VA,apply( ): VA,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.JoinWindows,JoinWindows,low,low,low,low,0,8,1,0,0,10,42,28,2,0,7,1,0,0.25,0.187,0.762,0,0,,,,,42,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.kstream.JoinWindows.private JoinWindows( long, long ): void","JoinWindows( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public after( long ): JoinWindows,after( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.JoinWindows.public before( long ): JoinWindows,before( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.JoinWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public static of( long ): JoinWindows,static of( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public until( long ): JoinWindows,until( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Field>org.apache.kafka.streams.kstream.JoinWindows->afterMs,final afterMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.JoinWindows->beforeMs,final beforeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Joined<K,V,VO>",Joined,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.KGroupedStream<K,V>",KGroupedStream,low-medium,low,low-medium,low,0,0,0,1,0,33,110,0,0,0,0,0,0,0,0,0,0,0,,,,,110,,,,,,33,,,,,,,
"org.apache.kafka.streams.kstream.KGroupedTable<K,V>",KGroupedTable,low,low,low,low,0,0,0,1,0,14,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,14,,,,,,,
"org.apache.kafka.streams.kstream.KStream<K,V>",KStream,medium-high,low,low-medium,low,0,2,0,1,0,64,172,2,0,0,2,0,0,0,0.25,0,0,0,,,,,172,,,,,,64,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract merge( KStream ): KStream",merge( KStream ): KStream,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.KStreamBuilder,KStreamBuilder,low,low,low-medium,low,0,0,0,0,0,0,236,0,0,0,0,0,0,0,0,0,0,0,,,,,236,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.KTable<K,V>",KTable,medium-high,low,low-medium,low,0,1,0,1,0,55,170,1,0,0,1,0,0,0,0,0,0,0,,,,,170,,,,,,55,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.KeyValueMapper<K,V,VR>",KeyValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KeyValueMapper<K,V,VR>.public abstract apply( K, V ): VR","apply( K, V ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Materialized<K,V,S>",Materialized,low,low,low-medium,low,0,4,0,0,0,4,55,18,2,0,4,0,0,0.5,0.375,0.667,0,0,,,,,55,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.protected Materialized( Materialized ): void",Materialized( Materialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,0,4
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withCachingDisabled( ): Materialized",withCachingDisabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withCachingEnabled( ): Materialized",withCachingEnabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withLoggingDisabled( ): Materialized",withLoggingDisabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->cachingEnabled",cachingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->loggingEnabled",loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Merger<K,V>",Merger,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Merger<K,V>.public abstract apply( K, V, V ): V","apply( K, V, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"org.apache.kafka.streams.kstream.Predicate<K,V>",Predicate,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Predicate<K,V>.public abstract test( K, V ): boolean","test( K, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Printed<K,V>",Printed,low,low,low,low,0,2,0,0,0,2,32,6,0,0,1,1,0,0,0.25,0,0,0,,,,,32,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.protected Printed( Printed ): void",Printed( Printed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public static toSysOut( ): Printed",static toSysOut( ): Printed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.kstream.Produced<K,V>",Produced,low,low,low,low,0,1,0,0,0,1,36,4,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.protected Produced( Produced ): void",Produced( Produced ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
org.apache.kafka.streams.kstream.Reducer<V>,Reducer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Reducer<V>.public abstract apply( V, V ): V","apply( V, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Serialized<K,V>",Serialized,low,low,low,low,0,1,0,0,0,1,16,2,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.protected Serialized( Serialized ): void",Serialized( Serialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>",SessionWindowedKStream,low,low,low,low,0,0,0,1,0,6,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.SessionWindows,SessionWindows,low,low,low,low,0,6,0,0,0,8,29,19,2,0,5,1,0,0.125,0.25,0.4,0,0,,,,,29,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.kstream.SessionWindows.private SessionWindows( long ): void,SessionWindows( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public inactivityGap( ): long,inactivityGap( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public static with( long ): SessionWindows,static with( long ): SessionWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,0
<Method>org.apache.kafka.streams.kstream.SessionWindows.public until( long ): SessionWindows,until( long ): SessionWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,2
<Field>org.apache.kafka.streams.kstream.SessionWindows->gapMs,final gapMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.SessionWindows->maintainDurationMs,maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>",TimeWindowedKStream,low,low,low,low,0,0,0,1,0,6,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.TimeWindows,TimeWindows,low,low,low,low,0,7,0,0,0,11,48,28,2,0,6,1,0,0.4,0.214,0.333,0,0,,,,,48,,,,,,11,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TimeWindows.private TimeWindows( long, long ): void","TimeWindows( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.TimeWindows.public advanceBy( long ): TimeWindows,advanceBy( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,0,3
<Method>org.apache.kafka.streams.kstream.TimeWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,4
<Method>org.apache.kafka.streams.kstream.TimeWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindows.public static of( long ): TimeWindows,static of( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,0
<Method>org.apache.kafka.streams.kstream.TimeWindows.public until( long ): TimeWindows,until( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,1
<Field>org.apache.kafka.streams.kstream.TimeWindows->advanceMs,final advanceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindows->sizeMs,final sizeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Transformer<K,V,R>",Transformer,low,low,low,low,0,3,0,1,0,4,6,3,0,0,3,0,0,0,0.5,0,0,0,,,,,6,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract punctuate( long ): R",punctuate( long ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract transform( K, V ): R","transform( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.TransformerSupplier<K,V,R>",TransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.UnlimitedWindows,UnlimitedWindows,low,low,low,low,0,7,0,0,0,8,37,20,1,1,6,1,0,0.75,0.286,1,0,0,,,,,37,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.private UnlimitedWindows( long ): void,UnlimitedWindows( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public startOn( long ): UnlimitedWindows,startOn( long ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public static of( ): UnlimitedWindows,static of( ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public until( long ): UnlimitedWindows,until( long ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->DEFAULT_START_TIMESTAMP_MS,static final DEFAULT_START_TIMESTAMP_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,VR>",ValueJoiner,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,VR>.public abstract apply( V1, V2 ): VR","apply( V1, V2 ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueMapper<V,VR>",ValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueMapper<V,VR>.public abstract apply( V ): VR",apply( V ): VR,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformer<V,VR>",ValueTransformer,low,low,low,low,0,3,0,1,0,4,6,3,0,0,3,0,0,0,0.444,0,0,0,,,,,6,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract punctuate( long ): VR",punctuate( long ): VR,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract transform( V ): VR",transform( V ): VR,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformerSupplier<V,VR>",ValueTransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.Window,Window,low,low,low,low,0,5,0,0,0,7,34,15,2,0,5,0,0,0.333,0.533,0.5,0,0,,,,,34,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Window.public Window( long, long ): void","Window( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,0,2
<Method>org.apache.kafka.streams.kstream.Window.public abstract overlap( Window ): boolean,abstract overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.streams.kstream.Window.public end( ): long,end( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.Window.public start( ): long,start( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.Window->endMs,final endMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Window->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Windowed<K>,Windowed,low,low,low,low,1,2,0,0,0,2,25,6,1,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public key( ): K,key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.Windowed<K>->key,final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Windows<W>,Windows,low,low,low,low,0,5,0,0,0,7,22,16,2,2,5,0,0,0.75,0.533,0.667,0,0,,,,,22,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected Windows( ): void,Windows( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,4
<Method>org.apache.kafka.streams.kstream.Windows<W>.public abstract size( ): long,abstract size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected segments( int ): Windows,segments( int ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.public until( long ): Windows,until( long ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
<Field>org.apache.kafka.streams.kstream.Windows<W>->maintainDurationMs,maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->segments,segments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->DEFAULT_MAINTAIN_DURATION_MS,static final DEFAULT_MAINTAIN_DURATION_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->DEFAULT_NUM_SEGMENTS,static final DEFAULT_NUM_SEGMENTS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals,org.apache.kafka.streams.kstream.internals,low,low,very-high,low,,,,,,159,4042,,,,,,,,,,,,,122,116,6,4042,0,1,0.066,1,0.066,159,,,,,,,
"org.apache.kafka.streams.kstream.internals.AbstractKTableKTableJoinValueGetterSupplier<K,R,V1,V2>",AbstractKTableKTableJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.AbstractStream<K>,AbstractStream,low,low,low-medium,low,0,1,0,0,0,1,56,4,0,0,1,0,0,0,0,0,0,0,,,,,56,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2908;,Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2908;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K>.public AbstractStream( AbstractStream ): void,AbstractStream( AbstractStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"org.apache.kafka.streams.kstream.internals.CacheFlushListener<K,V>",CacheFlushListener,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.CacheFlushListener<K,V>.public abstract apply( K, V, V ): void","apply( K, V, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.internals.Change<T>,Change,low,low,low,low,1,2,0,0,0,2,19,6,2,0,2,0,0,0,0.25,0,0,0,,,,,19,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public Change( T, T ): void","Change( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->newValue,final newValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->oldValue,final oldValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>,ChangedDeserializer,low,low,low,low,0,1,0,0,0,1,25,3,0,1,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>,ChangedSerializer,low,low,low,low,0,1,0,0,0,1,33,3,0,1,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>",ConsumedInternal,low,low,low,low,0,1,0,0,0,1,18,2,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public ConsumedInternal( ): void",ConsumedInternal( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>",ForwardingCacheFlushListener,low,low,low,low,0,1,0,0,0,2,19,11,1,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>.public apply( K, V, V ): void","apply( K, V, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,3,0,1
"<Field>org.apache.kafka.streams.kstream.internals.ForwardingCacheFlushListener<K,V>->sendOldValues",final sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>",GlobalKTableImpl,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>",GroupedStreamAggregateBuilder,low,low,low,low,0,0,0,0,0,0,48,0,1,0,0,0,0,0,0,0,0,0,,,,,48,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.InternalNameProvider,InternalNameProvider,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder,InternalStreamsBuilder,low,low,low-medium,low,0,0,0,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,,,,,120,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>",KGroupedStreamImpl,low,low,medium-high,low,0,0,0,0,0,0,369,0,2,0,0,0,0,0,0,0,0,0,,,,,369,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$21410;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$21410;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23344;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23344;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23522;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23522;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23869;,Lorg.apache.kafka.streams.kstream.internals.KGroupedStreamImpl$23869;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->isQueryable",isQueryable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>",KGroupedTableImpl,low,low,low-medium,low,0,0,0,0,0,0,191,0,1,0,0,0,0,0,0,0,0,0,,,,,191,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->isQueryable",isQueryable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>",KStreamAggProcessorSupplier,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>",KStreamAggregate,low,low,low-medium,low,0,1,0,0,0,1,54,3,1,0,1,0,0,0,0,0,0,0,,,,,54,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateProcessor,KStreamAggregateProcessor,low,low,low,low,0,1,0,0,0,4,21,12,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateValueGetter,KStreamAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$3140;,Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$3140;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>",KStreamBranch,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamBranch.KStreamBranchProcessor,KStreamBranchProcessor,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>",KStreamFilter,low,low,low,low,0,0,0,0,0,0,14,0,1,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFilter.KStreamFilterProcessor,KStreamFilterProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>",KStreamFlatMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMap.KStreamFlatMapProcessor,KStreamFlatMapProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>",KStreamFlatMapValues,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues.KStreamFlatMapValuesProcessor,KStreamFlatMapValuesProcessor,low,low,low,low,0,1,0,0,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>",KStreamGlobalKTableJoin,low,low,low,low,0,0,0,0,0,0,16,0,1,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>",KStreamImpl,low,low,medium-high,low,0,1,0,0,0,1,624,4,1,0,1,0,0,0,0,0,0,0,,,,,624,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamImpl.KStreamImplJoin,KStreamImplJoin,low,low,low,low,0,1,0,0,0,1,49,4,2,0,1,0,0,0,0,0,0,0,,,,,49,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$28702;,Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$28702;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$4751;,Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$4751;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$6398;,Lorg.apache.kafka.streams.kstream.internals.KStreamImpl$6398;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>",KStreamJoinWindow,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamJoinWindow.KStreamJoinWindowProcessor,KStreamJoinWindowProcessor,low,low,low,low,0,1,0,0,0,2,12,5,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>",KStreamKStreamJoin,low,low,low,low,0,0,0,0,0,0,35,0,3,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin.KStreamKStreamJoinProcessor,KStreamKStreamJoinProcessor,low,low,low,low,0,1,0,0,0,5,20,13,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,5,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinAfterMs",final joinAfterMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinBeforeMs",final joinBeforeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->outer",final outer : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>",KStreamKTableJoin,low,low,low,low,0,0,0,0,0,0,16,0,1,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>",KStreamKTableJoinProcessor,low,low,low,low,0,1,0,0,0,5,23,6,1,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>.public process( K1, V1 ): void","process( K1, V1 ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,6,2,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>",KStreamMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMap.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>",KStreamMapValues,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMapValues.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough<K,V>",KStreamPassThrough,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough.KStreamPassThroughProcessor<K,V>",KStreamPassThroughProcessor,low,low,low,low,0,1,0,0,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>",KStreamPeek,low,low,low,low,0,0,0,0,0,0,15,0,1,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamPeek.KStreamPeekProcessor,KStreamPeekProcessor,low,low,low,low,0,1,0,0,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>->forwardDownStream",final forwardDownStream : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPrint<K,V>",KStreamPrint,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamPrint.KStreamPrintProcessor,KStreamPrintProcessor,low,low,low,low,0,2,0,0,0,3,8,7,0,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>",KStreamReduce,low,low,low-medium,low,0,1,0,0,0,1,53,3,1,0,1,0,0,0,0,0,0,0,,,,,53,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceProcessor,KStreamReduceProcessor,low,low,low,low,0,1,0,0,0,4,22,13,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceValueGetter,KStreamReduceValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$2984;,Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$2984;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,T>",KStreamSessionWindowAggregate,low,low,low-medium,low,0,1,0,0,0,1,85,3,1,0,1,0,0,0,0,0,0,0,,,,,85,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate.KStreamSessionWindowAggregateProcessor,KStreamSessionWindowAggregateProcessor,low,low,low,low,0,1,0,0,0,5,33,24,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate.KTableSessionWindowValueGetter,KTableSessionWindowValueGetter,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate$5436;,Lorg.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate$5436;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform<K,V,K1,V1>",KStreamTransform,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform.KStreamTransformProcessor<K1,V1,K2,V2>",KStreamTransformProcessor,low,low,low,low,0,3,0,0,0,5,22,14,0,0,3,0,0,0,0.5,0,0,0,,,,,22,,,,,,5,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>",KStreamTransformValues,low,low,low-medium,low,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,,,,,92,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues.KStreamTransformValuesProcessor<K,V,R>",KStreamTransformValuesProcessor,low,low,low,low,0,3,0,0,0,4,85,11,0,0,3,0,0,0,0.5,0,0,0,,,,,85,,,,,,4,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>",KStreamWindowAggregate,low,low,low-medium,low,0,1,0,0,0,1,76,3,1,0,1,0,0,0,0,0,0,0,,,,,76,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateProcessor,KStreamWindowAggregateProcessor,low,low,low,low,0,1,0,0,0,9,37,28,0,0,1,0,0,0,0,0,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateValueGetter,KStreamWindowAggregateValueGetter,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$5312;,Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$5312;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,T,W>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>",KStreamWindowReduce,low,low,low-medium,low,0,1,0,0,0,1,74,3,1,0,1,0,0,0,0,0,0,0,,,,,74,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowReduce.KStreamWindowReduceProcessor,KStreamWindowReduceProcessor,low,low,low,low,0,1,0,0,0,9,37,28,0,0,1,0,0,0,0,0,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowReduce.KStreamWindowReduceValueGetter,KStreamWindowReduceValueGetter,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamWindowReduce$5052;,Lorg.apache.kafka.streams.kstream.internals.KStreamWindowReduce$5052;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowReduce<K,V,W>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>",KTableAggregate,low,low,low-medium,low,0,1,0,0,0,1,58,3,1,0,1,0,0,0,0,0,0,0,,,,,58,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableAggregate.KTableAggregateProcessor,KTableAggregateProcessor,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableAggregate.KTableAggregateValueGetter,KTableAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableAggregate$3746;,Lorg.apache.kafka.streams.kstream.internals.KTableAggregate$3746;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>",KTableFilter,low,low,low-medium,low,0,2,0,0,0,4,65,9,2,0,2,0,0,1,0.333,0,0,0,,,,,65,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterProcessor,KTableFilterProcessor,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterValueGetter,KTableFilterValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableFilter$2069;,Lorg.apache.kafka.streams.kstream.internals.KTableFilter$2069;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.private computeValue( K, V ): V","computeValue( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,2,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>",KTableImpl,low,low,medium-high,low,0,3,0,0,0,6,585,17,2,0,3,0,0,1,0,0,0,0,,,,,585,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$17889;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$17889;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$24382;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$24382;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$4143;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$4143;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$5063;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$5063;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. enableSendingOldValues( ): void", enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. sendingOldValueEnabled( ): boolean", sendingOldValueEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public print( ): void",print( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->isQueryable",final isQueryable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>",KTableKTableAbstractJoin,low,low,low,low,0,1,0,0,0,1,20,5,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>.public final enableSendingOldValues( ): void",final enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoin<K,R,V1,V2>",KTableKTableJoin,low,low,low,low,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinProcessor,KTableKTableJoinProcessor,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinValueGetterSupplier,KTableKTableJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>",KTableKTableJoinMerger,low,low,low,low,0,1,0,0,0,1,42,5,1,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger.KTableKTableJoinMergeProcessor<K,V>",KTableKTableJoinMergeProcessor,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinValueGetter<K1,V1,K2,V2,R>",KTableKTableJoinValueGetter,low,low,low,low,0,1,0,0,0,3,26,9,0,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinValueGetter<K1,V1,K2,V2,R>.public get( K1 ): R",get( K1 ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>",KTableKTableLeftJoin,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinProcessor,KTableKTableLeftJoinProcessor,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetter,KTableKTableLeftJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetterSupplier,KTableKTableLeftJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoinValueGetter<K1,K2,V1,V2,R>",KTableKTableLeftJoinValueGetter,low,low,low,low,0,1,0,0,0,2,25,8,0,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoinValueGetter<K1,K2,V1,V2,R>.public get( K1 ): R",get( K1 ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>",KTableKTableOuterJoin,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinProcessor,KTableKTableOuterJoinProcessor,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetter,KTableKTableOuterJoinValueGetter,low,low,low,low,0,1,0,0,0,3,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetterSupplier,KTableKTableOuterJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>",KTableKTableRightJoin,low,low,low-medium,low,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinProcessor,KTableKTableRightJoinProcessor,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetter,KTableKTableRightJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetterSupplier,KTableKTableRightJoinValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>",KTableMapValues,low,low,low-medium,low,0,2,0,0,0,3,61,9,1,0,2,0,0,0,0.25,0,0,0,,,,,61,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesProcessor,KTableMapValuesProcessor,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesValueGetter,KTableMapValuesValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1989;,Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1989;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.private computeValue( V ): V1",computeValue( V ): V1,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>",KTableProcessorSupplier,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>",KTableReduce,low,low,low-medium,low,0,1,0,0,0,1,57,3,1,0,1,0,0,0,0,0,0,0,,,,,57,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableReduce.KTableAggregateValueGetter,KTableAggregateValueGetter,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableReduce.KTableReduceProcessor,KTableReduceProcessor,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableReduce$3565;,Lorg.apache.kafka.streams.kstream.internals.KTableReduce$3565;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>",KTableRepartitionMap,low,low,low,low,0,1,0,0,0,1,43,3,0,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapProcessor,KTableMapProcessor,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapValueGetter,KTableMapValueGetter,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2152;,Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2152;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableSource<K,V>",KTableSource,low,low,low,low,0,1,0,0,0,1,26,2,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSource.KTableSourceProcessor,KTableSourceProcessor,low,low,low,low,0,1,0,0,0,2,16,7,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>",KTableSourceValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier.KTableSourceValueGetter,KTableSourceValueGetter,low,low,low,low,0,1,0,0,0,1,7,2,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>",KTableValueGetter,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>",KTableValueGetterSupplier,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KeyValueStoreMaterializer<K,V>",KeyValueStoreMaterializer,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>",MaterializedInternal,low,low,low,low,0,3,0,0,0,3,29,6,1,0,3,0,0,0,0,0,0,0,,,,,29,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>. cachingEnabled( ): boolean", cachingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>. isQueryable( ): boolean", isQueryable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>->queryable",final queryable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>",PrintForeachAction,low,low,low,low,0,2,0,0,0,4,20,12,0,0,2,0,0,0,0.333,0,0,0,,,,,20,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>.public apply( K, V ): void","apply( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,0,0
"<Method>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"org.apache.kafka.streams.kstream.internals.PrintedInternal<K,V>",PrintedInternal,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>",ProducedInternal,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.SerializedInternal<K,V>",SerializedInternal,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>,SessionKeySerde,low,low,low-medium,low,0,4,0,0,0,4,80,10,0,1,1,3,0,0,0.125,0.5,0,0,,,,,80,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.SessionKeySerde.SessionKeyDeserializer,SessionKeyDeserializer,low,low,low,low,0,1,0,0,0,1,13,2,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.SessionKeySerde.SessionKeySerializer,SessionKeySerializer,low,low,low,low,0,1,0,0,0,1,13,2,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>.public static extractEnd( byte ): long,static extractEnd( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>.public static extractKeyBytes( byte ): byte,static extractKeyBytes( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>.public static extractStart( byte ): long,static extractStart( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.streams.kstream.internals.SessionKeySerde<K>->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.SessionWindow,SessionWindow,low,low,low,low,0,1,0,0,0,1,10,2,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindow.public SessionWindow( long, long ): void","SessionWindow( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>",SessionWindowedKStreamImpl,low,low,low-medium,low,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,,,,,129,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl$8182;,Lorg.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl$8182;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl$8495;,Lorg.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl$8495;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.TimeWindow,TimeWindow,low,low,low,low,0,1,0,0,0,2,13,4,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindow.public TimeWindow( long, long ): void","TimeWindow( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,0,0
"org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>",TimeWindowedKStreamImpl,low,low,low-medium,low,0,0,0,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,,,,,115,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>",TupleForwarder,low,low,low,low,0,1,0,0,0,3,29,8,1,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>.public maybeForward( K, V, V ): void","maybeForward( K, V, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,3,0,1
"<Field>org.apache.kafka.streams.kstream.internals.TupleForwarder<K,V>->sendOldValues",final sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.UnlimitedWindow,UnlimitedWindow,low,low,low,low,0,1,0,0,0,1,10,2,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.UnlimitedWindow.public UnlimitedWindow( long ): void,UnlimitedWindow( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>,WindowedDeserializer,low,low,low,low,0,2,0,0,0,2,42,5,0,1,2,0,0,0,0,1,0,0,,,,,42,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>.public WindowedDeserializer( ): void,WindowedDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.WindowedDeserializer<T>->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>,WindowedSerializer,low,low,low,low,0,2,0,0,0,2,34,4,0,1,2,0,0,0,0,1,0,0,,,,,34,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>.public WindowedSerializer( ): void,WindowedSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>",WindowedStreamPartitioner,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.processor,org.apache.kafka.streams.processor,low,low,medium-high,low,,,,,,60,616,,,,,,,,,,,,,29,16,13,616,0,0,0.552,1,0.552,60,,,,,,,
org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback,AbstractNotifyingBatchingRestoreCallback,low,low,low,low,0,1,0,0,0,1,19,4,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
org.apache.kafka.streams.processor.AbstractNotifyingRestoreCallback,AbstractNotifyingRestoreCallback,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
"org.apache.kafka.streams.processor.AbstractProcessor<K,V>",AbstractProcessor,low,low,low,low,0,3,0,0,0,3,13,6,0,0,3,0,0,0,0.333,0,0,0,,,,,13,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.protected AbstractProcessor( ): void",AbstractProcessor( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.streams.processor.BatchingStateRestoreCallback,BatchingStateRestoreCallback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.Cancellable,Cancellable,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.Cancellable.public abstract cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.DefaultPartitionGrouper,DefaultPartitionGrouper,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.ExtractRecordMetadataTimestamp,ExtractRecordMetadataTimestamp,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.FailOnInvalidTimestamp,FailOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp,LogAndSkipOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.PartitionGrouper,PartitionGrouper,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.Processor<K,V>",Processor,low,low,low,low,0,3,0,1,0,4,7,3,0,0,3,0,0,0,0.5,0,0,0,,,,,7,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.ProcessorContext,ProcessorContext,low,low,low,low-medium,0,7,0,1,0,20,23,7,0,0,7,0,0,0,0.629,0,0,0,,,,,23,,,,,,20,,,,,,,
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.ProcessorSupplier<K,V>",ProcessorSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.PunctuationType,PunctuationType,low,low,low,low,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.PunctuationType->STREAM_TIME,static final STREAM_TIME : PunctuationType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.PunctuationType->WALL_CLOCK_TIME,static final WALL_CLOCK_TIME : PunctuationType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.Punctuator,Punctuator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.Punctuator.public abstract punctuate( long ): void,punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.StateRestoreCallback,StateRestoreCallback,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.StateRestoreCallback.public abstract restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.StateRestoreListener,StateRestoreListener,low,low,low,low,0,0,0,1,0,3,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.streams.processor.StateStore,StateStore,low,low,low,low,0,4,0,1,0,6,7,4,0,0,4,0,0,0,0,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStore.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.StateStoreSupplier<T>,StateStoreSupplier,low,low,low,low,0,2,0,1,0,4,6,2,0,0,2,0,0,0,0,0,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStoreSupplier<T>.public abstract get( ): T,get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStoreSupplier<T>.public abstract loggingEnabled( ): boolean,loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.StreamPartitioner<K,V>",StreamPartitioner,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TaskId,TaskId,low,low,low,low,0,3,0,0,0,7,48,15,2,0,3,0,0,0,0.444,0,0,0,,,,,48,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.processor.TaskId.public TaskId( int, int ): void","TaskId( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public compareTo( TaskId ): int,compareTo( TaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,1,0,8
<Method>org.apache.kafka.streams.processor.TaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.streams.processor.TaskId->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.TaskId->topicGroupId,final topicGroupId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.TaskMetadata,TaskMetadata,low,low,low,low,0,1,0,0,0,1,29,3,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.TaskMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.ThreadMetadata,ThreadMetadata,low,low,low,low,0,1,0,0,0,1,43,3,0,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.TimestampExtractor,TimestampExtractor,low,low,low,low,0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder,TopologyBuilder,low,low,low-medium,low,0,1,0,0,0,1,295,1,0,0,1,0,0,0,0,0,0,0,,,,,295,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.AutoOffsetReset,AutoOffsetReset,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.TopicsInfo,TopicsInfo,low,low,low,low,0,1,0,0,0,1,32,4,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.TopologyBuilder.public TopologyBuilder( ): void,TopologyBuilder( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.UsePreviousTimeOnInvalidTimestamp,UsePreviousTimeOnInvalidTimestamp,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.WallclockTimestampExtractor,WallclockTimestampExtractor,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.processor.internals,org.apache.kafka.streams.processor.internals,medium-high,low,very-high,low,,,,,,504,6177,,,,,,,,,,,,,104,87,17,6177,0,2,0.202,1,0.202,504,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractProcessorContext,AbstractProcessorContext,low,low,low-medium,low,0,5,0,0,0,8,105,21,1,0,5,0,0,0,0,0.9,0,0,,,,,105,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public uninitialize( ): void,uninitialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractStateManager,AbstractStateManager,low,low,low-medium,low,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractTask,AbstractTask,low,low,low-medium,low,0,5,1,0,0,20,135,49,2,0,5,0,0,0,0.4,0,0,0,,,,,135,,,,,,20,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. closeStateManager( boolean ): void, closeStateManager( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,15,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. flushState( ): void, flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. initializeStateStores( ): void, initializeStateStores( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,0,1,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public hasStateStores( ): boolean,hasStateStores( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.protected updateOffsetLimits( ): void,updateOffsetLimits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,14,0,0,0
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->taskInitialized, taskInitialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AssignedStandbyTasks,AssignedStandbyTasks,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.AssignedStreamsTasks,AssignedStreamsTasks,low,low,low-medium,low,0,3,0,0,0,14,68,42,1,0,3,0,0,0,0,0,0,0,,,,,68,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.AssignedStreamsTasks$1604;,Lorg.apache.kafka.streams.processor.internals.AssignedStreamsTasks$1604;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. maybeCommit( ): int, maybeCommit( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. process( ): int, process( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,18,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. punctuate( ): int, punctuate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,20,0,0,0
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->committed,committed : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AssignedTasks<T>,AssignedTasks,low,low,low-medium,low,0,8,2,0,0,17,288,56,0,0,8,0,0,0,0.5,0,0,0,,,,,288,,,,,,17,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.AssignedTasks$2436;,Lorg.apache.kafka.streams.processor.internals.AssignedTasks$2436;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. addNewTask( T ): void, addNewTask( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. allTasksRunning( ): boolean, allTasksRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. clear( ): void, clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. close( boolean ): void, close( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,21,1,2,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. commit( ): int, commit( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. hasRunningTasks( ): boolean, hasRunningTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>.private addToRestoring( T ): void,addToRestoring( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>.private closeUnclean( T ): boolean,closeUnclean( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,0,0
org.apache.kafka.streams.processor.internals.ChangelogReader,ChangelogReader,low,low,low,low,0,1,0,1,0,4,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.Checkpointable,Checkpointable,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.CompositeRestoreListener,CompositeRestoreListener,low,low,low,low,0,1,0,0,0,1,49,5,0,1,1,0,0,0,0,0,0,0,,,,,49,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.CompositeRestoreListener.NoOpStateRestoreListener,NoOpStateRestoreListener,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Field>org.apache.kafka.streams.processor.internals.CompositeRestoreListener->NO_OP_STATE_RESTORE_LISTENER,static final NO_OP_STATE_RESTORE_LISTENER : NoOpStateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier,DefaultKafkaClientSupplier,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
"org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>",DefaultStreamPartitioner,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl,GlobalProcessorContextImpl,low,low,low,low,0,4,0,0,0,5,34,19,0,0,4,0,0,0,0.5,0,0,0,,,,,34,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
org.apache.kafka.streams.processor.internals.GlobalStateMaintainer,GlobalStateMaintainer,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.GlobalStateManager,GlobalStateManager,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl,GlobalStateManagerImpl,low,low,low-medium,low,0,1,0,0,0,3,221,9,2,0,1,0,0,0,0,0,0,0,,,,,221,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,0,0
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask,GlobalStateUpdateTask,low,low,low-medium,low,0,3,0,0,0,4,56,12,0,0,3,0,0,0,0,0,0,0,,,,,56,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.private initTopology( ): void,initTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,7,0,0,0
org.apache.kafka.streams.processor.internals.GlobalStreamThread,GlobalStreamThread,low,low,low-medium,low,0,11,7,0,0,20,183,88,1,0,7,0,0,0,0.429,0.9,1,0,,,,,183,,,,,,20,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStreamThread.State,State,low,low,low,low,0,1,0,0,0,1,11,2,0,4,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStreamThread.StateConsumer,StateConsumer,low,low,low,low,0,3,0,0,0,9,45,25,3,0,3,0,0,0.667,0,0,0,0,,,,,45,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.private initialize( ): StateConsumer,initialize( ): StateConsumer,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,37,0,1,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public run( ): void,run( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,21,0,9,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.private setState( State ): boolean,setState( State ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,1,0,6
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public stillRunning( ): boolean,stillRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,0
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalProcessorContext,InternalProcessorContext,low,low,low,low,0,2,0,1,0,7,8,2,0,0,2,0,0,0,0,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract uninitialize( ): void,uninitialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.InternalTopicConfig,InternalTopicConfig,low,low,low,low,0,2,0,0,0,4,26,8,1,0,2,0,0,0,0.25,0,0,0,,,,,26,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig. setNumberOfPartitions( int ): void, setNumberOfPartitions( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public numberOfPartitions( ): int,numberOfPartitions( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,2
<Field>org.apache.kafka.streams.processor.internals.InternalTopicConfig->numberOfPartitions,numberOfPartitions : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicManager,InternalTopicManager,low,low,low-medium,low,0,0,0,0,0,0,135,0,3,0,0,0,0,0,0,0,0,0,,,,,135,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->replicationFactor,final replicationFactor : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->windowChangeLogAdditionalRetention,final windowChangeLogAdditionalRetention : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder,InternalTopologyBuilder,low-medium,low,high,low-medium,0,8,4,0,0,22,1132,52,1,3,6,1,0,1.125,0.607,1,0,0,,,,,1132,,,,,,22,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.AbstractNode,AbstractNode,low,low,low,low,0,0,0,0,3,0,21,0,1,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.AbstractStateStoreFactory,AbstractStateStoreFactory,low,low,low,low,0,2,0,0,2,2,29,6,2,0,2,0,0,1,0,1,0,0,,,,,29,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.GlobalStore,GlobalStore,low,low,low,low,2,1,0,0,0,1,33,3,2,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.GlobalStoreComparator,GlobalStoreComparator,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.NodeComparator,NodeComparator,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.NodeFactory,NodeFactory,low,low,low,low,1,1,0,0,3,1,9,1,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Processor,Processor,low,low,low,low,0,1,0,1,0,1,25,3,0,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.ProcessorNodeFactory,ProcessorNodeFactory,low,low,low,low,1,1,0,1,0,1,16,3,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Sink,Sink,low,low,low,low,0,1,0,1,0,1,28,3,0,0,1,0,1,0,0,0,0,1,,,,,28,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SinkNodeFactory<K,V>",SinkNodeFactory,low,low,low,low,1,1,0,1,0,1,25,3,0,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Source,Source,low,low,low,low,0,1,0,1,0,1,27,3,0,0,1,0,1,0,0,0,0,1,,,,,27,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SourceNodeFactory,SourceNodeFactory,low,low,low,low,1,1,0,1,0,2,50,8,0,0,1,0,0,0,0,0,0,0,,,,,50,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.StateStoreFactory,StateStoreFactory,low,low,low,low,0,3,0,1,1,7,8,3,0,0,3,0,0,0,0,0,0,0,,,,,8,,,,,,7,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.StateStoreSupplierFactory,StateStoreSupplierFactory,low,low,low,low,0,2,1,1,0,2,19,6,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.StoreBuilderFactory,StoreBuilderFactory,low,low,low,low,0,2,1,1,0,2,16,5,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SubscriptionUpdates,SubscriptionUpdates,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Subtopology,Subtopology,low,low,low,low,0,2,0,0,0,2,37,6,1,0,2,0,0,0,0,0,0,0,,,,,37,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SubtopologyComparator,SubtopologyComparator,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.TopicsInfo,TopicsInfo,low,low,low,low,0,1,0,0,0,1,32,4,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.TopologyDescription,TopologyDescription,low,low,low,low,0,1,0,0,0,1,48,3,0,0,1,0,0,0,0,0,0,0,,,,,48,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public describe( ): TopologyDescription,describe( ): TopologyDescription,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private describeGlobalStores( TopologyDescription ): void,describeGlobalStores( TopologyDescription ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,1,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private describeSubtopologies( TopologyDescription ): void,describeSubtopologies( TopologyDescription ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private setRegexMatchedTopicToStateStore( ): void,setRegexMatchedTopicToStateStore( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,6,13,0,1,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private setRegexMatchedTopicsToSourceNodes( ): void,setRegexMatchedTopicsToSourceNodes( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,1,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private static updateSize( AbstractNode, int ): void","static updateSize( AbstractNode, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public subscriptionUpdates( ): SubscriptionUpdates,subscriptionUpdates( ): SubscriptionUpdates,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->GLOBALSTORE_COMPARATOR,static final GLOBALSTORE_COMPARATOR : GlobalStoreComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->NODE_COMPARATOR,static final NODE_COMPARATOR : NodeComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->SUBTOPOLOGY_COMPARATOR,static final SUBTOPOLOGY_COMPARATOR : SubtopologyComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->subscriptionUpdates,subscriptionUpdates : SubscriptionUpdates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>,MinTimestampTracker,low,low,low,low,0,3,0,0,0,4,28,11,1,0,3,0,0,0,0,0.667,0,0,,,,,28,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,1
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>->lastKnownTime,lastKnownTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup,PartitionGroup,low,low,low-medium,low,0,4,0,0,0,7,66,14,1,0,4,0,0,0,0,1,0,0,,,,,66,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2032;,Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2032;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup.RecordInfo,RecordInfo,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. numBuffered( ): int, numBuffered( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,0,0
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->totalBuffered,totalBuffered : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorContextImpl,ProcessorContextImpl,low,low,low-medium,low,0,4,0,0,0,5,75,31,0,0,4,0,0,0,0.5,0,0,0,,,,,75,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.ProcessorContextImpl$4934;,Lorg.apache.kafka.streams.processor.internals.ProcessorContextImpl$4934;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,3,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,1,0,0
"org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>",ProcessorNode,low,low,low-medium,low,2,4,1,0,0,4,112,12,3,0,3,0,0,0.667,0.5,0.667,0,0,,,,,112,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.ProcessorNode$4041;,Lorg.apache.kafka.streams.processor.internals.ProcessorNode$4041;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorNode.NodeMetrics,NodeMetrics,low,low,low,low,0,1,0,0,0,1,32,7,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public addChild( ProcessorNode ): void",addChild( ProcessorNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,3
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,4
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->nodeMetrics", nodeMetrics : NodeMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->key",key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->value",value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorNodePunctuator,ProcessorNodePunctuator,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorRecordContext,ProcessorRecordContext,low,low,low,low,0,4,0,0,0,4,35,10,3,0,4,0,0,0.667,0,0.5,0,0,,,,,35,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,3
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorStateManager,ProcessorStateManager,low,low,low-medium,low,0,1,0,0,0,6,194,15,1,0,1,0,0,0,0,0,0,0,,,,,194,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,15,0,0,0
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->isStandby,final isStandby : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorTopology,ProcessorTopology,low,low,low-medium,low,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,,,,,112,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationQueue,PunctuationQueue,low,low,low,low,0,1,0,0,0,1,22,3,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,0
org.apache.kafka.streams.processor.internals.PunctuationSchedule,PunctuationSchedule,low,low,low,low,0,4,1,0,0,4,38,12,3,0,3,0,0,0.833,0.333,0,0,0,,,,,38,,,,,,4,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationSchedule.RepointableCancellable,RepointableCancellable,low,low,low,low,0,3,1,0,0,2,7,5,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule. isCancelled( ): boolean, isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule. markCancelled( ): void, markCancelled( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public next( long ): PunctuationSchedule,next( long ): PunctuationSchedule,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,1,7
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->cancellable,final cancellable : RepointableCancellable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->interval,final interval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->isCancelled,isCancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.QuickUnion<T>,QuickUnion,low,low,low,low,0,5,2,0,0,9,26,24,0,0,5,0,0,0,0,0,0,0,,,,,26,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public add( T ): void,add( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public exists( T ): boolean,exists( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public root( T ): T,root( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public unite( T, T ): void","unite( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.private unitePair( T, T ): void","unitePair( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,0
org.apache.kafka.streams.processor.internals.RecordCollector,RecordCollector,low,low,low,low,0,2,0,1,0,5,20,2,0,0,2,0,0,0,0,0,0,0,,,,,20,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.RecordCollector.Supplier,Supplier,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.RecordCollectorImpl,RecordCollectorImpl,low,low,low-medium,low,0,3,1,0,0,4,151,13,0,0,3,0,0,0,0,0,0,0,,,,,151,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$7318;,Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$7318;,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.private checkForException( ): void,checkForException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
org.apache.kafka.streams.processor.internals.RecordContext,RecordContext,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.RecordDeserializer,RecordDeserializer,low,low,low,low,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,,,,,45,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.RecordQueue,RecordQueue,low,low,low-medium,low,0,4,0,0,0,4,73,10,1,0,4,0,0,0,0,0.833,0,0,,,,,73,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->partitionTime,partitionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RepartitionTopicConfig,RepartitionTopicConfig,low,low,low,low,0,1,0,0,0,1,32,3,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.internals.RestoringTasks,RestoringTasks,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.SinkNode<K,V>",SinkNode,low,low,low-medium,low,0,1,0,0,0,5,61,20,0,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,20,2,0,0
"org.apache.kafka.streams.processor.internals.SourceNode<K,V>",SourceNode,low,low,low,low,0,1,0,0,0,1,48,4,0,0,1,0,0,0,0,0,0,0,,,,,48,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
org.apache.kafka.streams.processor.internals.Stamped<V>,Stamped,low,low,low,low,1,1,0,0,0,1,12,3,2,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public Stamped( V, long ): void","Stamped( V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->value,final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StampedRecord,StampedRecord,low,low,low,low,0,2,0,0,0,2,16,4,0,0,2,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.StandbyContextImpl,StandbyContextImpl,low,low,low-medium,low-medium,0,7,0,0,0,7,88,22,0,0,7,0,0,0,0.629,0,0,0,,,,,88,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.internals.StandbyTask,StandbyTask,low,low,low-medium,low,0,6,2,0,0,8,59,36,0,0,6,0,0,0,0.417,0,0,0,,,,,59,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,1,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.private flushAndCheckpointState( ): void,flushAndCheckpointState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public initialize( ): boolean,initialize( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public suspend( ): void,suspend( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
org.apache.kafka.streams.processor.internals.StateDirectory,StateDirectory,low-medium,low,low-medium,low,0,5,1,0,0,26,174,85,0,0,5,0,0,0,0.467,0,0,0,,,,,174,,,,,,26,,,,,,,
org.apache.kafka.streams.processor.internals.StateDirectory.LockAndOwner,LockAndOwner,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StateDirectory$13026;,Lorg.apache.kafka.streams.processor.internals.StateDirectory$13026;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public synchronized clean( ): void,synchronized clean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public synchronized cleanRemovedTasks( long ): void,synchronized cleanRemovedTasks( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.StateDirectory.private synchronized cleanRemovedTasks( long, boolean ): void","synchronized cleanRemovedTasks( long, boolean ): void",low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,7,44,2,0,0
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized lockGlobalState( ): boolean,synchronized lockGlobalState( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized unlockGlobalState( ): void,synchronized unlockGlobalState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,0,0
org.apache.kafka.streams.processor.internals.StateManager,StateManager,low,low,low,low,0,1,0,1,0,7,9,1,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.StateRestorer,StateRestorer,low,low,low-medium,low,0,12,1,0,0,13,57,24,5,1,12,0,0,0.833,0.5,0,0,0,,,,,57,,,,,,13,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. checkpoint( ): long, checkpoint( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StateRestorer. hasCompleted( long, long ): boolean"," hasCompleted( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. isPersistent( ): boolean, isPersistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. offsetLimit( ): long, offsetLimit( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreBatchCompleted( long, int ): void"," restoreBatchCompleted( long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreDone( ): void, restoreDone( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreStarted( ): void, restoreStarted( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoredNumRecords( ): long, restoredNumRecords( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setEndingOffset( long ): void, setEndingOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setRestoredOffset( long ): void, setRestoredOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setStartingOffset( long ): void, setStartingOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. startingOffset( ): long, startingOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->endingOffset,endingOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->offsetLimit,final offsetLimit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->persistent,final persistent : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->restoredOffset,restoredOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->startingOffset,startingOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->NO_CHECKPOINT,static final NO_CHECKPOINT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StoreChangelogReader,StoreChangelogReader,low,low,low-medium,low,0,3,1,0,0,14,175,46,0,0,3,0,0,0,0,0,0,0,,,,,175,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private initialize( ): void,initialize( ): void,low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,34,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private refreshChangelogInfo( ): void,refreshChangelogInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor,StreamPartitionAssignor,low,low,medium-high,low,0,0,0,0,0,0,374,0,2,2,0,0,0,0,0,0,0,0,,,,,374,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.AssignedPartition,AssignedPartition,low,low,low,low,0,2,0,0,0,2,18,6,0,0,2,0,0,0,0.25,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.ClientMetadata,ClientMetadata,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.CopartitionedTopicsValidator,CopartitionedTopicsValidator,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.InternalTopicMetadata,InternalTopicMetadata,low,low,low,low,0,0,0,0,0,0,12,0,1,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamPartitionAssignor.SubscriptionUpdates,SubscriptionUpdates,low,low,low,low,0,1,0,0,0,1,14,2,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->copartitionedTopicsValidator,copartitionedTopicsValidator : CopartitionedTopicsValidator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->numStandbyReplicas,numStandbyReplicas : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->NOT_AVAILABLE,static final NOT_AVAILABLE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamPartitionAssignor->UNKNOWN,static final UNKNOWN : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamTask,StreamTask,low-medium,low,medium-high,low,0,17,4,0,0,40,302,155,5,0,17,0,0,0.84,0.382,1,0,0,,,,,302,,,,,,40,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.StreamTask$13091;,Lorg.apache.kafka.streams.processor.internals.StreamTask$13091;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamTask.TaskMetrics,TaskMetrics,low,low,low,low,0,1,0,0,0,1,10,2,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamTask. commit( boolean ): void, commit( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,14,1,0,4
<Method>org.apache.kafka.streams.processor.internals.StreamTask. commitNeeded( ): boolean, commitNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. maybePunctuateStreamTime( ): boolean, maybePunctuateStreamTime( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask. maybePunctuateSystemTime( ): boolean, maybePunctuateSystemTime( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask. needCommit( ): void, needCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. numBuffered( ): int, numBuffered( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask. suspend( boolean ): void, suspend( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,2,0
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,2,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private closeTopology( ): void,closeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private commitOffsets( boolean ): void,commitOffsets( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,25,1,0,6
<Method>org.apache.kafka.streams.processor.internals.StreamTask.protected flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private initTopology( ): void,initTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,8,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public initialize( ): boolean,initialize( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public process( ): boolean,process( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,29,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public suspend( ): void,suspend( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitOffsetNeeded,commitOffsetNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->maxBufferedSize,final maxBufferedSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->metrics,final metrics : TaskMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->transactionInFlight,transactionInFlight : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread,StreamThread,medium-high,low,medium-high,medium-high,0,18,12,0,0,68,662,197,8,1,17,0,0,0.846,0.706,0.8,0,0,,,,,662,,,,,,68,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.AbstractTaskCreator<T>,AbstractTaskCreator,low,low,low,low,0,1,0,0,2,1,43,1,0,0,1,0,0,0,0,0,0,0,,,,,43,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.RebalanceListener,RebalanceListener,low,low,low,low,0,0,0,0,0,0,65,0,1,0,0,0,0,0,0,0,0,0,,,,,65,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StandbyTaskCreator,StandbyTaskCreator,low,low,low,low,0,0,0,1,0,0,36,0,0,0,0,0,0,0,0,0,0,0,,,,,36,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.State,State,low,low,low,low,0,1,0,0,0,1,11,2,0,6,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StateListener,StateListener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StreamsMetricsThreadImpl,StreamsMetricsThreadImpl,low,low,low,low,0,1,0,0,0,1,46,8,0,0,1,0,0,0,0,0,0,0,,,,,46,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.TaskCreator,TaskCreator,low,low,low,low,0,1,0,1,0,3,58,7,0,0,1,0,1,0,0,0,0,1,,,,,58,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamThread. maybeCommit( long ): void, maybeCommit( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,14,1,1,10
<Method>org.apache.kafka.streams.processor.internals.StreamThread. runOnce( long ): long, runOnce( long ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,29,1,9,11
<Method>org.apache.kafka.streams.processor.internals.StreamThread. setState( State ): boolean, setState( State ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,22,1,0,9
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.private adjustRecordsProcessedBeforeCommit( long, long, long, long ): long","adjustRecordsProcessedBeforeCommit( long, long, long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,4,0,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private clearStandbyRecords( ): void,clearStandbyRecords( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private completeShutdown( boolean ): void,completeShutdown( boolean ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,1,3,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private computeLatency( ): long,computeLatency( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public isRunningAndNotRebalancing( ): boolean,isRunningAndNotRebalancing( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybeUpdateStandbyTasks( long ): void,maybeUpdateStandbyTasks( long ): void,low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,7,37,1,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private processAndMaybeCommit( long ): long,processAndMaybeCommit( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,18,1,4,6
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private punctuate( ): void,punctuate( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,0,3,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private runLoop( ): void,runLoop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,2,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public shutdown( ): void,shutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.StreamThread->commitTimeMs,final commitTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->pollTimeMs,final pollTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->streamsMetrics,final streamsMetrics : StreamsMetricsThreadImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastCommitMs,lastCommitMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->processStandbyRecords,processStandbyRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->UNLIMITED_RECORDS,static final UNLIMITED_RECORDS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->timerStartedMs,timerStartedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState,StreamsMetadataState,low,low,low-medium,low,0,1,0,0,0,1,125,2,0,0,1,0,0,0,0,0,0,0,,,,,125,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState.SourceTopicsInfo,SourceTopicsInfo,low,low,low,low,0,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private isInitialized( ): boolean,isInitialized( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.StreamsMetricsImpl,StreamsMetricsImpl,low,low,low-medium,low,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,,,,,104,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.Task,Task,low,low,low,low,0,6,0,1,0,15,19,6,0,0,6,0,0,0,0.417,0,0,0,,,,,19,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.Task.public abstract close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract hasStateStores( ): boolean,hasStateStores( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract initialize( ): boolean,initialize( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract suspend( ): void,suspend( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.TaskAction<T>,TaskAction,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TaskAction<T>.public abstract apply( T ): void,apply( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.TaskManager,TaskManager,low-medium,low,low-medium,low,0,12,1,0,0,30,227,87,0,0,12,0,0,0,0.458,0,0,0,,,,,227,,,,,,30,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TaskManager. commitAll( ): int, commitAll( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. hasActiveRunningTasks( ): boolean, hasActiveRunningTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. hasStandbyRunningTasks( ): boolean, hasStandbyRunningTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. maybeCommitActiveTasks( ): int, maybeCommitActiveTasks( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. maybePurgeCommitedRecords( ): void, maybePurgeCommitedRecords( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,9,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. process( ): int, process( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. punctuate( ): int, punctuate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. shutdown( boolean ): void, shutdown( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,1,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. suspendTasksAndState( ): void, suspendTasksAndState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager. updateNewAndRestoringTasks( ): boolean, updateNewAndRestoringTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,0,1,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private addStandbyTasks( ): void,addStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private assignStandbyPartitions( ): void,assignStandbyPartitions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,0,0,0
org.apache.kafka.streams.processor.internals.ThreadStateTransitionValidator,ThreadStateTransitionValidator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ThreadStateTransitionValidator.public abstract isValidTransition( ThreadStateTransitionValidator ): boolean,isValidTransition( ThreadStateTransitionValidator ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.TimestampTracker<E>,TimestampTracker,low,low,low,low,0,3,0,1,0,5,7,3,0,1,3,0,0,0,0,1,0,0,,,,,7,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.streams.processor.internals.TimestampTracker<E>->NOT_KNOWN,static final NOT_KNOWN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig,UnwindowedChangelogTopicConfig,low,low,low,low,0,1,0,0,0,1,29,3,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig,WindowedChangelogTopicConfig,low,low,low,low,0,2,0,0,0,3,37,6,0,0,2,0,0,0,0.25,0,0,0,,,,,37,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig. setRetentionMs( long ): void, setRetentionMs( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.internals.WrappedBatchingStateRestoreCallback,WrappedBatchingStateRestoreCallback,low,low,low,low,0,1,0,0,0,1,12,4,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.WrappedBatchingStateRestoreCallback.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
<Package>org.apache.kafka.streams.processor.internals.assignment,org.apache.kafka.streams.processor.internals.assignment,low,low,low-medium,low,,,,,,34,429,,,,,,,,,,,,,7,6,1,429,0,0,0.143,1,0.143,34,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo,AssignmentInfo,low,low,low-medium,low,0,1,0,0,0,1,95,3,1,1,1,0,0,0,0,0,0,0,,,,,95,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->CURRENT_VERSION,static final CURRENT_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.ClientState,ClientState,low,low,low-medium,low,0,10,1,0,0,14,82,32,1,0,10,0,0,0,0.567,0.9,0,0,,,,,82,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. ClientState( int ): void, ClientState( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. capacity( ): int, capacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. hasMoreAvailableCapacityThan( ClientState ): boolean, hasMoreAvailableCapacityThan( ClientState ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,2,6
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. hasUnfulfilledQuota( int ): boolean, hasUnfulfilledQuota( int ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. reachedCapacity( ): boolean, reachedCapacity( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public ClientState( ): void,ClientState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public activeTaskCount( ): int,activeTaskCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public assignedTaskCount( ): int,assignedTaskCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public copy( ): ClientState,copy( ): ClientState,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public incrementCapacity( ): void,incrementCapacity( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->capacity,capacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>,StickyTaskAssignor,low,low,low-medium,low,0,3,2,0,0,14,168,41,1,0,3,0,0,0,0.167,0,0,0,,,,,168,,,,,,14,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor.TaskPairs,TaskPairs,low,low,low,low,0,1,0,0,0,1,36,3,1,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.public assign( int ): void,assign( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private assignActive( ): void,assignActive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,24,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private assignStandby( int ): void,assignStandby( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,1,0,0
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->taskPairs,final taskPairs : TaskPairs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo,SubscriptionInfo,low,low,low-medium,low,0,1,0,0,0,2,82,6,1,1,1,0,0,0,0,0,0,0,,,,,82,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->CURRENT_VERSION,static final CURRENT_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>",TaskAssignor,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.public abstract assign( int ): void",assign( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.streams.state,org.apache.kafka.streams.state,low,low,medium-high,low,,,,,,76,415,,,,,,,,,,,,,29,11,18,415,0,0,0.69,1,0.69,76,,,,,,,
org.apache.kafka.streams.state.HostInfo,HostInfo,low,low,low,low,0,2,0,0,0,2,30,7,1,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.HostInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.streams.state.HostInfo.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.HostInfo->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.KeyValueBytesStoreSupplier,KeyValueBytesStoreSupplier,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.KeyValueIterator<K,V>",KeyValueIterator,low,low,low,low,0,2,0,1,0,2,4,2,0,0,2,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.KeyValueStore<K,V>",KeyValueStore,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.111,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.QueryableStoreType<T>,QueryableStoreType,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.state.QueryableStoreTypes,QueryableStoreTypes,low,low,low,low,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,,,,,36,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.KeyValueStoreType<K,V>",KeyValueStoreType,low,low,low,low,0,1,0,1,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.streams.state.QueryableStoreTypes.QueryableStoreTypeMatcher<T>,QueryableStoreTypeMatcher,low,low,low,low,0,0,0,0,3,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.SessionStoreType<K,V>",SessionStoreType,low,low,low,low,0,1,0,1,0,1,6,2,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.WindowStoreType<K,V>",WindowStoreType,low,low,low,low,0,1,0,1,0,1,7,2,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>",ReadOnlyKeyValueStore,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.state.ReadOnlySessionStore<K,AGG>",ReadOnlySessionStore,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>",ReadOnlyWindowStore,low,low,low,low,0,0,0,1,0,4,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
org.apache.kafka.streams.state.RocksDBConfigSetter,RocksDBConfigSetter,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.SessionBytesStoreSupplier,SessionBytesStoreSupplier,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.SessionBytesStoreSupplier.public abstract segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.SessionStore<K,AGG>",SessionStore,low,low,low,low,0,0,0,1,0,4,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.StateSerdes<K,V>",StateSerdes,low,low,low,low,0,4,0,0,0,4,40,8,0,0,4,0,0,0,0.5,0,0,0,,,,,40,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keyFrom( byte ): K",keyFrom( byte ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawKey( K ): byte",rawKey( K ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawValue( V ): byte",rawValue( V ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueFrom( byte ): V",valueFrom( byte ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.state.StoreBuilder<T>,StoreBuilder,low,low,low,low,0,4,0,1,0,7,8,4,0,0,4,0,0,0,0,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract build( ): T,build( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract loggingEnabled( ): boolean,loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withCachingEnabled( ): StoreBuilder,withCachingEnabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withLoggingDisabled( ): StoreBuilder,withLoggingDisabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.StoreSupplier<T>,StoreSupplier,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.StoreSupplier<T>.public abstract get( ): T,get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.Stores,Stores,low,low,low-medium,low,0,0,0,0,0,0,206,0,0,0,0,0,0,0,0,0,0,0,,,,,206,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.Stores.InMemoryKeyValueFactory<K,V>",InMemoryKeyValueFactory,low,low,low,low,0,2,0,1,1,4,6,2,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.Stores.KeyValueFactory<K,V>",KeyValueFactory,low,low,low,low,2,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$12477;,Lorg.apache.kafka.streams.state.Stores$12477;,low,low,low,low,0,0,0,1,0,0,86,0,0,0,0,0,0,0,0,0,0,0,,,,,86,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$12618;,Lorg.apache.kafka.streams.state.Stores$12618;,low,low,low,low,0,0,0,1,0,0,82,0,0,0,0,0,0,0,0,0,0,0,,,,,82,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$12797;,Lorg.apache.kafka.streams.state.Stores$12797;,low,low,low,low,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,,,,,78,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$12983;,Lorg.apache.kafka.streams.state.Stores$12983;,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$15704;,Lorg.apache.kafka.streams.state.Stores$15704;,low,low,low,low,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,,,,,46,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$5048;,Lorg.apache.kafka.streams.state.Stores$5048;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$6162;,Lorg.apache.kafka.streams.state.Stores$6162;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.Stores.PersistentKeyValueFactory<K,V>",PersistentKeyValueFactory,low,low,low,low,0,4,0,1,1,6,8,4,0,0,4,0,0,0,0.5,0,0,0,,,,,8,,,,,,6,,,,,,,
org.apache.kafka.streams.state.Stores.StoreFactory,StoreFactory,low,low,low,low,1,6,0,0,1,6,16,12,0,0,6,0,0,0,0,0,0,0,,,,,16,,,,,,6,,,,,,,
org.apache.kafka.streams.state.Stores.ValueFactory<K>,ValueFactory,low,low,low,low,1,6,0,0,2,6,16,12,0,0,6,0,0,0,0,0,0,0,,,,,16,,,,,,6,,,,,,,
org.apache.kafka.streams.state.StreamsMetadata,StreamsMetadata,low,low,low,low,0,2,0,0,0,2,45,8,0,1,2,0,0,0,0,1,0,0,,,,,45,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.StreamsMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,0
<Method>org.apache.kafka.streams.state.StreamsMetadata.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.state.StreamsMetadata->NOT_AVAILABLE,static final NOT_AVAILABLE : StreamsMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.WindowBytesStoreSupplier,WindowBytesStoreSupplier,low,low,low,low,0,4,0,1,0,4,5,4,0,0,4,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract retainDuplicates( ): boolean,retainDuplicates( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract segments( ): int,segments( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract windowSize( ): long,windowSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.WindowStore<K,V>",WindowStore,low,low,low,low,0,2,0,1,0,2,3,2,0,0,2,0,0,0,0.125,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.state.WindowStoreIterator<V>,WindowStoreIterator,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.WindowStoreIterator<V>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.streams.state.internals,org.apache.kafka.streams.state.internals,low-medium,low,very-high,low,,,,,,346,4108,,,,,,,,,,,,,100,86,14,4108,0,1,0.15,1,0.15,346,,,,,,,
"org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>",AbstractMergedSortedCacheStoreIterator,low,low,low-medium,low,0,5,2,0,0,16,76,35,0,0,5,0,0,0,0.4,0,0,0,,,,,76,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract deserializeStoreKey( KS ): K",abstract deserializeStoreKey( KS ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,9,0,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,0,3,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>",AbstractStoreBuilder,low,low,low,low,0,1,0,0,0,1,42,3,2,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->enableCaching", enableCaching : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->enableLogging", enableLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>",AbstractStoreSupplier,low,low,low,low,0,1,0,0,0,1,26,2,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreSupplier<K,V,T>->logged",final logged : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.CacheFunction,CacheFunction,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.internals.CachedStateStore<K,V>",CachedStateStore,low,low,low,low,0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>",CachingKeyValueStore,low,low,low-medium,low,0,5,1,0,0,5,137,19,1,0,5,0,0,0,0,1,0,0,,,,,137,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CachingKeyValueStore$3528;,Lorg.apache.kafka.streams.state.internals.CachingKeyValueStore$3528;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized approximateNumEntries( ): long",synchronized approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CachingSessionStore<K,AGG>",CachingSessionStore,low,low,low-medium,low,0,2,1,0,0,2,129,7,1,0,2,0,0,0,0,1,0,0,,,,,129,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CachingSessionStore$3705;,Lorg.apache.kafka.streams.state.internals.CachingSessionStore$3705;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore<K,AGG>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore<K,AGG>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.state.internals.CachingSessionStore<K,AGG>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>",CachingWindowStore,low,low,low-medium,low,0,2,1,0,0,2,158,9,2,0,2,0,0,0,0,1,0,0,,,,,158,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CachingWindowStore$4029;,Lorg.apache.kafka.streams.state.internals.CachingWindowStore$4029;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Field>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>->windowSize",final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CachingWindowStore<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore,ChangeLoggingKeyValueBytesStore,low,low,low,low,0,1,0,0,0,1,48,3,0,0,1,0,0,0,0,0,0,0,,,,,48,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>",ChangeLoggingKeyValueStore,low,low,low-medium,low,0,5,2,0,0,8,63,26,0,0,5,0,0,0,0.267,0,0,0,,,,,63,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore,ChangeLoggingSessionBytesStore,low,low,low,low,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore,ChangeLoggingWindowBytesStore,low,low,low,low,0,1,0,0,0,2,44,4,2,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.private maybeUpdateSeqnumForDups( ): int,maybeUpdateSeqnumForDups( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,4
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->seqnum,seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>",CompositeKeyValueIterator,low,low,low,low,0,4,1,0,0,8,31,18,0,0,4,0,0,0,0,0,0,0,,,,,31,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,0,1,0
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>",CompositeReadOnlyKeyValueStore,low,low,low-medium,low,0,2,0,0,0,7,57,21,0,0,2,0,0,0,0.25,0,0,0,,,,,57,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2949;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2949;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3899;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3899;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,0,0
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,0,0
"org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>",CompositeReadOnlySessionStore,low,low,low,low,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore$3386;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore$3386;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>",CompositeReadOnlyWindowStore,low,low,low-medium,low,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,,,,,61,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$3389;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$3389;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$4209;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$4209;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$4927;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore$4927;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>",DelegatingPeekingKeyValueIterator,low,low,low,low,0,4,1,0,0,8,42,22,1,0,4,0,0,0,0,0.833,0,0,,,,,42,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized hasNext( ): boolean",synchronized hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,0,1
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized peekNextKey( ): K",synchronized peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
"<Field>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.FilteredCacheIterator,FilteredCacheIterator,low,low,low-medium,low,0,3,0,0,0,3,54,8,0,0,3,0,0,0,0,0,0,0,,,,,54,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.FilteredCacheIterator$1632;,Lorg.apache.kafka.streams.state.internals.FilteredCacheIterator$1632;,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.state.internals.GlobalStateStoreProvider,GlobalStateStoreProvider,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.HasNextCondition,HasNextCondition,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>",InMemoryKeyValueLoggedStore,low,low,low-medium,low,0,6,1,0,0,7,60,23,0,0,6,0,0,0,0.278,0,0,0,,,,,60,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore$2630;,Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore$2630;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueLoggedStore<K,V>.protected removed( K ): void",removed( K ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>",InMemoryKeyValueStore,low,low,low-medium,low,0,9,2,0,0,10,94,30,1,0,9,0,0,0,0.444,0.972,0,0,,,,,94,,,,,,10,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.InMemoryKeyValueIterator<K,V>",InMemoryKeyValueIterator,low,low,low,low,0,4,0,0,0,4,19,11,0,0,4,0,0,0,0,0,0,0,,,,,19,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueStore$2924;,Lorg.apache.kafka.streams.state.internals.InMemoryKeyValueStore$2924;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryKeyValueStoreSupplier<K,V>",InMemoryKeyValueStoreSupplier,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryLRUCacheStoreSupplier<K,V>",InMemoryLRUCacheStoreSupplier,low,low,low,low,0,0,0,0,0,0,11,0,1,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryLRUCacheStoreSupplier<K,V>->capacity",final capacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>",InnerMeteredKeyValueStore,low,low,low-medium,low,0,9,3,0,0,11,208,55,1,0,6,0,0,0,0.333,0.6,0,0,,,,,208,,,,,,11,,,,,,,
org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore.Action<V>,Action,low,low,low,low,0,1,0,1,7,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$10351;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$10351;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$10921;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$10921;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$11373;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$11373;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$12177;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$12177;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$8674;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$8674;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$9368;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$9368;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$9833;,Lorg.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore$9833;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore.MeteredKeyValueIterator,MeteredKeyValueIterator,low,low,low,low,1,5,1,0,0,4,26,15,1,0,4,0,0,0,0,1,0,0,,,,,26,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore.TypeConverter<K,IK,V,IV>",TypeConverter,low,low,low,low,0,4,0,1,0,6,7,4,0,0,4,0,0,0,0.6,0,0,0,,,,,7,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public delete( K ): V",delete( K ): V,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,1,2,2
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public get( K ): V",get( K ): V,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,1,2,2
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public put( K, V ): void","put( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,2,2,2
"<Method>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,3,3
"<Field>org.apache.kafka.streams.state.internals.InnerMeteredKeyValueStore<K,IK,V,IV>->typeConverter",final typeConverter : TypeConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueIterators,KeyValueIterators,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.KeyValueIterators.EmptyKeyValueIterator<K,V>",EmptyKeyValueIterator,low,low,low,low,0,4,0,0,1,4,14,10,0,0,4,0,0,0,0,0,0,0,,,,,14,,,,,,4,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueIterators.EmptyWindowStoreIterator<V>,EmptyWindowStoreIterator,low,low,low,low,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>",KeyValueStoreBuilder,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.LRUCacheEntry,LRUCacheEntry,low,low,low,low,0,7,0,0,0,7,43,17,6,0,7,0,0,1,0.429,1,0,0,,,,,43,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. LRUCacheEntry( byte ): void, LRUCacheEntry( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. isDirty( ): boolean, isDirty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. markClean( ): void, markClean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->isDirty,isDirty : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->sizeBytes,sizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>",MemoryLRUCache,low,low,low-medium,low,0,11,2,0,0,12,95,39,3,0,11,0,0,1,0.591,0.978,0,0,,,,,95,,,,,,12,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryLRUCache.EldestEntryRemovalListener<K,V>",EldestEntryRemovalListener,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$3009;,Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$3009;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$4347;,Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$4347;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>. whenEldestRemoved( EldestEntryRemovalListener ): MemoryLRUCache", whenEldestRemoved( EldestEntryRemovalListener ): MemoryLRUCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,2,0
"<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>->listener", listener : EldestEntryRemovalListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>->restoring",restoring : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache<K,V>",MemoryNavigableLRUCache,low,low,low,low,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,,,,,38,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.CacheIterator<K,V>",CacheIterator,low,low,low,low,1,4,0,0,0,4,21,10,1,0,4,0,0,0,0,1,0,0,,,,,21,,,,,,4,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator,MergedSortedCacheKeyValueBytesStoreIterator,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator,MergedSortedCacheSessionStoreIterator,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator,MergedSortedCacheWindowStoreIterator,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator,MergedSortedCacheWindowStoreKeyValueIterator,low,low,low,low,0,0,0,0,0,0,35,0,1,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>",MeteredKeyValueBytesStore,low,low,low-medium,low,0,6,0,0,0,6,72,18,0,0,6,0,0,0,0.333,0,0,0,,,,,72,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore$2707;,Lorg.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore$2707;,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueBytesStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>",MeteredKeyValueStore,low,low,low-medium,low,0,6,0,0,0,6,58,18,0,0,6,0,0,0,0.333,0,0,0,,,,,58,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MeteredKeyValueStore$2029;,Lorg.apache.kafka.streams.state.internals.MeteredKeyValueStore$2029;,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>",MeteredSessionStore,low,low,low-medium,low,0,1,0,0,0,1,111,7,0,0,1,0,0,0,0,0,0,0,,,,,111,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
"org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>",MeteredWindowStore,low,low,low-medium,low,0,3,1,0,0,3,89,17,0,0,3,0,0,0,0.333,0,0,0,,,,,89,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,3,0,0
org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>,MeteredWindowStoreIterator,low,low,low,low,0,3,0,0,0,3,37,12,1,0,3,0,0,0,0,1,0,0,,,,,37,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,1
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->startNs,final startNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>",MeteredWindowedKeyValueIterator,low,low,low,low,0,3,0,0,0,3,40,12,1,0,3,0,0,0,0,1,0,0,,,,,40,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,1
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->startNs",final startNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache,NamedCache,low-medium,low,low-medium,low,0,17,9,0,0,29,230,80,8,0,15,0,0,0.886,0.367,0,0,0,,,,,230,,,,,,29,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache.LRUNode,LRUNode,low,low,low,low,0,3,0,0,0,3,24,10,2,0,3,0,0,1,0,0,0,0,,,,,24,,,,,,3,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache.NamedCacheMetrics,NamedCacheMetrics,low,low,low,low,0,1,0,0,0,1,33,2,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.NamedCache.private flush( LRUNode ): void,flush( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,26,1,4,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private putHead( LRUNode ): void,putHead( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,7
<Method>org.apache.kafka.streams.state.internals.NamedCache.private remove( LRUNode ): void,remove( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,0,2
<Method>org.apache.kafka.streams.state.internals.NamedCache.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized close( ): void,synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,4
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized evict( ): void,synchronized evict( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,3,3
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flush( ): void,synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flushes( ): long,synchronized flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized head( ): LRUNode,synchronized head( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized hits( ): long,synchronized hits( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized misses( ): long,synchronized misses( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized overwrites( ): long,synchronized overwrites( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized sizeInBytes( ): long,synchronized sizeInBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized tail( ): LRUNode,synchronized tail( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private updateLRU( LRUNode ): void,updateLRU( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Field>org.apache.kafka.streams.state.internals.NamedCache->currentSizeBytes,currentSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->head,head : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->namedCacheMetrics,namedCacheMetrics : NamedCacheMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numOverwrites,numOverwrites : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadHits,numReadHits : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadMisses,numReadMisses : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->tail,tail : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.NextIteratorFunction<K,V,StoreType>",NextIteratorFunction,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.OffsetCheckpoint,OffsetCheckpoint,low,low,low-medium,low,0,1,0,0,0,1,71,2,0,1,1,0,0,0,0,0,0,0,,,,,71,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public delete( ): void,delete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->VERSION,static final VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.OrderedBytes,OrderedBytes,low,low,low,low,0,0,0,0,0,0,25,0,0,1,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.state.internals.OrderedBytes->MIN_KEY_LENGTH,static final MIN_KEY_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K,V>",PeekingKeyValueIterator,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.QueryableStoreProvider,QueryableStoreProvider,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBKeyValueStoreSupplier<K,V>",RocksDBKeyValueStoreSupplier,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore,RocksDBSegmentedBytesStore,low,low,low-medium,low,0,4,0,0,0,4,87,13,1,0,4,0,0,0,0,0.833,0,0,,,,,87,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore$5000;,Lorg.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore$5000;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBSessionStore<K,AGG>",RocksDBSessionStore,low,low,low-medium,low,0,0,0,0,1,0,60,0,0,0,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBSessionStore.RocksDBSessionBytesStore,RocksDBSessionBytesStore,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,1,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBSessionStoreSupplier<K,V>",RocksDBSessionStoreSupplier,low,low,low,low,0,1,0,0,0,1,21,2,1,1,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStoreSupplier<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBSessionStoreSupplier<K,V>->retentionPeriod",final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBSessionStoreSupplier<K,V>->NUM_SEGMENTS",static final NUM_SEGMENTS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBStore<K,V>",RocksDBStore,low-medium,low,medium-high,medium-high,0,17,9,0,0,34,327,119,2,6,17,0,0,1.094,0.735,0.972,0,0,,,,,327,,,,,,34,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.RocksDBStore$10383;,Lorg.apache.kafka.streams.state.internals.RocksDBStore$10383;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDBBatchingRestoreCallback,RocksDBBatchingRestoreCallback,low,low,low,low,0,1,0,0,0,1,18,2,1,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDBRangeIterator,RocksDBRangeIterator,low,low,low,low,0,3,2,1,0,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDbIterator,RocksDbIterator,low,low,low,low,0,5,1,0,1,7,38,20,1,0,5,0,0,0,0,0.833,0,0,,,,,38,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>. isPrepareForBulkload( ): boolean", isPrepareForBulkload( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private closeOpenIterators( ): void",closeOpenIterators( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private flushInternal( ): void",flushInternal( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private getInternal( byte ): byte",getInternal( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private isOverflowing( long ): boolean",isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private putInternal( byte, byte ): void","putInternal( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,2,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,1,2
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized delete( K ): V",synchronized delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private toggleDbForBulkLoading( boolean ): void",toggleDbForBulkLoading( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,17,1,2,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>.private validateStoreOpen( ): void",validateStoreOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->BLOCK_CACHE_SIZE",static final BLOCK_CACHE_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->BLOCK_SIZE",static final BLOCK_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->MAX_WRITE_BUFFERS",static final MAX_WRITE_BUFFERS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->TTL_NOT_USED",static final TTL_NOT_USED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->TTL_SECONDS",static final TTL_SECONDS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->WRITE_BUFFER_SIZE",static final WRITE_BUFFER_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBStore<K,V>->prepareForBulkload",volatile prepareForBulkload : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>",RocksDBWindowStore,low,low,low-medium,low,0,3,2,0,1,4,71,10,3,0,3,0,0,1,0.333,1,0,0,,,,,71,,,,,,4,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBWindowStore.RocksDBWindowBytesStore,RocksDBWindowBytesStore,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>. maybeUpdateSeqnumForDups( ): void", maybeUpdateSeqnumForDups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,3
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->retainDuplicates",final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->windowSize",final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore<K,V>->seqnum",seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>",RocksDBWindowStoreSupplier,low,low,low,low,0,1,0,0,0,1,29,3,1,1,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->retentionPeriod",final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStoreSupplier<K,V>->MIN_SEGMENTS",static final MIN_SEGMENTS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier,RocksDbKeyValueBytesStoreSupplier,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier,RocksDbSessionBytesStoreSupplier,low,low,low,low,0,1,0,0,0,1,28,6,1,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Field>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier,RocksDbWindowBytesStoreSupplier,low,low,low,low,0,4,0,0,0,4,48,12,4,0,4,0,0,1,0,1,0,0,,,,,48,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public retainDuplicates( ): boolean,retainDuplicates( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public segments( ): int,segments( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public windowSize( ): long,windowSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->segments,final segments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Segment,Segment,low,low,low,low,0,2,0,0,0,2,16,5,1,0,2,0,0,0,0.25,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.internals.Segment. destroy( ): void, destroy( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.Segment.public compareTo( Segment ): int,compareTo( Segment ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Field>org.apache.kafka.streams.state.internals.Segment->id,final id : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.SegmentIterator,SegmentIterator,low,low,low,low,0,3,1,0,0,11,44,20,0,0,3,0,0,0,0,0,0,0,,,,,44,,,,,,11,,,,,,,
<Method>org.apache.kafka.streams.state.internals.SegmentIterator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.streams.state.internals.SegmentIterator.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,14,0,1,0
<Method>org.apache.kafka.streams.state.internals.SegmentIterator.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.state.internals.SegmentedBytesStore,SegmentedBytesStore,low,low,low,low,0,0,0,1,0,7,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,7,,,,,,,
org.apache.kafka.streams.state.internals.SegmentedBytesStore.KeySchema,KeySchema,low,low,low,low,0,0,0,1,0,8,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,8,,,,,,,
org.apache.kafka.streams.state.internals.SegmentedCacheFunction,SegmentedCacheFunction,low,low,low,low,0,0,0,0,0,0,35,0,1,1,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentedCacheFunction->segmentInterval,final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentedCacheFunction->SEGMENT_ID_BYTES,static final SEGMENT_ID_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Segments,Segments,low,low,low-medium,low,0,5,0,0,0,13,136,26,4,1,4,1,0,1,0.4,0,0,0,,,,,136,,,,,,13,,,,,,,
<Method>org.apache.kafka.streams.state.internals.Segments. flush( ): void, flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.Segments. segmentId( long ): long, segmentId( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.Segments.private cleanup( long ): void,cleanup( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,15,1,0,6
<Method>org.apache.kafka.streams.state.internals.Segments.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
"<Method>org.apache.kafka.streams.state.internals.Segments.static segmentInterval( long, int ): long","static segmentInterval( long, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Field>org.apache.kafka.streams.state.internals.Segments->numSegments,final numSegments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Segments->segmentInterval,final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Segments->maxSegmentId,maxSegmentId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Segments->minSegmentId,minSegmentId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Segments->MIN_SEGMENT_INTERVAL,static final MIN_SEGMENT_INTERVAL : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.SerializedKeyValueIterator<K,V>",SerializedKeyValueIterator,low,low,low,low,0,4,1,0,0,5,28,15,0,0,4,0,0,0,0,0,0,0,,,,,28,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.SerializedKeyValueIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.SerializedKeyValueIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.SerializedKeyValueIterator<K,V>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,0
"<Method>org.apache.kafka.streams.state.internals.SerializedKeyValueIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.state.internals.SessionKeySchema,SessionKeySchema,low,low,low,low,0,0,0,0,0,0,47,0,0,2,0,0,0,0,0,0,0,0,,,,,47,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.SessionKeySchema$2881;,Lorg.apache.kafka.streams.state.internals.SessionKeySchema$2881;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SessionKeySchema->MIN_SUFFIX,static final MIN_SUFFIX : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SessionKeySchema->SUFFIX_SIZE,static final SUFFIX_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>",SessionStoreBuilder,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.StateStoreProvider,StateStoreProvider,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>",StoreChangeLogger,low,low,low,low,0,1,0,0,0,2,19,5,1,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>. logChange( K, V ): void"," logChange( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,1
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider,StreamThreadStateStoreProvider,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache,ThreadCache,low,low,low-medium,low,0,7,1,0,0,11,173,24,5,0,7,0,0,1.067,0.429,1,0,0,,,,,173,,,,,,11,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntry,DirtyEntry,low,low,low,low,0,1,0,0,0,1,14,2,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntryFlushListener,DirtyEntryFlushListener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.MemoryLRUCacheBytesIterator,MemoryLRUCacheBytesIterator,low,low,low,low,0,4,1,0,0,8,40,18,0,0,4,0,0,0,0,0,0,0,,,,,40,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ThreadCache. sizeBytes( ): long, sizeBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public evicts( ): long,evicts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public flushes( ): long,flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public gets( ): long,gets( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private isOverflowing( long ): boolean,isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public puts( ): long,puts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,0
<Field>org.apache.kafka.streams.state.internals.ThreadCache->maxCacheSizeBytes,final maxCacheSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numEvicts,numEvicts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numGets,numGets : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numPuts,numPuts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WindowKeySchema,WindowKeySchema,low,low,low,low,0,0,0,0,0,0,46,0,0,2,0,0,0,0,0,0,0,0,,,,,46,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.WindowKeySchema$2632;,Lorg.apache.kafka.streams.state.internals.WindowKeySchema$2632;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->MIN_SUFFIX,static final MIN_SUFFIX : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->SUFFIX_SIZE,static final SUFFIX_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>",WindowStoreBuilder,low,low,low,low,0,1,0,0,0,1,29,2,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper<K,V>",WindowStoreIteratorWrapper,low,low,low-medium,low,0,0,0,0,1,0,114,0,1,0,0,0,0,0,0,0,0,0,,,,,114,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.WrappedKeyValueIterator<K,V>",WrappedKeyValueIterator,low,low,low,low,0,3,0,0,1,3,34,9,1,0,3,0,0,0,0,1,0,0,,,,,34,,,,,,3,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.WrappedWindowStoreBytesIterator,WrappedWindowStoreBytesIterator,low,low,low,low,0,0,0,1,0,0,35,0,0,0,0,0,2,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.WrappedWindowStoreIterator<V>,WrappedWindowStoreIterator,low,low,low,low,0,3,0,0,1,3,25,9,0,0,3,0,0,0,0,0,0,0,,,,,25,,,,,,3,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper<K,V>->windowSize",final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreSupplier<T>,WindowStoreSupplier,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WindowStoreSupplier<T>.public abstract retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.internals.WindowStoreUtils,WindowStoreUtils,low,low,low,low,0,2,0,0,0,2,31,4,0,2,0,2,0,0.5,0,0,0,0,,,,,31,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WindowStoreUtils.static sequenceNumberFromBinaryKey( byte ): int,static sequenceNumberFromBinaryKey( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.WindowStoreUtils.static timestampFromBinaryKey( byte ): long,static timestampFromBinaryKey( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Field>org.apache.kafka.streams.state.internals.WindowStoreUtils->SEQNUM_SIZE,static final SEQNUM_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowStoreUtils->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator<K,V>",WrappedSessionStoreIterator,low,low,low,low,0,3,0,0,1,3,38,9,0,0,3,0,0,0,0,0,0,0,,,,,38,,,,,,3,,,,,,,
org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator.WrappedSessionStoreBytesIterator,WrappedSessionStoreBytesIterator,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,2,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator<K,V>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.state.internals.WrappedStateStore,WrappedStateStore,low,low,low,low,0,0,0,1,1,2,36,0,0,0,0,0,0,0,0,0,0,0,,,,,36,,,,,,2,,,,,,,
org.apache.kafka.streams.state.internals.WrappedStateStore.AbstractStateStore,AbstractStateStore,low,low,low,low,0,5,0,0,0,6,33,15,0,0,5,0,0,0,0,0,0,0,,,,,33,,,,,,6,,,,,,,
org.apache.kafka.streams.state.internals.WrappingStoreProvider,WrappingStoreProvider,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Package>org.apache.kafka.tools,org.apache.kafka.tools,low,low,high,low,,,,,,66,1555,,,,,,,,,,,,,33,33,0,1555,0,0,0,1,0,66,,,,,,,
org.apache.kafka.tools.ProducerPerformance,ProducerPerformance,low,low,low-medium,low,0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,,,,,288,,,,,,0,,,,,,,
org.apache.kafka.tools.ProducerPerformance.PerfCallback,PerfCallback,low,low,low,low,1,1,0,0,0,1,16,5,4,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.tools.ProducerPerformance.Stats,Stats,low,low,low,low,0,6,3,0,0,9,90,70,15,0,5,1,0,0.533,0.5,0.2,0,0,,,,,90,,,,,,9,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter,PushHttpMetricsReporter,low,low,low-medium,low,0,2,0,0,0,3,178,10,0,0,2,0,0,0,0,0,0,0,,,,,178,,,,,,3,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.HttpReporter,HttpReporter,low,low,low,low,3,1,0,0,0,6,42,41,0,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,6,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricClientInfo,MetricClientInfo,low,low,low,low,0,1,0,0,0,1,17,3,1,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,1,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricValue,MetricValue,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricsReport,MetricsReport,low,low,low,low,1,1,0,0,0,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.PushHttpMetricsReporterConfig,PushHttpMetricsReporterConfig,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public PushHttpMetricsReporter( ): void,PushHttpMetricsReporter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,0
org.apache.kafka.tools.ThroughputThrottler,ThroughputThrottler,low,low,low,low,0,4,0,0,0,14,50,41,5,3,4,0,0,0.833,0.25,0.333,0,0,,,,,50,,,,,,14,,,,,,,
"<Method>org.apache.kafka.tools.ThroughputThrottler.public ThroughputThrottler( long, long ): void","ThroughputThrottler( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,0,4
"<Method>org.apache.kafka.tools.ThroughputThrottler.public shouldThrottle( long, long ): boolean","shouldThrottle( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,3
<Method>org.apache.kafka.tools.ThroughputThrottler.public throttle( ): void,throttle( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,26,0,0,13
<Method>org.apache.kafka.tools.ThroughputThrottler.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,1
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepTimeNs,final sleepTimeNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->targetThroughput,final targetThroughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepDeficitNs,sleepDeficitNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->MIN_SLEEP_NS,static final MIN_SLEEP_NS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_MS,static final NS_PER_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_SEC,static final NS_PER_SEC : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->wakeup,wakeup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.ToolsUtils,ToolsUtils,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.ToolsUtils$1389;,Lorg.apache.kafka.tools.ToolsUtils$1389;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.tools.TransactionalMessageCopier,TransactionalMessageCopier,low,low,low-medium,low,0,0,0,0,0,0,203,0,0,0,0,0,0,0,0,0,0,0,,,,,203,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.TransactionalMessageCopier$12906;,Lorg.apache.kafka.tools.TransactionalMessageCopier$12906;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer,VerifiableConsumer,low,low,medium-high,low,0,5,2,0,0,12,376,45,5,0,5,0,0,1,0,1,0,0,,,,,376,,,,,,12,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.CommitData,CommitData,low,low,low,low,0,1,0,1,0,1,8,3,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ConsumerEvent,ConsumerEvent,low,low,low,low,0,1,0,0,7,1,8,3,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$21967;,Lorg.apache.kafka.tools.VerifiableConsumer$21967;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$5619;,Lorg.apache.kafka.tools.VerifiableConsumer$5619;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.OffsetsCommitted,OffsetsCommitted,low,low,low,low,0,1,0,1,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionData,PartitionData,low,low,low,low,0,1,0,0,2,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsAssigned,PartitionsAssigned,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsRevoked,PartitionsRevoked,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordData,RecordData,low,low,low,low,0,2,0,1,0,2,23,6,0,0,2,0,0,0,0,0,0,0,,,,,23,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordSetSummary,RecordSetSummary,low,low,low,low,0,3,0,1,0,3,18,9,3,0,3,0,0,1,0,1,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordsConsumed,RecordsConsumed,low,low,low,low,0,1,0,1,0,1,15,3,1,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.StartupComplete,StartupComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.VerifiableConsumer.private addKafkaSerializerModule( ): void,addKafkaSerializerModule( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.private hasMessageLimit( ): boolean,hasMessageLimit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.tools.VerifiableConsumer.private isFinished( ): boolean,isFinished( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.tools.VerifiableConsumer.public run( ): void,run( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,17,0,1,2
<Field>org.apache.kafka.tools.VerifiableConsumer->consumedMessages,consumedMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAsyncCommit,final useAsyncCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAutoCommit,final useAutoCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->verbose,final verbose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableLog4jAppender,VerifiableLog4jAppender,low,low,low-medium,low,0,0,0,0,0,0,154,0,2,0,0,0,0,0,0,0,0,0,,,,,154,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableLog4jAppender$10145;,Lorg.apache.kafka.tools.VerifiableLog4jAppender$10145;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->stopLogging,volatile stopLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableProducer,VerifiableProducer,low,low,low-medium,low,0,1,0,0,0,1,282,3,5,0,1,0,0,0,0,0,0,0,,,,,282,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableProducer.FailedSend,FailedSend,low,low,low,low,0,0,0,1,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableProducer$17160;,Lorg.apache.kafka.tools.VerifiableProducer$17160;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.PrintInfoCallback,PrintInfoCallback,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ProducerEvent,ProducerEvent,low,low,low,low,0,1,0,0,5,1,8,3,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.StartupComplete,StartupComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.SuccessfulSend,SuccessfulSend,low,low,low,low,0,2,0,1,0,2,27,6,0,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ToolData,ToolData,low,low,low,low,0,5,0,1,0,5,25,17,4,0,5,0,0,0.75,0.533,0.6,0,0,,,,,25,,,,,,5,,,,,,,
<Method>org.apache.kafka.tools.VerifiableProducer.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.tools.VerifiableProducer->throughput,final throughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numAcked,numAcked : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numSent,numSent : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->stopProducing,stopProducing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.agent,org.apache.kafka.trogdor.agent,low,low,medium-high,low,,,,,,26,506,,,,,,,,,,,,,16,16,0,506,0,0,0,1,0,26,,,,,,,
org.apache.kafka.trogdor.agent.Agent,Agent,low,low,low-medium,low,0,3,0,0,0,3,75,8,1,0,3,0,0,0,0,1,0,0,,,,,75,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.Agent$5310;,Lorg.apache.kafka.trogdor.agent.Agent$5310;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.agent.Agent.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.agent.Agent.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.agent.Agent.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.agent.Agent->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.agent.AgentClient,AgentClient,low,low,low-medium,low,0,2,0,0,0,2,98,8,1,0,2,0,0,0,0,0,0,0,,,,,98,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$2789;,Lorg.apache.kafka.trogdor.agent.AgentClient$2789;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$3164;,Lorg.apache.kafka.trogdor.agent.AgentClient$3164;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$3527;,Lorg.apache.kafka.trogdor.agent.AgentClient$3527;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$3821;,Lorg.apache.kafka.trogdor.agent.AgentClient$3821;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.agent.AgentClient.public invokeShutdown( ): void,invokeShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public maxTries( ): int,maxTries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.trogdor.agent.AgentClient->maxTries,final maxTries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.agent.AgentRestResource,AgentRestResource,low,low,low,low,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager,WorkerManager,low,low,medium-high,low,0,3,1,0,0,4,302,6,1,0,2,0,0,0,0,1,0,0,,,,,302,,,,,,4,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.CleanupWorker,CleanupWorker,low,low,low,low,1,1,0,0,0,1,14,2,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.CompleteWorker,CompleteWorker,low,low,low,low,1,0,0,0,0,0,12,0,1,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.CreateWorker,CreateWorker,low,low,low,low,1,1,0,0,0,2,18,10,1,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.FinishCreatingWorker,FinishCreatingWorker,low,low,low,low,1,1,0,0,0,1,20,2,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.GetWorkerStates,GetWorkerStates,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.HandleWorkerHalting,HandleWorkerHalting,low,low,low,low,1,0,0,0,0,0,42,0,2,0,0,0,0,0,0,0,0,0,,,,,42,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.WorkerManager$9333;,Lorg.apache.kafka.trogdor.agent.WorkerManager$9333;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.Shutdown,Shutdown,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.ShutdownManager,ShutdownManager,low,low,low,low,0,3,0,0,0,7,25,13,2,0,3,0,0,0.25,0,0,0,0,,,,,25,,,,,,7,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.State,State,low,low,low,low,0,0,0,0,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.StopWorker,StopWorker,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.Worker,Worker,low,low,low,low,4,4,1,0,0,5,49,16,4,0,3,0,0,0.875,0,0,0,0,,,,,49,,,,,,5,,,,,,,
<Method>org.apache.kafka.trogdor.agent.WorkerManager.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,1
<Method>org.apache.kafka.trogdor.agent.WorkerManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Field>org.apache.kafka.trogdor.agent.WorkerManager->shutdownManager,final shutdownManager : ShutdownManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.basic,org.apache.kafka.trogdor.basic,low,low,low,low,,,,,,2,136,,,,,,,,,,,,,5,4,1,136,0,0,0.2,1,0.2,2,,,,,,,
org.apache.kafka.trogdor.basic.BasicNode,BasicNode,low,low,low-medium,low,0,1,0,0,0,1,60,3,0,0,1,0,0,0,0,0,0,0,,,,,60,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.basic.BasicNode.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.trogdor.basic.BasicPlatform,BasicPlatform,low,low,low-medium,low,0,0,0,0,0,0,56,0,1,0,0,0,0,0,0,0,0,0,,,,,56,,,,,,0,,,,,,,
org.apache.kafka.trogdor.basic.BasicPlatform.CommandRunner,CommandRunner,low,low,low,low,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.trogdor.basic.BasicPlatform.ShellCommandRunner,ShellCommandRunner,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->commandRunner,final commandRunner : CommandRunner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.basic.BasicTopology,BasicTopology,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Package>org.apache.kafka.trogdor.common,org.apache.kafka.trogdor.common,low,low,low-medium,low,,,,,,14,137,,,,,,,,,,,,,9,6,3,137,0,0,0.333,1,0.333,14,,,,,,,
org.apache.kafka.trogdor.common.JsonUtil,JsonUtil,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.trogdor.common.Node,Node,low,low,low,low,0,0,0,1,0,4,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.trogdor.common.Node.Util,Util,low,low,low,low,0,2,0,0,0,2,11,4,0,0,0,2,0,0,0,0,0,0,,,,,11,,,,,,2,,,,,,,
org.apache.kafka.trogdor.common.Platform,Platform,low,low,low,low,0,0,0,1,0,5,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,5,,,,,,,
org.apache.kafka.trogdor.common.Platform.Config,Config,low,low,low,low,0,0,0,0,0,0,17,0,0,1,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.trogdor.common.ThreadUtils,ThreadUtils,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.common.ThreadUtils$1554;,Lorg.apache.kafka.trogdor.common.ThreadUtils$1554;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.trogdor.common.Topology,Topology,low,low,low,low,0,0,0,1,0,2,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
org.apache.kafka.trogdor.common.Topology.Util,Util,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.trogdor.common.WorkerUtils,WorkerUtils,low,low,low-medium,low,0,1,0,0,0,1,56,5,0,3,0,1,0,0,0,0,0,0,,,,,56,,,,,,1,,,,,,,
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.public static perSecToPerPeriod( float, long ): int","static perSecToPerPeriod( float, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Field>org.apache.kafka.trogdor.common.WorkerUtils->CREATE_TOPICS_CALL_TIMEOUT,static final CREATE_TOPICS_CALL_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.common.WorkerUtils->CREATE_TOPICS_REQUEST_TIMEOUT,static final CREATE_TOPICS_REQUEST_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.common.WorkerUtils->MAX_CREATE_TOPICS_BATCH_SIZE,static final MAX_CREATE_TOPICS_BATCH_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.coordinator,org.apache.kafka.trogdor.coordinator,low,low,medium-high,low,,,,,,41,616,,,,,,,,,,,,,17,17,0,616,0,0,0,1,0,41,,,,,,,
org.apache.kafka.trogdor.coordinator.Coordinator,Coordinator,low,low,low-medium,low,0,3,0,0,0,3,77,8,1,0,3,0,0,0,0.333,1,0,0,,,,,77,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.Coordinator$5594;,Lorg.apache.kafka.trogdor.coordinator.Coordinator$5594;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->startTimeMs,final startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.CoordinatorClient,CoordinatorClient,low,low,low-medium,low,0,2,0,0,0,2,108,7,1,0,2,0,0,0,0,0,0,0,,,,,108,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$2834;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$2834;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3192;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3192;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3530;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3530;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3824;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$3824;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$4096;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$4096;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public maxTries( ): int,maxTries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorClient->maxTries,final maxTries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.CoordinatorRestResource,CoordinatorRestResource,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager,NodeManager,low,low,low-medium,low,0,3,0,0,0,6,139,14,1,1,3,0,0,0,0.444,1,0,0,,,,,139,,,,,,6,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.CreateWorker,CreateWorker,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.ManagedWorker,ManagedWorker,low,low,low,low,0,2,0,0,0,4,20,10,1,0,2,0,0,0,0,0,0,0,,,,,20,,,,,,4,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.NodeHeartbeat,NodeHeartbeat,low,low,low,low,1,4,3,0,0,16,47,46,0,0,1,0,0,0,0,0,0,0,,,,,47,,,,,,16,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.StopWorker,StopWorker,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.coordinator.NodeManager. rescheduleNextHeartbeat( long ): void, rescheduleNextHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,2
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,1,0,0
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->heartbeat,final heartbeat : NodeHeartbeat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->HEARTBEAT_DELAY_MS,static final HEARTBEAT_DELAY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager,TaskManager,low,low,low-medium,low,0,2,0,0,0,4,257,5,0,0,2,0,0,0,0.25,0,0,0,,,,,257,,,,,,4,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.CancelTask,CancelTask,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.CreateTask,CreateTask,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.GetTasksResponse,GetTasksResponse,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.HandleWorkerCompletion,HandleWorkerCompletion,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.ManagedTask,ManagedTask,low,low,low,low,1,2,0,0,0,4,54,8,4,0,2,0,0,0,0.25,0,0,0,,,,,54,,,,,,4,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.ManagedTaskState,ManagedTaskState,low,low,low,low,0,0,0,0,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.RunTask,RunTask,low,low,low,low,1,1,0,0,0,1,29,2,1,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,1,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.Shutdown,Shutdown,low,low,low,low,0,1,0,0,0,1,13,2,1,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,0
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,2,0,0,0
<Package>org.apache.kafka.trogdor.fault,org.apache.kafka.trogdor.fault,low,low,medium-high,low,,,,,,10,294,,,,,,,,,,,,,14,14,0,294,0,0,0.071,1,0.071,10,,,,,,,
org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec,FilesUnreadableFaultSpec,low,low,low,low,0,1,0,0,0,1,36,3,1,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh,Kibosh,low,low,low-medium,low,0,1,0,0,0,1,99,1,0,1,1,0,0,0,0,0,0,0,,,,,99,,,,,,1,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshControlFile,KiboshControlFile,low,low,low,low,0,1,0,0,0,1,26,3,0,1,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshFaultSpec,KiboshFaultSpec,low,low,low,low,0,1,0,0,1,1,18,3,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,1,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshFilesUnreadableFaultSpec,KiboshFilesUnreadableFaultSpec,low,low,low,low,0,1,0,1,0,1,14,3,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshProcess,KiboshProcess,low,low,low,low,2,2,0,0,0,5,23,17,0,0,2,0,0,0,0,0,0,0,,,,,23,,,,,,5,,,,,,,
<Method>org.apache.kafka.trogdor.fault.Kibosh.private Kibosh( ): void,Kibosh( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.trogdor.fault.Kibosh->INSTANCE,static final INSTANCE : Kibosh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.KiboshFaultController,KiboshFaultController,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.KiboshFaultWorker,KiboshFaultWorker,low,low,low,low,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultController,NetworkPartitionFaultController,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec,NetworkPartitionFaultSpec,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker,NetworkPartitionFaultWorker,low,low,low,low,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultController,ProcessStopFaultController,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultSpec,ProcessStopFaultSpec,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultWorker,ProcessStopFaultWorker,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
<Package>org.apache.kafka.trogdor.rest,org.apache.kafka.trogdor.rest,low,low,medium-high,low,,,,,,36,511,,,,,,,,,,,,,29,29,0,511,0,1,0.103,1,0.103,36,,,,,,,
org.apache.kafka.trogdor.rest.AgentStatusResponse,AgentStatusResponse,low,low,low,low,0,1,0,0,0,1,14,3,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.rest.AgentStatusResponse.public serverStartMs( ): long,serverStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.AgentStatusResponse->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest,CoordinatorShutdownRequest,low,low,low,low,0,2,0,0,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest.public CoordinatorShutdownRequest( boolean ): void,CoordinatorShutdownRequest( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest.public stopAgents( ): boolean,stopAgents( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest->stopAgents,final stopAgents : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CoordinatorStatusResponse,CoordinatorStatusResponse,low,low,low,low,0,2,0,0,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse.public CoordinatorStatusResponse( long ): void,CoordinatorStatusResponse( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse.public serverStartMs( ): long,serverStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CreateTaskRequest,CreateTaskRequest,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.CreateTaskResponse,CreateTaskResponse,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.CreateWorkerRequest,CreateWorkerRequest,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.CreateWorkerResponse,CreateWorkerResponse,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.Empty,Empty,low,low,low,low,0,2,0,0,0,2,15,5,0,1,2,0,0,0,0,1,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.Empty.public Empty( ): void,Empty( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.Empty.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.Empty->INSTANCE,static final INSTANCE : Empty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.ErrorResponse,ErrorResponse,low,low,low,low,0,2,0,0,0,2,27,6,1,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public code( ): int,code( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.ErrorResponse->code,final code : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.JsonRestServer,JsonRestServer,low,low,low-medium,low,0,4,0,0,0,7,129,30,0,1,4,0,0,0,0.375,1,0,0,,,,,129,,,,,,7,,,,,,,
org.apache.kafka.trogdor.rest.JsonRestServer.HttpResponse<T>,HttpResponse,low,low,low,low,1,1,0,0,0,2,12,4,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.rest.JsonRestServer$5457;,Lorg.apache.kafka.trogdor.rest.JsonRestServer$5457;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public JsonRestServer( int ): void,JsonRestServer( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,0,0
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,17,0,0,0
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.Message,Message,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.rest.Message.public final hashCode( ): int,final hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.trogdor.rest.RestExceptionMapper,RestExceptionMapper,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.StopTaskRequest,StopTaskRequest,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.StopTaskResponse,StopTaskResponse,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.StopWorkerRequest,StopWorkerRequest,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.StopWorkerResponse,StopWorkerResponse,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.TaskDone,TaskDone,low,low,low,low,0,3,0,0,0,3,28,9,3,0,3,0,0,1,0,1,0,0,,,,,28,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskDone.public cancelled( ): boolean,cancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public doneMs( ): long,doneMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TaskDone->cancelled,final cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskDone->doneMs,final doneMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskDone->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskPending,TaskPending,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.TaskRunning,TaskRunning,low,low,low,low,0,1,0,0,0,1,10,3,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskRunning.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TaskRunning->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskState,TaskState,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.TaskStopping,TaskStopping,low,low,low,low,0,1,0,0,0,1,10,3,1,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskStopping.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TaskStopping->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TasksResponse,TasksResponse,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.WorkerDone,WorkerDone,low,low,low,low,0,3,0,0,0,3,33,10,2,0,3,0,0,1,0,1,0,0,,,,,33,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public done( ): boolean,done( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public doneMs( ): long,doneMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Field>org.apache.kafka.trogdor.rest.WorkerDone->doneMs,final doneMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerDone->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerReceiving,WorkerReceiving,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.WorkerRunning,WorkerRunning,low,low,low,low,0,2,0,0,0,2,21,7,1,0,2,0,0,0,0,1,0,0,,,,,21,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Field>org.apache.kafka.trogdor.rest.WorkerRunning->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerStarting,WorkerStarting,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.trogdor.rest.WorkerState,WorkerState,low,low,low,low,0,4,0,0,0,4,27,8,0,0,4,0,0,0,0,0,0,0,,,,,27,,,,,,4,,,,,,,
<Method>org.apache.kafka.trogdor.rest.WorkerState.public done( ): boolean,done( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public stopping( ): boolean,stopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.trogdor.rest.WorkerStopping,WorkerStopping,low,low,low,low,0,3,0,0,0,3,24,10,1,0,3,0,0,0,0,1,0,0,,,,,24,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public stopping( ): boolean,stopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.WorkerStopping->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.task,org.apache.kafka.trogdor.task,low,low,low-medium,low,,,,,,9,65,,,,,,,,,,,,,6,4,2,65,0,0,0.5,1,0.5,9,,,,,,,
org.apache.kafka.trogdor.task.NoOpTaskController,NoOpTaskController,low,low,low,low,0,1,0,0,0,1,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.task.NoOpTaskController.public NoOpTaskController( ): void,NoOpTaskController( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.trogdor.task.NoOpTaskSpec,NoOpTaskSpec,low,low,low,low,0,1,0,0,0,1,11,4,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
"<Method>org.apache.kafka.trogdor.task.NoOpTaskSpec.public NoOpTaskSpec( long, long ): void","NoOpTaskSpec( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
org.apache.kafka.trogdor.task.NoOpTaskWorker,NoOpTaskWorker,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.trogdor.task.TaskController,TaskController,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.trogdor.task.TaskSpec,TaskSpec,low,low,low,low,0,4,0,0,0,4,30,13,2,1,4,0,0,0.667,0.375,1,0,0,,,,,30,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.task.TaskSpec.protected TaskSpec( long, long ): void","TaskSpec( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,3
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final durationMs( ): long,final durationMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final hashCode( ): int,final hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final startMs( ): long,final startMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.task.TaskSpec->durationMs,final durationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.TaskSpec->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.TaskSpec->MAX_TASK_DURATION_MS,static final MAX_TASK_DURATION_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.task.TaskWorker,TaskWorker,low,low,low,low,0,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
<Package>org.apache.kafka.trogdor.workload,org.apache.kafka.trogdor.workload,low,low,medium-high,low,,,,,,83,600,,,,,,,,,,,,,20,20,0,600,0,0,0,1,0,83,,,,,,,
org.apache.kafka.trogdor.workload.Histogram,Histogram,low,low,low-medium,low,0,5,2,0,0,15,89,42,1,0,5,0,0,0,0.55,0.7,0,0,,,,,89,,,,,,15,,,,,,,
org.apache.kafka.trogdor.workload.Histogram.PercentileSummary,PercentileSummary,low,low,low,low,0,3,0,0,0,3,10,7,2,0,3,0,0,0.5,0.444,1,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.Histogram.Summary,Summary,low,low,low,low,0,2,0,0,0,2,14,4,2,0,2,0,0,1,0,1,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.workload.Histogram.public Histogram( int ): void,Histogram( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.workload.Histogram.public add( int ): void,add( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,0,5
<Method>org.apache.kafka.trogdor.workload.Histogram.public add( long ): void,add( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,1,0
<Method>org.apache.kafka.trogdor.workload.Histogram.public summarize( ): Summary,summarize( ): Summary,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.trogdor.workload.Histogram.public summarize( float ): Summary,summarize( float ): Summary,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,22,1,0,3
<Field>org.apache.kafka.trogdor.workload.Histogram->counts,final counts : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchSpec,ProduceBenchSpec,low,low,low-medium,low,0,4,0,0,0,4,57,12,4,0,4,0,0,1,0,1,0,0,,,,,57,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.workload.ProduceBenchSpec$3443;,Lorg.apache.kafka.trogdor.workload.ProduceBenchSpec$3443;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public activeTopics( ): int,activeTopics( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public maxMessages( ): int,maxMessages( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public targetMessagesPerSec( ): int,targetMessagesPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public totalTopics( ): int,totalTopics( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->activeTopics,final activeTopics : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->targetMessagesPerSec,final targetMessagesPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->totalTopics,final totalTopics : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker,ProduceBenchWorker,low,low,low-medium,low,0,0,0,0,0,0,176,0,0,4,0,0,0,0,0,0,0,0,,,,,176,,,,,,0,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.Prepare,Prepare,low,low,low,low,1,1,0,0,0,5,17,16,0,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecords,SendRecords,low,low,low,low,2,2,0,0,0,3,45,13,0,0,2,0,0,0,0.25,0,0,0,,,,,45,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecordsCallback,SendRecordsCallback,low,low,low,low,1,1,0,0,0,1,13,3,2,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecordsThrottle,SendRecordsThrottle,low,low,low,low,0,1,0,0,0,1,12,7,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.StatusData,StatusData,low,low,low,low,0,6,0,0,0,6,32,26,5,0,6,0,0,0.8,0.625,1,0,0,,,,,32,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.StatusUpdater,StatusUpdater,low,low,low,low,1,1,0,0,0,2,18,12,1,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->MESSAGE_SIZE,static final MESSAGE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->NUM_PARTITIONS,static final NUM_PARTITIONS : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->REPLICATION_FACTOR,static final REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker,RoundTripWorker,low,low,low-medium,low,0,0,0,0,0,0,203,0,1,4,0,0,0,0,0,0,0,0,,,,,203,,,,,,0,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ConsumerRunnable,ConsumerRunnable,low,low,low,low,1,4,2,0,0,10,51,49,0,0,2,0,0,0,0,0,0,0,,,,,51,,,,,,10,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.Prepare,Prepare,low,low,low,low,2,1,0,0,0,5,14,13,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ProducerRunnable,ProducerRunnable,low,low,low,low,3,4,2,0,0,6,52,50,0,0,2,0,0,0,0,0,0,0,,,,,52,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToReceiveTracker,ToReceiveTracker,low,low,low,low,0,3,0,0,0,5,17,15,0,0,3,0,0,0,0.167,0,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToSendTracker,ToSendTracker,low,low,low,low,1,3,0,0,0,5,16,12,2,0,3,0,0,0.5,0.167,0,0,0,,,,,16,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToSendTrackerResult,ToSendTrackerResult,low,low,low,low,0,1,0,0,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->toReceiveTracker,final toReceiveTracker : ToReceiveTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->LOG_INTERVAL_MS,static final LOG_INTERVAL_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->LOG_NUM_MESSAGES,static final LOG_NUM_MESSAGES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->VALUE_SIZE,static final VALUE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec,RoundTripWorkloadSpec,low,low,low,low,0,2,0,0,0,2,45,6,2,0,2,0,0,1,0,1,0,0,,,,,45,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.workload.RoundTripWorkloadSpec$3056;,Lorg.apache.kafka.trogdor.workload.RoundTripWorkloadSpec$3056;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public maxMessages( ): int,maxMessages( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public targetMessagesPerSec( ): int,targetMessagesPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->targetMessagesPerSec,final targetMessagesPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.Throttle,Throttle,low,low,low,low,0,3,1,0,0,7,30,23,4,0,3,0,0,0,0.444,0,0,0,,,,,30,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.Throttle. Throttle( int, int ): void"," Throttle( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,4
<Method>org.apache.kafka.trogdor.workload.Throttle.protected synchronized delay( long ): void,synchronized delay( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.Throttle.public synchronized increment( ): boolean,synchronized increment( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,1,8
<Field>org.apache.kafka.trogdor.workload.Throttle->count,count : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->maxPerPeriod,final maxPerPeriod : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->periodMs,final periodMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->prevPeriod,prevPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
