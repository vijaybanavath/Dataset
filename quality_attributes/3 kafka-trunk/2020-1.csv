QualifiedName,Name,Complexity,Coupling,Size,Lack of Cohesion,CBO,RFC,SRFC,DIT,NOC,WMC,LOC,CMLOC,NOF,NOSF,NOM,NOSM,NORM,LCOM,LCAM,LTCC,ATFD,SI,Coverage,#(C&I),#C,#I,LOC,AC,EC,Abs,Ins,ND,WMC,Coverage,MCC,NBD,LOC,#Pa,#MC,#AF
kafka-f610f9ff1f59f90434c3614f00c95001f50100e4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>$,$,low,low,low,low,,,,,,0,79,,,,,,,,,,,,,3,3,0,79,0,0,0,1,0,0,,,,,,,
$.LineSplit,LineSplit,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : L$.LineSplit$2600;,L$.LineSplit$2600;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
$.Pipe,Pipe,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : L$.Pipe$2314;,L$.Pipe$2314;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
$.WordCount,WordCount,low,low,low,low,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Anonymous> : L$.WordCount$3195;,L$.WordCount$3195;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Package>kafka.examples,kafka.examples,low,low,low,low,,,,,,15,92,,,,,,,,,,,,,5,5,0,92,0,2,0,1,0,15,,,,,,,
kafka.examples.Consumer,Consumer,very-high,low,low,low,5,591,9,1,0,5,27,24,2,0,4,0,0,0,0.375,0.833,0,0,,,,,27,,,,,,5,,,,,,,
<Method>kafka.examples.Consumer.public Consumer( String ): void,Consumer( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,7,2
<Method>kafka.examples.Consumer.public doWork( ): void,doWork( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,8,3
<Method>kafka.examples.Consumer.public isInterruptible( ): boolean,isInterruptible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>kafka.examples.Consumer.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>kafka.examples.Consumer->consumer,final consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.Consumer->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.DemoCallBack,DemoCallBack,low,low,low,low,1,8,5,1,0,3,17,13,3,0,2,0,0,0,0.417,0,0,0,,,,,17,,,,,,3,,,,,,,
"<Method>kafka.examples.DemoCallBack.public DemoCallBack( long, int, String ): void","DemoCallBack( long, int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>kafka.examples.DemoCallBack.public onCompletion( RecordMetadata, Exception ): void","onCompletion( RecordMetadata, Exception ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,2,5,3
<Field>kafka.examples.DemoCallBack->key,final key : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.DemoCallBack->message,final message : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.DemoCallBack->startTime,final startTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.KafkaConsumerProducerDemo,KafkaConsumerProducerDemo,low,low,low,low,3,4,3,1,0,1,7,6,0,0,0,1,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>kafka.examples.KafkaConsumerProducerDemo.public static main( String ): void,static main( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,0
kafka.examples.KafkaProperties,KafkaProperties,low,low,low,low,0,1,0,1,0,1,10,1,0,8,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>kafka.examples.KafkaProperties.private KafkaProperties( ): void,KafkaProperties( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>kafka.examples.KafkaProperties->CLIENT_ID,static final CLIENT_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->CONNECTION_TIMEOUT,static final CONNECTION_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_PRODUCER_BUFFER_SIZE,static final KAFKA_PRODUCER_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_SERVER_PORT,static final KAFKA_SERVER_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_SERVER_URL,static final KAFKA_SERVER_URL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->TOPIC,static final TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->TOPIC2,static final TOPIC2 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->TOPIC3,static final TOPIC3 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.Producer,Producer,very-high,low,low,low,5,233,8,2,0,5,31,27,3,0,2,0,1,0,0.333,0,0,1,,,,,31,,,,,,5,,,,,,,
"<Method>kafka.examples.Producer.public Producer( String, Boolean ): void","Producer( String, Boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,6,3
<Method>kafka.examples.Producer.public run( ): void,run( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,18,0,6,5
<Field>kafka.examples.Producer->isAsync,final isAsync : Boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.Producer->producer,final producer : KafkaProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.Producer->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>kafka.tools,kafka.tools,low,low,low-medium,low,,,,,,95,421,,,,,,,,,,,,,1,1,0,421,0,1,0,1,0,95,,,,,,,
kafka.tools.StreamsResetter,StreamsResetter,very-high,high,medium-high,high,23,568,108,1,0,95,421,384,2,19,22,1,0,0.827,0.803,0.972,0,0,,,,,421,,,,,,95,,,,,,,
"<Method>kafka.tools.StreamsResetter.private checkInvalidArgs( OptionParser, OptionSet, Set, OptionSpec ): void","checkInvalidArgs( OptionParser, OptionSet, Set, OptionSpec ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,3,0
"<Method>kafka.tools.StreamsResetter.private checkOffsetRange( Map, Map, Map ): Map","checkOffsetRange( Map, Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,18,3,14,0
"<Method>kafka.tools.StreamsResetter.public doDelete( List, Admin ): void","doDelete( List, Admin ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,2,8,0
<Method>kafka.tools.StreamsResetter.public getDateTime( String ): long,getDateTime( String ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,15,1,11,0
<Method>kafka.tools.StreamsResetter.private getTopicPartitionOffsetFromResetPlan( String ): Map,getTopicPartitionOffsetFromResetPlan( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>kafka.tools.StreamsResetter.private isInputTopic( String ): boolean,isInputTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>kafka.tools.StreamsResetter.private isIntermediateTopic( String ): boolean,isIntermediateTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>kafka.tools.StreamsResetter.private isInternalTopic( String ): boolean,isInternalTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,8,2
"<Method>kafka.tools.StreamsResetter.private maybeDeleteInternalTopics( Admin, boolean ): void","maybeDeleteInternalTopics( Admin, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,12,2,7,3
"<Method>kafka.tools.StreamsResetter.private maybeReset( String, Consumer, Set ): void","maybeReset( String, Consumer, Set ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,30,3,29,24
"<Method>kafka.tools.StreamsResetter.private maybeResetInputAndSeekToEndIntermediateTopicOffsets( Map, boolean ): int","maybeResetInputAndSeekToEndIntermediateTopicOffsets( Map, boolean ): int",medium-high,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,4,71,2,47,12
"<Method>kafka.tools.StreamsResetter.public maybeSeekToEnd( String, Consumer, Set ): void","maybeSeekToEnd( String, Consumer, Set ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,3,7,1
<Method>kafka.tools.StreamsResetter.private parseArguments( String ): void,parseArguments( String ): void,low,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,74,1,69,47
<Method>kafka.tools.StreamsResetter.private parseResetPlan( String ): Map,parseResetPlan( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,1,6,0
"<Method>kafka.tools.StreamsResetter.private resetByDuration( Consumer, Set, Duration ): void","resetByDuration( Consumer, Set, Duration ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,3,9,0
"<Method>kafka.tools.StreamsResetter.public resetOffsetsFromResetPlan( Consumer, Set, Map ): void","resetOffsetsFromResetPlan( Consumer, Set, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,3,5,0
"<Method>kafka.tools.StreamsResetter.public resetOffsetsTo( Consumer, Set, Long ): void","resetOffsetsTo( Consumer, Set, Long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,3,7,0
"<Method>kafka.tools.StreamsResetter.private resetToDatetime( Consumer, Set, Long ): void","resetToDatetime( Consumer, Set, Long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,3,6,0
<Method>kafka.tools.StreamsResetter.public run( String ): int,run( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>kafka.tools.StreamsResetter.public run( String, Properties ): int","run( String, Properties ): int",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,30,2,24,13
"<Method>kafka.tools.StreamsResetter.public shiftOffsetsBy( Consumer, Set, long ): void","shiftOffsetsBy( Consumer, Set, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,3,8,0
<Method>kafka.tools.StreamsResetter.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>kafka.tools.StreamsResetter.private validateNoActiveConsumers( String, Admin ): void","validateNoActiveConsumers( String, Admin ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,2,8,0
<Field>kafka.tools.StreamsResetter->allTopics,final allTopics : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->options,options : OptionSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->applicationIdOption,static applicationIdOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->bootstrapServerOption,static bootstrapServerOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->byDurationOption,static byDurationOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->commandConfigOption,static commandConfigOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->dryRunOption,static dryRunOption : OptionSpecBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->executeOption,static executeOption : OptionSpecBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->EXIT_CODE_ERROR,static final EXIT_CODE_ERROR : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->EXIT_CODE_SUCCESS,static final EXIT_CODE_SUCCESS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->fromFileOption,static fromFileOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->helpOption,static helpOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->inputTopicsOption,static inputTopicsOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->intermediateTopicsOption,static intermediateTopicsOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->shiftByOption,static shiftByOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->toDatetimeOption,static toDatetimeOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->toEarliestOption,static toEarliestOption : OptionSpecBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->toLatestOption,static toLatestOption : OptionSpecBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->toOffsetOption,static toOffsetOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->usage,static usage : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.tools.StreamsResetter->versionOption,static versionOption : OptionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients,org.apache.kafka.clients,medium-high,medium-high,high,low,,,,,,537,2076,,,,,,,,,,,,,32,29,3,2076,31,19,0.094,0.38,0.526,537,,,,,,,
org.apache.kafka.clients.ApiVersion,ApiVersion,low,low,low,low,1,5,2,1,0,3,21,13,3,0,3,0,0,0,0.444,0.667,0,0,,,,,21,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.ApiVersion.public ApiVersion( ApiKeys ): void,ApiVersion( ApiKeys ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.ApiVersion.public ApiVersion( short, short, short ): void","ApiVersion( short, short, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.clients.ApiVersion.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.clients.ApiVersion->apiKey,final apiKey : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ApiVersion->maxVersion,final maxVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ApiVersion->minVersion,final minVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ApiVersions,ApiVersions,low,low,low,low,4,17,8,1,0,6,19,16,2,0,5,0,0,0.375,0.4,0.167,0,0,,,,,19,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.ApiVersions.private computeMaxUsableProduceMagic( ): byte,computeMaxUsableProduceMagic( ): byte,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,4,1
<Method>org.apache.kafka.clients.ApiVersions.public synchronized get( String ): NodeApiVersions,synchronized get( String ): NodeApiVersions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.ApiVersions.public synchronized maxUsableProduceMagic( ): byte,synchronized maxUsableProduceMagic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ApiVersions.public synchronized remove( String ): void,synchronized remove( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.clients.ApiVersions.public synchronized update( String, NodeApiVersions ): void","synchronized update( String, NodeApiVersions ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
<Field>org.apache.kafka.clients.ApiVersions->nodeApiVersions,final nodeApiVersions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ApiVersions->maxUsableProduceMagic,maxUsableProduceMagic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientDnsLookup,ClientDnsLookup,low-medium,low,low,low,0,4,1,2,0,3,12,7,1,3,2,1,0,1.5,0.167,1,0,0,,,,,12,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.ClientDnsLookup.private ClientDnsLookup( String ): void,ClientDnsLookup( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.ClientDnsLookup.public static forConfig( String ): ClientDnsLookup,static forConfig( String ): ClientDnsLookup,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.ClientDnsLookup.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.clients.ClientDnsLookup->clientDnsLookup,clientDnsLookup : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientDnsLookup->DEFAULT,static final DEFAULT : ClientDnsLookup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientDnsLookup->RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY,static final RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY : ClientDnsLookup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientDnsLookup->USE_ALL_DNS_IPS,static final USE_ALL_DNS_IPS : ClientDnsLookup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientRequest,ClientRequest,low,low,low-medium,medium-high,4,16,3,1,0,11,60,51,8,0,11,0,0,0.775,0.795,0.6,0,0,,,,,60,,,,,,11,,,,,,,
"<Method>org.apache.kafka.clients.ClientRequest.public ClientRequest( String, Builder, int, String, long, boolean, int, RequestCompletionHandler ): void","ClientRequest( String, Builder, int, String, long, boolean, int, RequestCompletionHandler ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,0,8
<Method>org.apache.kafka.clients.ClientRequest.public apiKey( ): ApiKeys,apiKey( ): ApiKeys,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.ClientRequest.public callback( ): RequestCompletionHandler,callback( ): RequestCompletionHandler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public createdTimeMs( ): long,createdTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public expectResponse( ): boolean,expectResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public makeHeader( short ): RequestHeader,makeHeader( short ): RequestHeader,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,3,3
<Method>org.apache.kafka.clients.ClientRequest.public requestBuilder( ): Builder,requestBuilder( ): Builder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public requestTimeoutMs( ): int,requestTimeoutMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,7
<Field>org.apache.kafka.clients.ClientRequest->callback,final callback : RequestCompletionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->createdTimeMs,final createdTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->destination,final destination : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->expectResponse,final expectResponse : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->requestBuilder,final requestBuilder : Builder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientResponse,ClientResponse,low,low,low-medium,high,5,13,1,1,0,13,61,51,9,0,12,0,0,0.848,0.815,0.727,0,0,,,,,61,,,,,,13,,,,,,,
"<Method>org.apache.kafka.clients.ClientResponse.public ClientResponse( RequestHeader, RequestCompletionHandler, String, long, long, boolean, UnsupportedVersionException, AuthenticationException, AbstractResponse ): void","ClientResponse( RequestHeader, RequestCompletionHandler, String, long, long, boolean, UnsupportedVersionException, AuthenticationException, AbstractResponse ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,9,0,9
<Method>org.apache.kafka.clients.ClientResponse.public authenticationException( ): AuthenticationException,authenticationException( ): AuthenticationException,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public hasResponse( ): boolean,hasResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public onComplete( ): void,onComplete( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.clients.ClientResponse.public receivedTimeMs( ): long,receivedTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public requestHeader( ): RequestHeader,requestHeader( ): RequestHeader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public requestLatencyMs( ): long,requestLatencyMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public responseBody( ): AbstractResponse,responseBody( ): AbstractResponse,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,0,5
<Method>org.apache.kafka.clients.ClientResponse.public versionMismatch( ): UnsupportedVersionException,versionMismatch( ): UnsupportedVersionException,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public wasDisconnected( ): boolean,wasDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientResponse->authenticationException,final authenticationException : AuthenticationException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->callback,final callback : RequestCompletionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->destination,final destination : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->disconnected,final disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->latencyMs,final latencyMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->receivedTimeMs,final receivedTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->requestHeader,final requestHeader : RequestHeader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->responseBody,final responseBody : AbstractResponse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->versionMismatch,final versionMismatch : UnsupportedVersionException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientUtils,ClientUtils,low-medium,medium-high,low-medium,low-medium,12,93,18,1,0,22,56,54,0,1,1,5,0,0,0.643,1,0,0,,,,,56,,,,,,22,,,,,,,
<Method>org.apache.kafka.clients.ClientUtils.private ClientUtils( ): void,ClientUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.ClientUtils.public static createChannelBuilder( AbstractConfig, Time ): ChannelBuilder","static createChannelBuilder( AbstractConfig, Time ): ChannelBuilder",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
<Method>org.apache.kafka.clients.ClientUtils.static filterPreferredAddresses( InetAddress ): List,static filterPreferredAddresses( InetAddress ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,3,0
"<Method>org.apache.kafka.clients.ClientUtils.public static parseAndValidateAddresses( List, ClientDnsLookup ): List","static parseAndValidateAddresses( List, ClientDnsLookup ): List",low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,7,31,2,12,2
"<Method>org.apache.kafka.clients.ClientUtils.public static parseAndValidateAddresses( List, String ): List","static parseAndValidateAddresses( List, String ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.ClientUtils.static resolve( String, ClientDnsLookup ): List","static resolve( String, ClientDnsLookup ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,0
<Field>org.apache.kafka.clients.ClientUtils->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates,ClusterConnectionStates,low-medium,low,low-medium,low-medium,5,57,26,1,0,43,164,119,5,1,26,0,0,0.784,0.637,0.545,0,0,,,,,164,,,,,,43,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates.NodeConnectionState,NodeConnectionState,low,low,low,low,4,16,5,1,0,8,38,27,10,0,5,0,0,0.725,0.64,1,0,0,,,,,38,,,,,,8,,,,,,,
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public ClusterConnectionStates( long, long, LogContext ): void","ClusterConnectionStates( long, long, LogContext ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,4,7
<Method>org.apache.kafka.clients.ClusterConnectionStates.public authenticationException( String ): AuthenticationException,authenticationException( String ): AuthenticationException,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public authenticationFailed( String, long, AuthenticationException ): void","authenticationFailed( String, long, AuthenticationException ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public canConnect( String, long ): boolean","canConnect( String, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,2,2,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public checkingApiVersions( String ): void,checkingApiVersions( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public connecting( String, long, String, ClientDnsLookup ): void","connecting( String, long, String, ClientDnsLookup ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,4,7,4
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public connectionDelay( String, long ): long","connectionDelay( String, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,3,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public connectionState( String ): ConnectionState,connectionState( String ): ConnectionState,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.ClusterConnectionStates.public currentAddress( String ): InetAddress,currentAddress( String ): InetAddress,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public disconnected( String, long ): void","disconnected( String, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
<Method>org.apache.kafka.clients.ClusterConnectionStates.public hasReadyNodes( long ): boolean,hasReadyNodes( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,3,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public isBlackedOut( String, long ): boolean","isBlackedOut( String, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public isConnected( String ): boolean,isConnected( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public isConnecting( String ): boolean,isConnecting( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public isDisconnected( String ): boolean,isDisconnected( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.public isPreparingConnection( String ): boolean,isPreparingConnection( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.private isReady( NodeConnectionState, long ): boolean","isReady( NodeConnectionState, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public isReady( String, long ): boolean","isReady( String, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.private nodeState( String ): NodeConnectionState,nodeState( String ): NodeConnectionState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public pollDelayMs( String, long ): long","pollDelayMs( String, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,3,0
<Method>org.apache.kafka.clients.ClusterConnectionStates.public ready( String ): void,ready( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.clients.ClusterConnectionStates.public remove( String ): void,remove( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.private resetReconnectBackoff( NodeConnectionState ): void,resetReconnectBackoff( NodeConnectionState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public throttle( String, long ): void","throttle( String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,1,1
"<Method>org.apache.kafka.clients.ClusterConnectionStates.public throttleDelayMs( String, long ): long","throttleDelayMs( String, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,1,1
<Method>org.apache.kafka.clients.ClusterConnectionStates.private updateReconnectBackoff( NodeConnectionState ): void,updateReconnectBackoff( NodeConnectionState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,5
<Field>org.apache.kafka.clients.ClusterConnectionStates->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->nodeState,final nodeState : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffInitMs,final reconnectBackoffInitMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMaxExp,final reconnectBackoffMaxExp : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMaxMs,final reconnectBackoffMaxMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClusterConnectionStates->RECONNECT_BACKOFF_EXP_BASE,static final RECONNECT_BACKOFF_EXP_BASE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.CommonClientConfigs,CommonClientConfigs,low,low,low-medium,low,2,7,5,1,0,3,93,9,0,52,0,1,0,0,0,0,0,0,,,,,93,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.CommonClientConfigs.public static postProcessReconnectBackoffConfigs( AbstractConfig, Map ): Map","static postProcessReconnectBackoffConfigs( AbstractConfig, Map ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,7,7
<Field>org.apache.kafka.clients.CommonClientConfigs->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->BOOTSTRAP_SERVERS_DOC,static final BOOTSTRAP_SERVERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_DNS_LOOKUP_CONFIG,static final CLIENT_DNS_LOOKUP_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_DNS_LOOKUP_DOC,static final CLIENT_DNS_LOOKUP_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_ID_DOC,static final CLIENT_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_RACK_CONFIG,static final CLIENT_RACK_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CLIENT_RACK_DOC,static final CLIENT_RACK_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CONNECTIONS_MAX_IDLE_MS_CONFIG,static final CONNECTIONS_MAX_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->CONNECTIONS_MAX_IDLE_MS_DOC,static final CONNECTIONS_MAX_IDLE_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->DEFAULT_SECURITY_PROTOCOL,static final DEFAULT_SECURITY_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->GROUP_ID_CONFIG,static final GROUP_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->GROUP_ID_DOC,static final GROUP_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->GROUP_INSTANCE_ID_CONFIG,static final GROUP_INSTANCE_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->GROUP_INSTANCE_ID_DOC,static final GROUP_INSTANCE_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->HEARTBEAT_INTERVAL_MS_CONFIG,static final HEARTBEAT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->HEARTBEAT_INTERVAL_MS_DOC,static final HEARTBEAT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->MAX_POLL_INTERVAL_MS_CONFIG,static final MAX_POLL_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->MAX_POLL_INTERVAL_MS_DOC,static final MAX_POLL_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METADATA_MAX_AGE_CONFIG,static final METADATA_MAX_AGE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METADATA_MAX_AGE_DOC,static final METADATA_MAX_AGE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_NUM_SAMPLES_DOC,static final METRICS_NUM_SAMPLES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_RECORDING_LEVEL_DOC,static final METRICS_RECORDING_LEVEL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRICS_SAMPLE_WINDOW_MS_DOC,static final METRICS_SAMPLE_WINDOW_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->METRIC_REPORTER_CLASSES_DOC,static final METRIC_REPORTER_CLASSES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->REBALANCE_TIMEOUT_MS_CONFIG,static final REBALANCE_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->REBALANCE_TIMEOUT_MS_DOC,static final REBALANCE_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECEIVE_BUFFER_CONFIG,static final RECEIVE_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECEIVE_BUFFER_DOC,static final RECEIVE_BUFFER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECEIVE_BUFFER_LOWER_BOUND,static final RECEIVE_BUFFER_LOWER_BOUND : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECONNECT_BACKOFF_MAX_MS_CONFIG,static final RECONNECT_BACKOFF_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECONNECT_BACKOFF_MAX_MS_DOC,static final RECONNECT_BACKOFF_MAX_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECONNECT_BACKOFF_MS_CONFIG,static final RECONNECT_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RECONNECT_BACKOFF_MS_DOC,static final RECONNECT_BACKOFF_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->REQUEST_TIMEOUT_MS_CONFIG,static final REQUEST_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->REQUEST_TIMEOUT_MS_DOC,static final REQUEST_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RETRIES_CONFIG,static final RETRIES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RETRIES_DOC,static final RETRIES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RETRY_BACKOFF_MS_CONFIG,static final RETRY_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->RETRY_BACKOFF_MS_DOC,static final RETRY_BACKOFF_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SECURITY_PROTOCOL_CONFIG,static final SECURITY_PROTOCOL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SECURITY_PROTOCOL_DOC,static final SECURITY_PROTOCOL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SEND_BUFFER_CONFIG,static final SEND_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SEND_BUFFER_DOC,static final SEND_BUFFER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SEND_BUFFER_LOWER_BOUND,static final SEND_BUFFER_LOWER_BOUND : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SESSION_TIMEOUT_MS_CONFIG,static final SESSION_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->SESSION_TIMEOUT_MS_DOC,static final SESSION_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.CommonClientConfigs->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ConnectionState,ConnectionState,low-medium,low,low,low,0,2,0,2,0,2,6,4,0,5,2,0,0,1.2,0,1,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.ConnectionState.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.ConnectionState.public isDisconnected( ): boolean,isDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Field>org.apache.kafka.clients.ConnectionState->AUTHENTICATION_FAILED,static final AUTHENTICATION_FAILED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CHECKING_API_VERSIONS,static final CHECKING_API_VERSIONS : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CONNECTING,static final CONNECTING : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->DISCONNECTED,static final DISCONNECTED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->READY,static final READY : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.FetchSessionHandler,FetchSessionHandler,low-medium,low-medium,low-medium,medium-high,7,43,31,1,0,33,228,111,4,0,9,1,0,0.625,0.737,0.7,0,0,,,,,228,,,,,,33,,,,,,,
org.apache.kafka.clients.FetchSessionHandler.Builder,Builder,low,low,low,low,5,36,21,1,0,13,57,54,2,0,4,0,0,0.167,0.6,0,0,0,,,,,57,,,,,,13,,,,,,,
org.apache.kafka.clients.FetchSessionHandler.FetchRequestData,FetchRequestData,low,low,low,low,2,12,6,1,0,12,54,49,4,0,6,0,0,0.6,0.625,0.6,0,0,,,,,54,,,,,,12,,,,,,,
"<Method>org.apache.kafka.clients.FetchSessionHandler.public FetchSessionHandler( LogContext, int ): void","FetchSessionHandler( LogContext, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,2
<Method>org.apache.kafka.clients.FetchSessionHandler.public handleError( Throwable ): void,handleError( Throwable ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,5
<Method>org.apache.kafka.clients.FetchSessionHandler.public handleResponse( FetchResponse ): boolean,handleResponse( FetchResponse ): boolean,low-medium,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,44,1,31,32
<Method>org.apache.kafka.clients.FetchSessionHandler.public newBuilder( ): Builder,newBuilder( ): Builder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.FetchSessionHandler.public newBuilder( int, boolean ): Builder","newBuilder( int, boolean ): Builder",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.clients.FetchSessionHandler.private partitionsToLogString( Collection ): String,partitionsToLogString( Collection ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,4,1
<Method>org.apache.kafka.clients.FetchSessionHandler.private responseDataToLogString( FetchResponse ): String,responseDataToLogString( FetchResponse ): String,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,23,1,23,3
"<Method>org.apache.kafka.clients.FetchSessionHandler.static findMissing( Set, Set ): Set","static findMissing( Set, Set ): Set",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,2,0
<Method>org.apache.kafka.clients.FetchSessionHandler.private verifyFullFetchResponsePartitions( FetchResponse ): String,verifyFullFetchResponsePartitions( FetchResponse ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,1,26,2
<Method>org.apache.kafka.clients.FetchSessionHandler.private verifyIncrementalFetchResponsePartitions( FetchResponse ): String,verifyIncrementalFetchResponsePartitions( FetchResponse ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,16,1
<Field>org.apache.kafka.clients.FetchSessionHandler->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.FetchSessionHandler->node,final node : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.FetchSessionHandler->nextMetadata,nextMetadata : FetchMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.FetchSessionHandler->sessionPartitions,sessionPartitions : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.GroupRebalanceConfig,GroupRebalanceConfig,low,low,low,low,3,18,7,1,0,6,50,36,7,0,2,0,0,0,0.437,0,0,0,,,,,50,,,,,,6,,,,,,,
org.apache.kafka.clients.GroupRebalanceConfig.ProtocolType,ProtocolType,low,low,low,low,0,3,2,2,0,1,6,3,0,2,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.GroupRebalanceConfig.public GroupRebalanceConfig( AbstractConfig, ProtocolType ): void","GroupRebalanceConfig( AbstractConfig, ProtocolType ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,22,2,12,11
"<Method>org.apache.kafka.clients.GroupRebalanceConfig.public GroupRebalanceConfig( int, int, int, String, Optional, long, boolean ): void","GroupRebalanceConfig( int, int, int, String, Optional, long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,0,7
<Field>org.apache.kafka.clients.GroupRebalanceConfig->groupId,final groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->groupInstanceId,final groupInstanceId : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->heartbeatIntervalMs,final heartbeatIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->leaveGroupOnClose,final leaveGroupOnClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->rebalanceTimeoutMs,final rebalanceTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.GroupRebalanceConfig->sessionTimeoutMs,final sessionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.InFlightRequests,InFlightRequests,low-medium,low,low-medium,low-medium,2,35,23,1,0,25,68,64,3,0,14,0,0,0.636,0.679,0.53,0,0,,,,,68,,,,,,25,,,,,,,
<Method>org.apache.kafka.clients.InFlightRequests.public InFlightRequests( int ): void,InFlightRequests( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.InFlightRequests.public add( InFlightRequest ): void,add( InFlightRequest ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,3
<Method>org.apache.kafka.clients.InFlightRequests.public canSendMore( String ): boolean,canSendMore( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,5,2
<Method>org.apache.kafka.clients.InFlightRequests.public clearAll( String ): Iterable,clearAll( String ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,3
<Method>org.apache.kafka.clients.InFlightRequests.public completeLastSent( String ): InFlightRequest,completeLastSent( String ): InFlightRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
<Method>org.apache.kafka.clients.InFlightRequests.public completeNext( String ): InFlightRequest,completeNext( String ): InFlightRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
<Method>org.apache.kafka.clients.InFlightRequests.public count( ): int,count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.InFlightRequests.public count( String ): int,count( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,1
"<Method>org.apache.kafka.clients.InFlightRequests.private hasExpiredRequest( long, Deque ): Boolean","hasExpiredRequest( long, Deque ): Boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,1,0
<Method>org.apache.kafka.clients.InFlightRequests.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,2,1
<Method>org.apache.kafka.clients.InFlightRequests.public isEmpty( String ): boolean,isEmpty( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.InFlightRequests.public lastSent( String ): InFlightRequest,lastSent( String ): InFlightRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.InFlightRequests.public nodesWithTimedOutRequests( long ): List,nodesWithTimedOutRequests( long ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,5,1
<Method>org.apache.kafka.clients.InFlightRequests.private requestQueue( String ): Deque,requestQueue( String ): Deque,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,2,1
<Field>org.apache.kafka.clients.InFlightRequests->inFlightRequestCount,final inFlightRequestCount : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.InFlightRequests->maxInFlightRequestsPerConnection,final maxInFlightRequestsPerConnection : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.InFlightRequests->requests,final requests : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.KafkaClient,KafkaClient,low-medium,low,low-medium,medium-high,5,21,0,1,1,21,28,21,0,0,21,0,0,0,0.735,0,0,0,,,,,28,,,,,,21,,,,,,,
<Method>org.apache.kafka.clients.KafkaClient.public abstract active( ): boolean,active( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract authenticationException( Node ): AuthenticationException,authenticationException( Node ): AuthenticationException,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract close( String ): void,close( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract connectionDelay( Node, long ): long","connectionDelay( Node, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract connectionFailed( Node ): boolean,connectionFailed( Node ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract disconnect( String ): void,disconnect( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract hasInFlightRequests( ): boolean,hasInFlightRequests( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract hasInFlightRequests( String ): boolean,hasInFlightRequests( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract hasReadyNodes( long ): boolean,hasReadyNodes( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract inFlightRequestCount( String ): int,inFlightRequestCount( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract initiateClose( ): void,initiateClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract isReady( Node, long ): boolean","isReady( Node, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract leastLoadedNode( long ): Node,leastLoadedNode( long ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract newClientRequest( String, Builder, long, boolean ): ClientRequest","newClientRequest( String, Builder, long, boolean ): ClientRequest",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract newClientRequest( String, Builder, long, boolean, int, RequestCompletionHandler ): ClientRequest","newClientRequest( String, Builder, long, boolean, int, RequestCompletionHandler ): ClientRequest",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,6,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract poll( long, long ): List","poll( long, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract pollDelayMs( Node, long ): long","pollDelayMs( Node, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract ready( Node, long ): boolean","ready( Node, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.KafkaClient.public abstract send( ClientRequest, long ): void","send( ClientRequest, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.ManualMetadataUpdater,ManualMetadataUpdater,low,low,low,low-medium,2,10,0,1,0,10,25,23,1,0,10,0,0,0,0.686,0.933,0,0,,,,,25,,,,,,10,,,,,,,
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public ManualMetadataUpdater( ): void,ManualMetadataUpdater( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public ManualMetadataUpdater( List ): void,ManualMetadataUpdater( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public fetchNodes( ): List,fetchNodes( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.clients.ManualMetadataUpdater.public handleFailedRequest( long, Optional ): void","handleFailedRequest( long, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.clients.ManualMetadataUpdater.public handleServerDisconnect( long, String, Optional ): void","handleServerDisconnect( long, String, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.clients.ManualMetadataUpdater.public handleSuccessfulResponse( RequestHeader, long, MetadataResponse ): void","handleSuccessfulResponse( RequestHeader, long, MetadataResponse ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public setNodes( List ): void,setNodes( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.clients.ManualMetadataUpdater->nodes,nodes : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.Metadata,Metadata,medium-high,medium-high,medium-high,high,19,106,69,1,2,64,249,199,15,0,37,0,0,0.883,0.875,0.823,1,0,,,,,249,,,,,,64,,,,,,,
org.apache.kafka.clients.Metadata.LeaderAndEpoch,LeaderAndEpoch,low,low,low,low,1,15,8,1,0,9,27,23,2,1,4,1,0,0.5,0.6,0.4,0,0,,,,,27,,,,,,9,,,,,,,
org.apache.kafka.clients.Metadata.MetadataRequestAndVersion,MetadataRequestAndVersion,low,low,low,low,1,1,0,1,0,1,7,4,2,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.Metadata.public Metadata( long, long, LogContext, ClusterResourceListeners ): void","Metadata( long, long, LogContext, ClusterResourceListeners ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,4,3,13
<Method>org.apache.kafka.clients.Metadata.private checkInvalidTopics( Cluster ): void,checkInvalidTopics( Cluster ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,5,2
<Method>org.apache.kafka.clients.Metadata.private checkUnauthorizedTopics( Cluster ): void,checkUnauthorizedTopics( Cluster ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,5,2
<Method>org.apache.kafka.clients.Metadata.private clearErrorsAndMaybeThrowException( Supplier ): void,clearErrorsAndMaybeThrowException( Supplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,3,2
<Method>org.apache.kafka.clients.Metadata.private clearRecoverableErrors( ): void,clearRecoverableErrors( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
"<Method>org.apache.kafka.clients.Metadata.private handleMetadataResponse( MetadataResponse, Predicate ): MetadataCache","handleMetadataResponse( MetadataResponse, Predicate ): MetadataCache",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,24,2,28,2
<Method>org.apache.kafka.clients.Metadata.public lastSeenLeaderEpoch( TopicPartition ): Optional,lastSeenLeaderEpoch( TopicPartition ): Optional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.clients.Metadata.private maybeSetMetadataError( Cluster ): void,maybeSetMetadataError( Cluster ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
<Method>org.apache.kafka.clients.Metadata.public metadataExpireMs( ): long,metadataExpireMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.protected newMetadataRequestBuilder( ): Builder,newMetadataRequestBuilder( ): Builder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.Metadata.private recoverableException( ): KafkaException,recoverableException( ): KafkaException,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,2,4
<Method>org.apache.kafka.clients.Metadata.private recoverableExceptionForTopic( String ): KafkaException,recoverableExceptionForTopic( String ): KafkaException,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,4,2
"<Method>org.apache.kafka.clients.Metadata.protected retainTopic( String, boolean, long ): boolean","retainTopic( String, boolean, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.clients.Metadata.public synchronized bootstrap( List ): void,synchronized bootstrap( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.clients.Metadata.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized failedUpdate( long ): void,synchronized failedUpdate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized fatalError( KafkaException ): void,synchronized fatalError( KafkaException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized fetch( ): Cluster,synchronized fetch( ): Cluster,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.Metadata.public synchronized isClosed( ): boolean,synchronized isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized lastSuccessfulUpdate( ): long,synchronized lastSuccessfulUpdate( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized leaderAndEpoch( TopicPartition ): LeaderAndEpoch,synchronized leaderAndEpoch( TopicPartition ): LeaderAndEpoch,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,5,0
<Method>org.apache.kafka.clients.Metadata.public synchronized maybeThrowAnyException( ): void,synchronized maybeThrowAnyException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.Metadata.public synchronized maybeThrowExceptionForTopic( String ): void,synchronized maybeThrowExceptionForTopic( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.Metadata.public synchronized maybeThrowFatalException( ): void,synchronized maybeThrowFatalException( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.clients.Metadata.public synchronized newMetadataRequestAndVersion( ): MetadataRequestAndVersion,synchronized newMetadataRequestAndVersion( ): MetadataRequestAndVersion,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.Metadata.public synchronized partitionInfoIfCurrent( TopicPartition ): Optional,synchronized partitionInfoIfCurrent( TopicPartition ): Optional,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,3
<Method>org.apache.kafka.clients.Metadata.public synchronized requestUpdate( ): int,synchronized requestUpdate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.Metadata.public synchronized requestUpdateForNewTopics( ): void,synchronized requestUpdateForNewTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.clients.Metadata.public synchronized timeToAllowUpdate( long ): long,synchronized timeToAllowUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.Metadata.public synchronized timeToNextUpdate( long ): long,synchronized timeToNextUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,3,3
"<Method>org.apache.kafka.clients.Metadata.public synchronized update( MetadataResponse, long ): void","synchronized update( MetadataResponse, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.clients.Metadata.public synchronized update( int, MetadataResponse, long ): void","synchronized update( int, MetadataResponse, long ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,21,3,20,16
"<Method>org.apache.kafka.clients.Metadata.private synchronized updateLastSeenEpoch( TopicPartition, int, Predicate, boolean ): boolean","synchronized updateLastSeenEpoch( TopicPartition, int, Predicate, boolean ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,4,6,6
"<Method>org.apache.kafka.clients.Metadata.public synchronized updateLastSeenEpochIfNewer( TopicPartition, int ): boolean","synchronized updateLastSeenEpochIfNewer( TopicPartition, int ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.clients.Metadata.public synchronized updateRequested( ): boolean,synchronized updateRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized updateVersion( ): int,synchronized updateVersion( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.Metadata.private updatePartitionInfo( String, PartitionMetadata, boolean, Consumer ): void","updatePartitionInfo( String, PartitionMetadata, boolean, Consumer ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,17,4,13,2
<Field>org.apache.kafka.clients.Metadata->cache,cache : MetadataCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->fatalException,fatalException : KafkaException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->clusterResourceListeners,final clusterResourceListeners : ClusterResourceListeners,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastSeenLeaderEpochs,final lastSeenLeaderEpochs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->metadataExpireMs,final metadataExpireMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->refreshBackoffMs,final refreshBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->invalidTopics,invalidTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->isClosed,isClosed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastRefreshMs,lastRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastSuccessfulRefreshMs,lastSuccessfulRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needUpdate,needUpdate : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->requestVersion,requestVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->unauthorizedTopics,unauthorizedTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->updateVersion,updateVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.MetadataCache,MetadataCache,low,low,low-medium,medium-high,4,29,21,1,0,13,98,63,8,0,7,2,0,0.625,0.704,0,0,0,,,,,98,,,,,,13,,,,,,,
org.apache.kafka.clients.MetadataCache.PartitionInfoAndEpoch,PartitionInfoAndEpoch,low,low,low,low,1,9,3,1,0,9,26,23,2,0,6,0,0,0.2,0.625,0.1,0,0,,,,,26,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.MetadataCache. MetadataCache( String, List, Collection, Set, Set, Set, Node ): void"," MetadataCache( String, List, Collection, Set, Set, Set, Node ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,7,0,0
"<Method>org.apache.kafka.clients.MetadataCache. MetadataCache( String, List, Collection, Set, Set, Set, Node, Cluster ): void"," MetadataCache( String, List, Collection, Set, Set, Set, Node, Cluster ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,21,8,7,9
<Method>org.apache.kafka.clients.MetadataCache. cluster( ): Cluster, cluster( ): Cluster,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.clients.MetadataCache. getPartitionInfo( TopicPartition ): Optional, getPartitionInfo( TopicPartition ): Optional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.clients.MetadataCache. getPartitionInfoHavingEpoch( TopicPartition, int ): Optional"," getPartitionInfoHavingEpoch( TopicPartition, int ): Optional",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,1
<Method>org.apache.kafka.clients.MetadataCache.private computeClusterView( ): void,computeClusterView( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,8
<Method>org.apache.kafka.clients.MetadataCache.static bootstrap( List ): MetadataCache,static bootstrap( List ): MetadataCache,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,8,0
<Method>org.apache.kafka.clients.MetadataCache.static empty( ): MetadataCache,static empty( ): MetadataCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,6,0
<Method>org.apache.kafka.clients.MetadataCache.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,1,4
<Field>org.apache.kafka.clients.MetadataCache->clusterInstance,clusterInstance : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->clusterId,final clusterId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->controller,final controller : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->internalTopics,final internalTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->invalidTopics,final invalidTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->metadataByPartition,final metadataByPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->nodes,final nodes : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.MetadataCache->unauthorizedTopics,final unauthorizedTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.MetadataUpdater,MetadataUpdater,low,low,low,low,2,7,0,1,3,7,9,7,0,0,7,0,0,0,0.595,0,0,0,,,,,9,,,,,,7,,,,,,,
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract fetchNodes( ): List,fetchNodes( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.MetadataUpdater.public abstract handleFailedRequest( long, Optional ): void","handleFailedRequest( long, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.MetadataUpdater.public abstract handleServerDisconnect( long, String, Optional ): void","handleServerDisconnect( long, String, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.clients.MetadataUpdater.public abstract handleSuccessfulResponse( RequestHeader, long, MetadataResponse ): void","handleSuccessfulResponse( RequestHeader, long, MetadataResponse ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.NetworkClient,NetworkClient,very-high,very-high,high,high,36,298,155,1,0,117,685,509,20,0,47,3,0,0.879,0.88,0.796,0,0,,,,,685,,,,,,117,,,,,,,
org.apache.kafka.clients.NetworkClient.DefaultMetadataUpdater,DefaultMetadataUpdater,low,low,low,low,9,211,47,1,0,25,87,84,2,0,11,0,0,0.333,0.727,0,1,0,,,,,87,,,,,,25,,,,,,,
org.apache.kafka.clients.NetworkClient.InFlightRequest,InFlightRequest,low,low,low,low,8,10,5,1,0,5,64,53,10,0,5,0,0,0.433,0.617,0.4,0,0,,,,,64,,,,,,5,,,,,,,
org.apache.kafka.clients.NetworkClient.State,State,low,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.NetworkClient. canConnect( Node, long ): boolean"," canConnect( Node, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
"<Method>org.apache.kafka.clients.NetworkClient. sendInternalMetadataRequest( Builder, String, long ): void"," sendInternalMetadataRequest( Builder, String, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.clients.NetworkClient.private NetworkClient( MetadataUpdater, Metadata, Selectable, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, Sensor, LogContext ): void","NetworkClient( MetadataUpdater, Metadata, Selectable, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, Sensor, LogContext ): void",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,39,16,1,19
"<Method>org.apache.kafka.clients.NetworkClient.public NetworkClient( Selectable, Metadata, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, LogContext ): void","NetworkClient( Selectable, Metadata, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, LogContext ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,30,14,0,0
"<Method>org.apache.kafka.clients.NetworkClient.public NetworkClient( Selectable, Metadata, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, Sensor, LogContext ): void","NetworkClient( Selectable, Metadata, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, Sensor, LogContext ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,31,15,0,0
"<Method>org.apache.kafka.clients.NetworkClient.public NetworkClient( Selectable, MetadataUpdater, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, LogContext ): void","NetworkClient( Selectable, MetadataUpdater, String, int, long, long, int, int, int, ClientDnsLookup, Time, boolean, ApiVersions, LogContext ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,30,14,0,0
<Method>org.apache.kafka.clients.NetworkClient.public active( ): boolean,active( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.NetworkClient.public authenticationException( Node ): AuthenticationException,authenticationException( Node ): AuthenticationException,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.NetworkClient.private canSendRequest( String, long ): boolean","canSendRequest( String, long ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,3
"<Method>org.apache.kafka.clients.NetworkClient.private cancelInFlightRequests( String, long, Collection ): void","cancelInFlightRequests( String, long, Collection ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,10,3,9,3
<Method>org.apache.kafka.clients.NetworkClient.public close( ): void,close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,5,5
<Method>org.apache.kafka.clients.NetworkClient.public close( String ): void,close( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,3
<Method>org.apache.kafka.clients.NetworkClient.private completeResponses( List ): void,completeResponses( List ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,2,1
"<Method>org.apache.kafka.clients.NetworkClient.public connectionDelay( Node, long ): long","connectionDelay( Node, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
<Method>org.apache.kafka.clients.NetworkClient.public connectionFailed( Node ): boolean,connectionFailed( Node ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.NetworkClient.public disconnect( String ): void,disconnect( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,7,8
<Method>org.apache.kafka.clients.NetworkClient.public discoverBrokerVersions( ): boolean,discoverBrokerVersions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.NetworkClient.private doSend( ClientRequest, boolean, long ): void","doSend( ClientRequest, boolean, long ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,29,3,27,7
"<Method>org.apache.kafka.clients.NetworkClient.private doSend( ClientRequest, boolean, long, AbstractRequest ): void","doSend( ClientRequest, boolean, long, AbstractRequest ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,21,4,17,5
<Method>org.apache.kafka.clients.NetworkClient.private ensureActive( ): void,ensureActive( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.clients.NetworkClient.private handleAbortedSends( List ): void,handleAbortedSends( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.clients.NetworkClient.private handleApiVersionsResponse( List, InFlightRequest, long, ApiVersionsResponse ): void","handleApiVersionsResponse( List, InFlightRequest, long, ApiVersionsResponse ): void",low,very-high,low,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,21,4,12,6
"<Method>org.apache.kafka.clients.NetworkClient.private handleCompletedReceives( List, long ): void","handleCompletedReceives( List, long ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,18,2,18,6
"<Method>org.apache.kafka.clients.NetworkClient.private handleCompletedSends( List, long ): void","handleCompletedSends( List, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,7,3
<Method>org.apache.kafka.clients.NetworkClient.private handleConnections( ): void,handleConnections( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,6,7
"<Method>org.apache.kafka.clients.NetworkClient.private handleDisconnections( List, long ): void","handleDisconnections( List, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,6,2
<Method>org.apache.kafka.clients.NetworkClient.private handleInitiateApiVersionRequests( long ): void,handleInitiateApiVersionRequests( long ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,12,4
"<Method>org.apache.kafka.clients.NetworkClient.private handleTimedOutRequests( List, long ): void","handleTimedOutRequests( List, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,3
<Method>org.apache.kafka.clients.NetworkClient.public hasInFlightRequests( ): boolean,hasInFlightRequests( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.NetworkClient.public hasInFlightRequests( String ): boolean,hasInFlightRequests( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.NetworkClient.public hasReadyNodes( long ): boolean,hasReadyNodes( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.NetworkClient.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.NetworkClient.public inFlightRequestCount( String ): int,inFlightRequestCount( String ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.NetworkClient.public initiateClose( ): void,initiateClose( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,1
"<Method>org.apache.kafka.clients.NetworkClient.private initiateConnect( Node, long ): void","initiateConnect( Node, long ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,11,10
"<Method>org.apache.kafka.clients.NetworkClient.public isReady( Node, long ): boolean","isReady( Node, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,1
<Method>org.apache.kafka.clients.NetworkClient.public leastLoadedNode( long ): Node,leastLoadedNode( long ): Node,low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,40,1,20,10
"<Method>org.apache.kafka.clients.NetworkClient.private maybeThrottle( AbstractResponse, short, String, long ): void","maybeThrottle( AbstractResponse, short, String, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,4,4,2
"<Method>org.apache.kafka.clients.NetworkClient.public newClientRequest( String, Builder, long, boolean ): ClientRequest","newClientRequest( String, Builder, long, boolean ): ClientRequest",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.clients.NetworkClient.public newClientRequest( String, Builder, long, boolean, int, RequestCompletionHandler ): ClientRequest","newClientRequest( String, Builder, long, boolean, int, RequestCompletionHandler ): ClientRequest",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,6,0,2
"<Method>org.apache.kafka.clients.NetworkClient.public poll( long, long ): List","poll( long, long ): List",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,23,2,16,6
"<Method>org.apache.kafka.clients.NetworkClient.public pollDelayMs( Node, long ): long","pollDelayMs( Node, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.clients.NetworkClient.private processDisconnection( List, String, long, ChannelState ): void","processDisconnection( List, String, long, ChannelState ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,28,4,17,8
"<Method>org.apache.kafka.clients.NetworkClient.public ready( Node, long ): boolean","ready( Node, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,2,5,1
"<Method>org.apache.kafka.clients.NetworkClient.public send( ClientRequest, long ): void","send( ClientRequest, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.NetworkClient.private static correlate( RequestHeader, ResponseHeader ): void","static correlate( RequestHeader, ResponseHeader ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,4,0
"<Method>org.apache.kafka.clients.NetworkClient.public static parseResponse( ByteBuffer, RequestHeader ): AbstractResponse","static parseResponse( ByteBuffer, RequestHeader ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,4,0
"<Method>org.apache.kafka.clients.NetworkClient.private static parseStructMaybeUpdateThrottleTimeMetrics( ByteBuffer, RequestHeader, Sensor, long ): Struct","static parseStructMaybeUpdateThrottleTimeMetrics( ByteBuffer, RequestHeader, Sensor, long ): Struct",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,4,11,0
"<Method>org.apache.kafka.clients.NetworkClient.public throttleDelayMs( Node, long ): long","throttleDelayMs( Node, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
<Method>org.apache.kafka.clients.NetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.clients.NetworkClient->correlation,correlation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->abortedSends,final abortedSends : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->apiVersions,final apiVersions : ApiVersions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->clientDnsLookup,final clientDnsLookup : ClientDnsLookup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->connectionStates,final connectionStates : ClusterConnectionStates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->defaultRequestTimeoutMs,final defaultRequestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->discoverBrokerVersions,final discoverBrokerVersions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->inFlightRequests,final inFlightRequests : InFlightRequests,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->metadataUpdater,final metadataUpdater : MetadataUpdater,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->nodesNeedingApiVersionsFetch,final nodesNeedingApiVersionsFetch : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->randOffset,final randOffset : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->reconnectBackoffMs,final reconnectBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->selector,final selector : Selectable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketReceiveBuffer,final socketReceiveBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketSendBuffer,final socketSendBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->state,final state : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->throttleTimeSensor,final throttleTimeSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.NetworkClientUtils,NetworkClientUtils,low,low-medium,low,low,7,18,15,1,0,18,40,39,0,0,1,3,0,0,0.417,0,0,0,,,,,40,,,,,,18,,,,,,,
<Method>org.apache.kafka.clients.NetworkClientUtils.private NetworkClientUtils( ): void,NetworkClientUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.NetworkClientUtils.public static awaitReady( KafkaClient, Node, Time, long ): boolean","static awaitReady( KafkaClient, Node, Time, long ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,17,4,11,0
"<Method>org.apache.kafka.clients.NetworkClientUtils.public static isReady( KafkaClient, Node, long ): boolean","static isReady( KafkaClient, Node, long ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.clients.NetworkClientUtils.public static sendAndReceive( KafkaClient, ClientRequest, Time ): ClientResponse","static sendAndReceive( KafkaClient, ClientRequest, Time ): ClientResponse",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,6,18,3,13,0
org.apache.kafka.clients.NodeApiVersions,NodeApiVersions,low-medium,low,low-medium,low-medium,4,37,25,1,0,31,97,87,2,0,8,3,0,0.375,0.652,0.833,0,0,,,,,97,,,,,,31,,,,,,,
<Method>org.apache.kafka.clients.NodeApiVersions.public NodeApiVersions( Collection ): void,NodeApiVersions( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,1,4,2
<Method>org.apache.kafka.clients.NodeApiVersions.public apiVersion( ApiKeys ): ApiVersion,apiVersion( ApiKeys ): ApiVersion,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.NodeApiVersions.private apiVersionToText( ApiVersion ): String,apiVersionToText( ApiVersion ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,22,1,24,1
<Method>org.apache.kafka.clients.NodeApiVersions.public latestUsableVersion( ApiKeys ): short,latestUsableVersion( ApiKeys ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
"<Method>org.apache.kafka.clients.NodeApiVersions.private latestUsableVersion( ApiKeys, ApiVersion, short, short ): short","latestUsableVersion( ApiKeys, ApiVersion, short, short ): short",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,4,2,0
"<Method>org.apache.kafka.clients.NodeApiVersions.public latestUsableVersion( ApiKeys, short, short ): short","latestUsableVersion( ApiKeys, short, short ): short",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,1
<Method>org.apache.kafka.clients.NodeApiVersions.public static create( ): NodeApiVersions,static create( ): NodeApiVersions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.NodeApiVersions.public static create( Collection ): NodeApiVersions,static create( Collection ): NodeApiVersions,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,1,1,0
"<Method>org.apache.kafka.clients.NodeApiVersions.public static create( short, short, short ): NodeApiVersions","static create( short, short, short ): NodeApiVersions",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.clients.NodeApiVersions.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.clients.NodeApiVersions.public toString( boolean ): String,toString( boolean ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,1,21,2
<Field>org.apache.kafka.clients.NodeApiVersions->supportedVersions,final supportedVersions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NodeApiVersions->unknownApis,final unknownApis : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.RequestCompletionHandler,RequestCompletionHandler,low,low,low,low,1,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.RequestCompletionHandler.public abstract onComplete( ClientResponse ): void,onComplete( ClientResponse ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.StaleMetadataException,StaleMetadataException,medium-high,low,low,low,0,2,0,8,0,2,5,3,0,1,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.StaleMetadataException.public StaleMetadataException( ): void,StaleMetadataException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.StaleMetadataException.public StaleMetadataException( String ): void,StaleMetadataException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.clients.StaleMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.admin,org.apache.kafka.clients.admin,medium-high,high,very-high,low,,,,,,712,3911,,,,,,,,,,,,,105,103,2,3911,24,38,0.038,0.613,0.349,712,,,,,,,
org.apache.kafka.clients.admin.AbstractOptions<T>,AbstractOptions,low,low,low,low,0,2,0,1,31,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.AbstractOptions<T>.public timeoutMs( ): Integer,timeoutMs( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AbstractOptions<T>.public timeoutMs( Integer ): T,timeoutMs( Integer ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Field>org.apache.kafka.clients.admin.AbstractOptions<T>->timeoutMs,timeoutMs : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.Admin,Admin,very-high,very-high,very-high,very-high,66,201,42,1,1,72,139,72,0,0,70,2,0,0,0.946,0,0,0,,,,,139,,,,,,72,,,,,,,
<Method>org.apache.kafka.clients.admin.Admin.public alterConfigs( Map ): AlterConfigsResult,alterConfigs( Map ): AlterConfigsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract alterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult","alterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.admin.Admin.public alterConsumerGroupOffsets( String, Map ): AlterConsumerGroupOffsetsResult","alterConsumerGroupOffsets( String, Map ): AlterConsumerGroupOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract alterConsumerGroupOffsets( String, Map, AlterConsumerGroupOffsetsOptions ): AlterConsumerGroupOffsetsResult","alterConsumerGroupOffsets( String, Map, AlterConsumerGroupOffsetsOptions ): AlterConsumerGroupOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.clients.admin.Admin.public alterPartitionReassignments( Map ): AlterPartitionReassignmentsResult,alterPartitionReassignments( Map ): AlterPartitionReassignmentsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract alterPartitionReassignments( Map, AlterPartitionReassignmentsOptions ): AlterPartitionReassignmentsResult","alterPartitionReassignments( Map, AlterPartitionReassignmentsOptions ): AlterPartitionReassignmentsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public alterReplicaLogDirs( Map ): AlterReplicaLogDirsResult,alterReplicaLogDirs( Map ): AlterReplicaLogDirsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract alterReplicaLogDirs( Map, AlterReplicaLogDirsOptions ): AlterReplicaLogDirsResult","alterReplicaLogDirs( Map, AlterReplicaLogDirsOptions ): AlterReplicaLogDirsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract close( Duration ): void,close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.admin.Admin.public close( long, TimeUnit ): void","close( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,3,0
<Method>org.apache.kafka.clients.admin.Admin.public createAcls( Collection ): CreateAclsResult,createAcls( Collection ): CreateAclsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract createAcls( Collection, CreateAclsOptions ): CreateAclsResult","createAcls( Collection, CreateAclsOptions ): CreateAclsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public createDelegationToken( ): CreateDelegationTokenResult,createDelegationToken( ): CreateDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract createDelegationToken( CreateDelegationTokenOptions ): CreateDelegationTokenResult,createDelegationToken( CreateDelegationTokenOptions ): CreateDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.admin.Admin.public createPartitions( Map ): CreatePartitionsResult,createPartitions( Map ): CreatePartitionsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract createPartitions( Map, CreatePartitionsOptions ): CreatePartitionsResult","createPartitions( Map, CreatePartitionsOptions ): CreatePartitionsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public createTopics( Collection ): CreateTopicsResult,createTopics( Collection ): CreateTopicsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract createTopics( Collection, CreateTopicsOptions ): CreateTopicsResult","createTopics( Collection, CreateTopicsOptions ): CreateTopicsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public deleteAcls( Collection ): DeleteAclsResult,deleteAcls( Collection ): DeleteAclsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract deleteAcls( Collection, DeleteAclsOptions ): DeleteAclsResult","deleteAcls( Collection, DeleteAclsOptions ): DeleteAclsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.admin.Admin.public deleteConsumerGroupOffsets( String, Set ): DeleteConsumerGroupOffsetsResult","deleteConsumerGroupOffsets( String, Set ): DeleteConsumerGroupOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract deleteConsumerGroupOffsets( String, Set, DeleteConsumerGroupOffsetsOptions ): DeleteConsumerGroupOffsetsResult","deleteConsumerGroupOffsets( String, Set, DeleteConsumerGroupOffsetsOptions ): DeleteConsumerGroupOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.clients.admin.Admin.public deleteConsumerGroups( Collection ): DeleteConsumerGroupsResult,deleteConsumerGroups( Collection ): DeleteConsumerGroupsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract deleteConsumerGroups( Collection, DeleteConsumerGroupsOptions ): DeleteConsumerGroupsResult","deleteConsumerGroups( Collection, DeleteConsumerGroupsOptions ): DeleteConsumerGroupsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public deleteRecords( Map ): DeleteRecordsResult,deleteRecords( Map ): DeleteRecordsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract deleteRecords( Map, DeleteRecordsOptions ): DeleteRecordsResult","deleteRecords( Map, DeleteRecordsOptions ): DeleteRecordsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public deleteTopics( Collection ): DeleteTopicsResult,deleteTopics( Collection ): DeleteTopicsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract deleteTopics( Collection, DeleteTopicsOptions ): DeleteTopicsResult","deleteTopics( Collection, DeleteTopicsOptions ): DeleteTopicsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeAcls( AclBindingFilter ): DescribeAclsResult,describeAcls( AclBindingFilter ): DescribeAclsResult,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeAcls( AclBindingFilter, DescribeAclsOptions ): DescribeAclsResult","describeAcls( AclBindingFilter, DescribeAclsOptions ): DescribeAclsResult",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeCluster( ): DescribeClusterResult,describeCluster( ): DescribeClusterResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract describeCluster( DescribeClusterOptions ): DescribeClusterResult,describeCluster( DescribeClusterOptions ): DescribeClusterResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeConfigs( Collection ): DescribeConfigsResult,describeConfigs( Collection ): DescribeConfigsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeConfigs( Collection, DescribeConfigsOptions ): DescribeConfigsResult","describeConfigs( Collection, DescribeConfigsOptions ): DescribeConfigsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeConsumerGroups( Collection ): DescribeConsumerGroupsResult,describeConsumerGroups( Collection ): DescribeConsumerGroupsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeConsumerGroups( Collection, DescribeConsumerGroupsOptions ): DescribeConsumerGroupsResult","describeConsumerGroups( Collection, DescribeConsumerGroupsOptions ): DescribeConsumerGroupsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeDelegationToken( ): DescribeDelegationTokenResult,describeDelegationToken( ): DescribeDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract describeDelegationToken( DescribeDelegationTokenOptions ): DescribeDelegationTokenResult,describeDelegationToken( DescribeDelegationTokenOptions ): DescribeDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeLogDirs( Collection ): DescribeLogDirsResult,describeLogDirs( Collection ): DescribeLogDirsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeLogDirs( Collection, DescribeLogDirsOptions ): DescribeLogDirsResult","describeLogDirs( Collection, DescribeLogDirsOptions ): DescribeLogDirsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeReplicaLogDirs( Collection ): DescribeReplicaLogDirsResult,describeReplicaLogDirs( Collection ): DescribeReplicaLogDirsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeReplicaLogDirs( Collection, DescribeReplicaLogDirsOptions ): DescribeReplicaLogDirsResult","describeReplicaLogDirs( Collection, DescribeReplicaLogDirsOptions ): DescribeReplicaLogDirsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public describeTopics( Collection ): DescribeTopicsResult,describeTopics( Collection ): DescribeTopicsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract describeTopics( Collection, DescribeTopicsOptions ): DescribeTopicsResult","describeTopics( Collection, DescribeTopicsOptions ): DescribeTopicsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.admin.Admin.public electLeaders( ElectionType, Set ): ElectLeadersResult","electLeaders( ElectionType, Set ): ElectLeadersResult",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract electLeaders( ElectionType, Set, ElectLeadersOptions ): ElectLeadersResult","electLeaders( ElectionType, Set, ElectLeadersOptions ): ElectLeadersResult",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.clients.admin.Admin.public electPreferredLeaders( Collection ): ElectPreferredLeadersResult,electPreferredLeaders( Collection ): ElectPreferredLeadersResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public electPreferredLeaders( Collection, ElectPreferredLeadersOptions ): ElectPreferredLeadersResult","electPreferredLeaders( Collection, ElectPreferredLeadersOptions ): ElectPreferredLeadersResult",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,3,0
<Method>org.apache.kafka.clients.admin.Admin.public expireDelegationToken( byte ): ExpireDelegationTokenResult,expireDelegationToken( byte ): ExpireDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract expireDelegationToken( byte, ExpireDelegationTokenOptions ): ExpireDelegationTokenResult","expireDelegationToken( byte, ExpireDelegationTokenOptions ): ExpireDelegationTokenResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public incrementalAlterConfigs( Map ): AlterConfigsResult,incrementalAlterConfigs( Map ): AlterConfigsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract incrementalAlterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult","incrementalAlterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public listConsumerGroupOffsets( String ): ListConsumerGroupOffsetsResult,listConsumerGroupOffsets( String ): ListConsumerGroupOffsetsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract listConsumerGroupOffsets( String, ListConsumerGroupOffsetsOptions ): ListConsumerGroupOffsetsResult","listConsumerGroupOffsets( String, ListConsumerGroupOffsetsOptions ): ListConsumerGroupOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public listConsumerGroups( ): ListConsumerGroupsResult,listConsumerGroups( ): ListConsumerGroupsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract listConsumerGroups( ListConsumerGroupsOptions ): ListConsumerGroupsResult,listConsumerGroups( ListConsumerGroupsOptions ): ListConsumerGroupsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.admin.Admin.public listOffsets( Map ): ListOffsetsResult,listOffsets( Map ): ListOffsetsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract listOffsets( Map, ListOffsetsOptions ): ListOffsetsResult","listOffsets( Map, ListOffsetsOptions ): ListOffsetsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public listPartitionReassignments( ): ListPartitionReassignmentsResult,listPartitionReassignments( ): ListPartitionReassignmentsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public listPartitionReassignments( ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult,listPartitionReassignments( ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,2,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract listPartitionReassignments( Optional, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult","listPartitionReassignments( Optional, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public listPartitionReassignments( Set ): ListPartitionReassignmentsResult,listPartitionReassignments( Set ): ListPartitionReassignmentsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public listPartitionReassignments( Set, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult","listPartitionReassignments( Set, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,2,0
<Method>org.apache.kafka.clients.admin.Admin.public listTopics( ): ListTopicsResult,listTopics( ): ListTopicsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract listTopics( ListTopicsOptions ): ListTopicsResult,listTopics( ListTopicsOptions ): ListTopicsResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.admin.Admin.public abstract metrics( ): Map,metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract removeMembersFromConsumerGroup( String, RemoveMembersFromConsumerGroupOptions ): RemoveMembersFromConsumerGroupResult","removeMembersFromConsumerGroup( String, RemoveMembersFromConsumerGroupOptions ): RemoveMembersFromConsumerGroupResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public renewDelegationToken( byte ): RenewDelegationTokenResult,renewDelegationToken( byte ): RenewDelegationTokenResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
"<Method>org.apache.kafka.clients.admin.Admin.public abstract renewDelegationToken( byte, RenewDelegationTokenOptions ): RenewDelegationTokenResult","renewDelegationToken( byte, RenewDelegationTokenOptions ): RenewDelegationTokenResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.admin.Admin.public static create( Map ): Admin,static create( Map ): Admin,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
<Method>org.apache.kafka.clients.admin.Admin.public static create( Properties ): Admin,static create( Properties ): Admin,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
org.apache.kafka.clients.admin.AdminClient,AdminClient,medium-high,low,low,low,0,128,2,1,1,2,5,4,0,0,0,2,0,0,0.333,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.AdminClient.public static create( Map ): AdminClient,static create( Map ): AdminClient,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.admin.AdminClient.public static create( Properties ): AdminClient,static create( Properties ): AdminClient,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
org.apache.kafka.clients.admin.AdminClientConfig,AdminClientConfig,low-medium,low-medium,low-medium,low,2,47,4,2,1,6,131,13,0,37,3,3,1,1.297,0.542,0.5,0,0.667,,,,,131,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.admin.AdminClientConfig.public AdminClientConfig( Map ): void,AdminClientConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.admin.AdminClientConfig.protected AdminClientConfig( Map, boolean ): void","AdminClientConfig( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.clients.admin.AdminClientConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.clients.admin.AdminClientConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AdminClientConfig.public static configNames( ): Set,static configNames( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.admin.AdminClientConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Field>org.apache.kafka.clients.admin.AdminClientConfig->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->BOOTSTRAP_SERVERS_DOC,static final BOOTSTRAP_SERVERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CLIENT_DNS_LOOKUP_CONFIG,static final CLIENT_DNS_LOOKUP_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CLIENT_DNS_LOOKUP_DOC,static final CLIENT_DNS_LOOKUP_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CLIENT_ID_DOC,static final CLIENT_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CONNECTIONS_MAX_IDLE_MS_CONFIG,static final CONNECTIONS_MAX_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->CONNECTIONS_MAX_IDLE_MS_DOC,static final CONNECTIONS_MAX_IDLE_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->DEFAULT_SECURITY_PROTOCOL,static final DEFAULT_SECURITY_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METADATA_MAX_AGE_CONFIG,static final METADATA_MAX_AGE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METADATA_MAX_AGE_DOC,static final METADATA_MAX_AGE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_NUM_SAMPLES_DOC,static final METRICS_NUM_SAMPLES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_RECORDING_LEVEL_DOC,static final METRICS_RECORDING_LEVEL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRICS_SAMPLE_WINDOW_MS_DOC,static final METRICS_SAMPLE_WINDOW_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->METRIC_REPORTER_CLASSES_DOC,static final METRIC_REPORTER_CLASSES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECEIVE_BUFFER_CONFIG,static final RECEIVE_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECEIVE_BUFFER_DOC,static final RECEIVE_BUFFER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECONNECT_BACKOFF_MAX_MS_CONFIG,static final RECONNECT_BACKOFF_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECONNECT_BACKOFF_MAX_MS_DOC,static final RECONNECT_BACKOFF_MAX_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECONNECT_BACKOFF_MS_CONFIG,static final RECONNECT_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RECONNECT_BACKOFF_MS_DOC,static final RECONNECT_BACKOFF_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->REQUEST_TIMEOUT_MS_CONFIG,static final REQUEST_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->REQUEST_TIMEOUT_MS_DOC,static final REQUEST_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RETRIES_CONFIG,static final RETRIES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RETRY_BACKOFF_MS_CONFIG,static final RETRY_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->RETRY_BACKOFF_MS_DOC,static final RETRY_BACKOFF_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SECURITY_PROTOCOL_CONFIG,static final SECURITY_PROTOCOL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SECURITY_PROTOCOL_DOC,static final SECURITY_PROTOCOL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SECURITY_PROVIDERS_CONFIG,static final SECURITY_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SECURITY_PROVIDERS_DOC,static final SECURITY_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SEND_BUFFER_CONFIG,static final SEND_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AdminClientConfig->SEND_BUFFER_DOC,static final SEND_BUFFER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterConfigOp,AlterConfigOp,low,low,low,low-medium,1,9,3,1,0,9,41,23,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,41,,,,,,9,,,,,,,
org.apache.kafka.clients.admin.AlterConfigOp.OpType,OpType,low,low,low,low,0,4,1,2,0,3,12,6,1,5,2,1,0,1.25,0.167,1,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.admin.AlterConfigOp.public AlterConfigOp( ConfigEntry, OpType ): void","AlterConfigOp( ConfigEntry, OpType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.admin.AlterConfigOp.public configEntry( ): ConfigEntry,configEntry( ): ConfigEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigOp.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,3,4
<Method>org.apache.kafka.clients.admin.AlterConfigOp.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.clients.admin.AlterConfigOp.public opType( ): OpType,opType( ): OpType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigOp.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.clients.admin.AlterConfigOp->configEntry,final configEntry : ConfigEntry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.AlterConfigOp->opType,final opType : OpType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterConfigsOptions,AlterConfigsOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterConfigsOptions.public shouldValidateOnly( ): boolean,shouldValidateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigsOptions.public timeoutMs( Integer ): AlterConfigsOptions,timeoutMs( Integer ): AlterConfigsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigsOptions.public validateOnly( boolean ): AlterConfigsOptions,validateOnly( boolean ): AlterConfigsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.AlterConfigsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterConfigsResult,AlterConfigsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterConfigsResult. AlterConfigsResult( Map ): void, AlterConfigsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.AlterConfigsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.AlterConfigsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.AlterConfigsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsOptions,AlterConsumerGroupOffsetsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult,AlterConsumerGroupOffsetsResult,low,low,low,low,3,5,2,1,0,3,38,35,1,0,3,0,0,0,0.444,0,0,0,,,,,38,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult$2022;,Lorg.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult$2022;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult$3116;,Lorg.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult$3116;,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult. AlterConsumerGroupOffsetsResult( KafkaFuture ): void, AlterConsumerGroupOffsetsResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,15,0,1,1
<Method>org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult.public partitionResult( TopicPartition ): KafkaFuture,partitionResult( TopicPartition ): KafkaFuture,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,18,1,1,1
<Field>org.apache.kafka.clients.admin.AlterConsumerGroupOffsetsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterPartitionReassignmentsOptions,AlterPartitionReassignmentsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterPartitionReassignmentsResult,AlterPartitionReassignmentsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterPartitionReassignmentsResult. AlterPartitionReassignmentsResult( Map ): void, AlterPartitionReassignmentsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.AlterPartitionReassignmentsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.AlterPartitionReassignmentsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.AlterPartitionReassignmentsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.AlterReplicaLogDirsOptions,AlterReplicaLogDirsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.AlterReplicaLogDirsResult,AlterReplicaLogDirsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.AlterReplicaLogDirsResult. AlterReplicaLogDirsResult( Map ): void, AlterReplicaLogDirsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.AlterReplicaLogDirsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.AlterReplicaLogDirsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.AlterReplicaLogDirsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.Config,Config,low,low,low,low-medium,1,14,8,1,0,10,24,21,1,0,6,0,0,0,0.625,0,0,0,,,,,24,,,,,,10,,,,,,,
<Method>org.apache.kafka.clients.admin.Config.public Config( Collection ): void,Config( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,1
<Method>org.apache.kafka.clients.admin.Config.public entries( ): Collection,entries( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.clients.admin.Config.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,3,2
<Method>org.apache.kafka.clients.admin.Config.public get( String ): ConfigEntry,get( String ): ConfigEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.admin.Config.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.admin.Config.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.clients.admin.Config->entries,final entries : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ConfigEntry,ConfigEntry,low-medium,low,low-medium,medium-high,0,21,8,1,0,22,113,67,6,0,13,0,0,0.583,0.731,0.621,0,0,,,,,113,,,,,,22,,,,,,,
org.apache.kafka.clients.admin.ConfigEntry.ConfigSource,ConfigSource,low,low,low,low,0,0,0,2,0,0,8,0,0,7,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.ConfigEntry.ConfigSynonym,ConfigSynonym,low,low,low,low,1,10,3,1,0,10,30,26,3,0,7,0,0,0.333,0.643,0.2,0,0,,,,,30,,,,,,10,,,,,,,
"<Method>org.apache.kafka.clients.admin.ConfigEntry. ConfigEntry( String, String, ConfigSource, boolean, boolean, List ): void"," ConfigEntry( String, String, ConfigSource, boolean, boolean, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,6,1,6
"<Method>org.apache.kafka.clients.admin.ConfigEntry.public ConfigEntry( String, String ): void","ConfigEntry( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.clients.admin.ConfigEntry.public ConfigEntry( String, String, boolean, boolean, boolean ): void","ConfigEntry( String, String, boolean, boolean, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,5,1,0
<Method>org.apache.kafka.clients.admin.ConfigEntry.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,13,1,5,14
<Method>org.apache.kafka.clients.admin.ConfigEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,0,4,7
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isDefault( ): boolean,isDefault( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isReadOnly( ): boolean,isReadOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public isSensitive( ): boolean,isSensitive( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public source( ): ConfigSource,source( ): ConfigSource,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public synonyms( ): List,synonyms( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConfigEntry.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,6
<Method>org.apache.kafka.clients.admin.ConfigEntry.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ConfigEntry->isReadOnly,final isReadOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->isSensitive,final isSensitive : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->source,final source : ConfigSource,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->synonyms,final synonyms : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConfigEntry->value,final value : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ConsumerGroupDescription,ConsumerGroupDescription,low,low,low-medium,medium-high,3,26,7,1,0,18,69,61,7,0,12,0,0,0.6,0.75,0.564,0,0,,,,,69,,,,,,18,,,,,,,
"<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription. ConsumerGroupDescription( String, boolean, Collection, String, ConsumerGroupState, Node, Set ): void"," ConsumerGroupDescription( String, boolean, Collection, String, ConsumerGroupState, Node, Set ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,15,7,2,7
"<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public ConsumerGroupDescription( String, boolean, Collection, String, ConsumerGroupState, Node ): void","ConsumerGroupDescription( String, boolean, Collection, String, ConsumerGroupState, Node ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,6,1,0
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public authorizedOperations( ): Set,authorizedOperations( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public coordinator( ): Node,coordinator( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,12,1,7,14
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public groupId( ): String,groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,7
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public isSimpleConsumerGroup( ): boolean,isSimpleConsumerGroup( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public members( ): Collection,members( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public partitionAssignor( ): String,partitionAssignor( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public state( ): ConsumerGroupState,state( ): ConsumerGroupState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupDescription.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,1,7
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->authorizedOperations,final authorizedOperations : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->coordinator,final coordinator : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->groupId,final groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->isSimpleConsumerGroup,final isSimpleConsumerGroup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->members,final members : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->partitionAssignor,final partitionAssignor : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupDescription->state,final state : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ConsumerGroupListing,ConsumerGroupListing,low,low,low,low,0,4,0,1,0,4,16,13,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,16,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.admin.ConsumerGroupListing.public ConsumerGroupListing( String, boolean ): void","ConsumerGroupListing( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.admin.ConsumerGroupListing.public groupId( ): String,groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupListing.public isSimpleConsumerGroup( ): boolean,isSimpleConsumerGroup( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ConsumerGroupListing.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.clients.admin.ConsumerGroupListing->groupId,final groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ConsumerGroupListing->isSimpleConsumerGroup,final isSimpleConsumerGroup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateAclsOptions,CreateAclsOptions,low-medium,low,low,low,0,1,0,2,0,1,5,3,0,0,1,0,1,0,0,0,0,2,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateAclsOptions.public timeoutMs( Integer ): CreateAclsOptions,timeoutMs( Integer ): CreateAclsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
org.apache.kafka.clients.admin.CreateAclsResult,CreateAclsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateAclsResult. CreateAclsResult( Map ): void, CreateAclsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.CreateAclsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.CreateAclsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.CreateAclsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateDelegationTokenOptions,CreateDelegationTokenOptions,low-medium,low,low,low,0,4,0,2,0,4,14,10,2,0,4,0,0,0.667,0.5,0.667,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenOptions.public maxlifeTimeMs( ): long,maxlifeTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenOptions.public maxlifeTimeMs( long ): CreateDelegationTokenOptions,maxlifeTimeMs( long ): CreateDelegationTokenOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenOptions.public renewers( ): List,renewers( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenOptions.public renewers( List ): CreateDelegationTokenOptions,renewers( List ): CreateDelegationTokenOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.CreateDelegationTokenOptions->maxLifeTimeMs,maxLifeTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.CreateDelegationTokenOptions->renewers,renewers : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateDelegationTokenResult,CreateDelegationTokenResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenResult. CreateDelegationTokenResult( KafkaFuture ): void, CreateDelegationTokenResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.CreateDelegationTokenResult.public delegationToken( ): KafkaFuture,delegationToken( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.CreateDelegationTokenResult->delegationToken,final delegationToken : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreatePartitionsOptions,CreatePartitionsOptions,low-medium,low,low,low,0,3,0,2,0,3,9,6,1,0,3,0,0,0,0.333,0.667,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public CreatePartitionsOptions( ): void,CreatePartitionsOptions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreatePartitionsOptions.public validateOnly( boolean ): CreatePartitionsOptions,validateOnly( boolean ): CreatePartitionsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.CreatePartitionsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreatePartitionsResult,CreatePartitionsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.CreatePartitionsResult. CreatePartitionsResult( Map ): void, CreatePartitionsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.CreatePartitionsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.CreatePartitionsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.CreatePartitionsResult->values,final values : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateTopicsOptions,CreateTopicsOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateTopicsOptions.public shouldValidateOnly( ): boolean,shouldValidateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.CreateTopicsOptions.public timeoutMs( Integer ): CreateTopicsOptions,timeoutMs( Integer ): CreateTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.CreateTopicsOptions.public validateOnly( boolean ): CreateTopicsOptions,validateOnly( boolean ): CreateTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.CreateTopicsOptions->validateOnly,validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.CreateTopicsResult,CreateTopicsResult,low,low,low,low,1,16,9,1,0,6,44,13,1,1,6,0,0,0.6,0.444,0,0,0,,,,,44,,,,,,6,,,,,,,
org.apache.kafka.clients.admin.CreateTopicsResult.TopicMetadataAndConfig,TopicMetadataAndConfig,low,low,low,low,2,6,1,1,0,7,27,22,4,0,6,0,0,0.6,0.625,1,0,0,,,,,27,,,,,,7,,,,,,,
<Method>org.apache.kafka.clients.admin.CreateTopicsResult. CreateTopicsResult( Map ): void, CreateTopicsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.CreateTopicsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.CreateTopicsResult.public config( String ): KafkaFuture,config( String ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.clients.admin.CreateTopicsResult.public numPartitions( String ): KafkaFuture,numPartitions( String ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.clients.admin.CreateTopicsResult.public replicationFactor( String ): KafkaFuture,replicationFactor( String ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.clients.admin.CreateTopicsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,1
<Field>org.apache.kafka.clients.admin.CreateTopicsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.CreateTopicsResult->UNKNOWN,static final UNKNOWN : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsOptions,DeleteAclsOptions,low-medium,low,low,low,0,1,0,2,0,1,5,3,0,0,1,0,1,0,0,0,0,2,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteAclsOptions.public timeoutMs( Integer ): DeleteAclsOptions,timeoutMs( Integer ): DeleteAclsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
org.apache.kafka.clients.admin.DeleteAclsResult,DeleteAclsResult,low,low,low,low,2,14,9,1,0,8,38,19,1,0,4,0,0,0,0.25,0,0,0,,,,,38,,,,,,8,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsResult.FilterResult,FilterResult,low,low,low,low,2,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.444,1,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.clients.admin.DeleteAclsResult.FilterResults,FilterResults,low,low,low,low,0,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteAclsResult. DeleteAclsResult( Map ): void, DeleteAclsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeleteAclsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,4,1
<Method>org.apache.kafka.clients.admin.DeleteAclsResult.private getAclBindings( Map ): List,getAclBindings( Map ): List,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,7,0
<Method>org.apache.kafka.clients.admin.DeleteAclsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeleteAclsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsOptions,DeleteConsumerGroupOffsetsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult,DeleteConsumerGroupOffsetsResult,low,low,low,low,4,12,4,1,0,11,40,36,2,0,4,0,0,0.25,0.583,0,0,0,,,,,40,,,,,,11,,,,,,,
"<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult. DeleteConsumerGroupOffsetsResult( KafkaFuture, Set ): void"," DeleteConsumerGroupOffsetsResult( KafkaFuture, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,12,0,1,1
"<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult.private maybeCompleteExceptionally( Map, TopicPartition, KafkaFutureImpl ): boolean","maybeCompleteExceptionally( Map, TopicPartition, KafkaFutureImpl ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,2,0
<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult.public partitionResult( TopicPartition ): KafkaFuture,partitionResult( TopicPartition ): KafkaFuture,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,2,2
<Field>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.DeleteConsumerGroupOffsetsResult->partitions,final partitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeleteConsumerGroupsOptions,DeleteConsumerGroupsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteConsumerGroupsResult,DeleteConsumerGroupsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupsResult. DeleteConsumerGroupsResult( Map ): void, DeleteConsumerGroupsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.DeleteConsumerGroupsResult.public deletedGroups( ): Map,deletedGroups( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeleteConsumerGroupsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeleteRecordsOptions,DeleteRecordsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DeleteRecordsResult,DeleteRecordsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteRecordsResult.public DeleteRecordsResult( Map ): void,DeleteRecordsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeleteRecordsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.DeleteRecordsResult.public lowWatermarks( ): Map,lowWatermarks( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeleteRecordsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeleteTopicsOptions,DeleteTopicsOptions,low-medium,low,low,low,0,1,0,2,0,1,5,3,0,0,1,0,1,0,0,0,0,2,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteTopicsOptions.public timeoutMs( Integer ): DeleteTopicsOptions,timeoutMs( Integer ): DeleteTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
org.apache.kafka.clients.admin.DeleteTopicsResult,DeleteTopicsResult,low,low,low,low,1,7,3,1,0,3,9,6,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DeleteTopicsResult. DeleteTopicsResult( Map ): void, DeleteTopicsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeleteTopicsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.clients.admin.DeleteTopicsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeleteTopicsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DeletedRecords,DeletedRecords,low,low,low,low,0,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DeletedRecords.public DeletedRecords( long ): void,DeletedRecords( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DeletedRecords.public lowWatermark( ): long,lowWatermark( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DeletedRecords->lowWatermark,final lowWatermark : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeAclsOptions,DescribeAclsOptions,low-medium,low,low,low,0,1,0,2,0,1,5,3,0,0,1,0,1,0,0,0,0,2,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeAclsOptions.public timeoutMs( Integer ): DescribeAclsOptions,timeoutMs( Integer ): DescribeAclsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
org.apache.kafka.clients.admin.DescribeAclsResult,DescribeAclsResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeAclsResult. DescribeAclsResult( KafkaFuture ): void, DescribeAclsResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeAclsResult.public values( ): KafkaFuture,values( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeAclsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeClusterOptions,DescribeClusterOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeClusterOptions.public includeAuthorizedOperations( ): boolean,includeAuthorizedOperations( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeClusterOptions.public includeAuthorizedOperations( boolean ): DescribeClusterOptions,includeAuthorizedOperations( boolean ): DescribeClusterOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeClusterOptions.public timeoutMs( Integer ): DescribeClusterOptions,timeoutMs( Integer ): DescribeClusterOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.DescribeClusterOptions->includeAuthorizedOperations,includeAuthorizedOperations : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeClusterResult,DescribeClusterResult,low,low,low,low,1,5,0,1,0,5,22,16,4,0,5,0,0,0.75,0.4,1,0,0,,,,,22,,,,,,5,,,,,,,
"<Method>org.apache.kafka.clients.admin.DescribeClusterResult. DescribeClusterResult( KafkaFuture, KafkaFuture, KafkaFuture, KafkaFuture ): void"," DescribeClusterResult( KafkaFuture, KafkaFuture, KafkaFuture, KafkaFuture ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.clients.admin.DescribeClusterResult.public authorizedOperations( ): KafkaFuture,authorizedOperations( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeClusterResult.public clusterId( ): KafkaFuture,clusterId( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeClusterResult.public controller( ): KafkaFuture,controller( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeClusterResult.public nodes( ): KafkaFuture,nodes( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeClusterResult->authorizedOperations,final authorizedOperations : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.DescribeClusterResult->clusterId,final clusterId : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.DescribeClusterResult->controller,final controller : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.DescribeClusterResult->nodes,final nodes : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeConfigsOptions,DescribeConfigsOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeConfigsOptions.public includeSynonyms( ): boolean,includeSynonyms( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeConfigsOptions.public includeSynonyms( boolean ): DescribeConfigsOptions,includeSynonyms( boolean ): DescribeConfigsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeConfigsOptions.public timeoutMs( Integer ): DescribeConfigsOptions,timeoutMs( Integer ): DescribeConfigsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.DescribeConfigsOptions->includeSynonyms,includeSynonyms : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeConfigsResult,DescribeConfigsResult,low,low,low,low,1,8,4,1,0,3,20,17,1,0,3,0,0,0,0.333,0,0,0,,,,,20,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeConfigsResult$2051;,Lorg.apache.kafka.clients.admin.DescribeConfigsResult$2051;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeConfigsResult. DescribeConfigsResult( Map ): void, DescribeConfigsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeConfigsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.DescribeConfigsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeConfigsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeConsumerGroupsOptions,DescribeConsumerGroupsOptions,low-medium,low,low,low,0,2,0,2,0,2,8,5,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeConsumerGroupsOptions.public includeAuthorizedOperations( ): boolean,includeAuthorizedOperations( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeConsumerGroupsOptions.public includeAuthorizedOperations( boolean ): DescribeConsumerGroupsOptions,includeAuthorizedOperations( boolean ): DescribeConsumerGroupsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.DescribeConsumerGroupsOptions->includeAuthorizedOperations,includeAuthorizedOperations : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeConsumerGroupsResult,DescribeConsumerGroupsResult,low,low,low,low,1,8,4,1,0,3,20,17,1,0,3,0,0,0,0.333,0,0,0,,,,,20,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeConsumerGroupsResult$2076;,Lorg.apache.kafka.clients.admin.DescribeConsumerGroupsResult$2076;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeConsumerGroupsResult.public DescribeConsumerGroupsResult( Map ): void,DescribeConsumerGroupsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeConsumerGroupsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.DescribeConsumerGroupsResult.public describedGroups( ): Map,describedGroups( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeConsumerGroupsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeDelegationTokenOptions,DescribeDelegationTokenOptions,low-medium,low,low,low,0,2,0,2,0,2,8,5,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeDelegationTokenOptions.public owners( ): List,owners( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeDelegationTokenOptions.public owners( List ): DescribeDelegationTokenOptions,owners( List ): DescribeDelegationTokenOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.DescribeDelegationTokenOptions->owners,owners : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeDelegationTokenResult,DescribeDelegationTokenResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeDelegationTokenResult. DescribeDelegationTokenResult( KafkaFuture ): void, DescribeDelegationTokenResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeDelegationTokenResult.public delegationTokens( ): KafkaFuture,delegationTokens( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeDelegationTokenResult->delegationTokens,final delegationTokens : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeLogDirsOptions,DescribeLogDirsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeLogDirsResult,DescribeLogDirsResult,low,low,low,low,1,8,4,1,0,3,20,17,1,0,3,0,0,0,0.333,0,0,0,,,,,20,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeLogDirsResult$2101;,Lorg.apache.kafka.clients.admin.DescribeLogDirsResult$2101;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeLogDirsResult. DescribeLogDirsResult( Map ): void, DescribeLogDirsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeLogDirsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.DescribeLogDirsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeLogDirsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsOptions,DescribeReplicaLogDirsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult,DescribeReplicaLogDirsResult,low,low,low-medium,low,1,8,4,1,0,3,57,17,1,0,3,0,0,0,0.333,0,0,0,,,,,57,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeReplicaLogDirsResult$2190;,Lorg.apache.kafka.clients.admin.DescribeReplicaLogDirsResult$2190;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult.ReplicaLogDirInfo,ReplicaLogDirInfo,low,low,low,low,1,10,3,1,0,8,37,32,4,0,7,0,0,0.65,0.571,0.7,0,0,,,,,37,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult. DescribeReplicaLogDirsResult( Map ): void, DescribeReplicaLogDirsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeTopicsOptions,DescribeTopicsOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeTopicsOptions.public includeAuthorizedOperations( ): boolean,includeAuthorizedOperations( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.DescribeTopicsOptions.public includeAuthorizedOperations( boolean ): DescribeTopicsOptions,includeAuthorizedOperations( boolean ): DescribeTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeTopicsOptions.public timeoutMs( Integer ): DescribeTopicsOptions,timeoutMs( Integer ): DescribeTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.DescribeTopicsOptions->includeAuthorizedOperations,includeAuthorizedOperations : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.DescribeTopicsResult,DescribeTopicsResult,low,low,low,low,1,8,4,1,0,3,20,17,1,0,3,0,0,0,0.333,0,0,0,,,,,20,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.DescribeTopicsResult$1980;,Lorg.apache.kafka.clients.admin.DescribeTopicsResult$1980;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.DescribeTopicsResult. DescribeTopicsResult( Map ): void, DescribeTopicsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.DescribeTopicsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.DescribeTopicsResult.public values( ): Map,values( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.DescribeTopicsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ElectLeadersOptions,ElectLeadersOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.ElectLeadersResult,ElectLeadersResult,low,low,low,low,2,4,2,1,0,3,23,20,1,0,3,0,0,0,0.333,1,0,0,,,,,23,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ElectLeadersResult$2243;,Lorg.apache.kafka.clients.admin.ElectLeadersResult$2243;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.ElectLeadersResult. ElectLeadersResult( KafkaFutureImpl ): void, ElectLeadersResult( KafkaFutureImpl ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ElectLeadersResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,5,16,0,2,0
<Method>org.apache.kafka.clients.admin.ElectLeadersResult.public partitions( ): KafkaFuture,partitions( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ElectLeadersResult->electionFuture,final electionFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ElectPreferredLeadersOptions,ElectPreferredLeadersOptions,low-medium,low,low,low,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.ElectPreferredLeadersResult,ElectPreferredLeadersResult,low,low,low,low,4,7,3,1,0,4,40,36,1,0,4,0,0,0,0.5,0,0,0,,,,,40,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ElectPreferredLeadersResult$2206;,Lorg.apache.kafka.clients.admin.ElectPreferredLeadersResult$2206;,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ElectPreferredLeadersResult$4027;,Lorg.apache.kafka.clients.admin.ElectPreferredLeadersResult$4027;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.ElectPreferredLeadersResult. ElectPreferredLeadersResult( ElectLeadersResult ): void, ElectPreferredLeadersResult( ElectLeadersResult ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ElectPreferredLeadersResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.admin.ElectPreferredLeadersResult.public partitionResult( TopicPartition ): KafkaFuture,partitionResult( TopicPartition ): KafkaFuture,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,20,1,2,1
<Method>org.apache.kafka.clients.admin.ElectPreferredLeadersResult.public partitions( ): KafkaFuture,partitions( ): KafkaFuture,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,0,2,1
<Field>org.apache.kafka.clients.admin.ElectPreferredLeadersResult->electionResult,final electionResult : ElectLeadersResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ExpireDelegationTokenOptions,ExpireDelegationTokenOptions,low-medium,low,low,low,0,2,0,2,0,2,8,5,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ExpireDelegationTokenOptions.public expiryTimePeriodMs( ): long,expiryTimePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ExpireDelegationTokenOptions.public expiryTimePeriodMs( long ): ExpireDelegationTokenOptions,expiryTimePeriodMs( long ): ExpireDelegationTokenOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.ExpireDelegationTokenOptions->expiryTimePeriodMs,expiryTimePeriodMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ExpireDelegationTokenResult,ExpireDelegationTokenResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ExpireDelegationTokenResult. ExpireDelegationTokenResult( KafkaFuture ): void, ExpireDelegationTokenResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ExpireDelegationTokenResult.public expiryTimestamp( ): KafkaFuture,expiryTimestamp( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ExpireDelegationTokenResult->expiryTimestamp,final expiryTimestamp : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient,KafkaAdminClient,very-high,very-high,very-high,very-high,116,355,139,2,0,167,2247,1809,13,4,57,13,0,0.884,0.955,0.174,2,0,,,,,2247,,,,,,167,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.AdminClientRunnable,AdminClientRunnable,low,low,low,low,19,116,89,1,0,67,247,241,5,0,16,0,0,0.709,0.705,0,1,0,,,,,247,,,,,,67,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.Call,Call,low,low,low,low,8,22,8,1,39,21,66,57,8,0,10,0,0,0.875,0.744,1,0,0,,,,,66,,,,,,21,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.ConstantNodeIdProvider,ConstantNodeIdProvider,low,low,low,low,2,13,3,1,0,4,11,9,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,4,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.ControllerNodeProvider,ControllerNodeProvider,low,low,low,low,2,11,3,1,0,3,8,7,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,3,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.LeastLoadedNodeProvider,LeastLoadedNodeProvider,low,low,low,low,4,11,4,1,0,2,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.ListConsumerGroupsResults,ListConsumerGroupsResults,low,low,low,low,5,28,14,1,0,8,28,23,4,0,5,0,0,0.563,0.633,0,0,0,,,,,28,,,,,,8,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$102150;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$102150;,low,low,low,low,0,0,0,2,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$104457;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$104457;,low,low,low,low,0,0,0,2,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$107287;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$107287;,low,low,low,low,0,0,0,2,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$111918;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$111918;,low,low,low,low,0,0,0,2,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$114657;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$114657;,low,low,low,low,0,0,0,2,0,0,53,0,0,0,0,0,0,0,0,0,0,0,,,,,53,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$116886;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$116886;,low,low,low,low,0,0,0,2,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$119442;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$119442;,low,low,low,low,0,0,0,2,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$121367;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$121367;,low,low,low,low,0,0,0,2,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$122840;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$122840;,low,low,low,low,0,0,0,2,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$124334;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$124334;,low,low,low,low,0,0,0,2,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$129341;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$129341;,low,low,low,low,0,0,0,2,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$130567;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$130567;,low,low,low,low,0,0,0,2,0,0,63,0,0,0,0,0,0,0,0,0,0,0,,,,,63,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$135996;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$135996;,low,low,low,low,0,0,0,2,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$140206;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$140206;,low,low,low,low,0,0,0,2,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$141276;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$141276;,low,low,low,low,0,0,0,2,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$145280;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$145280;,low,low,low,low,0,0,0,2,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$148973;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$148973;,low,low,low,low,0,0,0,2,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$151793;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$151793;,low,low,low,low,0,0,0,2,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$154824;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$154824;,low,low,low,low,0,0,0,2,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$158041;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$158041;,low,low,low,low,0,0,0,2,0,0,79,0,0,0,0,0,0,0,0,0,0,0,,,,,79,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$165583;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$165583;,low,low,low,low,0,0,0,2,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$170285;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$170285;,low,low,low,low,0,0,0,2,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$173722;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$173722;,low,low,low,low,0,0,0,2,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$181100;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$181100;,low,low,low,low,0,0,0,2,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$60642;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$60642;,low,low,low,low,0,0,0,2,0,0,56,0,0,0,0,0,0,0,0,0,0,0,,,,,56,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$66208;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$66208;,low,low,low,low,0,0,0,2,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$69097;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$69097;,low,low,low,low,0,0,0,2,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$71348;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$71348;,low,low,low,low,0,0,0,2,0,0,52,0,0,0,0,0,1,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$75760;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$75760;,low,low,low,low,0,0,0,2,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$78391;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$78391;,low,low,low,low,0,0,0,2,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$80224;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$80224;,low,low,low,low,0,0,0,2,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$82439;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$82439;,low,low,low,low,0,0,0,2,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$85815;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$85815;,low,low,low,low,0,0,0,2,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$88476;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$88476;,low,low,low,low,0,0,0,2,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$94705;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$94705;,low,low,low,low,0,0,0,2,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.KafkaAdminClient$97944;,Lorg.apache.kafka.clients.admin.KafkaAdminClient$97944;,low,low,low,low,0,0,0,2,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.MetadataUpdateNodeIdProvider,MetadataUpdateNodeIdProvider,low,low,low,low,3,3,2,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.NodeProvider,NodeProvider,low,low,low,low,1,1,0,1,4,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.TimeoutProcessor,TimeoutProcessor,low,low,low,low,2,24,7,1,0,7,26,23,2,0,4,0,0,0.167,0.6,0,0,0,,,,,26,,,,,,7,,,,,,,
org.apache.kafka.clients.admin.KafkaAdminClient.TimeoutProcessorFactory,TimeoutProcessorFactory,low,low,low,low,1,1,0,1,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.admin.KafkaAdminClient. numPendingCalls( ): int, numPendingCalls( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.admin.KafkaAdminClient. time( ): Time, time( ): Time,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private KafkaAdminClient( AdminClientConfig, String, Time, AdminMetadataManager, Metrics, KafkaClient, TimeoutProcessorFactory, LogContext ): void","KafkaAdminClient( AdminClientConfig, String, Time, AdminMetadataManager, Metrics, KafkaClient, TimeoutProcessorFactory, LogContext ): void",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,26,8,9,17
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public alterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult","alterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,2,11,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private alterConfigs( Map, AlterConfigsOptions, Collection, NodeProvider ): Map","alterConfigs( Map, AlterConfigsOptions, Collection, NodeProvider ): Map",low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,32,4,10,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public alterConsumerGroupOffsets( String, Map, AlterConsumerGroupOffsetsOptions ): AlterConsumerGroupOffsetsResult","alterConsumerGroupOffsets( String, Map, AlterConsumerGroupOffsetsOptions ): AlterConsumerGroupOffsetsResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,3,5,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public alterPartitionReassignments( Map, AlterPartitionReassignmentsOptions ): AlterPartitionReassignmentsResult","alterPartitionReassignments( Map, AlterPartitionReassignmentsOptions ): AlterPartitionReassignmentsResult",low,medium-high,high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,110,2,19,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public alterReplicaLogDirs( Map, AlterReplicaLogDirsOptions ): AlterReplicaLogDirsResult","alterReplicaLogDirs( Map, AlterReplicaLogDirsOptions ): AlterReplicaLogDirsResult",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,43,2,18,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private calcDeadlineMs( long, Integer ): long","calcDeadlineMs( long, Integer ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,1,1
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public close( Duration ): void,close( Duration ): void,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,32,1,20,18
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private configSource( ConfigSource ): ConfigSource,configSource( ConfigSource ): ConfigSource,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,24,1,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private configSynonyms( ConfigEntry ): List,configSynonyms( ConfigEntry ): List,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,8,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public createAcls( Collection, CreateAclsOptions ): CreateAclsResult","createAcls( Collection, CreateAclsOptions ): CreateAclsResult",low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,41,2,8,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public createDelegationToken( CreateDelegationTokenOptions ): CreateDelegationTokenResult,createDelegationToken( CreateDelegationTokenOptions ): CreateDelegationTokenResult,low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,33,1,6,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public createPartitions( Map, CreatePartitionsOptions ): CreatePartitionsResult","createPartitions( Map, CreatePartitionsOptions ): CreatePartitionsResult",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,33,2,9,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public createTopics( Collection, CreateTopicsOptions ): CreateTopicsResult","createTopics( Collection, CreateTopicsOptions ): CreateTopicsResult",low,medium-high,medium-high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,6,75,2,13,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public deleteAcls( Collection, DeleteAclsOptions ): DeleteAclsResult","deleteAcls( Collection, DeleteAclsOptions ): DeleteAclsResult",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,6,38,2,5,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public deleteConsumerGroupOffsets( String, Set, DeleteConsumerGroupOffsetsOptions ): DeleteConsumerGroupOffsetsResult","deleteConsumerGroupOffsets( String, Set, DeleteConsumerGroupOffsetsOptions ): DeleteConsumerGroupOffsetsResult",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,3,7,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public deleteConsumerGroups( Collection, DeleteConsumerGroupsOptions ): DeleteConsumerGroupsResult","deleteConsumerGroups( Collection, DeleteConsumerGroupsOptions ): DeleteConsumerGroupsResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,2,8,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public deleteRecords( Map, DeleteRecordsOptions ): DeleteRecordsResult","deleteRecords( Map, DeleteRecordsOptions ): DeleteRecordsResult",low,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,6,66,2,10,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public deleteTopics( Collection, DeleteTopicsOptions ): DeleteTopicsResult","deleteTopics( Collection, DeleteTopicsOptions ): DeleteTopicsResult",low,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,52,2,11,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private dependsOnSpecificNode( ConfigResource ): boolean,dependsOnSpecificNode( ConfigResource ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeAcls( AclBindingFilter, DescribeAclsOptions ): DescribeAclsResult","describeAcls( AclBindingFilter, DescribeAclsOptions ): DescribeAclsResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,26,2,4,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeCluster( DescribeClusterOptions ): DescribeClusterResult,describeCluster( DescribeClusterOptions ): DescribeClusterResult,low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,36,1,2,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeConfigs( Collection, DescribeConfigsOptions ): DescribeConfigsResult","describeConfigs( Collection, DescribeConfigsOptions ): DescribeConfigsResult",low,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,81,2,18,3
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeConsumerGroups( Collection, DescribeConsumerGroupsOptions ): DescribeConsumerGroupsResult","describeConsumerGroups( Collection, DescribeConsumerGroupsOptions ): DescribeConsumerGroupsResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,2,11,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeDelegationToken( DescribeDelegationTokenOptions ): DescribeDelegationTokenResult,describeDelegationToken( DescribeDelegationTokenOptions ): DescribeDelegationTokenResult,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,21,1,2,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeLogDirs( Collection, DescribeLogDirsOptions ): DescribeLogDirsResult","describeLogDirs( Collection, DescribeLogDirsOptions ): DescribeLogDirsResult",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,25,2,4,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeReplicaLogDirs( Collection, DescribeReplicaLogDirsOptions ): DescribeReplicaLogDirsResult","describeReplicaLogDirs( Collection, DescribeReplicaLogDirsOptions ): DescribeReplicaLogDirsResult",low,medium-high,medium-high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,6,59,2,17,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public describeTopics( Collection, DescribeTopicsOptions ): DescribeTopicsResult","describeTopics( Collection, DescribeTopicsOptions ): DescribeTopicsResult",low,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,70,2,10,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public electLeaders( ElectionType, Set, ElectLeadersOptions ): ElectLeadersResult","electLeaders( ElectionType, Set, ElectLeadersOptions ): ElectLeadersResult",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,26,3,2,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public expireDelegationToken( byte, ExpireDelegationTokenOptions ): ExpireDelegationTokenResult","expireDelegationToken( byte, ExpireDelegationTokenOptions ): ExpireDelegationTokenResult",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,24,2,2,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getAlterConsumerGroupOffsetsCall( ConsumerGroupOperationContext, Map ): Call","getAlterConsumerGroupOffsetsCall( ConsumerGroupOperationContext, Map ): Call",low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,5,56,2,0,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getDeleteConsumerGroupOffsetsCall( ConsumerGroupOperationContext, Set ): Call","getDeleteConsumerGroupOffsetsCall( ConsumerGroupOperationContext, Set ): Call",low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,41,2,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getDeleteConsumerGroupsCall( ConsumerGroupOperationContext ): Call,getDeleteConsumerGroupsCall( ConsumerGroupOperationContext ): Call,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,22,1,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getDescribeConsumerGroupsCall( ConsumerGroupOperationContext ): Call,getDescribeConsumerGroupsCall( ConsumerGroupOperationContext ): Call,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,5,66,1,0,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getFindCoordinatorCall( ConsumerGroupOperationContext, Supplier ): Call","getFindCoordinatorCall( ConsumerGroupOperationContext, Supplier ): Call",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,20,2,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getListConsumerGroupOffsetsCall( ConsumerGroupOperationContext ): Call,getListConsumerGroupOffsetsCall( ConsumerGroupOperationContext ): Call,low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,33,1,0,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getListOffsetsCalls( MetadataOperationContext, Map, Map ): List","getListOffsetsCalls( MetadataOperationContext, Map, Map ): List",low,very-high,medium-high,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,61,3,27,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getMetadataCall( MetadataOperationContext, Supplier ): Call","getMetadataCall( MetadataOperationContext, Supplier ): Call",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,20,2,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private getRemoveMembersFromGroupCall( ConsumerGroupOperationContext ): Call,getRemoveMembersFromGroupCall( ConsumerGroupOperationContext ): Call,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,28,1,0,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private handleGroupRequestError( Errors, KafkaFutureImpl ): boolean","handleGroupRequestError( Errors, KafkaFutureImpl ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,2,3,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private handleNotControllerError( Errors ): void,handleNotControllerError( Errors ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public incrementalAlterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult","incrementalAlterConfigs( Map, AlterConfigsOptions ): AlterConfigsResult",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,2,11,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private incrementalAlterConfigs( Map, AlterConfigsOptions, Collection, NodeProvider ): Map","incrementalAlterConfigs( Map, AlterConfigsOptions, Collection, NodeProvider ): Map",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,29,4,3,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public listConsumerGroupOffsets( String, ListConsumerGroupOffsetsOptions ): ListConsumerGroupOffsetsResult","listConsumerGroupOffsets( String, ListConsumerGroupOffsetsOptions ): ListConsumerGroupOffsetsResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,5,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public listConsumerGroups( ListConsumerGroupsOptions ): ListConsumerGroupsResult,listConsumerGroups( ListConsumerGroupsOptions ): ListConsumerGroupsResult,low,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,7,56,1,4,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public listOffsets( Map, ListOffsetsOptions ): ListOffsetsResult","listOffsets( Map, ListOffsetsOptions ): ListOffsetsResult",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,2,10,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public listPartitionReassignments( Optional, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult","listPartitionReassignments( Optional, ListPartitionReassignmentsOptions ): ListPartitionReassignmentsResult",low,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,58,2,10,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public listTopics( ListTopicsOptions ): ListTopicsResult,listTopics( ListTopicsOptions ): ListTopicsResult,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,24,1,2,2
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public metrics( ): Map,metrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private partitionDetails( NewPartitions ): PartitionDetails,partitionDetails( NewPartitions ): PartitionDetails,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public removeMembersFromConsumerGroup( String, RemoveMembersFromConsumerGroupOptions ): RemoveMembersFromConsumerGroupResult","removeMembersFromConsumerGroup( String, RemoveMembersFromConsumerGroupOptions ): RemoveMembersFromConsumerGroupResult",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,6,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.public renewDelegationToken( byte, RenewDelegationTokenOptions ): RenewDelegationTokenResult","renewDelegationToken( byte, RenewDelegationTokenOptions ): RenewDelegationTokenResult",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,24,2,2,2
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private rescheduleFindCoordinatorTask( ConsumerGroupOperationContext, Supplier ): void","rescheduleFindCoordinatorTask( ConsumerGroupOperationContext, Supplier ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,7,3
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private rescheduleMetadataTask( MetadataOperationContext, Supplier ): void","rescheduleMetadataTask( MetadataOperationContext, Supplier ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,6,3
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static calcTimeoutMsRemainingAsInt( long, long ): int","static calcTimeoutMsRemainingAsInt( long, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,2,0,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private static completeAllExceptionally( Collection, Throwable ): void","static completeAllExceptionally( Collection, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private static completeAllExceptionally( Stream, Throwable ): void","static completeAllExceptionally( Stream, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private static createFutures( Collection ): Map,static createFutures( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,12,1,3,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static createInternal( AdminClientConfig, AdminMetadataManager, KafkaClient, Time ): KafkaAdminClient","static createInternal( AdminClientConfig, AdminMetadataManager, KafkaClient, Time ): KafkaAdminClient",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,4,3,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static createInternal( AdminClientConfig, TimeoutProcessorFactory ): KafkaAdminClient","static createInternal( AdminClientConfig, TimeoutProcessorFactory ): KafkaAdminClient",low,very-high,medium-high,low,18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,54,2,36,1
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static createLogContext( String ): LogContext,static createLogContext( String ): LogContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static generateClientId( AdminClientConfig ): String,static generateClientId( AdminClientConfig ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,1
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static getOrCreateListValue( Map, K ): List","static getOrCreateListValue( Map, K ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static getSubLevelError( Map, K, String ): Throwable","static getSubLevelError( Map, K, String ): Throwable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,3,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private static groupIdIsUnrepresentable( String ): boolean,static groupIdIsUnrepresentable( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.static prettyPrintException( Throwable ): String,static prettyPrintException( Throwable ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,6,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private static topicNameIsUnrepresentable( String ): boolean,static topicNameIsUnrepresentable( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.admin.KafkaAdminClient.private validAclOperations( int ): Set,validAclOperations( int ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,6,0
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->client,final client : KafkaClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->defaultTimeoutMs,final defaultTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->hardShutdownTimeMs,final hardShutdownTimeMs : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->maxRetries,final maxRetries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->metadataManager,final metadataManager : AdminMetadataManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->runnable,final runnable : AdminClientRunnable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->thread,final thread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->timeoutProcessorFactory,final timeoutProcessorFactory : TimeoutProcessorFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->ADMIN_CLIENT_ID_SEQUENCE,static final ADMIN_CLIENT_ID_SEQUENCE : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->INVALID_SHUTDOWN_TIME,static final INVALID_SHUTDOWN_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->JMX_PREFIX,static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.KafkaAdminClient->NETWORK_THREAD_PREFIX,static final NETWORK_THREAD_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions,ListConsumerGroupOffsetsOptions,low-medium,low,low,low,0,2,0,2,0,2,8,5,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions.public topicPartitions( ): List,topicPartitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions.public topicPartitions( List ): ListConsumerGroupOffsetsOptions,topicPartitions( List ): ListConsumerGroupOffsetsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions->topicPartitions,topicPartitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListConsumerGroupOffsetsResult,ListConsumerGroupOffsetsResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsResult. ListConsumerGroupOffsetsResult( KafkaFuture ): void, ListConsumerGroupOffsetsResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsResult.public partitionsToOffsetAndMetadata( ): KafkaFuture,partitionsToOffsetAndMetadata( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListConsumerGroupOffsetsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListConsumerGroupsOptions,ListConsumerGroupsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.ListConsumerGroupsResult,ListConsumerGroupsResult,low,low,low,low,2,8,1,1,0,4,33,28,3,0,4,0,0,0.667,0.375,1,0,0,,,,,33,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListConsumerGroupsResult$1734;,Lorg.apache.kafka.clients.admin.ListConsumerGroupsResult$1734;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.ListConsumerGroupsResult. ListConsumerGroupsResult( KafkaFutureImpl ): void, ListConsumerGroupsResult( KafkaFutureImpl ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,22,1,1,3
<Method>org.apache.kafka.clients.admin.ListConsumerGroupsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ListConsumerGroupsResult.public errors( ): KafkaFuture,errors( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ListConsumerGroupsResult.public valid( ): KafkaFuture,valid( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListConsumerGroupsResult->all,final all : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ListConsumerGroupsResult->errors,final errors : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.ListConsumerGroupsResult->valid,final valid : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListOffsetsOptions,ListOffsetsOptions,low-medium,low,low,low,1,3,0,2,0,3,9,6,1,0,3,0,0,0,0.333,0.667,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.ListOffsetsOptions.public ListOffsetsOptions( ): void,ListOffsetsOptions( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.admin.ListOffsetsOptions.public ListOffsetsOptions( IsolationLevel ): void,ListOffsetsOptions( IsolationLevel ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ListOffsetsOptions.public isolationLevel( ): IsolationLevel,isolationLevel( ): IsolationLevel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListOffsetsOptions->isolationLevel,final isolationLevel : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListOffsetsResult,ListOffsetsResult,low,low,low,low,2,9,5,1,0,4,42,21,1,0,3,0,0,0,0.444,0,0,0,,,,,42,,,,,,4,,,,,,,
org.apache.kafka.clients.admin.ListOffsetsResult.ListOffsetsResultInfo,ListOffsetsResultInfo,low,low,low,low,0,5,0,1,0,5,18,14,3,0,5,0,0,0.5,0.533,0.5,0,0,,,,,18,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListOffsetsResult$2347;,Lorg.apache.kafka.clients.admin.ListOffsetsResult$2347;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.ListOffsetsResult. ListOffsetsResult( Map ): void, ListOffsetsResult( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ListOffsetsResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,13,0,4,1
<Method>org.apache.kafka.clients.admin.ListOffsetsResult.public partitionResult( TopicPartition ): KafkaFuture,partitionResult( TopicPartition ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,1
<Field>org.apache.kafka.clients.admin.ListOffsetsResult->futures,final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListPartitionReassignmentsOptions,ListPartitionReassignmentsOptions,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.ListPartitionReassignmentsResult,ListPartitionReassignmentsResult,low,low,low,low,1,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.ListPartitionReassignmentsResult. ListPartitionReassignmentsResult( KafkaFuture ): void, ListPartitionReassignmentsResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ListPartitionReassignmentsResult.public reassignments( ): KafkaFuture,reassignments( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListPartitionReassignmentsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListTopicsOptions,ListTopicsOptions,low-medium,low,low,low,0,3,0,2,0,3,11,8,1,0,3,0,1,0,0.444,0.667,0,0.667,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.admin.ListTopicsOptions.public listInternal( boolean ): ListTopicsOptions,listInternal( boolean ): ListTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.ListTopicsOptions.public shouldListInternal( ): boolean,shouldListInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.ListTopicsOptions.public timeoutMs( Integer ): ListTopicsOptions,timeoutMs( Integer ): ListTopicsOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.ListTopicsOptions->listInternal,listInternal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.ListTopicsResult,ListTopicsResult,low,low,low,low,1,5,1,1,0,4,19,16,1,0,4,0,0,0,0.375,0,0,0,,,,,19,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListTopicsResult$1768;,Lorg.apache.kafka.clients.admin.ListTopicsResult$1768;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.admin.ListTopicsResult$2220;,Lorg.apache.kafka.clients.admin.ListTopicsResult$2220;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.admin.ListTopicsResult. ListTopicsResult( KafkaFuture ): void, ListTopicsResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.ListTopicsResult.public listings( ): KafkaFuture,listings( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,1,1
<Method>org.apache.kafka.clients.admin.ListTopicsResult.public names( ): KafkaFuture,names( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,1,1
<Method>org.apache.kafka.clients.admin.ListTopicsResult.public namesToListings( ): KafkaFuture,namesToListings( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.ListTopicsResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.MemberAssignment,MemberAssignment,low,low,low,low,1,18,6,1,0,10,19,17,1,0,5,0,0,0,0.533,0,0,0,,,,,19,,,,,,10,,,,,,,
<Method>org.apache.kafka.clients.admin.MemberAssignment.public MemberAssignment( Set ): void,MemberAssignment( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,1
<Method>org.apache.kafka.clients.admin.MemberAssignment.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,3,2
<Method>org.apache.kafka.clients.admin.MemberAssignment.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.clients.admin.MemberAssignment.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.admin.MemberAssignment.public topicPartitions( ): Set,topicPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.MemberAssignment->topicPartitions,final topicPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.MemberDescription,MemberDescription,low,low,low-medium,low-medium,1,19,8,1,0,17,52,46,5,0,10,0,0,0.5,0.68,0.422,0,0,,,,,52,,,,,,17,,,,,,,
"<Method>org.apache.kafka.clients.admin.MemberDescription.public MemberDescription( String, Optional, String, String, MemberAssignment ): void","MemberDescription( String, Optional, String, String, MemberAssignment ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,5,1,5
"<Method>org.apache.kafka.clients.admin.MemberDescription.public MemberDescription( String, String, String, MemberAssignment ): void","MemberDescription( String, String, String, MemberAssignment ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
<Method>org.apache.kafka.clients.admin.MemberDescription.public assignment( ): MemberAssignment,assignment( ): MemberAssignment,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberDescription.public clientId( ): String,clientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberDescription.public consumerId( ): String,consumerId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberDescription.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,7,10
<Method>org.apache.kafka.clients.admin.MemberDescription.public groupInstanceId( ): Optional,groupInstanceId( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberDescription.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.clients.admin.MemberDescription.public host( ): String,host( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberDescription.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,5
<Field>org.apache.kafka.clients.admin.MemberDescription->assignment,final assignment : MemberAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.MemberDescription->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.MemberDescription->groupInstanceId,final groupInstanceId : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.MemberDescription->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.MemberDescription->memberId,final memberId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.MemberToRemove,MemberToRemove,low,low,low,low,0,6,2,1,0,5,20,14,1,0,4,0,0,0,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.admin.MemberToRemove.public MemberToRemove( String ): void,MemberToRemove( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.MemberToRemove.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,1,2
<Method>org.apache.kafka.clients.admin.MemberToRemove.public groupInstanceId( ): String,groupInstanceId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.MemberToRemove.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.clients.admin.MemberToRemove->groupInstanceId,final groupInstanceId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.NewPartitionReassignment,NewPartitionReassignment,low,low,low,low,0,4,2,1,0,4,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.admin.NewPartitionReassignment.public NewPartitionReassignment( List ): void,NewPartitionReassignment( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,2,1
<Method>org.apache.kafka.clients.admin.NewPartitionReassignment.public targetReplicas( ): List,targetReplicas( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.NewPartitionReassignment->targetReplicas,final targetReplicas : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.NewPartitions,NewPartitions,low,low,low,low,0,6,2,1,0,6,18,14,2,0,4,2,0,0.5,0.389,1,0,0,,,,,18,,,,,,6,,,,,,,
"<Method>org.apache.kafka.clients.admin.NewPartitions.private NewPartitions( int, List ): void","NewPartitions( int, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.admin.NewPartitions.public assignments( ): List,assignments( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.NewPartitions.public static increaseTo( int ): NewPartitions,static increaseTo( int ): NewPartitions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.admin.NewPartitions.public static increaseTo( int, List ): NewPartitions","static increaseTo( int, List ): NewPartitions",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.clients.admin.NewPartitions.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.clients.admin.NewPartitions.public totalCount( ): int,totalCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.NewPartitions->newAssignments,newAssignments : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewPartitions->totalCount,totalCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.NewTopic,NewTopic,low,low,low-medium,low-medium,0,18,8,1,0,10,61,35,5,2,10,0,0,0.75,0.7,0.6,0,0,,,,,61,,,,,,10,,,,,,,
"<Method>org.apache.kafka.clients.admin.NewTopic.public NewTopic( String, Map ): void","NewTopic( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,4
"<Method>org.apache.kafka.clients.admin.NewTopic.public NewTopic( String, Optional, Optional ): void","NewTopic( String, Optional, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,4
"<Method>org.apache.kafka.clients.admin.NewTopic.public NewTopic( String, int, short ): void","NewTopic( String, int, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.clients.admin.NewTopic.public configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.NewTopic.public configs( Map ): NewTopic,configs( Map ): NewTopic,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.admin.NewTopic.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.NewTopic.public numPartitions( ): int,numPartitions( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.clients.admin.NewTopic.public replicasAssignments( ): Map,replicasAssignments( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.NewTopic.public replicationFactor( ): short,replicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.clients.admin.NewTopic.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,16,5
<Field>org.apache.kafka.clients.admin.NewTopic->configs,configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->numPartitions,final numPartitions : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->replicasAssignments,final replicasAssignments : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->replicationFactor,final replicationFactor : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->NO_PARTITIONS,static final NO_PARTITIONS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.NewTopic->NO_REPLICATION_FACTOR,static final NO_REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.OffsetSpec,OffsetSpec,low,low,low,low,0,3,0,1,3,3,15,6,0,0,0,3,0,0,0.333,0,0,0,,,,,15,,,,,,3,,,,,,,
org.apache.kafka.clients.admin.OffsetSpec.EarliestSpec,EarliestSpec,low,low,low,low,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.OffsetSpec.LatestSpec,LatestSpec,low,low,low,low,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.clients.admin.OffsetSpec.TimestampSpec,TimestampSpec,low,low,low,low,0,2,0,2,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.OffsetSpec.public static earliest( ): OffsetSpec,static earliest( ): OffsetSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.admin.OffsetSpec.public static forTimestamp( long ): OffsetSpec,static forTimestamp( long ): OffsetSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.admin.OffsetSpec.public static latest( ): OffsetSpec,static latest( ): OffsetSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.admin.PartitionReassignment,PartitionReassignment,low,low,low,low,0,6,1,1,0,5,21,17,3,0,5,0,0,0.5,0.4,0.3,0,0,,,,,21,,,,,,5,,,,,,,
"<Method>org.apache.kafka.clients.admin.PartitionReassignment.public PartitionReassignment( List, List, List ): void","PartitionReassignment( List, List, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,3,3
<Method>org.apache.kafka.clients.admin.PartitionReassignment.public addingReplicas( ): List,addingReplicas( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.PartitionReassignment.public removingReplicas( ): List,removingReplicas( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.PartitionReassignment.public replicas( ): List,replicas( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.PartitionReassignment.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.clients.admin.PartitionReassignment->addingReplicas,final addingReplicas : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.PartitionReassignment->removingReplicas,final removingReplicas : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.PartitionReassignment->replicas,final replicas : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RecordsToDelete,RecordsToDelete,low,low,low,low,0,7,1,1,0,9,21,18,1,0,5,1,0,0,0.5,0.4,0,0,,,,,21,,,,,,9,,,,,,,
<Method>org.apache.kafka.clients.admin.RecordsToDelete.private RecordsToDelete( long ): void,RecordsToDelete( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public beforeOffset( ): long,beforeOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,2,2
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public static beforeOffset( long ): RecordsToDelete,static beforeOffset( long ): RecordsToDelete,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.admin.RecordsToDelete.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.clients.admin.RecordsToDelete->offset,offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupOptions,RemoveMembersFromConsumerGroupOptions,low-medium,low,low,low,0,2,0,2,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupOptions.public RemoveMembersFromConsumerGroupOptions( Collection ): void,RemoveMembersFromConsumerGroupOptions( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupOptions.public members( ): Set,members( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupOptions->members,members : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult,RemoveMembersFromConsumerGroupResult,low,low,low,low,3,5,2,1,0,9,40,27,2,0,3,0,0,0.25,0.5,0,0,0,,,,,40,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult. RemoveMembersFromConsumerGroupResult( KafkaFuture, Set ): void"," RemoveMembersFromConsumerGroupResult( KafkaFuture, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult.public all( ): KafkaFuture,all( ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,12,0,1,1
<Method>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult.public memberResult( MemberToRemove ): KafkaFuture,memberResult( MemberToRemove ): KafkaFuture,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,2,2
<Field>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult->future,final future : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.RemoveMembersFromConsumerGroupResult->memberInfos,final memberInfos : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RenewDelegationTokenOptions,RenewDelegationTokenOptions,low-medium,low,low,low,0,2,0,2,0,2,8,5,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.RenewDelegationTokenOptions.public renewTimePeriodMs( ): long,renewTimePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.RenewDelegationTokenOptions.public renewTimePeriodMs( long ): RenewDelegationTokenOptions,renewTimePeriodMs( long ): RenewDelegationTokenOptions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.admin.RenewDelegationTokenOptions->renewTimePeriodMs,renewTimePeriodMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.RenewDelegationTokenResult,RenewDelegationTokenResult,low,low,low,low,1,2,0,1,0,2,7,4,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.admin.RenewDelegationTokenResult. RenewDelegationTokenResult( KafkaFuture ): void, RenewDelegationTokenResult( KafkaFuture ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.admin.RenewDelegationTokenResult.public expiryTimestamp( ): KafkaFuture,expiryTimestamp( ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.RenewDelegationTokenResult->expiryTimestamp,final expiryTimestamp : KafkaFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.TopicDescription,TopicDescription,low,low,low,low-medium,1,21,5,1,0,12,37,32,4,0,9,0,0,0.429,0.685,0.389,0,0,,,,,37,,,,,,12,,,,,,,
"<Method>org.apache.kafka.clients.admin.TopicDescription.public TopicDescription( String, boolean, List ): void","TopicDescription( String, boolean, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.clients.admin.TopicDescription.public TopicDescription( String, boolean, List, Set ): void","TopicDescription( String, boolean, List, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
<Method>org.apache.kafka.clients.admin.TopicDescription.public authorizedOperations( ): Set,authorizedOperations( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicDescription.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,5,8
<Method>org.apache.kafka.clients.admin.TopicDescription.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.clients.admin.TopicDescription.public isInternal( ): boolean,isInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicDescription.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicDescription.public partitions( ): List,partitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicDescription.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,4
<Field>org.apache.kafka.clients.admin.TopicDescription->authorizedOperations,final authorizedOperations : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.TopicDescription->internal,final internal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.TopicDescription->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.TopicDescription->partitions,final partitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.admin.TopicListing,TopicListing,low,low,low,low,0,4,0,1,0,4,13,10,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,13,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.admin.TopicListing.public TopicListing( String, boolean ): void","TopicListing( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.admin.TopicListing.public isInternal( ): boolean,isInternal( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicListing.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.admin.TopicListing.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.clients.admin.TopicListing->internal,final internal : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.TopicListing->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.admin.internals,org.apache.kafka.clients.admin.internals,low,low,low,low,,,,,,51,173,,,,,,,,,,,,,5,5,0,173,1,3,0,0.75,0.25,51,,,,,,,
org.apache.kafka.clients.admin.internals.AdminMetadataManager,AdminMetadataManager,low-medium,low-medium,low-medium,medium-high,6,32,19,1,0,23,106,72,9,0,13,0,0,0.815,0.705,0.455,1,0,,,,,106,,,,,,23,,,,,,,
org.apache.kafka.clients.admin.internals.AdminMetadataManager.AdminMetadataUpdater,AdminMetadataUpdater,low,low,low,low,3,11,3,1,0,7,20,19,0,0,7,0,0,0,0.595,0,0,0,,,,,20,,,,,,7,,,,,,,
org.apache.kafka.clients.admin.internals.AdminMetadataManager.State,State,low,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public AdminMetadataManager( LogContext, long, long ): void","AdminMetadataManager( LogContext, long, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,4
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public clearController( ): void,clearController( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,9,6
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public controller( ): Node,controller( ): Node,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.private delayBeforeNextAttemptMs( long ): long,delayBeforeNextAttemptMs( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.private delayBeforeNextExpireMs( long ): long,delayBeforeNextExpireMs( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public isReady( ): boolean,isReady( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,7,9
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public metadataFetchDelayMs( long ): long,metadataFetchDelayMs( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,4,1
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public nodeById( int ): Node,nodeById( int ): Node,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,3
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public transitionToUpdatePending( long ): void,transitionToUpdatePending( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
"<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public update( Cluster, long ): void","update( Cluster, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,5,6
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public updateFailed( Throwable ): void,updateFailed( Throwable ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,4
<Method>org.apache.kafka.clients.admin.internals.AdminMetadataManager.public updater( ): AdminMetadataUpdater,updater( ): AdminMetadataUpdater,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->authException,authException : AuthenticationException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->cluster,cluster : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->metadataExpireMs,final metadataExpireMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->refreshBackoffMs,final refreshBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->updater,final updater : AdminMetadataUpdater,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->lastMetadataFetchAttemptMs,lastMetadataFetchAttemptMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->lastMetadataUpdateMs,lastMetadataUpdateMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->log,log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.admin.internals.AdminMetadataManager->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>",ConsumerGroupOperationContext,low,low,low,medium-high,5,15,6,1,0,9,33,27,5,0,7,2,0,0.8,0.778,0.806,0,0,,,,,33,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public ConsumerGroupOperationContext( String, O, long, KafkaFutureImpl ): void","ConsumerGroupOperationContext( String, O, long, KafkaFutureImpl ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,1,5
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public deadline( ): long",deadline( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public future( ): KafkaFutureImpl",future( ): KafkaFutureImpl,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public groupId( ): String",groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public node( ): Optional",node( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public options( ): O",options( ): O,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public setNode( Node ): void",setNode( Node ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public static hasCoordinatorMoved( AbstractResponse ): boolean",static hasCoordinatorMoved( AbstractResponse ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
"<Method>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>.public static shouldRefreshCoordinator( Errors ): boolean",static shouldRefreshCoordinator( Errors ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Field>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>->deadline",final deadline : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>->future",final future : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>->groupId",final groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>->options",final options : O,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.ConsumerGroupOperationContext<T,O>->node",node : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>",MetadataOperationContext,low,low,low,medium-high,5,15,6,1,0,12,34,28,5,0,7,2,0,0.8,0.778,0.806,0,0,,,,,34,,,,,,12,,,,,,,
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public MetadataOperationContext( Collection, O, long, Map ): void","MetadataOperationContext( Collection, O, long, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,1,5
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public deadline( ): long",deadline( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public futures( ): Map",futures( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public options( ): O",options( ): O,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public response( ): Optional",response( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public setResponse( Optional ): void",setResponse( Optional ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public static handleMetadataErrors( MetadataResponse ): void",static handleMetadataErrors( MetadataResponse ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,5,1,6,0
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public static shouldRefreshMetadata( Errors ): boolean",static shouldRefreshMetadata( Errors ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>.public topics( ): Collection",topics( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>->deadline",final deadline : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>->futures",final futures : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>->options",final options : O,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>->topics",final topics : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.admin.internals.MetadataOperationContext<T,O>->response",response : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.consumer,org.apache.kafka.clients.consumer,low-medium,medium-high,medium-high,low,,,,,,474,1991,,,,,,,,,,,,,30,25,5,1991,80,18,0.2,0.184,0.616,474,,,,,,,
org.apache.kafka.clients.consumer.CommitFailedException,CommitFailedException,medium-high,low,low,low,0,1,0,5,0,1,9,7,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.CommitFailedException.public CommitFailedException( ): void,CommitFailedException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Field>org.apache.kafka.clients.consumer.CommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.Consumer<K,V>",Consumer,low-medium,low,high,high,5,45,0,1,2,45,50,45,0,0,45,0,0,0,0.839,0,0,0,,,,,50,,,,,,45,,,,,,,
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract assign( Collection ): void",assign( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract assignment( ): Set",assignment( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract beginningOffsets( Collection ): Map",beginningOffsets( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract beginningOffsets( Collection, Duration ): Map","beginningOffsets( Collection, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( Duration ): void",close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( long, TimeUnit ): void","close( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( Map, OffsetCommitCallback ): void","commitAsync( Map, OffsetCommitCallback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( OffsetCommitCallback ): void",commitAsync( OffsetCommitCallback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( Duration ): void",commitSync( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( Map ): void",commitSync( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( Map, Duration ): void","commitSync( Map, Duration ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract committed( Set ): Map",committed( Set ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract committed( Set, Duration ): Map","committed( Set, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract committed( TopicPartition ): OffsetAndMetadata",committed( TopicPartition ): OffsetAndMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract committed( TopicPartition, Duration ): OffsetAndMetadata","committed( TopicPartition, Duration ): OffsetAndMetadata",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract endOffsets( Collection ): Map",endOffsets( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract endOffsets( Collection, Duration ): Map","endOffsets( Collection, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract listTopics( ): Map",listTopics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract listTopics( Duration ): Map",listTopics( Duration ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract metrics( ): Map",metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract offsetsForTimes( Map ): Map",offsetsForTimes( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract offsetsForTimes( Map, Duration ): Map","offsetsForTimes( Map, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract partitionsFor( String ): List",partitionsFor( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract partitionsFor( String, Duration ): List","partitionsFor( String, Duration ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract pause( Collection ): void",pause( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract paused( ): Set",paused( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract poll( Duration ): ConsumerRecords",poll( Duration ): ConsumerRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract poll( long ): ConsumerRecords",poll( long ): ConsumerRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract position( TopicPartition ): long",position( TopicPartition ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract position( TopicPartition, Duration ): long","position( TopicPartition, Duration ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract resume( Collection ): void",resume( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract seek( TopicPartition, OffsetAndMetadata ): void","seek( TopicPartition, OffsetAndMetadata ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract seek( TopicPartition, long ): void","seek( TopicPartition, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract seekToBeginning( Collection ): void",seekToBeginning( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract seekToEnd( Collection ): void",seekToEnd( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract subscribe( Collection ): void",subscribe( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract subscribe( Collection, ConsumerRebalanceListener ): void","subscribe( Collection, ConsumerRebalanceListener ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract subscribe( Pattern ): void",subscribe( Pattern ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract subscribe( Pattern, ConsumerRebalanceListener ): void","subscribe( Pattern, ConsumerRebalanceListener ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract subscription( ): Set",subscription( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerConfig,ConsumerConfig,low-medium,medium-high,medium-high,low-medium,3,52,8,2,1,13,354,34,0,70,4,5,1,1.122,0.648,0.476,0,0.5,,,,,354,,,,,,13,,,,,,,
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public ConsumerConfig( Map ): void,ConsumerConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerConfig.protected ConsumerConfig( Map, boolean ): void","ConsumerConfig( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public ConsumerConfig( Properties ): void,ConsumerConfig( Properties ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public static addDeserializerToConfig( Map, Deserializer, Deserializer ): Map","static addDeserializerToConfig( Map, Deserializer, Deserializer ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,3,2,2
"<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public static addDeserializerToConfig( Properties, Deserializer, Deserializer ): Properties","static addDeserializerToConfig( Properties, Deserializer, Deserializer ): Properties",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,3,5,2
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public static configNames( ): Set,static configNames( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.ConsumerConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ALLOW_AUTO_CREATE_TOPICS_CONFIG,static final ALLOW_AUTO_CREATE_TOPICS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ALLOW_AUTO_CREATE_TOPICS_DOC,static final ALLOW_AUTO_CREATE_TOPICS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->AUTO_COMMIT_INTERVAL_MS_CONFIG,static final AUTO_COMMIT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->AUTO_COMMIT_INTERVAL_MS_DOC,static final AUTO_COMMIT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->AUTO_OFFSET_RESET_CONFIG,static final AUTO_OFFSET_RESET_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->AUTO_OFFSET_RESET_DOC,static final AUTO_OFFSET_RESET_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CHECK_CRCS_CONFIG,static final CHECK_CRCS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CHECK_CRCS_DOC,static final CHECK_CRCS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CLIENT_DNS_LOOKUP_CONFIG,static final CLIENT_DNS_LOOKUP_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CLIENT_RACK_CONFIG,static final CLIENT_RACK_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->CONNECTIONS_MAX_IDLE_MS_CONFIG,static final CONNECTIONS_MAX_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_ALLOW_AUTO_CREATE_TOPICS,static final DEFAULT_ALLOW_AUTO_CREATE_TOPICS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_API_TIMEOUT_MS_CONFIG,static final DEFAULT_API_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_API_TIMEOUT_MS_DOC,static final DEFAULT_API_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_EXCLUDE_INTERNAL_TOPICS,static final DEFAULT_EXCLUDE_INTERNAL_TOPICS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_FETCH_MAX_BYTES,static final DEFAULT_FETCH_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_ISOLATION_LEVEL,static final DEFAULT_ISOLATION_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->DEFAULT_MAX_PARTITION_FETCH_BYTES,static final DEFAULT_MAX_PARTITION_FETCH_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ENABLE_AUTO_COMMIT_CONFIG,static final ENABLE_AUTO_COMMIT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ENABLE_AUTO_COMMIT_DOC,static final ENABLE_AUTO_COMMIT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->EXCLUDE_INTERNAL_TOPICS_CONFIG,static final EXCLUDE_INTERNAL_TOPICS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->EXCLUDE_INTERNAL_TOPICS_DOC,static final EXCLUDE_INTERNAL_TOPICS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MAX_BYTES_CONFIG,static final FETCH_MAX_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MAX_BYTES_DOC,static final FETCH_MAX_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MAX_WAIT_MS_CONFIG,static final FETCH_MAX_WAIT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MAX_WAIT_MS_DOC,static final FETCH_MAX_WAIT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MIN_BYTES_CONFIG,static final FETCH_MIN_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->FETCH_MIN_BYTES_DOC,static final FETCH_MIN_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->GROUP_ID_CONFIG,static final GROUP_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->GROUP_ID_DOC,static final GROUP_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->GROUP_INSTANCE_ID_CONFIG,static final GROUP_INSTANCE_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->GROUP_INSTANCE_ID_DOC,static final GROUP_INSTANCE_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->HEARTBEAT_INTERVAL_MS_CONFIG,static final HEARTBEAT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->HEARTBEAT_INTERVAL_MS_DOC,static final HEARTBEAT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->INTERCEPTOR_CLASSES_CONFIG,static final INTERCEPTOR_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->INTERCEPTOR_CLASSES_DOC,static final INTERCEPTOR_CLASSES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ISOLATION_LEVEL_CONFIG,static final ISOLATION_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->ISOLATION_LEVEL_DOC,static final ISOLATION_LEVEL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->KEY_DESERIALIZER_CLASS_CONFIG,static final KEY_DESERIALIZER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->KEY_DESERIALIZER_CLASS_DOC,static final KEY_DESERIALIZER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->LEAVE_GROUP_ON_CLOSE_CONFIG,static final LEAVE_GROUP_ON_CLOSE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_PARTITION_FETCH_BYTES_CONFIG,static final MAX_PARTITION_FETCH_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_PARTITION_FETCH_BYTES_DOC,static final MAX_PARTITION_FETCH_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_POLL_INTERVAL_MS_CONFIG,static final MAX_POLL_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_POLL_INTERVAL_MS_DOC,static final MAX_POLL_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_POLL_RECORDS_CONFIG,static final MAX_POLL_RECORDS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->MAX_POLL_RECORDS_DOC,static final MAX_POLL_RECORDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->METADATA_MAX_AGE_CONFIG,static final METADATA_MAX_AGE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->PARTITION_ASSIGNMENT_STRATEGY_CONFIG,static final PARTITION_ASSIGNMENT_STRATEGY_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->PARTITION_ASSIGNMENT_STRATEGY_DOC,static final PARTITION_ASSIGNMENT_STRATEGY_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->RECEIVE_BUFFER_CONFIG,static final RECEIVE_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->RECONNECT_BACKOFF_MAX_MS_CONFIG,static final RECONNECT_BACKOFF_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->RECONNECT_BACKOFF_MS_CONFIG,static final RECONNECT_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->REQUEST_TIMEOUT_MS_CONFIG,static final REQUEST_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->REQUEST_TIMEOUT_MS_DOC,static final REQUEST_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->RETRY_BACKOFF_MS_CONFIG,static final RETRY_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->SECURITY_PROVIDERS_CONFIG,static final SECURITY_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->SECURITY_PROVIDERS_DOC,static final SECURITY_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->SEND_BUFFER_CONFIG,static final SEND_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->SESSION_TIMEOUT_MS_CONFIG,static final SESSION_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->SESSION_TIMEOUT_MS_DOC,static final SESSION_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->VALUE_DESERIALIZER_CLASS_CONFIG,static final VALUE_DESERIALIZER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerConfig->VALUE_DESERIALIZER_CLASS_DOC,static final VALUE_DESERIALIZER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.ConsumerGroupMetadata,ConsumerGroupMetadata,low,low,low,low,0,5,0,1,0,5,18,13,4,0,5,0,0,0.75,0.6,0.6,0,0,,,,,18,,,,,,5,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerGroupMetadata.public ConsumerGroupMetadata( String, int, String, Optional ): void","ConsumerGroupMetadata( String, int, String, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.clients.consumer.ConsumerGroupMetadata.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerGroupMetadata.public groupId( ): String,groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerGroupMetadata.public groupInstanceId( ): Optional,groupInstanceId( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.ConsumerGroupMetadata.public memberId( ): String,memberId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.ConsumerGroupMetadata->groupInstanceId, groupInstanceId : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerGroupMetadata->generationId,generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerGroupMetadata->groupId,groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.ConsumerGroupMetadata->memberId,memberId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>",ConsumerInterceptor,low,low,low,low,1,3,0,1,0,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>.public abstract onCommit( Map ): void",onCommit( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerInterceptor<K,V>.public abstract onConsume( ConsumerRecords ): ConsumerRecords",onConsume( ConsumerRecords ): ConsumerRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor,ConsumerPartitionAssignor,low,low,low-medium,low-medium,2,7,1,1,3,6,73,6,0,0,6,0,0,0,0.694,0,0,0,,,,,73,,,,,,6,,,,,,,
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Assignment,Assignment,low,low,low,low,0,4,0,1,0,4,12,9,2,0,4,0,0,0.5,0.417,0.667,0,0,,,,,12,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.GroupAssignment,GroupAssignment,low,low,low,low,0,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.GroupSubscription,GroupSubscription,low,low,low,low,0,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.RebalanceProtocol,RebalanceProtocol,low,low,low,low,0,3,0,2,0,5,15,12,1,2,2,1,0,0.833,0.167,1,0,0,,,,,15,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Subscription,Subscription,low,low,low,low,0,10,2,1,0,8,24,19,4,0,8,0,0,0.75,0.562,0.786,0,0,,,,,24,,,,,,8,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public abstract assign( Cluster, GroupSubscription ): GroupAssignment","assign( Cluster, GroupSubscription ): GroupAssignment",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public onAssignment( Assignment, ConsumerGroupMetadata ): void","onAssignment( Assignment, ConsumerGroupMetadata ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public subscriptionUserData( Set ): ByteBuffer,subscriptionUserData( Set ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public supportedProtocols( ): List,supportedProtocols( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.public version( ): short,version( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,3,1,1,4,3,5,3,0,0,3,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.consumer.ConsumerRebalanceListener.public abstract onPartitionsAssigned( Collection ): void,onPartitionsAssigned( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.consumer.ConsumerRebalanceListener.public onPartitionsLost( Collection ): void,onPartitionsLost( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
<Method>org.apache.kafka.clients.consumer.ConsumerRebalanceListener.public abstract onPartitionsRevoked( Collection ): void,onPartitionsRevoked( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.clients.consumer.ConsumerRecord<K,V>",ConsumerRecord,low,low-medium,low-medium,medium-high,6,26,3,1,0,20,115,99,12,3,17,0,0,0.876,0.735,0.794,0,0,,,,,115,,,,,,20,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public ConsumerRecord( String, int, long, K, V ): void","ConsumerRecord( String, int, long, K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,0,4
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public ConsumerRecord( String, int, long, long, TimestampType, Long, int, int, K, V, Headers ): void","ConsumerRecord( String, int, long, long, TimestampType, Long, int, int, K, V, Headers ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,11,1,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public ConsumerRecord( String, int, long, long, TimestampType, Long, int, int, K, V, Headers, Optional ): void","ConsumerRecord( String, int, long, long, TimestampType, Long, int, int, K, V, Headers, Optional ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,28,12,0,12
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public ConsumerRecord( String, int, long, long, TimestampType, long, int, int, K, V ): void","ConsumerRecord( String, int, long, long, TimestampType, long, int, int, K, V ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,10,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public checksum( ): long",checksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,6
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public headers( ): Headers",headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public leaderEpoch( ): Optional",leaderEpoch( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public offset( ): long",offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public partition( ): int",partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedKeySize( ): int",serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public serializedValueSize( ): int",serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public timestamp( ): long",timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public timestampType( ): TimestampType",timestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,1,11
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public topic( ): String",topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->headers",final headers : Headers,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->leaderEpoch",final leaderEpoch : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->offset",final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedKeySize",final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->serializedValueSize",final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->timestamp",final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->timestampType",final timestampType : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->topic",final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NO_TIMESTAMP",static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_CHECKSUM",static final NULL_CHECKSUM : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->NULL_SIZE",static final NULL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->checksum",volatile checksum : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords<K,V>",ConsumerRecords,low,low,low-medium,low-medium,1,23,15,1,0,13,52,31,1,1,7,1,0,0.571,0.656,0.25,0,0,,,,,52,,,,,,13,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords.ConcatenatedIterable<K,V>",ConcatenatedIterable,low,low,low,low,0,2,0,1,0,2,17,15,1,0,2,0,0,0,0.25,1,0,0,,,,,17,,,,,,2,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public ConsumerRecords( Map ): void",ConsumerRecords( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public count( ): int",count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public iterator( ): Iterator",iterator( ): Iterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public partitions( ): Set",partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public records( String ): Iterable",records( String ): Iterable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,6,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public records( TopicPartition ): List",records( TopicPartition ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,3,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public static empty( ): ConsumerRecords",static empty( ): ConsumerRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>->records",final records : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>->EMPTY",static final EMPTY : ConsumerRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.CooperativeStickyAssignor,CooperativeStickyAssignor,low-medium,low,low,low,4,89,15,3,0,9,35,34,0,0,5,0,1,0,0.467,0,0,0.6,,,,,35,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.consumer.CooperativeStickyAssignor.private adjustAssignment( Map, Map ): void","adjustAssignment( Map, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,2,13,0
"<Method>org.apache.kafka.clients.consumer.CooperativeStickyAssignor.public assign( Map, Map ): Map","assign( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,0
<Method>org.apache.kafka.clients.consumer.CooperativeStickyAssignor.protected memberData( Subscription ): MemberData,memberData( Subscription ): MemberData,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.CooperativeStickyAssignor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.consumer.CooperativeStickyAssignor.public supportedProtocols( ): List,supportedProtocols( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.clients.consumer.InvalidOffsetException,InvalidOffsetException,medium-high,low,low,low,0,2,0,5,2,2,4,3,0,0,2,0,0,0,0.25,0,0,0,,,,,4,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.InvalidOffsetException.public InvalidOffsetException( String ): void,InvalidOffsetException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.InvalidOffsetException.public abstract partitions( ): Set,abstract partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
"org.apache.kafka.clients.consumer.KafkaConsumer<K,V>",KafkaConsumer,very-high,very-high,very-high,very-high,48,841,181,1,0,147,682,654,22,5,64,2,0,0.912,0.923,0.789,0,0,,,,,682,,,,,,147,,,,,,,
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>. KafkaConsumer( LogContext, String, ConsumerCoordinator, Deserializer, Deserializer, Fetcher, ConsumerInterceptors, Time, ConsumerNetworkClient, Metrics, SubscriptionState, ConsumerMetadata, long, long, int, List, String ): void"," KafkaConsumer( LogContext, String, ConsumerCoordinator, Deserializer, Deserializer, Fetcher, ConsumerInterceptors, Time, ConsumerNetworkClient, Metrics, SubscriptionState, ConsumerMetadata, long, long, int, List, String ): void",low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,35,17,3,18
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>. getClientId( ): String", getClientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>. updateAssignmentMetadataIfNeeded( Timer ): boolean", updateAssignmentMetadataIfNeeded( Timer ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,2,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private KafkaConsumer( ConsumerConfig, Deserializer, Deserializer ): void","KafkaConsumer( ConsumerConfig, Deserializer, Deserializer ): void",low-medium,very-high,high,low,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,132,3,69,73
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public KafkaConsumer( Map ): void",KafkaConsumer( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public KafkaConsumer( Map, Deserializer, Deserializer ): void","KafkaConsumer( Map, Deserializer, Deserializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public KafkaConsumer( Properties ): void",KafkaConsumer( Properties ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public KafkaConsumer( Properties, Deserializer, Deserializer ): void","KafkaConsumer( Properties, Deserializer, Deserializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquire( ): void",acquire( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,5,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquireAndEnsureOpen( ): void",acquireAndEnsureOpen( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public assign( Collection ): void",assign( Collection ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,21,1,14,7
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public assignment( ): Set",assignment( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,4,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public beginningOffsets( Collection ): Map",beginningOffsets( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public beginningOffsets( Collection, Duration ): Map","beginningOffsets( Collection, Duration ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,4,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( Duration ): void",close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,5,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( long, TimeUnit ): void","close( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private close( long, boolean ): void","close( long, boolean ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,23,2,16,17
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( Map, OffsetCommitCallback ): void","commitAsync( Map, OffsetCommitCallback ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,2,6,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( OffsetCommitCallback ): void",commitAsync( OffsetCommitCallback ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( Duration ): void",commitSync( Duration ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,1,7,3
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( Map ): void",commitSync( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( Map, Duration ): void","commitSync( Map, Duration ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,2,7,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public committed( Set ): Map",committed( Set ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public committed( Set, Duration ): Map","committed( Set, Duration ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,15,2,7,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public committed( TopicPartition ): OffsetAndMetadata",committed( TopicPartition ): OffsetAndMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public committed( TopicPartition, Duration ): OffsetAndMetadata","committed( TopicPartition, Duration ): OffsetAndMetadata",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private configureClusterResourceListeners( Deserializer, Deserializer, List ): ClusterResourceListeners","configureClusterResourceListeners( Deserializer, Deserializer, List ): ClusterResourceListeners",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,3,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public endOffsets( Collection ): Map",endOffsets( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public endOffsets( Collection, Duration ): Map","endOffsets( Collection, Duration ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,4,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public listTopics( ): Map",listTopics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public listTopics( Duration ): Map",listTopics( Duration ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,4,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private maybeThrowInvalidGroupIdException( ): void",maybeThrowInvalidGroupIdException( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public metrics( ): Map",metrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public offsetsForTimes( Map ): Map",offsetsForTimes( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public offsetsForTimes( Map, Duration ): Map","offsetsForTimes( Map, Duration ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,2,8,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public partitionsFor( String ): List",partitionsFor( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public partitionsFor( String, Duration ): List","partitionsFor( String, Duration ): List",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,10,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public pause( Collection ): void",pause( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,1,4,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public paused( ): Set",paused( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,4,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public poll( Duration ): ConsumerRecords",poll( Duration ): ConsumerRecords,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private poll( Timer, boolean ): ConsumerRecords","poll( Timer, boolean ): ConsumerRecords",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,24,2,21,10
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public poll( long ): ConsumerRecords",poll( long ): ConsumerRecords,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private pollForFetches( Timer ): Map",pollForFetches( Timer ): Map,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,17,1,15,12
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public position( TopicPartition ): long",position( TopicPartition ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public position( TopicPartition, Duration ): long","position( TopicPartition, Duration ): long",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,18,2,9,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private release( ): void",release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,3
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public resume( Collection ): void",resume( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,1,4,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public seek( TopicPartition, OffsetAndMetadata ): void","seek( TopicPartition, OffsetAndMetadata ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,21,2,14,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public seek( TopicPartition, long ): void","seek( TopicPartition, long ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,6,3
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public seekToBeginning( Collection ): void",seekToBeginning( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,5,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public seekToEnd( Collection ): void",seekToEnd( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,5,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private static buildClientId( String, GroupRebalanceConfig ): String","static buildClientId( String, GroupRebalanceConfig ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,2,4,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private static buildMetrics( ConsumerConfig, Time, String ): Metrics","static buildMetrics( ConsumerConfig, Time, String ): Metrics",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,12,2
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public subscribe( Collection ): void",subscribe( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public subscribe( Collection, ConsumerRebalanceListener ): void","subscribe( Collection, ConsumerRebalanceListener ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,20,2,13,4
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public subscribe( Pattern ): void",subscribe( Pattern ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public subscribe( Pattern, ConsumerRebalanceListener ): void","subscribe( Pattern, ConsumerRebalanceListener ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,9,5
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public subscription( ): Set",subscription( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,4,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private throwIfNoAssignorsConfigured( ): void",throwIfNoAssignorsConfigured( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,0,8,6
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private updateFetchPositions( Timer ): boolean",updateFetchPositions( Timer ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,5,8
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private updateLastSeenEpochIfNewer( TopicPartition, OffsetAndMetadata ): void","updateLastSeenEpochIfNewer( TopicPartition, OffsetAndMetadata ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->assignors",assignors : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->cachedSubscriptionHashAllFetchPositions",cachedSubscriptionHashAllFetchPositions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->client",final client : ConsumerNetworkClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->clientId",final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->coordinator",final coordinator : ConsumerCoordinator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->currentThread",final currentThread : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->defaultApiTimeoutMs",final defaultApiTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->fetcher",final fetcher : Fetcher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->interceptors",final interceptors : ConsumerInterceptors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->kafkaConsumerMetrics",final kafkaConsumerMetrics : KafkaConsumerMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->keyDeserializer",final keyDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->metadata",final metadata : ConsumerMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->metrics",final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->refcount",final refcount : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->requestTimeoutMs",final requestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->subscriptions",final subscriptions : SubscriptionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->valueDeserializer",final valueDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->groupId",groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->log",log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->CLIENT_ID_METRIC_TAG",static final CLIENT_ID_METRIC_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->CONSUMER_CLIENT_ID_SEQUENCE",static final CONSUMER_CLIENT_ID_SEQUENCE : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->DEFAULT_CLOSE_TIMEOUT_MS",static final DEFAULT_CLOSE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->JMX_PREFIX",static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->NO_CURRENT_THREAD",static final NO_CURRENT_THREAD : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->closed",volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.LogTruncationException,LogTruncationException,medium-high,low,low,low,1,9,3,7,0,2,7,5,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.LogTruncationException.public LogTruncationException( Map ): void,LogTruncationException( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.clients.consumer.LogTruncationException.public divergentOffsets( ): Map,divergentOffsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.LogTruncationException->divergentOffsets,final divergentOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.MockConsumer<K,V>",MockConsumer,high,medium-high,very-high,high,19,170,87,1,1,107,331,318,12,0,63,0,0,0.877,0.892,0.86,0,0,,,,,331,,,,,,107,,,,,,,
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public MockConsumer( OffsetResetStrategy ): void",MockConsumer( OffsetResetStrategy ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,0,11
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public beginningOffsets( Collection, Duration ): Map","beginningOffsets( Collection, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public close( Duration ): void",close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public commitSync( Map, Duration ): void","commitSync( Map, Duration ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public committed( TopicPartition, Duration ): OffsetAndMetadata","committed( TopicPartition, Duration ): OffsetAndMetadata",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public endOffsets( Collection, Duration ): Map","endOffsets( Collection, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private getEndOffset( List ): Long",getEndOffset( List ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,4,1,4,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private innerUpdateEndOffsets( Map, boolean ): void","innerUpdateEndOffsets( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,2,7,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public listTopics( Duration ): Map",listTopics( Duration ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public offsetsForTimes( Map, Duration ): Map","offsetsForTimes( Map, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public partitionsFor( String, Duration ): List","partitionsFor( String, Duration ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private resetOffsetPosition( TopicPartition ): void",resetOffsetPosition( TopicPartition ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,1,5,3
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public seek( TopicPartition, OffsetAndMetadata ): void","seek( TopicPartition, OffsetAndMetadata ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized addEndOffsets( Map ): void",synchronized addEndOffsets( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized addRecord( ConsumerRecord ): void",synchronized addRecord( ConsumerRecord ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,7,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized assign( Collection ): void",synchronized assign( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized assignment( ): Set",synchronized assignment( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized beginningOffsets( Collection ): Map",synchronized beginningOffsets( Collection ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,2,4
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized close( long, TimeUnit ): void","synchronized close( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized closed( ): boolean",synchronized closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitAsync( ): void",synchronized commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitAsync( Map, OffsetCommitCallback ): void","synchronized commitAsync( Map, OffsetCommitCallback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,6,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitAsync( OffsetCommitCallback ): void",synchronized commitAsync( OffsetCommitCallback ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitSync( ): void",synchronized commitSync( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitSync( Duration ): void",synchronized commitSync( Duration ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized commitSync( Map ): void",synchronized commitSync( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized committed( Set ): Map",synchronized committed( Set ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,5,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized committed( Set, Duration ): Map","synchronized committed( Set, Duration ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized committed( TopicPartition ): OffsetAndMetadata",synchronized committed( TopicPartition ): OffsetAndMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized endOffsets( Collection ): Map",synchronized endOffsets( Collection ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,3,4
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized listTopics( ): Map",synchronized listTopics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized metrics( ): Map",synchronized metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized offsetsForTimes( Map ): Map",synchronized offsetsForTimes( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized partitionsFor( String ): List",synchronized partitionsFor( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized pause( Collection ): void",synchronized pause( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized paused( ): Set",synchronized paused( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized poll( Duration ): ConsumerRecords",synchronized poll( Duration ): ConsumerRecords,low-medium,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,5,32,1,34,16
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized poll( long ): ConsumerRecords",synchronized poll( long ): ConsumerRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized position( TopicPartition ): long",synchronized position( TopicPartition ): long,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,5,3
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized position( TopicPartition, Duration ): long","synchronized position( TopicPartition, Duration ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized rebalance( Collection ): void",synchronized rebalance( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized resume( Collection ): void",synchronized resume( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized scheduleNopPollTask( ): void",synchronized scheduleNopPollTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,2,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized schedulePollTask( Runnable ): void",synchronized schedulePollTask( Runnable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,1,1,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized seek( TopicPartition, long ): void","synchronized seek( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized seekToBeginning( Collection ): void",synchronized seekToBeginning( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized seekToEnd( Collection ): void",synchronized seekToEnd( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized setException( KafkaException ): void",synchronized setException( KafkaException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized setOffsetsException( KafkaException ): void",synchronized setOffsetsException( KafkaException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized setPollException( KafkaException ): void",synchronized setPollException( KafkaException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized subscribe( Collection ): void",synchronized subscribe( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized subscribe( Collection, ConsumerRebalanceListener ): void","synchronized subscribe( Collection, ConsumerRebalanceListener ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized subscribe( Pattern ): void",synchronized subscribe( Pattern ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized subscribe( Pattern, ConsumerRebalanceListener ): void","synchronized subscribe( Pattern, ConsumerRebalanceListener ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,17,2,15,7
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized subscription( ): Set",synchronized subscription( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized unsubscribe( ): void",synchronized unsubscribe( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,2
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized updateBeginningOffsets( Map ): void",synchronized updateBeginningOffsets( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized updateEndOffsets( Map ): void",synchronized updateEndOffsets( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized updatePartitions( String, List ): void","synchronized updatePartitions( String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public synchronized wakeup( ): void",synchronized wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private updateFetchPosition( TopicPartition ): void",updateFetchPosition( TopicPartition ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,8,5
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->beginningOffsets",final beginningOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->committed",final committed : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->endOffsets",final endOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->partitions",final partitions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->paused",final paused : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->pollTasks",final pollTasks : Queue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->subscriptions",final subscriptions : SubscriptionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->offsetsException",offsetsException : KafkaException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->pollException",pollException : KafkaException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->records",records : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->wakeup",wakeup : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.NoOffsetForPartitionException,NoOffsetForPartitionException,medium-high,low,low,low,1,9,5,6,0,5,14,11,1,1,4,0,0,0.667,0.5,0,0,0,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.consumer.NoOffsetForPartitionException.public NoOffsetForPartitionException( Collection ): void,NoOffsetForPartitionException( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.consumer.NoOffsetForPartitionException.public NoOffsetForPartitionException( TopicPartition ): void,NoOffsetForPartitionException( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.clients.consumer.NoOffsetForPartitionException.public partition( ): TopicPartition,partition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,3,2
<Method>org.apache.kafka.clients.consumer.NoOffsetForPartitionException.public partitions( ): Set,partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.NoOffsetForPartitionException->partitions,final partitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.NoOffsetForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndMetadata,OffsetAndMetadata,low,low,low,low-medium,1,15,6,1,0,14,42,37,3,1,9,0,0,0.542,0.644,0.5,0,0,,,,,42,,,,,,14,,,,,,,
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long ): void,OffsetAndMetadata( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long, Optional, String ): void","OffsetAndMetadata( long, Optional, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,3,1,4
"<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long, String ): void","OffsetAndMetadata( long, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,4,6
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public leaderEpoch( ): Optional,leaderEpoch( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public metadata( ): String,metadata( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->leaderEpoch,final leaderEpoch : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->metadata,final metadata : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndTimestamp,OffsetAndTimestamp,low,low,low,low-medium,0,13,5,1,0,13,36,32,3,0,8,0,0,0.333,0.625,0.357,0,0,,,,,36,,,,,,13,,,,,,,
"<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public OffsetAndTimestamp( long, long ): void","OffsetAndTimestamp( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public OffsetAndTimestamp( long, long, Optional ): void","OffsetAndTimestamp( long, long, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,3,0,3
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,3,6
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public leaderEpoch( ): Optional,leaderEpoch( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetAndTimestamp.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,3
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->leaderEpoch,final leaderEpoch : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetAndTimestamp->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetCommitCallback,OffsetCommitCallback,low,low,low,low,0,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.consumer.OffsetCommitCallback.public abstract onComplete( Map, Exception ): void","onComplete( Map, Exception ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.clients.consumer.OffsetOutOfRangeException,OffsetOutOfRangeException,medium-high,low,low,low,0,4,1,6,1,3,11,8,1,1,3,0,0,0.75,0.333,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.consumer.OffsetOutOfRangeException.public OffsetOutOfRangeException( Map ): void,OffsetOutOfRangeException( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.clients.consumer.OffsetOutOfRangeException.public offsetOutOfRangePartitions( ): Map,offsetOutOfRangePartitions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.OffsetOutOfRangeException.public partitions( ): Set,partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.clients.consumer.OffsetOutOfRangeException->offsetOutOfRangePartitions,final offsetOutOfRangePartitions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetResetStrategy,OffsetResetStrategy,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->EARLIEST,static final EARLIEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->LATEST,static final LATEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->NONE,static final NONE : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RangeAssignor,RangeAssignor,low-medium,low,low,low,2,21,17,2,0,10,34,33,0,0,3,0,0,0,0.167,0,0,0,,,,,34,,,,,,10,,,,,,,
"<Method>org.apache.kafka.clients.consumer.RangeAssignor.public assign( Map, Map ): Map","assign( Map, Map ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,22,2,17,0
<Method>org.apache.kafka.clients.consumer.RangeAssignor.private consumersPerTopic( Map ): Map,consumersPerTopic( Map ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,7,0
<Method>org.apache.kafka.clients.consumer.RangeAssignor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.clients.consumer.RetriableCommitFailedException,RetriableCommitFailedException,medium-high,low,low,low,0,4,0,7,0,4,13,11,0,1,3,1,0,0,0.25,0,0,0,,,,,13,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.consumer.RetriableCommitFailedException.public RetriableCommitFailedException( String ): void,RetriableCommitFailedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.consumer.RetriableCommitFailedException.public RetriableCommitFailedException( String, Throwable ): void","RetriableCommitFailedException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.clients.consumer.RetriableCommitFailedException.public RetriableCommitFailedException( Throwable ): void,RetriableCommitFailedException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.consumer.RetriableCommitFailedException.public static withUnderlyingMessage( String ): RetriableCommitFailedException,static withUnderlyingMessage( String ): RetriableCommitFailedException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Field>org.apache.kafka.clients.consumer.RetriableCommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RoundRobinAssignor,RoundRobinAssignor,low-medium,low,low,low,5,24,18,2,0,9,31,30,0,0,3,0,0,0,0.167,0,0,0,,,,,31,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.consumer.RoundRobinAssignor.private allPartitionsSorted( Map, Map ): List","allPartitionsSorted( Map, Map ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,6,0
"<Method>org.apache.kafka.clients.consumer.RoundRobinAssignor.public assign( Map, Map ): Map","assign( Map, Map ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,2,18,0
<Method>org.apache.kafka.clients.consumer.RoundRobinAssignor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.clients.consumer.StickyAssignor,StickyAssignor,low-medium,low-medium,low-medium,medium-high,8,50,28,3,0,16,67,52,2,7,4,2,2,0.704,0.714,0.667,0,1.5,,,,,67,,,,,,16,,,,,,,
<Method>org.apache.kafka.clients.consumer.StickyAssignor.protected memberData( Subscription ): MemberData,memberData( Subscription ): MemberData,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,5,0
<Method>org.apache.kafka.clients.consumer.StickyAssignor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.StickyAssignor.public onAssignment( Assignment, ConsumerGroupMetadata ): void","onAssignment( Assignment, ConsumerGroupMetadata ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,2
<Method>org.apache.kafka.clients.consumer.StickyAssignor.private static deserializeTopicPartitionAssignment( ByteBuffer ): MemberData,static deserializeTopicPartitionAssignment( ByteBuffer ): MemberData,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,19,1,13,8
<Method>org.apache.kafka.clients.consumer.StickyAssignor.static serializeTopicPartitionAssignment( MemberData ): ByteBuffer,static serializeTopicPartitionAssignment( MemberData ): ByteBuffer,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,1,17,10
<Method>org.apache.kafka.clients.consumer.StickyAssignor.public subscriptionUserData( Set ): ByteBuffer,subscriptionUserData( Set ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,3
<Field>org.apache.kafka.clients.consumer.StickyAssignor->generation,generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->memberAssignment,memberAssignment : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->GENERATION_KEY_NAME,static final GENERATION_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->STICKY_ASSIGNOR_USER_DATA_V0,static final STICKY_ASSIGNOR_USER_DATA_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->STICKY_ASSIGNOR_USER_DATA_V1,static final STICKY_ASSIGNOR_USER_DATA_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->TOPIC_ASSIGNMENT,static final TOPIC_ASSIGNMENT : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->TOPIC_KEY_NAME,static final TOPIC_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.StickyAssignor->TOPIC_PARTITIONS_KEY_NAME,static final TOPIC_PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.consumer.internals,org.apache.kafka.clients.consumer.internals,high,high,very-high,low,,,,,,1242,4826,,,,,,,,,,,,,65,61,4,4826,8,21,0.138,0.724,0.138,1242,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator,AbstractCoordinator,very-high,high,high,very-high,23,228,89,1,2,98,753,332,16,1,49,0,0,0.888,0.91,0.6,0,0,,,,,753,,,,,,98,,,,,,,
"org.apache.kafka.clients.consumer.internals.AbstractCoordinator.CoordinatorResponseHandler<R,T>",CoordinatorResponseHandler,low,low,low,low,2,19,5,2,6,6,18,16,1,0,3,0,0,0,0.4,1,0,0,,,,,18,,,,,,6,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.FindCoordinatorResponseHandler,FindCoordinatorResponseHandler,low,low,low,low,10,39,12,2,0,4,27,26,0,0,2,0,0,0,0.25,0,0,0,,,,,27,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.Generation,Generation,low,low,low,low,0,9,4,1,0,8,32,24,3,1,5,0,0,0.438,0.6,0,0,0,,,,,32,,,,,,8,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorMetrics,GroupCoordinatorMetrics,low,low,low,low,9,39,6,1,0,3,92,85,6,0,1,0,0,0,0,0,0,0,,,,,92,,,,,,3,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatResponseHandler,HeartbeatResponseHandler,low,low,low,low,12,60,16,3,0,9,33,32,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,9,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatThread,HeartbeatThread,low,low,low,low,9,152,24,3,0,23,92,88,3,0,7,0,1,0.667,0,0.333,0,0.429,,,,,92,,,,,,23,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.JoinGroupResponseHandler,JoinGroupResponseHandler,low,low,low,low,16,101,19,3,0,18,58,57,0,0,1,0,0,0,0,0,0,0,,,,,58,,,,,,18,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.LeaveGroupResponseHandler,LeaveGroupResponseHandler,low,low,low,low,4,30,9,3,0,3,14,13,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$22198;,Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$22198;,low,low,low,low,0,0,0,1,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.MemberState,MemberState,low,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.SyncGroupResponseHandler,SyncGroupResponseHandler,low,low,low,low,11,60,15,3,0,9,30,29,0,0,1,0,0,0,0,0,0,0,,,,,30,,,,,,9,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.UnjoinedGroupException,UnjoinedGroupException,low,low,low,low,0,0,0,7,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator. ensureActiveGroup( Timer ): boolean, ensureActiveGroup( Timer ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator. joinGroupIfNeeded( Timer ): boolean, joinGroupIfNeeded( Timer ): boolean,low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,4,37,1,18,9
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator. sendJoinGroupRequest( ): RequestFuture, sendJoinGroupRequest( ): RequestFuture,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,18,0,9,12
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public AbstractCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, Metrics, String, Time ): void","AbstractCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, Metrics, String, Time ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,6,2,6
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected abstract onJoinComplete( int, String, String, ByteBuffer ): void","abstract onJoinComplete( int, String, String, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,4,4,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected abstract onJoinPrepare( int, String ): void","abstract onJoinPrepare( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected abstract performAssignment( String, String, List ): Map","abstract performAssignment( String, String, List ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,3,3,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected abstract protocolType( ): String,abstract protocolType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected close( Timer ): void,close( Timer ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,7,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private closeHeartbeatThread( ): void,closeHeartbeatThread( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,0,3,5
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public coordinatorUnknown( ): boolean,coordinatorUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected createMeter( Metrics, String, String, String ): Meter","createMeter( Metrics, String, String, String ): Meter",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,4,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public ensureActiveGroup( ): void,ensureActiveGroup( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,3,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public final close( ): void,final close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.final hasMatchingGenerationId( int ): boolean,final hasMatchingGenerationId( int ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.final hasUnknownGeneration( ): boolean,final hasUnknownGeneration( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.final hasValidMemberId( ): boolean,final hasValidMemberId( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.final setLastRebalanceTime( long ): void,final setLastRebalanceTime( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public heartbeat( ): Heartbeat,heartbeat( ): Heartbeat,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected isDynamicMember( ): boolean,isDynamicMember( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private onJoinFollower( ): RequestFuture,onJoinFollower( ): RequestFuture,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,4,7
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private onJoinLeader( JoinGroupResponse ): RequestFuture,onJoinLeader( JoinGroupResponse ): RequestFuture,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,23,1,10,7
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected onLeavePrepare( ): void,onLeavePrepare( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private sendFindCoordinatorRequest( Node ): RequestFuture,sendFindCoordinatorRequest( Node ): RequestFuture,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,4,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private sendSyncGroupRequest( Builder ): RequestFuture,sendSyncGroupRequest( Builder ): RequestFuture,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized checkAndGetCoordinator( ): Node,synchronized checkAndGetCoordinator( ): Node,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,2,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized clearFindCoordinatorFuture( ): void,synchronized clearFindCoordinatorFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized coordinator( ): Node,synchronized coordinator( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized disableHeartbeatThread( ): void,synchronized disableHeartbeatThread( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized ensureCoordinatorReady( Timer ): boolean,synchronized ensureCoordinatorReady( Timer ): boolean,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,19,1,15,7
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized generation( ): Generation,synchronized generation( ): Generation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized generationIfStable( ): Generation,synchronized generationIfStable( ): Generation,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized initiateJoinGroup( ): RequestFuture,synchronized initiateJoinGroup( ): RequestFuture,low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,5,32,0,4,8
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized lookupCoordinator( ): RequestFuture,synchronized lookupCoordinator( ): RequestFuture,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,4,5
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized markCoordinatorUnknown( ): void,synchronized markCoordinatorUnknown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized markCoordinatorUnknown( boolean ): void,synchronized markCoordinatorUnknown( boolean ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,6
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public synchronized maybeLeaveGroup( String ): RequestFuture,synchronized maybeLeaveGroup( String ): RequestFuture,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,1,9,10
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized memberId( ): String,synchronized memberId( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized pollHeartbeat( long ): void,synchronized pollHeartbeat( long ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,5,6
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized rejoinNeededOrPending( ): boolean,synchronized rejoinNeededOrPending( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized requestRejoin( ): void,synchronized requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized resetGeneration( ): void,synchronized resetGeneration( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.synchronized resetGenerationOnLeaveGroup( ): void,synchronized resetGenerationOnLeaveGroup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.synchronized resetGenerationOnResponseError( ApiKeys, Errors ): void","synchronized resetGenerationOnResponseError( ApiKeys, Errors ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized resetJoinGroupFuture( ): void,synchronized resetJoinGroupFuture( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized resetStateAndRejoin( ): void,synchronized resetStateAndRejoin( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.synchronized sendHeartbeatRequest( ): RequestFuture,synchronized sendHeartbeatRequest( ): RequestFuture,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,4,8
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private synchronized startHeartbeatThreadIfNeeded( ): void,synchronized startHeartbeatThreadIfNeeded( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,3
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected synchronized timeToNextHeartbeat( long ): long,synchronized timeToNextHeartbeat( long ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,2
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->coordinator,coordinator : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->client,final client : ConsumerNetworkClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->heartbeat,final heartbeat : Heartbeat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rebalanceConfig,final rebalanceConfig : GroupRebalanceConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sensors,final sensors : GroupCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->findCoordinatorFuture,findCoordinatorFuture : RequestFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->generation,generation : Generation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->heartbeatThread,heartbeatThread : HeartbeatThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->joinFuture,joinFuture : RequestFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->lastRebalanceEndMs,lastRebalanceEndMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->lastRebalanceStartMs,lastRebalanceStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->needsJoinPrepare,needsJoinPrepare : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rejoinNeeded,rejoinNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->state,state : MemberState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->HEARTBEAT_THREAD_PREFIX,static final HEARTBEAT_THREAD_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor,AbstractPartitionAssignor,low,low-medium,low-medium,low-medium,7,17,12,1,3,10,59,28,0,1,2,2,0,0,0.625,1,0,0,,,,,59,,,,,,10,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor.MemberInfo,MemberInfo,low,low,low,low,0,11,6,1,0,9,29,26,2,0,5,0,0,0.25,0.64,0,0,0,,,,,29,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor.public abstract assign( Map, Map ): Map","abstract assign( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,2,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor.public assign( Cluster, GroupSubscription ): GroupAssignment","assign( Cluster, GroupSubscription ): GroupAssignment",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,18,2,13,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor.protected static partitions( String, int ): List","static partitions( String, int ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor.protected static put( Map, K, V ): void","static put( Map, K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
<Field>org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor,AbstractStickyAssignor,medium-high,low,medium-high,low-medium,3,92,74,2,2,97,490,333,1,2,19,0,0,0.714,0.7,0,0,0,,,,,490,,,,,,97,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.ConsumerGenerationPair,ConsumerGenerationPair,low,low,low,low,0,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.ConsumerPair,ConsumerPair,low,low,low,low,0,9,5,1,0,11,28,25,2,0,5,0,0,0,0.6,0,0,0,,,,,28,,,,,,11,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.MemberData,MemberData,low,low,low,low,0,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.PartitionComparator,PartitionComparator,low,low,low,low,1,7,5,1,0,4,13,10,1,1,2,0,0,1,0.333,0,0,0,,,,,13,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.PartitionMovements,PartitionMovements,low,low,low,low,3,35,29,1,0,32,89,86,2,0,8,0,0,0.25,0.562,0,0,0,,,,,89,,,,,,32,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.SubscriptionComparator,SubscriptionComparator,low,low,low,low,0,5,3,1,0,3,11,8,1,1,2,0,0,1,0.333,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.protected abstract memberData( Subscription ): MemberData,abstract memberData( Subscription ): MemberData,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private areSubscriptionsIdentical( Map, Map ): boolean","areSubscriptionsIdentical( Map, Map ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.public assign( Map, Map ): Map","assign( Map, Map ): Map",low-medium,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,54,2,48,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private assignPartition( TopicPartition, TreeSet, Map, Map, Map ): void","assignPartition( TopicPartition, TreeSet, Map, Map, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,5,7,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private balance( Map, Map, List, List, TreeSet, Map, Map, Map, boolean ): void","balance( Map, Map, List, List, TreeSet, Map, Map, Map, boolean ): void",low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,44,9,30,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private canParticipateInReassignment( String, Map, Map, Map ): boolean","canParticipateInReassignment( String, Map, Map, Map ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,15,4,6,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private canParticipateInReassignment( TopicPartition, Map ): boolean","canParticipateInReassignment( TopicPartition, Map ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private deepCopy( Map ): Map,deepCopy( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private deepCopy( Map, Map ): void","deepCopy( Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,5,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private getBalanceScore( Map ): int,getBalanceScore( Map ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,14,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private hasIdenticalListElements( Collection ): boolean,hasIdenticalListElements( Collection ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,1,7,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private isBalanced( Map, TreeSet, Map ): boolean","isBalanced( Map, TreeSet, Map ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,30,3,23,2
<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.public isSticky( ): boolean,isSticky( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private performReassignments( List, Map, Map, TreeSet, Map, Map, Map ): boolean","performReassignments( List, Map, Map, TreeSet, Map, Map, Map ): boolean",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,33,7,23,2
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private prepopulateCurrentAssignments( Map, Map, Map ): void","prepopulateCurrentAssignments( Map, Map, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,29,3,29,3
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private processPartitionMovement( TopicPartition, String, Map, TreeSet, Map ): void","processPartitionMovement( TopicPartition, String, Map, TreeSet, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,5,11,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private reassignPartition( TopicPartition, Map, TreeSet, Map, Map ): void","reassignPartition( TopicPartition, Map, TreeSet, Map, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,5,3,0
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private reassignPartition( TopicPartition, Map, TreeSet, Map, String ): void","reassignPartition( TopicPartition, Map, TreeSet, Map, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,5,3,1
"<Method>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.private sortPartitions( Map, Set, boolean, Map, Map ): List","sortPartitions( Map, Set, boolean, Map, Map ): List",low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,39,5,32,0
<Field>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor->partitionMovements,partitionMovements : PartitionMovements,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor->DEFAULT_GENERATION,static final DEFAULT_GENERATION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>",AsyncClient,low,low-medium,low,low,6,31,5,1,1,5,33,30,2,0,5,0,0,0.5,0.533,0,0,0,,,,,33,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AsyncClient$1696;,Lorg.apache.kafka.clients.consumer.internals.AsyncClient$1696;,low,low,low,low,0,0,0,2,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>. AsyncClient( ConsumerNetworkClient, LogContext ): void"," AsyncClient( ConsumerNetworkClient, LogContext ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
"<Method>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>.protected abstract handleResponse( Node, T1, Resp ): T2","abstract handleResponse( Node, T1, Resp ): T2",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>.protected abstract prepareRequest( Node, T1 ): Builder","abstract prepareRequest( Node, T1 ): Builder",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>.protected logger( ): Logger",logger( ): Logger,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>.public sendAsyncRequest( Node, T1 ): RequestFuture","sendAsyncRequest( Node, T1 ): RequestFuture",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,23,2,3,1
"<Field>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>->client",final client : ConsumerNetworkClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.AsyncClient<T1,Req,Resp,T2>->log",final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator,ConsumerCoordinator,very-high,very-high,medium-high,high,38,414,165,2,0,140,759,534,20,0,31,0,1,0.871,0.881,0.59,0,0.065,,,,,759,,,,,,140,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.ConsumerCoordinatorMetrics,ConsumerCoordinatorMetrics,low,low,low,low,6,39,6,1,0,1,41,35,5,0,1,0,0,0,0,0,0,0,,,,,41,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.DefaultOffsetCommitCallback,DefaultOffsetCommitCallback,low,low,low,low,1,2,1,1,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$42045;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$42045;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$43326;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$43326;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.MetadataSnapshot,MetadataSnapshot,low,low,low,low,2,9,4,1,0,5,15,12,2,0,3,0,0,0.25,0.533,0,0,0,,,,,15,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitCompletion,OffsetCommitCompletion,low,low,low,low,1,3,1,1,0,3,11,7,3,0,2,0,0,0,0.375,0,0,0,,,,,11,,,,,,3,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitResponseHandler,OffsetCommitResponseHandler,low,low,low,low,16,64,22,3,0,20,61,59,1,0,2,0,0,0,0.375,0,0,0,,,,,61,,,,,,20,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetFetchResponseHandler,OffsetFetchResponseHandler,low,low,low,low,12,47,20,3,0,12,44,43,0,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,12,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.PendingCommittedOffsetRequest,PendingCommittedOffsetRequest,low,low,low,low,2,5,3,1,0,2,12,8,3,0,2,0,0,0.333,0.125,0,0,0,,,,,12,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator. getProtocol( ): RebalanceProtocol, getProtocol( ): RebalanceProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator. invokeCompletedOffsetCommitCallbacks( ): void, invokeCompletedOffsetCommitCallbacks( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,0,5,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator. maybeUpdateSubscriptionMetadata( ): void, maybeUpdateSubscriptionMetadata( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,4,6
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public ConsumerCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, List, ConsumerMetadata, SubscriptionState, Metrics, String, Time, boolean, int, ConsumerInterceptors ): void","ConsumerCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, List, ConsumerMetadata, SubscriptionState, Metrics, String, Time, boolean, int, ConsumerInterceptors ): void",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,47,12,18,18
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public close( Timer ): void,close( Timer ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,8,3
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public commitOffsetsAsync( Map, OffsetCommitCallback ): void","commitOffsetsAsync( Map, OffsetCommitCallback ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,19,2,7,2
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public commitOffsetsSync( Map, Timer ): boolean","commitOffsetsSync( Map, Timer ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,19,2,14,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private doAutoCommitOffsetsAsync( ): void,doAutoCommitOffsetsAsync( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,14,0,3,2
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private doCommitOffsetsAsync( Map, OffsetCommitCallback ): void","doCommitOffsetsAsync( Map, OffsetCommitCallback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,18,2,2,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public fetchCommittedOffsets( Set, Timer ): Map","fetchCommittedOffsets( Set, Timer ): Map",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,28,2,14,9
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private invokePartitionsAssigned( Set ): Exception,invokePartitionsAssigned( Set ): Exception,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,9,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private invokePartitionsLost( Set ): Exception,invokePartitionsLost( Set ): Exception,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,9,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private invokePartitionsRevoked( Set ): Exception,invokePartitionsRevoked( Set ): Exception,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,9,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private lookupAssignor( String ): ConsumerPartitionAssignor,lookupAssignor( String ): ConsumerPartitionAssignor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public maybeAutoCommitOffsetsAsync( long ): void,maybeAutoCommitOffsetsAsync( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,4,5
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsSync( Timer ): void,maybeAutoCommitOffsetsSync( Timer ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,7,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeUpdateJoinedSubscription( Set ): void,maybeUpdateJoinedSubscription( Set ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,14,1,11,7
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.protected onJoinComplete( int, String, String, ByteBuffer ): void","onJoinComplete( int, String, String, ByteBuffer ): void",low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,49,4,30,16
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.protected onJoinPrepare( int, String ): void","onJoinPrepare( int, String ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,35,2,24,13
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public onLeavePrepare( ): void,onLeavePrepare( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,0,10,4
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.protected performAssignment( String, String, List ): Map","performAssignment( String, String, List ): Map",low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,44,3,36,9
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public poll( Timer ): boolean,poll( Timer ): boolean,low-medium,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,5,24,1,21,9
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public protocolType( ): String,protocolType( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public refreshCommittedOffsetsIfNeeded( Timer ): boolean,refreshCommittedOffsetsIfNeeded( Timer ): boolean,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,1,13,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public rejoinNeededOrPending( ): boolean,rejoinNeededOrPending( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,9,0,5,7
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private sendOffsetCommitRequest( Map ): RequestFuture,sendOffsetCommitRequest( Map ): RequestFuture,low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,43,1,29,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private sendOffsetFetchRequest( Set ): RequestFuture,sendOffsetFetchRequest( Set ): RequestFuture,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,1,5,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public timeToNextPoll( long ): long,timeToNextPoll( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,4,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private updateGroupSubscription( Set ): void,updateGroupSubscription( Set ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public updatePatternSubscription( Cluster ): void,updatePatternSubscription( Cluster ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,7,3
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private validateCooperativeAssignment( Map, Map ): void","validateCooperativeAssignment( Map, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,2,15,1
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->assignmentSnapshot,assignmentSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->asyncCommitFenced,asyncCommitFenced : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->assignors,final assignors : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitEnabled,final autoCommitEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitIntervalMs,final autoCommitIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->completedOffsetCommits,final completedOffsetCommits : ConcurrentLinkedQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->defaultOffsetCommitCallback,final defaultOffsetCommitCallback : OffsetCommitCallback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->interceptors,final interceptors : ConsumerInterceptors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->metadata,final metadata : ConsumerMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->pendingAsyncCommits,final pendingAsyncCommits : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->protocol,final protocol : RebalanceProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->rebalanceConfig,final rebalanceConfig : GroupRebalanceConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->sensors,final sensors : ConsumerCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->subscriptions,final subscriptions : SubscriptionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->isLeader,isLeader : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->joinedSubscription,joinedSubscription : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->metadataSnapshot,metadataSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->nextAutoCommitTimer,nextAutoCommitTimer : Timer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->pendingCommittedOffsetRequest,pendingCommittedOffsetRequest : PendingCommittedOffsetRequest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>",ConsumerInterceptors,low,low,low,low,3,9,5,1,0,10,26,23,1,1,4,0,0,0.167,0.562,0,0,0,,,,,26,,,,,,10,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public ConsumerInterceptors( List ): void",ConsumerInterceptors( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,2,2
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public onCommit( Map ): void",onCommit( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,2,2
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>.public onConsume( ConsumerRecords ): ConsumerRecords",onConsume( ConsumerRecords ): ConsumerRecords,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,2,2
"<Field>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>->interceptors",final interceptors : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.ConsumerInterceptors<K,V>->log",static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerMetadata,ConsumerMetadata,low-medium,low,low,low-medium,5,24,13,2,0,12,40,35,4,0,6,0,2,0.55,0.687,0,0,0.667,,,,,40,,,,,,12,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.public ConsumerMetadata( long, long, boolean, boolean, SubscriptionState, LogContext, ClusterResourceListeners ): void","ConsumerMetadata( long, long, boolean, boolean, SubscriptionState, LogContext, ClusterResourceListeners ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,7,0,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.public allowAutoTopicCreation( ): boolean,allowAutoTopicCreation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.synchronized addTransientTopics( Set ): void,synchronized addTransientTopics( Set ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,5,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.synchronized clearTransientTopics( ): void,synchronized clearTransientTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.public synchronized newMetadataRequestBuilder( ): Builder,synchronized newMetadataRequestBuilder( ): Builder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,0,5,4
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetadata.protected synchronized retainTopic( String, boolean, long ): boolean","synchronized retainTopic( String, boolean, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,7,3,3,4
<Field>org.apache.kafka.clients.consumer.internals.ConsumerMetadata->allowAutoTopicCreation,final allowAutoTopicCreation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerMetadata->includeInternalTopics,final includeInternalTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerMetadata->subscription,final subscription : SubscriptionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerMetadata->transientTopics,final transientTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerMetrics,ConsumerMetrics,low,low,low,low,2,32,5,1,0,4,14,12,1,0,3,1,0,0,0.333,1,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetrics.public ConsumerMetrics( Set, String ): void","ConsumerMetrics( Set, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetrics.public ConsumerMetrics( String ): void,ConsumerMetrics( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetrics.private getAllTemplates( ): List,getAllTemplates( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerMetrics.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,0
<Field>org.apache.kafka.clients.consumer.internals.ConsumerMetrics->fetcherMetrics,fetcherMetrics : FetcherMetricsRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,ConsumerNetworkClient,medium-high,medium-high,medium-high,high,16,146,80,1,0,68,330,231,13,1,34,0,0,0.847,0.853,0.572,0,0,,,,,330,,,,,,68,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.PollCondition,PollCondition,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.RequestFutureCompletionHandler,RequestFutureCompletionHandler,low,low,low,low,4,26,9,1,0,8,26,22,3,0,4,0,0,0.667,0.5,0.333,0,0,,,,,26,,,,,,8,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.UnsentRequests,UnsentRequests,low,low,low,low,2,30,19,1,0,23,56,54,1,0,11,0,0,0,0.591,0,0,0,,,,,56,,,,,,23,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient. ensureFreshMetadata( Timer ): boolean, ensureFreshMetadata( Timer ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,4,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient. trySend( long ): long, trySend( long ): long,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,1,10,6
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public ConsumerNetworkClient( LogContext, KafkaClient, Metadata, Time, long, int, int ): void","ConsumerNetworkClient( LogContext, KafkaClient, Metadata, Time, long, int, int ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,2,8
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( Timer ): boolean,awaitMetadataUpdate( Timer ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,5,3
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitPendingRequests( Node, Timer ): boolean","awaitPendingRequests( Node, Timer ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,4,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private checkDisconnects( long ): void,checkDisconnects( long ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,1,12,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,3,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public disableWakeups( ): void,disableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public disconnectAsync( Node ): void,disconnectAsync( Node ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private failExpiredRequests( long ): void,failExpiredRequests( long ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private failUnsentRequests( Node, RuntimeException ): void","failUnsentRequests( Node, RuntimeException ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,2,5,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private firePendingCompletedRequests( ): void,firePendingCompletedRequests( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,3,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private handlePendingDisconnects( ): void,handlePendingDisconnects( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,0,6,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public hasPendingRequests( ): boolean,hasPendingRequests( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,4,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public hasPendingRequests( Node ): boolean,hasPendingRequests( Node ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public hasReadyNodes( long ): boolean,hasReadyNodes( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,3,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public isUnavailable( Node ): boolean,isUnavailable( Node ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,5,5
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public leastLoadedNode( ): Node,leastLoadedNode( ): Node,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,4,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public maybeThrowAuthFailure( Node ): void,maybeThrowAuthFailure( Node ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,3,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private maybeThrowInterruptException( ): void,maybeThrowInterruptException( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public maybeTriggerWakeup( ): void,maybeTriggerWakeup( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,4,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pendingRequestCount( ): int,pendingRequestCount( ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,4,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pendingRequestCount( Node ): int,pendingRequestCount( Node ): int,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,5,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( RequestFuture ): void,poll( RequestFuture ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,3,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( RequestFuture, Timer ): boolean","poll( RequestFuture, Timer ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,4,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( Timer ): void,poll( Timer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( Timer, PollCondition ): void","poll( Timer, PollCondition ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( Timer, PollCondition, boolean ): void","poll( Timer, PollCondition, boolean ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,25,3,28,9
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pollNoWakeup( ): void,pollNoWakeup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public send( Node, Builder ): RequestFuture","send( Node, Builder ): RequestFuture",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public send( Node, Builder, int ): RequestFuture","send( Node, Builder, int ): RequestFuture",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,5,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public transmitSends( ): void,transmitSends( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,0,7,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public tryConnect( Node ): void,tryConnect( Node ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,4,4
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->client,final client : KafkaClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->lock,final lock : ReentrantLock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->maxPollTimeoutMs,final maxPollTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->metadata,final metadata : Metadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->pendingCompletion,final pendingCompletion : ConcurrentLinkedQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->pendingDisconnects,final pendingDisconnects : ConcurrentLinkedQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->unsent,final unsent : UnsentRequests,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->wakeup,final wakeup : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->wakeupDisabled,final wakeupDisabled : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->MAX_POLL_TIMEOUT_MS,static final MAX_POLL_TIMEOUT_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerProtocol,ConsumerProtocol,low-medium,low-medium,low-medium,low,7,59,35,1,0,34,169,135,0,19,0,15,0,0.866,0.573,0.733,0,0,,,,,169,,,,,,34,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeAssignment( ByteBuffer ): Assignment,static deserializeAssignment( ByteBuffer ): Assignment,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,4,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeAssignmentV0( ByteBuffer ): Assignment,static deserializeAssignmentV0( ByteBuffer ): Assignment,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,6,5
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeAssignmentV1( ByteBuffer ): Assignment,static deserializeAssignmentV1( ByteBuffer ): Assignment,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeSubscription( ByteBuffer ): Subscription,static deserializeSubscription( ByteBuffer ): Subscription,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,4,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeSubscriptionV0( ByteBuffer ): Subscription,static deserializeSubscriptionV0( ByteBuffer ): Subscription,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,5,3
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeSubscriptionV1( ByteBuffer ): Subscription,static deserializeSubscriptionV1( ByteBuffer ): Subscription,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,8,6
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static deserializeVersion( ByteBuffer ): Short,static deserializeVersion( ByteBuffer ): Short,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeAssignment( Assignment ): ByteBuffer,static serializeAssignment( Assignment ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeAssignment( Assignment, short ): ByteBuffer","static serializeAssignment( Assignment, short ): ByteBuffer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,3,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeAssignmentV0( Assignment ): ByteBuffer,static serializeAssignmentV0( Assignment ): ByteBuffer,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,19,10
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeAssignmentV1( Assignment ): ByteBuffer,static serializeAssignmentV1( Assignment ): ByteBuffer,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,19,10
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeSubscription( Subscription ): ByteBuffer,static serializeSubscription( Subscription ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeSubscription( Subscription, short ): ByteBuffer","static serializeSubscription( Subscription, short ): ByteBuffer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,3,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeSubscriptionV0( Subscription ): ByteBuffer,static serializeSubscriptionV0( Subscription ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,11,7
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.public static serializeSubscriptionV1( Subscription ): ByteBuffer,static serializeSubscriptionV1( Subscription ): ByteBuffer,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,1,22,11
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->ASSIGNMENT_V0,static final ASSIGNMENT_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->ASSIGNMENT_V1,static final ASSIGNMENT_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_HEADER_SCHEMA,static final CONSUMER_PROTOCOL_HEADER_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_HEADER_V0,static final CONSUMER_PROTOCOL_HEADER_V0 : Struct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_HEADER_V1,static final CONSUMER_PROTOCOL_HEADER_V1 : Struct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_LATEST_VERSION,static final CONSUMER_PROTOCOL_LATEST_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_V0,static final CONSUMER_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_V1,static final CONSUMER_PROTOCOL_V1 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->OWNED_PARTITIONS_KEY_NAME,static final OWNED_PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->PROTOCOL_TYPE,static final PROTOCOL_TYPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->SUBSCRIPTION_V0,static final SUBSCRIPTION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->SUBSCRIPTION_V1,static final SUBSCRIPTION_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->TOPIC_ASSIGNMENT_V0,static final TOPIC_ASSIGNMENT_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->TOPIC_KEY_NAME,static final TOPIC_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->TOPIC_PARTITIONS_KEY_NAME,static final TOPIC_PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->USER_DATA_KEY_NAME,static final USER_DATA_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->VERSION_KEY_NAME,static final VERSION_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.Fetcher<K,V>",Fetcher,very-high,very-high,high,very-high,65,499,197,1,0,179,1093,758,28,0,39,1,0,0.905,0.912,0.752,0,0,,,,,1093,,,,,,179,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.CompletedFetch,CompletedFetch,low,low,low,low,14,142,48,1,0,48,151,132,18,0,12,0,0,0.878,0.811,0,0,0,,,,,151,,,,,,48,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchManagerMetrics,FetchManagerMetrics,low,low,low,low,12,92,24,1,0,19,108,98,9,0,7,2,0,0.756,0.694,0,0,0,,,,,108,,,,,,19,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchResponseMetricAggregator,FetchResponseMetricAggregator,low,low,low,low,3,69,11,1,0,5,30,19,4,0,2,0,0,0.5,0.4,0,0,0,,,,,30,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.ListOffsetData,ListOffsetData,low,low,low,low,0,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.ListOffsetResult,ListOffsetResult,low,low,low,low,0,2,0,1,0,2,9,6,2,0,2,0,0,0,0.333,0,0,0,,,,,9,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$12558;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$12558;,low,low,low,low,0,0,0,1,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$36581;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$36581;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$44061;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$44061;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$48846;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$48846;,low,low,low,low,0,0,0,2,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>. selectReadReplica( TopicPartition, Node, long ): Node"," selectReadReplica( TopicPartition, Node, long ): Node",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,3,7,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public Fetcher( LogContext, ConsumerNetworkClient, int, int, int, int, int, boolean, String, Deserializer, Deserializer, ConsumerMetadata, SubscriptionState, Metrics, FetcherMetricsRegistry, Time, long, long, IsolationLevel, ApiVersions ): void","Fetcher( LogContext, ConsumerNetworkClient, int, int, int, int, int, boolean, String, Deserializer, Deserializer, ConsumerMetadata, SubscriptionState, Metrics, FetcherMetricsRegistry, Time, long, long, IsolationLevel, ApiVersions ): void",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,44,20,1,24
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public beginningOffsets( Collection, Timer ): Map","beginningOffsets( Collection, Timer ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private beginningOrEndOffset( Collection, long, Timer ): Map","beginningOrEndOffset( Collection, long, Timer ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,3,12,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public clearBufferedDataForUnassignedPartitions( Collection ): void",clearBufferedDataForUnassignedPartitions( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,1,8,5
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public clearBufferedDataForUnassignedTopics( Collection ): void",clearBufferedDataForUnassignedTopics( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,5,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public close( ): void",close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public endOffsets( Collection, Timer ): Map","endOffsets( Collection, Timer ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private fetchOffsetsByTimes( Map, Timer, boolean ): ListOffsetResult","fetchOffsetsByTimes( Map, Timer, boolean ): ListOffsetResult",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,26,3,17,4
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private fetchRecords( CompletedFetch, int ): List","fetchRecords( CompletedFetch, int ): List",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,32,2,16,14
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private fetchablePartitions( ): List",fetchablePartitions( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,0,3,5
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public fetchedRecords( ): Map",fetchedRecords( ): Map,low-medium,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,7,43,0,22,17
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public getAllTopicMetadata( Timer ): Map",getAllTopicMetadata( Timer ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public getTopicMetadata( Builder, Timer ): Map","getTopicMetadata( Builder, Timer ): Map",low-medium,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,5,38,2,27,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private groupListOffsetRequests( Map, Set ): Map","groupListOffsetRequests( Map, Set ): Map",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,25,2,32,8
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private handleListOffsetResponse( Map, ListOffsetResponse, RequestFuture ): void","handleListOffsetResponse( Map, ListOffsetResponse, RequestFuture ): void",medium-high,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,5,62,3,29,7
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public hasAvailableFetches( ): boolean",hasAvailableFetches( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.protected hasCompletedFetches( ): boolean",hasCompletedFetches( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private hasUsableOffsetForLeaderEpochVersion( NodeApiVersions ): boolean",hasUsableOffsetForLeaderEpochVersion( NodeApiVersions ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private initializeCompletedFetch( CompletedFetch ): CompletedFetch",initializeCompletedFetch( CompletedFetch ): CompletedFetch,very-high,very-high,medium-high,low,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,5,88,1,44,29
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private maybeLeaderEpoch( int ): Optional",maybeLeaderEpoch( int ): Optional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,2,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private offsetResetStrategyTimestamp( TopicPartition ): Long",offsetResetStrategyTimestamp( TopicPartition ): Long,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,1,1,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public offsetsForTimes( Map, Timer ): Map","offsetsForTimes( Map, Timer ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,13,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private parseRecord( TopicPartition, RecordBatch, Record ): ConsumerRecord","parseRecord( TopicPartition, RecordBatch, Record ): ConsumerRecord",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,23,3,18,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private prepareFetchRequests( ): Map",prepareFetchRequests( ): Map,low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,33,0,27,14
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private regroupFetchPositionsByLeader( Map ): Map",regroupFetchPositionsByLeader( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,5,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private regroupPartitionMapByNode( Map ): Map",regroupPartitionMapByNode( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private resetOffsetIfNeeded( TopicPartition, OffsetResetStrategy, ListOffsetData ): void","resetOffsetIfNeeded( TopicPartition, OffsetResetStrategy, ListOffsetData ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,3,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private resetOffsetsAsync( Map ): void",resetOffsetsAsync( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,26,1,9,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public resetOffsetsIfNeeded( ): void",resetOffsetsIfNeeded( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,0,7,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private sendListOffsetRequest( Node, Map, boolean ): RequestFuture","sendListOffsetRequest( Node, Map, boolean ): RequestFuture",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,15,3,5,3
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private sendListOffsetsRequests( Map, boolean ): RequestFuture","sendListOffsetsRequests( Map, boolean ): RequestFuture",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,5,29,2,9,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private sendMetadataRequest( Builder ): RequestFuture",sendMetadataRequest( Builder ): RequestFuture,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,3,2
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.protected sessionHandler( int ): FetchSessionHandler",sessionHandler( int ): FetchSessionHandler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public static throttleTimeSensor( Metrics, FetcherMetricsRegistry ): Sensor","static throttleTimeSensor( Metrics, FetcherMetricsRegistry ): Sensor",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,5,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public synchronized sendFetches( ): int",synchronized sendFetches( ): int,low,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,8,70,0,23,12
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private timestampToOffsetResetStrategy( long ): OffsetResetStrategy",timestampToOffsetResetStrategy( long ): OffsetResetStrategy,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private topicsForPartitions( Collection ): Set",topicsForPartitions( Collection ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private validateOffsetsAsync( Map ): void",validateOffsetsAsync( Map ): void,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,45,1,2,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.public validateOffsetsIfNeeded( ): void",validateOffsetsIfNeeded( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,10,5
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->apiVersions",final apiVersions : ApiVersions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->cachedListOffsetsException",final cachedListOffsetsException : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->cachedOffsetForLeaderException",final cachedOffsetForLeaderException : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->checkCrcs",final checkCrcs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->client",final client : ConsumerNetworkClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->clientRackId",final clientRackId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->completedFetches",final completedFetches : ConcurrentLinkedQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->decompressionBufferSupplier",final decompressionBufferSupplier : BufferSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->fetchSize",final fetchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->isolationLevel",final isolationLevel : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->keyDeserializer",final keyDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->log",final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->logContext",final logContext : LogContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxBytes",final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxPollRecords",final maxPollRecords : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxWaitMs",final maxWaitMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->metadata",final metadata : ConsumerMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->minBytes",final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->nodesWithPendingFetchRequests",final nodesWithPendingFetchRequests : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->offsetsForLeaderEpochClient",final offsetsForLeaderEpochClient : OffsetsForLeaderEpochClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->requestTimeoutMs",final requestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->sensors",final sensors : FetchManagerMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->sessionHandlers",final sessionHandlers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->subscriptions",final subscriptions : SubscriptionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->valueDeserializer",final valueDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->nextInLineFetch",nextInLineFetch : CompletedFetch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry,FetcherMetricsRegistry,low,low,low-medium,low,1,6,2,1,0,4,131,101,29,0,4,0,0,0,0.417,0.833,0,0,,,,,131,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry.public FetcherMetricsRegistry( ): void,FetcherMetricsRegistry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry.public FetcherMetricsRegistry( Set, String ): void","FetcherMetricsRegistry( Set, String ): void",low,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,65,2,2,29
<Method>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry.public FetcherMetricsRegistry( String ): void,FetcherMetricsRegistry( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry.public getAllTemplates( ): List,getAllTemplates( ): List,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,32,0,1,29
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->bytesConsumedRate,bytesConsumedRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->bytesConsumedTotal,bytesConsumedTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchLatencyAvg,fetchLatencyAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchLatencyMax,fetchLatencyMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchRequestRate,fetchRequestRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchRequestTotal,fetchRequestTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchSizeAvg,fetchSizeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchSizeMax,fetchSizeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchThrottleTimeAvg,fetchThrottleTimeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->fetchThrottleTimeMax,fetchThrottleTimeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionPreferredReadReplica,partitionPreferredReadReplica : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLag,partitionRecordsLag : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLagAvg,partitionRecordsLagAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLagMax,partitionRecordsLagMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLead,partitionRecordsLead : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLeadAvg,partitionRecordsLeadAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->partitionRecordsLeadMin,partitionRecordsLeadMin : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->recordsConsumedRate,recordsConsumedRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->recordsConsumedTotal,recordsConsumedTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->recordsLagMax,recordsLagMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->recordsLeadMin,recordsLeadMin : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->recordsPerRequestAvg,recordsPerRequestAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicBytesConsumedRate,topicBytesConsumedRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicBytesConsumedTotal,topicBytesConsumedTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicFetchSizeAvg,topicFetchSizeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicFetchSizeMax,topicFetchSizeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicRecordsConsumedRate,topicRecordsConsumedRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicRecordsConsumedTotal,topicRecordsConsumedTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.FetcherMetricsRegistry->topicRecordsPerRequestAvg,topicRecordsPerRequestAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.Heartbeat,Heartbeat,low,low,low-medium,low,3,22,8,1,0,15,59,51,7,0,14,0,0,0.692,0.589,0.513,0,0,,,,,59,,,,,,15,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public Heartbeat( GroupRebalanceConfig, Time ): void","Heartbeat( GroupRebalanceConfig, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,2,3,7
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public failHeartbeat( ): void,failHeartbeat( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public lastHeartbeatSend( ): long,lastHeartbeatSend( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public lastPollTime( ): long,lastPollTime( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public poll( long ): void,poll( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public pollTimeoutExpired( long ): boolean,pollTimeoutExpired( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public receiveHeartbeat( ): void,receiveHeartbeat( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public resetSessionTimeout( ): void,resetSessionTimeout( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public resetTimeouts( ): void,resetTimeouts( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,7
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sentHeartbeat( long ): void,sentHeartbeat( long ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sessionTimeoutExpired( long ): boolean,sessionTimeoutExpired( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public shouldHeartbeat( long ): boolean,shouldHeartbeat( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public timeToNextHeartbeat( long ): long,timeToNextHeartbeat( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.private update( long ): void,update( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,3
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->heartbeatTimer,final heartbeatTimer : Timer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->maxPollIntervalMs,final maxPollIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->pollTimer,final pollTimer : Timer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->rebalanceConfig,final rebalanceConfig : GroupRebalanceConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->sessionTimer,final sessionTimer : Timer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatSend,volatile lastHeartbeatSend : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics,KafkaConsumerMetrics,low-medium,low-medium,low,low,6,63,8,1,0,6,48,40,7,0,4,0,0,0.619,0.5,0,0,0,,,,,48,,,,,,6,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics.public KafkaConsumerMetrics( Metrics, String ): void","KafkaConsumerMetrics( Metrics, String ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,26,2,10,8
<Method>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,6
<Method>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics.public recordPollEnd( long ): void,recordPollEnd( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics.public recordPollStart( long ): void,recordPollStart( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,7
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->lastPollMetricName,final lastPollMetricName : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->pollIdleSensor,final pollIdleSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->timeBetweenPollSensor,final timeBetweenPollSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->lastPollMs,lastPollMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->pollStartMs,pollStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.KafkaConsumerMetrics->timeSinceLastPollMs,timeSinceLastPollMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException,NoAvailableBrokersException,medium-high,low,low,low,0,0,0,8,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener,NoOpConsumerRebalanceListener,low,low,low,low,0,2,0,1,0,2,5,4,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener.public onPartitionsAssigned( Collection ): void,onPartitionsAssigned( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener.public onPartitionsRevoked( Collection ): void,onPartitionsRevoked( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.clients.consumer.internals.OffsetsForLeaderEpochClient,OffsetsForLeaderEpochClient,low-medium,medium-high,low-medium,low,11,25,19,2,0,16,69,54,0,0,3,0,0,0,0.444,0,0,0,,,,,69,,,,,,16,,,,,,,
org.apache.kafka.clients.consumer.internals.OffsetsForLeaderEpochClient.OffsetForEpochResult,OffsetForEpochResult,low,low,low,low,0,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.444,1,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.OffsetsForLeaderEpochClient. OffsetsForLeaderEpochClient( ConsumerNetworkClient, LogContext ): void"," OffsetsForLeaderEpochClient( ConsumerNetworkClient, LogContext ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.clients.consumer.internals.OffsetsForLeaderEpochClient.protected handleResponse( Node, Map, OffsetsForLeaderEpochResponse ): OffsetForEpochResult","handleResponse( Node, Map, OffsetsForLeaderEpochResponse ): OffsetForEpochResult",low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,44,3,28,0
"<Method>org.apache.kafka.clients.consumer.internals.OffsetsForLeaderEpochClient.protected prepareRequest( Node, Map ): Builder","prepareRequest( Node, Map ): Builder",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,3,0
org.apache.kafka.clients.consumer.internals.PartitionAssignor,PartitionAssignor,low,low,low,low-medium,1,5,1,1,0,5,42,5,0,0,5,0,0,0,0.633,0,0,0,,,,,42,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Assignment,Assignment,low,low,low,low,0,6,1,1,0,5,17,14,2,0,5,0,0,0.5,0.467,0.6,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Subscription,Subscription,low,low,low,low,0,6,1,1,0,5,17,14,2,0,5,0,0,0.5,0.467,0.6,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract assign( Cluster, Map ): Map","assign( Cluster, Map ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract onAssignment( Assignment ): void,onAssignment( Assignment ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public onAssignment( Assignment, int ): void","onAssignment( Assignment, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,1,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract subscription( Set ): Subscription,subscription( Set ): Subscription,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter,PartitionAssignorAdapter,low,medium-high,low-medium,medium-high,13,41,28,1,0,19,61,57,1,1,5,4,0,0.6,0.753,0.4,0,0,,,,,61,,,,,,19,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter. PartitionAssignorAdapter( PartitionAssignor ): void, PartitionAssignorAdapter( PartitionAssignor ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.public assign( Cluster, GroupSubscription ): GroupAssignment","assign( Cluster, GroupSubscription ): GroupAssignment",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,1
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.public name( ): String,name( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.public onAssignment( Assignment, ConsumerGroupMetadata ): void","onAssignment( Assignment, ConsumerGroupMetadata ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,1
"<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.public static getAssignorInstances( List, Map ): List","static getAssignorInstances( List, Map ): List",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,26,2,11,1
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.private static toNewGroupAssignment( Map ): GroupAssignment,static toNewGroupAssignment( Map ): GroupAssignment,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,6,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.private static toOldAssignment( Assignment ): Assignment,static toOldAssignment( Assignment ): Assignment,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.private static toOldGroupSubscription( GroupSubscription ): Map,static toOldGroupSubscription( GroupSubscription ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,7,0
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter.public subscriptionUserData( Set ): ByteBuffer,subscriptionUserData( Set ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Field>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter->oldAssignor,final oldAssignor : PartitionAssignor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.PartitionAssignorAdapter->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.RequestFuture<T>,RequestFuture,low-medium,low,low-medium,high,4,29,20,1,0,32,99,94,3,1,16,4,0,0.694,0.839,0.889,0,0,,,,,99,,,,,,32,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7687;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$7687;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$8110;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$8110;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public addListener( RequestFutureListener ): void,addListener( RequestFutureListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,1
"<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public awaitDone( long, TimeUnit ): boolean","awaitDone( long, TimeUnit ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public chain( RequestFuture ): void,chain( RequestFuture ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public complete( T ): void,complete( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,3,3
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public compose( RequestFutureAdapter ): RequestFuture,compose( RequestFutureAdapter ): RequestFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public exception( ): RuntimeException,exception( ): RuntimeException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public failed( ): boolean,failed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireFailure( ): void,fireFailure( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,3,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireSuccess( ): void,fireSuccess( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,3,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isRetriable( ): boolean,isRetriable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public raise( Errors ): void,raise( Errors ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public raise( RuntimeException ): void,raise( RuntimeException ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,3,3
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public shouldBlock( ): boolean,shouldBlock( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static coordinatorNotAvailable( ): RequestFuture,static coordinatorNotAvailable( ): RequestFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static failure( RuntimeException ): RequestFuture,static failure( RuntimeException ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static noBrokersAvailable( ): RequestFuture,static noBrokersAvailable( ): RequestFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static voidSuccess( ): RequestFuture,static voidSuccess( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public succeeded( ): boolean,succeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public value( ): T,value( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,1
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->completedLatch,final completedLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->listeners,final listeners : ConcurrentLinkedQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->result,final result : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->INCOMPLETE_SENTINEL,static final INCOMPLETE_SENTINEL : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>",RequestFutureAdapter,low,low,low,low,1,11,1,1,4,2,4,3,0,0,2,0,0,0,0.25,0,0,0,,,,,4,,,,,,2,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>.public abstract onSuccess( F, RequestFuture ): void","abstract onSuccess( F, RequestFuture ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
"<Method>org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>.public onFailure( RuntimeException, RequestFuture ): void","onFailure( RuntimeException, RequestFuture ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>,RequestFutureListener,low,low,low,low,0,2,0,1,9,2,3,2,0,0,2,0,0,0,0.333,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>.public abstract onFailure( RuntimeException ): void,onFailure( RuntimeException ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>.public abstract onSuccess( T ): void,onSuccess( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.SubscriptionState,SubscriptionState,high,medium-high,very-high,high,11,170,76,1,0,117,537,319,9,1,72,0,0,0.847,0.892,0.912,1,0,,,,,537,,,,,,117,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition,FetchPosition,low,low,low,low,2,14,7,1,0,8,28,24,3,0,5,0,0,0,0.6,0,0,0,,,,,28,,,,,,8,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchState,FetchState,low,low,low,low,0,5,2,1,1,4,9,4,0,0,4,0,0,0,0.375,0,0,0,,,,,9,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchStates,FetchStates,low,low,low,low,0,0,0,2,0,0,44,0,0,4,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.SubscriptionType,SubscriptionType,low,low,low,low,0,0,0,2,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState,TopicPartitionState,low,low,low,low,5,45,16,1,0,43,123,112,10,0,28,0,0,0.882,0.839,0,0,0,,,,,123,,,,,,43,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState. hasDefaultOffsetResetPolicy( ): boolean, hasDefaultOffsetResetPolicy( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public SubscriptionState( LogContext, OffsetResetStrategy ): void","SubscriptionState( LogContext, OffsetResetStrategy ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,2,7
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private assignedState( TopicPartition ): TopicPartitionState,assignedState( TopicPartition ): TopicPartitionState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private assignedStateOrNull( TopicPartition ): TopicPartitionState,assignedStateOrNull( TopicPartition ): TopicPartitionState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private changeSubscription( Set ): boolean,changeSubscription( Set ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,2,7
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private collectPartitions( Predicate, Collector ): T","collectPartitions( Predicate, Collector ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private registerRebalanceListener( ConsumerRebalanceListener ): void,registerRebalanceListener( ConsumerRebalanceListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public requestOffsetReset( TopicPartition ): void,requestOffsetReset( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public seek( TopicPartition, long ): void","seek( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public seekUnvalidated( TopicPartition, FetchPosition ): void","seekUnvalidated( TopicPartition, FetchPosition ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.private setSubscriptionType( SubscriptionType ): void,setSubscriptionType( SubscriptionType ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,0,4
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized allConsumed( ): Map,synchronized allConsumed( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized assignFromSubscribed( Collection ): void,synchronized assignFromSubscribed( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,5,3
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized assignFromUser( Set ): boolean,synchronized assignFromUser( Set ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,1,9,4
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized assignedPartitions( ): Set,synchronized assignedPartitions( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized assignedPartitionsList( ): List,synchronized assignedPartitionsList( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized assignmentId( ): int,synchronized assignmentId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized awaitingValidation( TopicPartition ): boolean,synchronized awaitingValidation( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized checkAssignmentMatchedSubscription( Collection ): boolean,synchronized checkAssignmentMatchedSubscription( Collection ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,1,7,7
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized clearPreferredReadReplica( TopicPartition ): Optional,synchronized clearPreferredReadReplica( TopicPartition ): Optional,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized completeValidation( TopicPartition ): void,synchronized completeValidation( TopicPartition ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized fetchablePartitions( Predicate ): List,synchronized fetchablePartitions( Predicate ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized groupSubscribe( Collection ): boolean,synchronized groupSubscribe( Collection ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,4
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized groupSubscription( ): Set,synchronized groupSubscription( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized hasAllFetchPositions( ): boolean,synchronized hasAllFetchPositions( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized hasNoSubscriptionOrUserAssignment( ): boolean,synchronized hasNoSubscriptionOrUserAssignment( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized hasPatternSubscription( ): boolean,synchronized hasPatternSubscription( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized hasValidPosition( TopicPartition ): boolean,synchronized hasValidPosition( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized isAssigned( TopicPartition ): boolean,synchronized isAssigned( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized isFetchable( TopicPartition ): boolean,synchronized isFetchable( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized isGroupSubscribed( String ): boolean,synchronized isGroupSubscribed( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized isOffsetResetNeeded( TopicPartition ): boolean,synchronized isOffsetResetNeeded( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized isPaused( TopicPartition ): boolean,synchronized isPaused( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized matchesSubscribedPattern( String ): boolean,synchronized matchesSubscribedPattern( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,3,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized maybeCompleteValidation( TopicPartition, FetchPosition, EpochEndOffset ): Optional","synchronized maybeCompleteValidation( TopicPartition, FetchPosition, EpochEndOffset ): Optional",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,31,3,20,5
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized maybeSeekUnvalidated( TopicPartition, long, OffsetResetStrategy ): void","synchronized maybeSeekUnvalidated( TopicPartition, long, OffsetResetStrategy ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,3,7,4
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized maybeValidatePositionForCurrentLeader( TopicPartition, LeaderAndEpoch ): boolean","synchronized maybeValidatePositionForCurrentLeader( TopicPartition, LeaderAndEpoch ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized missingFetchPositions( ): Set,synchronized missingFetchPositions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized movePartitionToEnd( TopicPartition ): void,synchronized movePartitionToEnd( TopicPartition ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized numAssignedPartitions( ): int,synchronized numAssignedPartitions( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized partitionLag( TopicPartition, IsolationLevel ): Long","synchronized partitionLag( TopicPartition, IsolationLevel ): Long",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,2,1,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized partitionLead( TopicPartition ): Long,synchronized partitionLead( TopicPartition ): Long,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized partitionsAutoAssigned( ): boolean,synchronized partitionsAutoAssigned( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized partitionsNeedingReset( long ): Set,synchronized partitionsNeedingReset( long ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized partitionsNeedingValidation( long ): Set,synchronized partitionsNeedingValidation( long ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized pause( TopicPartition ): void,synchronized pause( TopicPartition ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized pausedPartitions( ): Set,synchronized pausedPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized position( TopicPartition ): FetchPosition,synchronized position( TopicPartition ): FetchPosition,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized position( TopicPartition, FetchPosition ): void","synchronized position( TopicPartition, FetchPosition ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized preferredReadReplica( TopicPartition, long ): Optional","synchronized preferredReadReplica( TopicPartition, long ): Optional",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized prettyString( ): String,synchronized prettyString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,0,2,5
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized rebalanceListener( ): ConsumerRebalanceListener,synchronized rebalanceListener( ): ConsumerRebalanceListener,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized requestFailed( Set, long ): void","synchronized requestFailed( Set, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized requestOffsetReset( Collection, OffsetResetStrategy ): void","synchronized requestOffsetReset( Collection, OffsetResetStrategy ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,2,1,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized requestOffsetReset( TopicPartition, OffsetResetStrategy ): void","synchronized requestOffsetReset( TopicPartition, OffsetResetStrategy ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized resetGroupSubscription( ): void,synchronized resetGroupSubscription( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized resetMissingPositions( ): void,synchronized resetMissingPositions( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,0,3,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized resetStrategy( TopicPartition ): OffsetResetStrategy,synchronized resetStrategy( TopicPartition ): OffsetResetStrategy,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized resume( TopicPartition ): void,synchronized resume( TopicPartition ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized seekValidated( TopicPartition, FetchPosition ): void","synchronized seekValidated( TopicPartition, FetchPosition ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized setNextAllowedRetry( Set, long ): void","synchronized setNextAllowedRetry( Set, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized subscribe( Pattern, ConsumerRebalanceListener ): void","synchronized subscribe( Pattern, ConsumerRebalanceListener ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized subscribe( Set, ConsumerRebalanceListener ): boolean","synchronized subscribe( Set, ConsumerRebalanceListener ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized subscribeFromPattern( Set ): boolean,synchronized subscribeFromPattern( Set ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,2
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized subscription( ): Set,synchronized subscription( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized toString( ): String,synchronized toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,3,7
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized unsubscribe( ): void,synchronized unsubscribe( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,3,6
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized updateHighWatermark( TopicPartition, long ): void","synchronized updateHighWatermark( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized updateLastStableOffset( TopicPartition, long ): void","synchronized updateLastStableOffset( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.synchronized updateLogStartOffset( TopicPartition, long ): void","synchronized updateLogStartOffset( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized updatePreferredReadReplica( TopicPartition, int, Supplier ): void","synchronized updatePreferredReadReplica( TopicPartition, int, Supplier ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public synchronized validPosition( TopicPartition ): FetchPosition,synchronized validPosition( TopicPartition ): FetchPosition,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->assignmentId,assignmentId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->assignment,final assignment : PartitionStates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->defaultResetStrategy,final defaultResetStrategy : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->groupSubscription,groupSubscription : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->rebalanceListener,rebalanceListener : ConsumerRebalanceListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->SUBSCRIPTION_EXCEPTION_MESSAGE,static final SUBSCRIPTION_EXCEPTION_MESSAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->subscribedPattern,subscribedPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->subscription,subscription : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->subscriptionType,subscriptionType : SubscriptionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer,org.apache.kafka.clients.producer,low-medium,low-medium,medium-high,low,,,,,,294,1296,,,,,,,,,,,,,16,12,4,1296,38,10,0.25,0.208,0.542,294,,,,,,,
org.apache.kafka.clients.producer.BufferExhaustedException,BufferExhaustedException,medium-high,low,low,low,0,1,0,5,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.BufferExhaustedException.public BufferExhaustedException( String ): void,BufferExhaustedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.clients.producer.BufferExhaustedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Callback,Callback,low,low,low,low,1,1,0,1,10,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.clients.producer.Callback.public abstract onCompletion( RecordMetadata, Exception ): void","onCompletion( RecordMetadata, Exception ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.clients.producer.KafkaProducer<K,V>",KafkaProducer,very-high,very-high,medium-high,high,49,465,139,1,0,114,536,474,20,3,28,7,0,0.848,0.897,0.858,3,0,,,,,536,,,,,,114,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.ClusterAndWaitTime,ClusterAndWaitTime,low,low,low,low,1,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.FutureFailure,FutureFailure,low,low,low,low,1,6,0,1,0,6,19,17,1,0,6,0,0,0,0.667,0.8,0,0,,,,,19,,,,,,6,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer.InterceptorCallback<K,V>",InterceptorCallback,low,low,low,low,4,7,3,1,0,4,13,9,3,0,2,0,0,0,0.417,0,0,0,,,,,13,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>. KafkaProducer( Map, Serializer, Serializer, ProducerMetadata, KafkaClient, ProducerInterceptors, Time ): void"," KafkaProducer( Map, Serializer, Serializer, ProducerMetadata, KafkaClient, ProducerInterceptors, Time ): void",low,very-high,high,low,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,102,7,58,54
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>. getClientId( ): String", getClientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>. newSender( LogContext, KafkaClient, ProducerMetadata ): Sender"," newSender( LogContext, KafkaClient, ProducerMetadata ): Sender",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,39,3,15,26
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public KafkaProducer( Map ): void",KafkaProducer( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public KafkaProducer( Map, Serializer, Serializer ): void","KafkaProducer( Map, Serializer, Serializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public KafkaProducer( Properties ): void",KafkaProducer( Properties ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public KafkaProducer( Properties, Serializer, Serializer ): void","KafkaProducer( Properties, Serializer, Serializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,3
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public close( Duration ): void",close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private close( Duration, boolean ): void","close( Duration, boolean ): void",low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,5,42,2,21,23
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,3
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private configureClusterResourceListeners( Serializer, Serializer, List ): ClusterResourceListeners","configureClusterResourceListeners( Serializer, Serializer, List ): ClusterResourceListeners",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,3,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private doSend( ProducerRecord, Callback ): Future","doSend( ProducerRecord, Callback ): Future",high,very-high,medium-high,low,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,4,83,2,68,38
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private ensureValidRecordSize( int ): void",ensureValidRecordSize( int ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public flush( ): void",flush( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,4,4
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public initTransactions( ): void",initTransactions( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,3
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public metrics( ): Map",metrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private partition( ProducerRecord, byte, byte, Cluster ): int","partition( ProducerRecord, byte, byte, Cluster ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,4,5,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public partitionsFor( String ): List",partitionsFor( String ): List,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public send( ProducerRecord ): Future",send( ProducerRecord ): Future,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public send( ProducerRecord, Callback ): Future","send( ProducerRecord, Callback ): Future",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public sendOffsetsToTransaction( Map, String ): void","sendOffsetsToTransaction( Map, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,5,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private setReadOnly( Headers ): void",setReadOnly( Headers ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static configureAcks( ProducerConfig, Logger ): short","static configureAcks( ProducerConfig, Logger ): short",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,2,6,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static configureDeliveryTimeout( ProducerConfig, Logger ): int","static configureDeliveryTimeout( ProducerConfig, Logger ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,2,7,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static configureInflightRequests( ProducerConfig ): int",static configureInflightRequests( ProducerConfig ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,3,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static configureRetries( ProducerConfig, Logger ): int","static configureRetries( ProducerConfig, Logger ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,5,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static configureTransactionState( ProducerConfig, LogContext, Logger ): TransactionManager","static configureTransactionState( ProducerConfig, LogContext, Logger ): TransactionManager",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,17,3,12,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static lingerMs( ProducerConfig ): int",static lingerMs( ProducerConfig ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private static propsToMap( Properties ): Map",static propsToMap( Properties ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,9,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private throwIfNoTransactionManager( ): void",throwIfNoTransactionManager( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,1
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private throwIfProducerClosed( ): void",throwIfProducerClosed( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private waitOnMetadata( String, Integer, long, long ): ClusterAndWaitTime","waitOnMetadata( String, Integer, long, long ): ClusterAndWaitTime",low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,37,4,18,11
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->accumulator",final accumulator : RecordAccumulator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->apiVersions",final apiVersions : ApiVersions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->clientId",final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->compressionType",final compressionType : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->errors",final errors : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->interceptors",final interceptors : ProducerInterceptors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->ioThread",final ioThread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->keySerializer",final keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->log",final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxBlockTimeMs",final maxBlockTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxRequestSize",final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->metadata",final metadata : ProducerMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->metrics",final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->partitioner",final partitioner : Partitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->producerConfig",final producerConfig : ProducerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->sender",final sender : Sender,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->totalMemorySize",final totalMemorySize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->transactionManager",final transactionManager : TransactionManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->JMX_PREFIX",static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->NETWORK_THREAD_PREFIX",static final NETWORK_THREAD_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->PRODUCER_METRIC_GROUP_NAME",static final PRODUCER_METRIC_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.MockProducer<K,V>",MockProducer,medium-high,medium-high,medium-high,high,16,73,38,1,1,57,255,212,21,0,37,0,0,0.911,0.886,0.863,0,0,,,,,255,,,,,,57,,,,,,,
org.apache.kafka.clients.producer.MockProducer.Completion,Completion,low,low,low,low,4,6,3,1,0,5,21,16,4,0,2,0,0,0,0.417,0,0,0,,,,,21,,,,,,5,,,,,,,
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public MockProducer( ): void",MockProducer( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public MockProducer( Cluster, boolean, Partitioner, Serializer, Serializer ): void","MockProducer( Cluster, boolean, Partitioner, Serializer, Serializer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,0,12
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public MockProducer( boolean, Partitioner, Serializer, Serializer ): void","MockProducer( boolean, Partitioner, Serializer, Serializer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public MockProducer( boolean, Serializer, Serializer ): void","MockProducer( boolean, Serializer, Serializer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,6,5
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,2,4
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public close( Duration ): void",close( Duration ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,2
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public closed( ): boolean",closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public commitCount( ): long",commitCount( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,0,8,11
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public fenceProducerOnClose( ): void",fenceProducerOnClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public flushed( ): boolean",flushed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public initTransactions( ): void",initTransactions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,2
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public metrics( ): Map",metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private nextOffset( TopicPartition ): long",nextOffset( TopicPartition ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,3,3
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private partition( ProducerRecord, Cluster ): int","partition( ProducerRecord, Cluster ): int",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,2,13,3
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public partitionsFor( String ): List",partitionsFor( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public sendOffsetsToTransaction( Map, String ): void","sendOffsetsToTransaction( Map, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,2,8,3
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public sentOffsets( ): boolean",sentOffsets( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public setMockMetrics( MetricName, Metric ): void","setMockMetrics( MetricName, Metric ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,5,10
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized completeNext( ): boolean",synchronized completeNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized consumerGroupOffsetsHistory( ): List",synchronized consumerGroupOffsetsHistory( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized errorNext( RuntimeException ): boolean",synchronized errorNext( RuntimeException ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized fenceProducer( ): void",synchronized fenceProducer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,3,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized history( ): List",synchronized history( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized send( ProducerRecord ): Future",synchronized send( ProducerRecord ): Future,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized send( ProducerRecord, Callback ): Future","synchronized send( ProducerRecord, Callback ): Future",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,25,2,11,9
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private synchronized verifyProducerState( ): void",synchronized verifyProducerState( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,2
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionAborted( ): boolean",transactionAborted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionCommitted( ): boolean",transactionCommitted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionInFlight( ): boolean",transactionInFlight( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public transactionInitialized( ): boolean",transactionInitialized( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private verifyNoTransactionInFlight( ): void",verifyNoTransactionInFlight( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.private verifyTransactionsInitialized( ): void",verifyTransactionsInitialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->autoComplete",autoComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->commitCount",commitCount : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->cluster",final cluster : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->completions",final completions : Deque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->consumerGroupOffsets",final consumerGroupOffsets : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->keySerializer",final keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->offsets",final offsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->partitioner",final partitioner : Partitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->sent",final sent : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->uncommittedSends",final uncommittedSends : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->mockMetrics",mockMetrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->producerFenced",producerFenced : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->producerFencedOnClose",producerFencedOnClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->sentOffsets",sentOffsets : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionAborted",transactionAborted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionCommitted",transactionCommitted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionInFlight",transactionInFlight : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->transactionInitialized",transactionInitialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->uncommittedConsumerGroupOffsets",uncommittedConsumerGroupOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Partitioner,Partitioner,low,low,low,low,1,3,0,1,3,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.producer.Partitioner.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Partitioner.public onNewBatch( String, Cluster, int ): void","onNewBatch( String, Cluster, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.clients.producer.Partitioner.public abstract partition( String, Object, byte, Object, byte, Cluster ): int","partition( String, Object, byte, Object, byte, Cluster ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,6,0,0
"org.apache.kafka.clients.producer.Producer<K,V>",Producer,low,low,low,medium-high,2,15,3,1,2,13,17,13,0,0,13,0,0,0,0.788,0,0,0,,,,,17,,,,,,13,,,,,,,
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract abortTransaction( ): void",abortTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract beginTransaction( ): void",beginTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract close( Duration ): void",close( Duration ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public close( long, TimeUnit ): void","close( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,3,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract commitTransaction( ): void",commitTransaction( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract initTransactions( ): void",initTransactions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract metrics( ): Map",metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract partitionsFor( String ): List",partitionsFor( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract send( ProducerRecord ): Future",send( ProducerRecord ): Future,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract send( ProducerRecord, Callback ): Future","send( ProducerRecord, Callback ): Future",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract sendOffsetsToTransaction( Map, String ): void","sendOffsetsToTransaction( Map, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.clients.producer.ProducerConfig,ProducerConfig,low-medium,medium-high,medium-high,low-medium,4,68,23,2,0,32,332,77,0,55,8,6,1,1.06,0.667,0.476,0,0.25,,,,,332,,,,,,32,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerConfig. ProducerConfig( Map, boolean ): void"," ProducerConfig( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.clients.producer.ProducerConfig. idempotenceEnabled( ): boolean, idempotenceEnabled( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,0,5,4
<Method>org.apache.kafka.clients.producer.ProducerConfig.public ProducerConfig( Map ): void,ProducerConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.ProducerConfig.public ProducerConfig( Properties ): void,ProducerConfig( Properties ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.ProducerConfig.private maybeOverrideAcksAndRetries( Map ): void,maybeOverrideAcksAndRetries( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,14,1,13,10
<Method>org.apache.kafka.clients.producer.ProducerConfig.private maybeOverrideClientId( Map ): void,maybeOverrideClientId( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,6,5
<Method>org.apache.kafka.clients.producer.ProducerConfig.private maybeOverrideEnableIdempotence( Map ): void,maybeOverrideEnableIdempotence( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,5,3
<Method>org.apache.kafka.clients.producer.ProducerConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,4,0
"<Method>org.apache.kafka.clients.producer.ProducerConfig.public static addSerializerToConfig( Map, Serializer, Serializer ): Map","static addSerializerToConfig( Map, Serializer, Serializer ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,3,2,2
"<Method>org.apache.kafka.clients.producer.ProducerConfig.public static addSerializerToConfig( Properties, Serializer, Serializer ): Properties","static addSerializerToConfig( Properties, Serializer, Serializer ): Properties",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,3,5,2
<Method>org.apache.kafka.clients.producer.ProducerConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.ProducerConfig.public static configNames( ): Set,static configNames( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.ProducerConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.clients.producer.ProducerConfig.private static parseAcks( String ): String,static parseAcks( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,4,0
<Field>org.apache.kafka.clients.producer.ProducerConfig->ACKS_CONFIG,static final ACKS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->ACKS_DOC,static final ACKS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->BATCH_SIZE_CONFIG,static final BATCH_SIZE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->BATCH_SIZE_DOC,static final BATCH_SIZE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->BUFFER_MEMORY_CONFIG,static final BUFFER_MEMORY_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->BUFFER_MEMORY_DOC,static final BUFFER_MEMORY_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->CLIENT_DNS_LOOKUP_CONFIG,static final CLIENT_DNS_LOOKUP_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->COMPRESSION_TYPE_CONFIG,static final COMPRESSION_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->COMPRESSION_TYPE_DOC,static final COMPRESSION_TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->CONNECTIONS_MAX_IDLE_MS_CONFIG,static final CONNECTIONS_MAX_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->DELIVERY_TIMEOUT_MS_CONFIG,static final DELIVERY_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->DELIVERY_TIMEOUT_MS_DOC,static final DELIVERY_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->ENABLE_IDEMPOTENCE_CONFIG,static final ENABLE_IDEMPOTENCE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->ENABLE_IDEMPOTENCE_DOC,static final ENABLE_IDEMPOTENCE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->INTERCEPTOR_CLASSES_CONFIG,static final INTERCEPTOR_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->INTERCEPTOR_CLASSES_DOC,static final INTERCEPTOR_CLASSES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->KEY_SERIALIZER_CLASS_CONFIG,static final KEY_SERIALIZER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->KEY_SERIALIZER_CLASS_DOC,static final KEY_SERIALIZER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->LINGER_MS_CONFIG,static final LINGER_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->LINGER_MS_DOC,static final LINGER_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_BLOCK_MS_CONFIG,static final MAX_BLOCK_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_BLOCK_MS_DOC,static final MAX_BLOCK_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION,static final MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION_DOC,static final MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_REQUEST_SIZE_CONFIG,static final MAX_REQUEST_SIZE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->MAX_REQUEST_SIZE_DOC,static final MAX_REQUEST_SIZE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METADATA_MAX_AGE_CONFIG,static final METADATA_MAX_AGE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METADATA_MAX_AGE_DOC,static final METADATA_MAX_AGE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->PARTITIONER_CLASS_CONFIG,static final PARTITIONER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->PARTITIONER_CLASS_DOC,static final PARTITIONER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->PRODUCER_CLIENT_ID_SEQUENCE,static final PRODUCER_CLIENT_ID_SEQUENCE : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RECEIVE_BUFFER_CONFIG,static final RECEIVE_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RECONNECT_BACKOFF_MAX_MS_CONFIG,static final RECONNECT_BACKOFF_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RECONNECT_BACKOFF_MS_CONFIG,static final RECONNECT_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->REQUEST_TIMEOUT_MS_CONFIG,static final REQUEST_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->REQUEST_TIMEOUT_MS_DOC,static final REQUEST_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RETRIES_CONFIG,static final RETRIES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RETRIES_DOC,static final RETRIES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->RETRY_BACKOFF_MS_CONFIG,static final RETRY_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->SECURITY_PROVIDERS_CONFIG,static final SECURITY_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->SECURITY_PROVIDERS_DOC,static final SECURITY_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->SEND_BUFFER_CONFIG,static final SEND_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->TRANSACTIONAL_ID_CONFIG,static final TRANSACTIONAL_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->TRANSACTIONAL_ID_DOC,static final TRANSACTIONAL_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->TRANSACTION_TIMEOUT_CONFIG,static final TRANSACTION_TIMEOUT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->TRANSACTION_TIMEOUT_DOC,static final TRANSACTION_TIMEOUT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->VALUE_SERIALIZER_CLASS_CONFIG,static final VALUE_SERIALIZER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.ProducerConfig->VALUE_SERIALIZER_CLASS_DOC,static final VALUE_SERIALIZER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.ProducerInterceptor<K,V>",ProducerInterceptor,low,low,low,low,2,3,0,1,0,3,4,3,0,0,3,0,0,0,0.5,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerInterceptor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.ProducerInterceptor<K,V>.public abstract onAcknowledgement( RecordMetadata, Exception ): void","onAcknowledgement( RecordMetadata, Exception ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.clients.producer.ProducerInterceptor<K,V>.public abstract onSend( ProducerRecord ): ProducerRecord",onSend( ProducerRecord ): ProducerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.clients.producer.ProducerRecord<K,V>",ProducerRecord,low-medium,low,low-medium,low-medium,4,25,10,1,0,32,74,67,6,0,15,0,0,0.556,0.658,0.714,0,0,,,,,74,,,,,,32,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, Integer, K, V ): void","ProducerRecord( String, Integer, K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, Integer, K, V, Iterable ): void","ProducerRecord( String, Integer, K, V, Iterable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, Integer, Long, K, V ): void","ProducerRecord( String, Integer, Long, K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, Integer, Long, K, V, Iterable ): void","ProducerRecord( String, Integer, Long, K, V, Iterable ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,15,6,2,6
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, K, V ): void","ProducerRecord( String, K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public ProducerRecord( String, V ): void","ProducerRecord( String, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public equals( Object ): boolean",equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,13,1,6,12
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,9,0,5,12
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public headers( ): Headers",headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public partition( ): Integer",partition( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public timestamp( ): Long",timestamp( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,0,3,10
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public topic( ): String",topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->headers",final headers : Headers,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->partition",final partition : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->timestamp",final timestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->topic",final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.RecordMetadata,RecordMetadata,low,low,low,medium-high,4,21,4,1,0,13,40,32,6,1,11,0,0,0.814,0.727,0.618,0,0,,,,,40,,,,,,13,,,,,,,
"<Method>org.apache.kafka.clients.producer.RecordMetadata.public RecordMetadata( TopicPartition, long, long, long, Long, int, int ): void","RecordMetadata( TopicPartition, long, long, long, Long, int, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,7,0,6
<Method>org.apache.kafka.clients.producer.RecordMetadata.public checksum( ): long,checksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,6
<Method>org.apache.kafka.clients.producer.RecordMetadata.public hasOffset( ): boolean,hasOffset( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public hasTimestamp( ): boolean,hasTimestamp( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public partition( ): int,partition( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedKeySize( ): int,serializedKeySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public serializedValueSize( ): int,serializedValueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.clients.producer.RecordMetadata.public topic( ): String,topic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.clients.producer.RecordMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->topicPartition,final topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->UNKNOWN_PARTITION,static final UNKNOWN_PARTITION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.RecordMetadata->checksum,volatile checksum : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.RoundRobinPartitioner,RoundRobinPartitioner,low,low,low,low,3,15,10,1,0,5,20,18,1,0,4,0,0,0,0.583,1,0,0,,,,,20,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.producer.RoundRobinPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.RoundRobinPartitioner.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.producer.RoundRobinPartitioner.private nextValue( String ): int,nextValue( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,2,1
"<Method>org.apache.kafka.clients.producer.RoundRobinPartitioner.public partition( String, Object, byte, Object, byte, Cluster ): int","partition( String, Object, byte, Object, byte, Cluster ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,6,10,0
<Field>org.apache.kafka.clients.producer.RoundRobinPartitioner->topicCounterMap,final topicCounterMap : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.UniformStickyPartitioner,UniformStickyPartitioner,low,low,low,low,2,20,2,1,0,4,8,6,1,0,4,0,0,0,0.571,0.833,0,0,,,,,8,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.producer.UniformStickyPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.UniformStickyPartitioner.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.producer.UniformStickyPartitioner.public onNewBatch( String, Cluster, int ): void","onNewBatch( String, Cluster, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.clients.producer.UniformStickyPartitioner.public partition( String, Object, byte, Object, byte, Cluster ): int","partition( String, Object, byte, Object, byte, Cluster ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,6,1,1
<Field>org.apache.kafka.clients.producer.UniformStickyPartitioner->stickyPartitionCache,final stickyPartitionCache : StickyPartitionCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer.internals,org.apache.kafka.clients.producer.internals,medium-high,medium-high,high,low,,,,,,793,2675,,,,,,,,,,,,,32,32,0,2675,4,15,0,0.789,0.211,793,,,,,,,
org.apache.kafka.clients.producer.internals.BufferPool,BufferPool,low-medium,low-medium,low-medium,medium-high,6,80,31,1,0,35,147,136,9,1,15,0,0,0.75,0.724,0.417,0,0,,,,,147,,,,,,35,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.BufferPool. waiters( ): Deque, waiters( ): Deque,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.BufferPool.public BufferPool( long, int, Metrics, Time, String ): void","BufferPool( long, int, Metrics, Time, String ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,4,12
"<Method>org.apache.kafka.clients.producer.internals.BufferPool.public allocate( int, long ): ByteBuffer","allocate( int, long ): ByteBuffer",low-medium,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,6,56,2,24,25
<Method>org.apache.kafka.clients.producer.internals.BufferPool.protected allocateByteBuffer( int ): ByteBuffer,allocateByteBuffer( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,3,4
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public deallocate( ByteBuffer ): void,deallocate( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.clients.producer.internals.BufferPool.public deallocate( ByteBuffer, int ): void","deallocate( ByteBuffer, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,2,7,6
<Method>org.apache.kafka.clients.producer.internals.BufferPool.protected freeSize( ): int,freeSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.private freeUp( int ): void,freeUp( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,3,4
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public poolableSize( ): int,poolableSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public queued( ): int,queued( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,3,3
<Method>org.apache.kafka.clients.producer.internals.BufferPool.protected recordWaitTime( long ): void,recordWaitTime( long ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.private safeAllocateByteBuffer( int ): ByteBuffer,safeAllocateByteBuffer( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,15,1,6,5
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public totalMemory( ): long,totalMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public unallocatedMemory( ): long,unallocatedMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,2,3
<Field>org.apache.kafka.clients.producer.internals.BufferPool->free,final free : Deque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->lock,final lock : ReentrantLock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->poolableSize,final poolableSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->totalMemory,final totalMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->waitTime,final waitTime : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->waiters,final waiters : Deque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->nonPooledAvailableMemory,nonPooledAvailableMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->WAIT_TIME_SENSOR_NAME,static final WAIT_TIME_SENSOR_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.DefaultPartitioner,DefaultPartitioner,low,low,low,low,3,21,6,1,0,5,12,10,1,0,4,0,0,0,0.571,0.833,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public onNewBatch( String, Cluster, int ): void","onNewBatch( String, Cluster, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public partition( String, Object, byte, Object, byte, Cluster ): int","partition( String, Object, byte, Object, byte, Cluster ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,6,5,1
<Field>org.apache.kafka.clients.producer.internals.DefaultPartitioner->stickyPartitionCache,final stickyPartitionCache : StickyPartitionCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ErrorLoggingCallback,ErrorLoggingCallback,low,low,low,low,2,3,1,1,0,9,22,15,5,1,2,0,0,0.167,0.417,0,0,0,,,,,22,,,,,,9,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback.public ErrorLoggingCallback( String, byte, byte, boolean ): void","ErrorLoggingCallback( String, byte, byte, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,4,0,5
"<Method>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback.public onCompletion( RecordMetadata, Exception ): void","onCompletion( RecordMetadata, Exception ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,8,2,1,10
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->key,key : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->logAsString,logAsString : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->valueLength,valueLength : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.FutureRecordMetadata,FutureRecordMetadata,low,low,low-medium,medium-high,3,24,17,1,0,20,65,56,8,0,11,0,0,0.734,0.798,0.6,0,0,,,,,65,,,,,,20,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata. chain( FutureRecordMetadata ): void, chain( FutureRecordMetadata ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,3
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata. checksumOrNull( ): Long, checksumOrNull( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata. value( ): RecordMetadata, value( ): RecordMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,4,8
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata. valueOrError( ): RecordMetadata, valueOrError( ): RecordMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,2
"<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public FutureRecordMetadata( ProduceRequestResult, long, long, Long, int, int, Time ): void","FutureRecordMetadata( ProduceRequestResult, long, long, Long, int, int, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,7,0,7
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public cancel( boolean ): boolean,cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public get( ): RecordMetadata,get( ): RecordMetadata,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,3
"<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public get( long, TimeUnit ): RecordMetadata","get( long, TimeUnit ): RecordMetadata",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,2,6,5
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isCancelled( ): boolean,isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,3
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.private timestamp( ): long,timestamp( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,3
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->checksum,final checksum : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->createTimestamp,final createTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->relativeOffset,final relativeOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->result,final result : ProduceRequestResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedKeySize,final serializedKeySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->serializedValueSize,final serializedValueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->nextRecordMetadata,volatile nextRecordMetadata : FutureRecordMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.IncompleteBatches,IncompleteBatches,low,low,low,low,1,8,3,1,0,6,18,16,1,0,5,0,0,0,0.3,0,0,0,,,,,18,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public IncompleteBatches( ): void,IncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public add( ProducerBatch ): void,add( ProducerBatch ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,1,1,2
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public copyAll( ): Iterable,copyAll( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,2
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,2
<Method>org.apache.kafka.clients.producer.internals.IncompleteBatches.public remove( ProducerBatch ): void,remove( ProducerBatch ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,2
<Field>org.apache.kafka.clients.producer.internals.IncompleteBatches->incomplete,final incomplete : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProduceRequestResult,ProduceRequestResult,low,low,low,medium-high,2,15,4,1,0,12,32,26,5,0,11,0,0,0.82,0.709,0.745,0,0,,,,,32,,,,,,12,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public ProduceRequestResult( TopicPartition ): void,ProduceRequestResult( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public await( long, TimeUnit ): boolean","await( long, TimeUnit ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public done( ): void,done( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,2
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public error( ): RuntimeException,error( ): RuntimeException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public hasLogAppendTime( ): boolean,hasLogAppendTime( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public logAppendTime( ): long,logAppendTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public set( long, long, RuntimeException ): void","set( long, long, RuntimeException ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public topicPartition( ): TopicPartition,topicPartition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->latch,final latch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->topicPartition,final topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->baseOffset,volatile baseOffset : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->error,volatile error : RuntimeException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->logAppendTime,volatile logAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch,ProducerBatch,very-high,medium-high,high,high,19,210,72,1,0,69,223,199,15,1,41,0,0,0.902,0.871,0.469,1,0,,,,,223,,,,,,69,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch.FinalState,FinalState,low,low,low,low,0,0,0,2,0,0,1,0,0,3,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerBatch.Thunk,Thunk,low,low,low,low,2,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. attempts( ): int, attempts( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. drained( long ): void, drained( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. hasReachedDeliveryTimeout( long, long ): boolean"," hasReachedDeliveryTimeout( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. isSplitBatch( ): boolean, isSplitBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. queueTimeMs( ): long, queueTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. reenqueued( long ): void, reenqueued( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,6
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch. waitedTimeMs( long ): long, waitedTimeMs( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public ProducerBatch( TopicPartition, MemoryRecordsBuilder, long ): void","ProducerBatch( TopicPartition, MemoryRecordsBuilder, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public ProducerBatch( TopicPartition, MemoryRecordsBuilder, long, boolean ): void","ProducerBatch( TopicPartition, MemoryRecordsBuilder, long, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,4,4,10
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public abort( RuntimeException ): void,abort( RuntimeException ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,4
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public abortRecordAppends( ): void,abortRecordAppends( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public buffer( ): ByteBuffer,buffer( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public close( ): void,close( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,6,6
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public closeForRecordAppends( ): void,closeForRecordAppends( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.private completeFutureAndFireCallbacks( long, long, RuntimeException ): void","completeFutureAndFireCallbacks( long, long, RuntimeException ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,14,3,6,5
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public compressionRatio( ): double,compressionRatio( ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.private createBatchOffAccumulatorForRecord( Record, int ): ProducerBatch","createBatchOffAccumulatorForRecord( Record, int ): ProducerBatch",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,11,4
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public done( long, long, RuntimeException ): boolean","done( long, long, RuntimeException ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,19,3,10,13
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public estimatedSizeInBytes( ): int,estimatedSizeInBytes( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public finalState( ): FinalState,finalState( ): FinalState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public hasSequence( ): boolean,hasSequence( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public inRetry( ): boolean,inRetry( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public isWritable( ): boolean,isWritable( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public magic( ): byte,magic( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public producerId( ): long,producerId( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public records( ): MemoryRecords,records( ): MemoryRecords,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public resetProducerState( ProducerIdAndEpoch, int, boolean ): void","resetProducerState( ProducerIdAndEpoch, int, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,2
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public sequenceHasBeenReset( ): boolean,sequenceHasBeenReset( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public setProducerState( ProducerIdAndEpoch, int, boolean ): void","setProducerState( ProducerIdAndEpoch, int, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public split( int ): Deque,split( int ): Deque,low-medium,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,34,1,33,5
<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.public tryAppend( long, byte, byte, Header, Callback, long ): FutureRecordMetadata","tryAppend( long, byte, byte, Header, Callback, long ): FutureRecordMetadata",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,6,7,10
"<Method>org.apache.kafka.clients.producer.internals.ProducerBatch.private tryAppendForSplit( long, ByteBuffer, ByteBuffer, Header, Thunk ): boolean","tryAppendForSplit( long, ByteBuffer, ByteBuffer, Header, Thunk ): boolean",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,5,11,9
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->maxRecordSize, maxRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->recordCount, recordCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->drainedMs,drainedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->attempts,final attempts : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->createdMs,final createdMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->finalState,final finalState : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->isSplitBatch,final isSplitBatch : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->produceFuture,final produceFuture : ProduceRequestResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->recordsBuilder,final recordsBuilder : MemoryRecordsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->thunks,final thunks : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->topicPartition,final topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->lastAppendTime,lastAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->lastAttemptMs,lastAttemptMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->reopened,reopened : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->retry,retry : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerBatch->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>",ProducerInterceptors,low,low-medium,low,low,6,14,9,1,0,18,42,39,1,1,5,0,0,0.125,0.6,0,0,0,,,,,42,,,,,,18,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public ProducerInterceptors( List ): void",ProducerInterceptors( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public close( ): void",close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,2,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public onAcknowledgement( RecordMetadata, Exception ): void","onAcknowledgement( RecordMetadata, Exception ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,2,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public onSend( ProducerRecord ): ProducerRecord",onSend( ProducerRecord ): ProducerRecord,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,5,3
"<Method>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>.public onSendError( ProducerRecord, TopicPartition, Exception ): void","onSendError( ProducerRecord, TopicPartition, Exception ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,13,3,7,2
"<Field>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>->interceptors",final interceptors : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.internals.ProducerInterceptors<K,V>->log",static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerMetadata,ProducerMetadata,low-medium,low-medium,low-medium,medium-high,7,80,16,2,0,15,56,51,3,1,10,0,2,0.75,0.74,0.778,0,0.4,,,,,56,,,,,,15,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public ProducerMetadata( long, long, LogContext, ClusterResourceListeners, Time ): void","ProducerMetadata( long, long, LogContext, ClusterResourceListeners, Time ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,5,1,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized add( String, long ): void","synchronized add( String, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,3,2
"<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized awaitUpdate( int, long ): void","synchronized awaitUpdate( int, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,2
<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized containsTopic( String ): boolean,synchronized containsTopic( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized fatalError( KafkaException ): void,synchronized fatalError( KafkaException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized newMetadataRequestBuilder( ): Builder,synchronized newMetadataRequestBuilder( ): Builder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized retainTopic( String, boolean, long ): boolean","synchronized retainTopic( String, boolean, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,3,3,3
<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.synchronized topics( ): Set,synchronized topics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.ProducerMetadata.public synchronized update( int, MetadataResponse, long ): void","synchronized update( int, MetadataResponse, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
<Field>org.apache.kafka.clients.producer.internals.ProducerMetadata->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerMetadata->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerMetadata->topics,final topics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerMetadata->TOPIC_EXPIRY_MS,static final TOPIC_EXPIRY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProducerMetrics,ProducerMetrics,low,low,low,low,3,31,6,1,0,3,15,12,2,0,2,1,0,0.5,0.444,1,0,0,,,,,15,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProducerMetrics.public ProducerMetrics( Metrics ): void,ProducerMetrics( Metrics ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,3
<Method>org.apache.kafka.clients.producer.internals.ProducerMetrics.private getAllTemplates( ): List,getAllTemplates( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.producer.internals.ProducerMetrics.public static main( String ): void,static main( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,5,0
<Field>org.apache.kafka.clients.producer.internals.ProducerMetrics->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ProducerMetrics->senderMetrics,final senderMetrics : SenderMetricsRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator,RecordAccumulator,very-high,very-high,medium-high,high,33,364,116,1,0,108,396,359,18,0,36,0,0,0.9,0.891,0.758,3,0,,,,,396,,,,,,108,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6711;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6711;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7123;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7123;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7549;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$7549;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.ReadyCheckResult,ReadyCheckResult,low,low,low,low,0,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.RecordAppendResult,RecordAppendResult,low,low,low,low,1,1,0,1,0,1,10,5,4,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. abortBatches( RuntimeException ): void, abortBatches( RuntimeException ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,8,1,6,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. abortUndrainedBatches( RuntimeException ): void, abortUndrainedBatches( RuntimeException ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,12,1,8,3
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. batches( ): Map, batches( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. bufferPoolAvailableMemory( ): long, bufferPoolAvailableMemory( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator. flushInProgress( ): boolean, flushInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public RecordAccumulator( LogContext, int, CompressionType, int, long, int, Metrics, String, Time, ApiVersions, TransactionManager, BufferPool ): void","RecordAccumulator( LogContext, int, CompressionType, int, long, int, Metrics, String, Time, ApiVersions, TransactionManager, BufferPool ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,30,12,2,17
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private abortBatches( ): void,abortBatches( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public abortIncompleteBatches( ): void,abortIncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,4,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public append( TopicPartition, long, byte, byte, Header, Callback, long, boolean, long ): RecordAppendResult","append( TopicPartition, long, byte, byte, Header, Callback, long, boolean, long ): RecordAppendResult",low,very-high,low-medium,low,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,45,9,21,12
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private appendsInProgress( ): boolean,appendsInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public awaitFlushCompletion( ): void,awaitFlushCompletion( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,2
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public beginFlush( ): void,beginFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public deallocate( ProducerBatch ): void,deallocate( ProducerBatch ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,5,2
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public drain( Cluster, Set, int, long ): Map","drain( Cluster, Set, int, long ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,4,5,0
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private drainBatchesForOneNode( Cluster, Node, int, long ): List","drainBatchesForOneNode( Cluster, Node, int, long ): List",low-medium,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,5,43,4,30,15
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public expiredBatches( long ): List,expiredBatches( long ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,15,1,9,2
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public getDeliveryTimeoutMs( ): long,getDeliveryTimeoutMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private getDeque( TopicPartition ): Deque,getDeque( TopicPartition ): Deque,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private getOrCreateDeque( TopicPartition ): Deque,getOrCreateDeque( TopicPartition ): Deque,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,1,2,2
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasIncomplete( ): boolean,hasIncomplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasUndrained( ): boolean,hasUndrained( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private insertInSequenceOrder( Deque, ProducerBatch ): void","insertInSequenceOrder( Deque, ProducerBatch ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,19,2,23,2
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private isMuted( TopicPartition, long ): boolean","isMuted( TopicPartition, long ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,2,2
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public maybeUpdateNextBatchExpiryTime( ProducerBatch ): void,maybeUpdateNextBatchExpiryTime( ProducerBatch ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,6
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public mutePartition( TopicPartition ): void,mutePartition( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public nextExpiryTimeMs( ): Long,nextExpiryTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public ready( Cluster, long ): ReadyCheckResult","ready( Cluster, long ): ReadyCheckResult",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,6,27,2,18,6
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private recordsBuilder( ByteBuffer, byte ): MemoryRecordsBuilder","recordsBuilder( ByteBuffer, byte ): MemoryRecordsBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,1,2
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public reenqueue( ProducerBatch, long ): void","reenqueue( ProducerBatch, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,4,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private registerMetrics( Metrics, String ): void","registerMetrics( Metrics, String ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,23,2,10,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public resetNextBatchExpiryTime( ): void,resetNextBatchExpiryTime( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private shouldStopDrainBatchesForPartition( ProducerBatch, TopicPartition ): boolean","shouldStopDrainBatchesForPartition( ProducerBatch, TopicPartition ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,15,2,8,5
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public splitAndReenqueue( ProducerBatch ): int,splitAndReenqueue( ProducerBatch ): int,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,16,1,13,5
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private tryAppend( long, byte, byte, Header, Callback, Deque, long ): RecordAppendResult","tryAppend( long, byte, byte, Header, Callback, Deque, long ): RecordAppendResult",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,7,5,0
"<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public unmutePartition( TopicPartition, long ): void","unmutePartition( TopicPartition, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->drainIndex,drainIndex : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->apiVersions,final apiVersions : ApiVersions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->appendsInProgress,final appendsInProgress : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->batchSize,final batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->batches,final batches : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->compression,final compression : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->deliveryTimeoutMs,final deliveryTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->flushesInProgress,final flushesInProgress : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->free,final free : BufferPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->incomplete,final incomplete : IncompleteBatches,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->lingerMs,final lingerMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->muted,final muted : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->transactionManager,final transactionManager : TransactionManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->nextBatchExpiryTimeMs,nextBatchExpiryTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->closed,volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.Sender,Sender,very-high,very-high,medium-high,high,43,574,174,1,0,137,562,429,17,0,30,1,0,0.821,0.885,0.722,3,0,,,,,562,,,,,,137,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.Sender$39474;,Lorg.apache.kafka.clients.producer.internals.Sender$39474;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.Sender.SenderMetrics,SenderMetrics,low,low,low,low,11,90,27,1,0,14,115,103,11,0,7,0,0,0.727,0.698,0,0,0,,,,,115,,,,,,14,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.Sender. runOnce( ): void, runOnce( ): void,low-medium,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,26,0,21,19
"<Method>org.apache.kafka.clients.producer.internals.Sender.public Sender( LogContext, KafkaClient, ProducerMetadata, RecordAccumulator, boolean, int, short, int, SenderMetricsRegistry, Time, int, long, TransactionManager, ApiVersions ): void","Sender( LogContext, KafkaClient, ProducerMetadata, RecordAccumulator, boolean, int, short, int, SenderMetricsRegistry, Time, int, long, TransactionManager, ApiVersions ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,30,14,1,16
<Method>org.apache.kafka.clients.producer.internals.Sender.private addToInflightBatches( List ): void,addToInflightBatches( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,1,3,2
<Method>org.apache.kafka.clients.producer.internals.Sender.public addToInflightBatches( Map ): void,addToInflightBatches( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,0
<Method>org.apache.kafka.clients.producer.internals.Sender.private awaitNodeReady( CoordinatorType ): Node,awaitNodeReady( CoordinatorType ): Node,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,4,6
"<Method>org.apache.kafka.clients.producer.internals.Sender.private canRetry( ProducerBatch, PartitionResponse, long ): boolean","canRetry( ProducerBatch, PartitionResponse, long ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,6,4
"<Method>org.apache.kafka.clients.producer.internals.Sender.private completeBatch( ProducerBatch, PartitionResponse ): void","completeBatch( ProducerBatch, PartitionResponse ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,3,2
"<Method>org.apache.kafka.clients.producer.internals.Sender.private completeBatch( ProducerBatch, PartitionResponse, long, long, long ): void","completeBatch( ProducerBatch, PartitionResponse, long, long, long ): void",low-medium,very-high,medium-high,low,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,17,4,58,5,38,18
"<Method>org.apache.kafka.clients.producer.internals.Sender.private failBatch( ProducerBatch, PartitionResponse, RuntimeException, boolean ): void","failBatch( ProducerBatch, PartitionResponse, RuntimeException, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.clients.producer.internals.Sender.private failBatch( ProducerBatch, long, long, RuntimeException, boolean ): void","failBatch( ProducerBatch, long, long, RuntimeException, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,5,5,3
<Method>org.apache.kafka.clients.producer.internals.Sender.public forceClose( ): void,forceClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.private getExpiredInflightBatches( long ): List,getExpiredInflightBatches( long ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,22,1,17,3
"<Method>org.apache.kafka.clients.producer.internals.Sender.private handleProduceResponse( ClientResponse, Map, long ): void","handleProduceResponse( ClientResponse, Map, long ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,27,3,30,4
<Method>org.apache.kafka.clients.producer.internals.Sender.private hasPendingTransactionalRequests( ): boolean,hasPendingTransactionalRequests( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,3
<Method>org.apache.kafka.clients.producer.internals.Sender.public inFlightBatches( TopicPartition ): List,inFlightBatches( TopicPartition ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,2,2
<Method>org.apache.kafka.clients.producer.internals.Sender.public initiateClose( ): void,initiateClose( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.clients.producer.internals.Sender.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.Sender.private lookupCoordinatorAndRetry( TxnRequestHandler ): void,lookupCoordinatorAndRetry( TxnRequestHandler ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,5,5
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeAbortBatches( RuntimeException ): void,maybeAbortBatches( RuntimeException ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,3,3
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeRemoveAndDeallocateBatch( ProducerBatch ): void,maybeRemoveAndDeallocateBatch( ProducerBatch ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeRemoveFromInflightBatches( ProducerBatch ): void,maybeRemoveFromInflightBatches( ProducerBatch ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,4,2
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeSendAndPollTransactionalRequest( ): boolean,maybeSendAndPollTransactionalRequest( ): boolean,low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,34,0,29,23
<Method>org.apache.kafka.clients.producer.internals.Sender.private maybeWaitForProducerId( ): void,maybeWaitForProducerId( ): void,low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,29,0,18,14
"<Method>org.apache.kafka.clients.producer.internals.Sender.private reenqueueBatch( ProducerBatch, long ): void","reenqueueBatch( ProducerBatch, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,4,2
<Method>org.apache.kafka.clients.producer.internals.Sender.public run( ): void,run( ): void,low-medium,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,3,32,0,22,24
<Method>org.apache.kafka.clients.producer.internals.Sender.private sendAndAwaitInitProducerIdRequest( Node ): ClientResponse,sendAndAwaitInitProducerIdRequest( Node ): ClientResponse,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,4,5
"<Method>org.apache.kafka.clients.producer.internals.Sender.private sendProduceRequest( long, int, short, int, List ): void","sendProduceRequest( long, int, short, int, List ): void",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,30,5,20,9
"<Method>org.apache.kafka.clients.producer.internals.Sender.private sendProduceRequests( Map, long ): void","sendProduceRequests( Map, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,4,2
<Method>org.apache.kafka.clients.producer.internals.Sender.private sendProducerData( long ): long,sendProducerData( long ): long,low-medium,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,43,1,35,19
<Method>org.apache.kafka.clients.producer.internals.Sender.public static throttleTimeSensor( SenderMetricsRegistry ): Sensor,static throttleTimeSensor( SenderMetricsRegistry ): Sensor,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
<Method>org.apache.kafka.clients.producer.internals.Sender.public wakeup( ): void,wakeup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.clients.producer.internals.Sender->accumulator,final accumulator : RecordAccumulator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->apiVersions,final apiVersions : ApiVersions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->client,final client : KafkaClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->guaranteeMessageOrder,final guaranteeMessageOrder : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->inFlightBatches,final inFlightBatches : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->maxRequestSize,final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->metadata,final metadata : ProducerMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->sensors,final sensors : SenderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->transactionManager,final transactionManager : TransactionManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->forceClose,volatile forceClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->running,volatile running : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.SenderMetricsRegistry,SenderMetricsRegistry,low-medium,low-medium,low-medium,medium-high,6,53,13,1,0,17,140,102,35,2,17,0,0,0.956,0.706,0.132,0,0,,,,,140,,,,,,17,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public SenderMetricsRegistry( Metrics ): void,SenderMetricsRegistry( Metrics ): void,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,68,1,35,38
"<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public addMetric( MetricName, Measurable ): void","addMetric( MetricName, Measurable ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public allTemplates( ): List,allTemplates( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.private createMetricName( String, String ): MetricName","createMetricName( String, String ): MetricName",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,3
"<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.private createTemplate( String, String, String, Set ): MetricNameTemplate","createTemplate( String, String, String, Set ): MetricNameTemplate",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,1,1
"<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.private createTopicTemplate( String, String ): MetricNameTemplate","createTopicTemplate( String, String ): MetricNameTemplate",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public getSensor( String ): Sensor,getSensor( String ): Sensor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public sensor( String ): Sensor,sensor( String ): Sensor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicByteRate( Map ): MetricName,topicByteRate( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicByteTotal( Map ): MetricName,topicByteTotal( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicCompressionRate( Map ): MetricName,topicCompressionRate( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordErrorRate( Map ): MetricName,topicRecordErrorRate( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordErrorTotal( Map ): MetricName,topicRecordErrorTotal( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordRetryRate( Map ): MetricName,topicRecordRetryRate( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordRetryTotal( Map ): MetricName,topicRecordRetryTotal( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordSendRate( Map ): MetricName,topicRecordSendRate( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry.public topicRecordSendTotal( Map ): MetricName,topicRecordSendTotal( Map ): MetricName,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->allTemplates,final allTemplates : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->batchSizeAvg,final batchSizeAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->batchSizeMax,final batchSizeMax : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->batchSplitRate,final batchSplitRate : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->batchSplitTotal,final batchSplitTotal : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->compressionRateAvg,final compressionRateAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->metadataAge,final metadataAge : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->produceThrottleTimeAvg,final produceThrottleTimeAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->produceThrottleTimeMax,final produceThrottleTimeMax : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordErrorRate,final recordErrorRate : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordErrorTotal,final recordErrorTotal : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordQueueTimeAvg,final recordQueueTimeAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordQueueTimeMax,final recordQueueTimeMax : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordRetryRate,final recordRetryRate : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordRetryTotal,final recordRetryTotal : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordSendRate,final recordSendRate : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordSendTotal,final recordSendTotal : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordSizeAvg,final recordSizeAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordSizeMax,final recordSizeMax : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->recordsPerRequestAvg,final recordsPerRequestAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->requestLatencyAvg,final requestLatencyAvg : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->requestLatencyMax,final requestLatencyMax : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->requestsInFlight,final requestsInFlight : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->tags,final tags : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicByteRate,final topicByteRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicByteTotal,final topicByteTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicCompressionRate,final topicCompressionRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordErrorRate,final topicRecordErrorRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordErrorTotal,final topicRecordErrorTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordRetryRate,final topicRecordRetryRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordRetryTotal,final topicRecordRetryTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordSendRate,final topicRecordSendRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicRecordSendTotal,final topicRecordSendTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->topicTags,final topicTags : LinkedHashSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->METRIC_GROUP_NAME,static final METRIC_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.SenderMetricsRegistry->TOPIC_METRIC_GROUP_NAME,static final TOPIC_METRIC_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.StickyPartitionCache,StickyPartitionCache,low,low,low,low,3,17,13,1,0,11,30,28,1,0,3,0,0,0,0.333,0,0,0,,,,,30,,,,,,11,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.StickyPartitionCache.public StickyPartitionCache( ): void,StickyPartitionCache( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.StickyPartitionCache.public nextPartition( String, Cluster, int ): int","nextPartition( String, Cluster, int ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,21,3,22,5
"<Method>org.apache.kafka.clients.producer.internals.StickyPartitionCache.public partition( String, Cluster ): int","partition( String, Cluster ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,1
<Field>org.apache.kafka.clients.producer.internals.StickyPartitionCache->indexCache,final indexCache : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager,TransactionManager,very-high,high,very-high,very-high,27,175,108,1,0,161,878,450,19,3,79,0,0,0.93,0.908,0.769,1,0,,,,,878,,,,,,161,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.AddOffsetsToTxnHandler,AddOffsetsToTxnHandler,low,low,low,low,9,50,12,2,0,12,35,32,2,0,4,0,0,0.25,0.562,0,0,0,,,,,35,,,,,,12,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.AddPartitionsToTxnHandler,AddPartitionsToTxnHandler,low,low,low,low,11,39,20,2,0,22,72,69,2,0,6,0,1,0.5,0.556,0,0,0.333,,,,,72,,,,,,22,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.EndTxnHandler,EndTxnHandler,low,low,low,low,8,31,9,2,0,13,34,32,1,0,5,0,1,0,0.533,0,0,0.4,,,,,34,,,,,,13,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.FindCoordinatorHandler,FindCoordinatorHandler,low,low,low,low,10,32,9,2,0,12,41,39,1,0,6,0,2,0,0.556,0,0,0.667,,,,,41,,,,,,12,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.InitProducerIdHandler,InitProducerIdHandler,low,low,low,low,10,32,9,2,0,10,31,29,1,0,4,0,0,0,0.5,0,0,0,,,,,31,,,,,,10,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.Priority,Priority,low,low,low,low,0,1,0,2,0,1,8,2,1,4,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.State,State,low,low,low,low,0,1,0,2,0,8,26,17,0,8,1,0,0,0,0,0,0,0,,,,,26,,,,,,8,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TopicPartitionBookkeeper,TopicPartitionBookkeeper,low,low,low,low,3,14,8,1,0,12,27,25,1,0,6,0,0,0,0.083,0,0,0,,,,,27,,,,,,12,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TopicPartitionEntry,TopicPartitionEntry,low,low,low,low,2,5,3,1,0,3,16,11,4,0,2,0,0,0.75,0.25,0,0,0,,,,,16,,,,,,3,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TxnOffsetCommitHandler,TxnOffsetCommitHandler,low,low,low,low,10,44,16,2,0,20,56,54,1,0,6,0,2,0,0.625,0,0,0.667,,,,,56,,,,,,20,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionManager.TxnRequestHandler,TxnRequestHandler,low,low,low,low,9,42,23,1,6,22,59,56,2,0,17,0,0,0.583,0.765,0,0,0,,,,,59,,,,,,22,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. TransactionManager( ): void, TransactionManager( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. coordinator( CoordinatorType ): Node, coordinator( CoordinatorType ): Node,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasAbortableError( ): boolean, hasAbortableError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasFatalError( ): boolean, hasFatalError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasInFlightTransactionalRequest( ): boolean, hasInFlightTransactionalRequest( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasProducerId( long ): boolean, hasProducerId( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager. hasProducerIdAndEpoch( long, short ): boolean"," hasProducerIdAndEpoch( long, short ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. lastError( ): RuntimeException, lastError( ): RuntimeException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. lookupCoordinator( TxnRequestHandler ): void, lookupCoordinator( TxnRequestHandler ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. producerIdAndEpoch( ): ProducerIdAndEpoch, producerIdAndEpoch( ): ProducerIdAndEpoch,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. setInFlightCorrelationId( int ): void, setInFlightCorrelationId( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager. setProducerIdAndEpoch( ProducerIdAndEpoch ): void, setProducerIdAndEpoch( ProducerIdAndEpoch ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public TransactionManager( LogContext, String, int, long ): void","TransactionManager( LogContext, String, int, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,4,2,14
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private addPartitionsToTransactionHandler( ): TxnRequestHandler,addPartitionsToTransactionHandler( ): TxnRequestHandler,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,2,7
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private adjustSequencesDueToFailedBatch( ProducerBatch ): void,adjustSequencesDueToFailedBatch( ProducerBatch ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,20,1,7,3
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private beginCompletingTransaction( TransactionResult ): TransactionalRequestResult,beginCompletingTransaction( TransactionResult ): TransactionalRequestResult,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,4,4
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private clearInFlightCorrelationId( ): void,clearInFlightCorrelationId( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private completeTransaction( ): void,completeTransaction( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,4,5
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private enqueueRequest( TxnRequestHandler ): void,enqueueRequest( TxnRequestHandler ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private ensureTransactional( ): void,ensureTransactional( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private handleCachedTransactionRequestResult( Supplier, State ): TransactionalRequestResult","handleCachedTransactionRequestResult( Supplier, State ): TransactionalRequestResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,3,6
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private hasInflightBatches( TopicPartition ): boolean,hasInflightBatches( TopicPartition ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private isNextSequence( TopicPartition, int ): boolean","isNextSequence( TopicPartition, int ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private lookupCoordinator( CoordinatorType, String ): void","lookupCoordinator( CoordinatorType, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,2,2,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeFailWithError( ): void,maybeFailWithError( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeTerminateRequestWithError( TxnRequestHandler ): boolean,maybeTerminateRequestWithError( TxnRequestHandler ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeTransitionToErrorState( RuntimeException ): void,maybeTransitionToErrorState( RuntimeException ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,8,1,3,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private maybeUpdateLastAckedSequence( TopicPartition, int ): void","maybeUpdateLastAckedSequence( TopicPartition, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,3,2
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private setNextSequence( TopicPartition, int ): void","setNextSequence( TopicPartition, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private shouldResetProducerStateAfterResolvingSequences( ): boolean,shouldResetProducerStateAfterResolvingSequences( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,0,12,3
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private startSequencesAtBeginning( TopicPartition ): void,startSequencesAtBeginning( TopicPartition ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,1,5,3
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized addInFlightBatch( ProducerBatch ): void,synchronized addInFlightBatch( ProducerBatch ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized authenticationFailed( AuthenticationException ): void,synchronized authenticationFailed( AuthenticationException ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized beginAbort( ): TransactionalRequestResult,synchronized beginAbort( ): TransactionalRequestResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized beginCommit( ): TransactionalRequestResult,synchronized beginCommit( ): TransactionalRequestResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized beginTransaction( ): void,synchronized beginTransaction( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized canRetry( PartitionResponse, ProducerBatch ): boolean","synchronized canRetry( PartitionResponse, ProducerBatch ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,16,2,11,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized close( ): void,synchronized close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,3,4
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized failIfNotReadyForSend( ): void,synchronized failIfNotReadyForSend( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,10,0,3,3
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized firstInFlightSequence( TopicPartition ): int,synchronized firstInFlightSequence( TopicPartition ): int,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,1,5,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized handleCompletedBatch( ProducerBatch, PartitionResponse ): void","synchronized handleCompletedBatch( ProducerBatch, PartitionResponse ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,15,2
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized handleFailedBatch( ProducerBatch, RuntimeException, boolean ): void","synchronized handleFailedBatch( ProducerBatch, RuntimeException, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,15,3,16,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasError( ): boolean,synchronized hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasOngoingTransaction( ): boolean,synchronized hasOngoingTransaction( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasPartitionsToAdd( ): boolean,synchronized hasPartitionsToAdd( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasPendingOffsetCommits( ): boolean,synchronized hasPendingOffsetCommits( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasPendingRequests( ): boolean,synchronized hasPendingRequests( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasUnresolvedSequence( TopicPartition ): boolean,synchronized hasUnresolvedSequence( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized hasUnresolvedSequences( ): boolean,synchronized hasUnresolvedSequences( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized incrementSequenceNumber( TopicPartition, int ): void","synchronized incrementSequenceNumber( TopicPartition, int ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized initializeTransactions( ): TransactionalRequestResult,synchronized initializeTransactions( ): TransactionalRequestResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,0,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isAborting( ): boolean,synchronized isAborting( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isCompleting( ): boolean,synchronized isCompleting( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isPartitionAdded( TopicPartition ): boolean,synchronized isPartitionAdded( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isPartitionPendingAdd( TopicPartition ): boolean,synchronized isPartitionPendingAdd( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isReady( ): boolean,synchronized isReady( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized isSendToPartitionAllowed( TopicPartition ): boolean,synchronized isSendToPartitionAllowed( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized lastAckedOffset( TopicPartition ): OptionalLong,synchronized lastAckedOffset( TopicPartition ): OptionalLong,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized lastAckedSequence( TopicPartition ): OptionalInt,synchronized lastAckedSequence( TopicPartition ): OptionalInt,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized markSequenceUnresolved( TopicPartition ): void,synchronized markSequenceUnresolved( TopicPartition ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized maybeAddPartitionToTransaction( TopicPartition ): void,synchronized maybeAddPartitionToTransaction( TopicPartition ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,3
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized nextBatchBySequence( TopicPartition ): ProducerBatch,synchronized nextBatchBySequence( TopicPartition ): ProducerBatch,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized nextRequestHandler( boolean ): TxnRequestHandler,synchronized nextRequestHandler( boolean ): TxnRequestHandler,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,23,1,16,9
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized removeInFlightBatch( ProducerBatch ): void,synchronized removeInFlightBatch( ProducerBatch ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,3,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized resetProducerId( ): void,synchronized resetProducerId( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,4,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized resetProducerIdIfNeeded( ): void,synchronized resetProducerIdIfNeeded( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized retry( TxnRequestHandler ): void,synchronized retry( TxnRequestHandler ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public synchronized sendOffsetsToTransaction( Map, String ): TransactionalRequestResult","synchronized sendOffsetsToTransaction( Map, String ): TransactionalRequestResult",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,13,2,4,5
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized sequenceNumber( TopicPartition ): Integer,synchronized sequenceNumber( TopicPartition ): Integer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,3,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized transactionContainsPartition( TopicPartition ): boolean,synchronized transactionContainsPartition( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized transitionToAbortableError( RuntimeException ): void,synchronized transitionToAbortableError( RuntimeException ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,2
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.synchronized transitionToFatalError( RuntimeException ): void,synchronized transitionToFatalError( RuntimeException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.public transactionalId( ): String,transactionalId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private transitionTo( State ): void,transitionTo( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private transitionTo( State, RuntimeException ): void","transitionTo( State, RuntimeException ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,16,2,5,14
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private txnOffsetCommitHandler( TransactionalRequestResult, Map, String ): TxnOffsetCommitHandler","txnOffsetCommitHandler( TransactionalRequestResult, Map, String ): TxnOffsetCommitHandler",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,3,8,5
"<Method>org.apache.kafka.clients.producer.internals.TransactionManager.private updateLastAckedOffset( PartitionResponse, ProducerBatch ): void","updateLastAckedOffset( PartitionResponse, ProducerBatch ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,2,7,3
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->consumerGroupCoordinator,consumerGroupCoordinator : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->newPartitionsInTransaction,final newPartitionsInTransaction : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->partitionsInTransaction,final partitionsInTransaction : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->partitionsWithUnresolvedSequences,final partitionsWithUnresolvedSequences : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->pendingPartitionsInTransaction,final pendingPartitionsInTransaction : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->pendingRequests,final pendingRequests : PriorityQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->pendingTxnOffsetCommits,final pendingTxnOffsetCommits : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->topicPartitionBookkeeper,final topicPartitionBookkeeper : TopicPartitionBookkeeper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionTimeoutMs,final transactionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionalId,final transactionalId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->inFlightRequestCorrelationId,inFlightRequestCorrelationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->pendingResult,pendingResult : TransactionalRequestResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->ADD_PARTITIONS_RETRY_BACKOFF_MS,static final ADD_PARTITIONS_RETRY_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->NO_INFLIGHT_REQUEST_CORRELATION_ID,static final NO_INFLIGHT_REQUEST_CORRELATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->NO_LAST_ACKED_SEQUENCE_NUMBER,static final NO_LAST_ACKED_SEQUENCE_NUMBER : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionCoordinator,transactionCoordinator : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->currentState,volatile currentState : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->lastError,volatile lastError : RuntimeException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->producerIdAndEpoch,volatile producerIdAndEpoch : ProducerIdAndEpoch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionManager->transactionStarted,volatile transactionStarted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.TransactionalRequestResult,TransactionalRequestResult,low,low,low,medium-high,2,15,8,1,0,15,37,33,3,0,9,0,0,0.667,0.722,0.679,0,0,,,,,37,,,,,,15,,,,,,,
"<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.private TransactionalRequestResult( CountDownLatch, String ): void","TransactionalRequestResult( CountDownLatch, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public TransactionalRequestResult( String ): void,TransactionalRequestResult( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,3,1
"<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public await( long, TimeUnit ): void","await( long, TimeUnit ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,2,5,3
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public done( ): void,done( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public error( ): RuntimeException,error( ): RuntimeException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public isCompleted( ): boolean,isCompleted( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public isSuccessful( ): boolean,isSuccessful( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.TransactionalRequestResult.public setError( RuntimeException ): void,setError( RuntimeException ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.clients.producer.internals.TransactionalRequestResult->latch,final latch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionalRequestResult->operation,final operation : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.TransactionalRequestResult->error,volatile error : RuntimeException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common,org.apache.kafka.common,low-medium,low,medium-high,low,,,,,,205,666,,,,,,,,,,,,,24,18,6,666,282,4,0.333,0.014,0.653,205,,,,,,,
org.apache.kafka.common.Cluster,Cluster,low-medium,low,low-medium,high,4,63,39,1,0,43,169,156,12,0,24,2,0,0.816,0.811,0.863,0,0,,,,,169,,,,,,43,,,,,,,
"<Method>org.apache.kafka.common.Cluster.public Cluster( String, Collection, Collection, Set, Set ): void","Cluster( String, Collection, Collection, Set, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,1,0
"<Method>org.apache.kafka.common.Cluster.public Cluster( String, Collection, Collection, Set, Set, Node ): void","Cluster( String, Collection, Collection, Set, Set, Node ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,6,1,0
"<Method>org.apache.kafka.common.Cluster.public Cluster( String, Collection, Collection, Set, Set, Set, Node ): void","Cluster( String, Collection, Collection, Set, Set, Set, Node ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,7,0,0
"<Method>org.apache.kafka.common.Cluster.private Cluster( String, boolean, Collection, Collection, Set, Set, Set, Node ): void","Cluster( String, boolean, Collection, Collection, Set, Set, Set, Node ): void",low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,57,8,48,12
<Method>org.apache.kafka.common.Cluster.public availablePartitionsForTopic( String ): List,availablePartitionsForTopic( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.Cluster.public clusterResource( ): ClusterResource,clusterResource( ): ClusterResource,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public controller( ): Node,controller( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,13,1,9,16
<Method>org.apache.kafka.common.Cluster.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,8
<Method>org.apache.kafka.common.Cluster.public internalTopics( ): Set,internalTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public invalidTopics( ): Set,invalidTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public isBootstrapConfigured( ): boolean,isBootstrapConfigured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public leaderFor( TopicPartition ): Node,leaderFor( TopicPartition ): Node,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,1
<Method>org.apache.kafka.common.Cluster.public nodeById( int ): Node,nodeById( int ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.Cluster.public nodeIfOnline( TopicPartition, int ): Optional","nodeIfOnline( TopicPartition, int ): Optional",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,7,0
<Method>org.apache.kafka.common.Cluster.public nodes( ): List,nodes( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public partition( TopicPartition ): PartitionInfo,partition( TopicPartition ): PartitionInfo,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.Cluster.public partitionCountForTopic( String ): Integer,partitionCountForTopic( String ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,1
<Method>org.apache.kafka.common.Cluster.public partitionsForNode( int ): List,partitionsForNode( int ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.Cluster.public partitionsForTopic( String ): List,partitionsForTopic( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.Cluster.public static bootstrap( List ): Cluster,static bootstrap( List ): Cluster,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,6,0
<Method>org.apache.kafka.common.Cluster.public static empty( ): Cluster,static empty( ): Cluster,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.Cluster.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,4
<Method>org.apache.kafka.common.Cluster.public topics( ): Set,topics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.Cluster.public unauthorizedTopics( ): Set,unauthorizedTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Cluster.public withPartitions( Map ): Cluster,withPartitions( Map ): Cluster,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,7
<Field>org.apache.kafka.common.Cluster->availablePartitionsByTopic,final availablePartitionsByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->clusterResource,final clusterResource : ClusterResource,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->controller,final controller : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->internalTopics,final internalTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->invalidTopics,final invalidTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->isBootstrapConfigured,final isBootstrapConfigured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->nodes,final nodes : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->nodesById,final nodesById : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->partitionsByNode,final partitionsByNode : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->partitionsByTopic,final partitionsByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->partitionsByTopicPartition,final partitionsByTopicPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Cluster->unauthorizedTopics,final unauthorizedTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.ClusterResource,ClusterResource,low,low,low,low,0,8,3,1,0,8,18,16,1,0,5,0,0,0,0.533,0,0,0,,,,,18,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.ClusterResource.public ClusterResource( String ): void,ClusterResource( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.ClusterResource.public clusterId( ): String,clusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.ClusterResource.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,3,2
<Method>org.apache.kafka.common.ClusterResource.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.ClusterResource.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.ClusterResource->clusterId,final clusterId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.ClusterResourceListener,ClusterResourceListener,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.ClusterResourceListener.public abstract onUpdate( ClusterResource ): void,onUpdate( ClusterResource ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.Configurable,Configurable,low,low,low,low,0,1,0,1,25,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.Configurable.public abstract configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.ConsumerGroupState,ConsumerGroupState,low-medium,low,low,low,0,4,1,2,0,4,21,8,1,7,2,1,0,1.25,0.167,1,0,0,,,,,21,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.ConsumerGroupState.private ConsumerGroupState( String ): void,ConsumerGroupState( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.ConsumerGroupState.public static parse( String ): ConsumerGroupState,static parse( String ): ConsumerGroupState,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,2
<Method>org.apache.kafka.common.ConsumerGroupState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.ConsumerGroupState->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->COMPLETING_REBALANCE,static final COMPLETING_REBALANCE : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->DEAD,static final DEAD : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->EMPTY,static final EMPTY : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->NAME_TO_ENUM,static final NAME_TO_ENUM : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->PREPARING_REBALANCE,static final PREPARING_REBALANCE : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->STABLE,static final STABLE : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ConsumerGroupState->UNKNOWN,static final UNKNOWN : ConsumerGroupState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.ElectionType,ElectionType,low-medium,low,low,low,0,4,2,2,0,4,14,10,1,2,1,1,0,0.667,0,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.ElectionType.private ElectionType( byte ): void,ElectionType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.ElectionType.public static valueOf( byte ): ElectionType,static valueOf( byte ): ElectionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,6
<Field>org.apache.kafka.common.ElectionType->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ElectionType->PREFERRED,static final PREFERRED : ElectionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.ElectionType->UNCLEAN,static final UNCLEAN : ElectionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Endpoint,Endpoint,low,low,low,low-medium,1,11,3,1,0,10,41,35,4,0,8,0,0,0.429,0.7,0.214,0,0,,,,,41,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.Endpoint.public Endpoint( String, SecurityProtocol, String, int ): void","Endpoint( String, SecurityProtocol, String, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.common.Endpoint.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,3,8
<Method>org.apache.kafka.common.Endpoint.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.common.Endpoint.public host( ): String,host( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Endpoint.public listenerName( ): Optional,listenerName( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.Endpoint.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Endpoint.public securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Endpoint.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,4
<Field>org.apache.kafka.common.Endpoint->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Endpoint->listenerName,final listenerName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Endpoint->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Endpoint->securityProtocol,final securityProtocol : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.InvalidRecordException,InvalidRecordException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.InvalidRecordException.public InvalidRecordException( String ): void,InvalidRecordException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.InvalidRecordException.public InvalidRecordException( String, Throwable ): void","InvalidRecordException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.InvalidRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.IsolationLevel,IsolationLevel,low-medium,low,low,low,0,3,0,2,0,5,15,12,1,2,2,1,0,0.833,0.167,1,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.IsolationLevel.private IsolationLevel( byte ): void,IsolationLevel( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.IsolationLevel.public id( ): byte,id( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.IsolationLevel.public static forId( byte ): IsolationLevel,static forId( byte ): IsolationLevel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,2
<Field>org.apache.kafka.common.IsolationLevel->id,final id : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.IsolationLevel->READ_COMMITTED,static final READ_COMMITTED : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.IsolationLevel->READ_UNCOMMITTED,static final READ_UNCOMMITTED : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.KafkaException,KafkaException,medium-high,low,low,low,0,4,0,4,16,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.KafkaException.public KafkaException( ): void,KafkaException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.KafkaException.public KafkaException( String ): void,KafkaException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.KafkaException.public KafkaException( String, Throwable ): void","KafkaException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.KafkaException.public KafkaException( Throwable ): void,KafkaException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.KafkaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.KafkaFuture<T>,KafkaFuture,low,low,low-medium,high,1,15,2,1,1,16,56,29,0,0,13,2,0,0,0.836,0,0,0,,,,,56,,,,,,16,,,,,,,
org.apache.kafka.common.KafkaFuture.AllOfAdapter<R>,AllOfAdapter,low,low,low,low,0,5,3,1,0,6,20,17,2,0,3,0,0,0,0.533,0,0,0,,,,,20,,,,,,6,,,,,,,
"org.apache.kafka.common.KafkaFuture.BaseFunction<A,B>",BaseFunction,low,low,low,low,0,1,0,1,11,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.common.KafkaFuture.BiConsumer<A,B>",BiConsumer,low,low,low,low,0,1,0,1,8,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.common.KafkaFuture.Function<A,B>",Function,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.KafkaFuture<T>.protected abstract addWaiter( BiConsumer ): void,abstract addWaiter( BiConsumer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract cancel( boolean ): boolean,abstract cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.protected abstract complete( T ): boolean,abstract complete( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.protected abstract completeExceptionally( Throwable ): boolean,abstract completeExceptionally( Throwable ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract get( ): T,abstract get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
"<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract get( long, TimeUnit ): T","abstract get( long, TimeUnit ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,3,2,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract getNow( T ): T,abstract getNow( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isCancelled( ): boolean,abstract isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isCompletedExceptionally( ): boolean,abstract isCompletedExceptionally( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract isDone( ): boolean,abstract isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract thenApply( BaseFunction ): KafkaFuture,abstract thenApply( BaseFunction ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract thenApply( Function ): KafkaFuture,abstract thenApply( Function ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public abstract whenComplete( BiConsumer ): KafkaFuture,abstract whenComplete( BiConsumer ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public static allOf( KafkaFuture ): KafkaFuture,static allOf( KafkaFuture ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Method>org.apache.kafka.common.KafkaFuture<T>.public static completedFuture( U ): KafkaFuture,static completedFuture( U ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
org.apache.kafka.common.Metric,Metric,low,low,low,low,1,3,0,1,1,3,5,3,0,0,3,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.Metric.public abstract metricName( ): MetricName,metricName( ): MetricName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.Metric.public abstract metricValue( ): Object,metricValue( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.Metric.public abstract value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.MetricName,MetricName,low,low,low,low-medium,0,14,6,1,0,12,44,38,5,0,8,0,0,0.6,0.656,0.286,0,0,,,,,44,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.MetricName.public MetricName( String, String, String, Map ): void","MetricName( String, String, String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,4,4
<Method>org.apache.kafka.common.MetricName.public description( ): String,description( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricName.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,5,6
<Method>org.apache.kafka.common.MetricName.public group( ): String,group( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,0,3,6
<Method>org.apache.kafka.common.MetricName.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricName.public tags( ): Map,tags( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricName.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,4
<Field>org.apache.kafka.common.MetricName->description,final description : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricName->group,final group : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricName->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricName->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricName->tags,tags : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.MetricNameTemplate,MetricNameTemplate,low,low,low,low-medium,0,16,7,1,0,13,39,34,4,0,9,1,0,0.536,0.625,0.472,0,0,,,,,39,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.MetricNameTemplate.public MetricNameTemplate( String, String, String, Set ): void","MetricNameTemplate( String, String, String, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,4,4
"<Method>org.apache.kafka.common.MetricNameTemplate.public MetricNameTemplate( String, String, String, String ): void","MetricNameTemplate( String, String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
<Method>org.apache.kafka.common.MetricNameTemplate.public description( ): String,description( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricNameTemplate.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,5,6
<Method>org.apache.kafka.common.MetricNameTemplate.public group( ): String,group( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricNameTemplate.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.MetricNameTemplate.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricNameTemplate.private static getTags( String ): LinkedHashSet,static getTags( String ): LinkedHashSet,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Method>org.apache.kafka.common.MetricNameTemplate.public tags( ): Set,tags( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.MetricNameTemplate.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Field>org.apache.kafka.common.MetricNameTemplate->description,final description : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricNameTemplate->group,final group : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricNameTemplate->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.MetricNameTemplate->tags,tags : LinkedHashSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Node,Node,low,low,low-medium,low-medium,0,18,5,1,0,19,58,50,6,1,12,1,0,0.74,0.654,0.564,0,0,,,,,58,,,,,,19,,,,,,,
"<Method>org.apache.kafka.common.Node.public Node( int, String, int ): void","Node( int, String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.Node.public Node( int, String, int, String ): void","Node( int, String, int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,5
<Method>org.apache.kafka.common.Node.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,1,4,8
<Method>org.apache.kafka.common.Node.public hasRack( ): boolean,hasRack( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,0,2,8
<Method>org.apache.kafka.common.Node.public host( ): String,host( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public id( ): int,id( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public idString( ): String,idString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,3
<Method>org.apache.kafka.common.Node.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public rack( ): String,rack( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public static noNode( ): Node,static noNode( ): Node,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,4
<Field>org.apache.kafka.common.Node->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->idString,final idString : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->rack,final rack : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->hash,hash : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->NO_NODE,static final NO_NODE : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.PartitionInfo,PartitionInfo,low,low,low-medium,low,1,15,6,1,0,14,51,44,6,0,10,0,0,0.714,0.575,0.639,0,0,,,,,51,,,,,,14,,,,,,,
"<Method>org.apache.kafka.common.PartitionInfo.public PartitionInfo( String, int, Node, Node, Node ): void","PartitionInfo( String, int, Node, Node, Node ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.common.PartitionInfo.public PartitionInfo( String, int, Node, Node, Node, Node ): void","PartitionInfo( String, int, Node, Node, Node, Node ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,6,0,6
<Method>org.apache.kafka.common.PartitionInfo.private formatNodeIds( Node ): String,formatNodeIds( Node ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,5,0
<Method>org.apache.kafka.common.PartitionInfo.public inSyncReplicas( ): Node,inSyncReplicas( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.PartitionInfo.public leader( ): Node,leader( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.PartitionInfo.public offlineReplicas( ): Node,offlineReplicas( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.PartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.PartitionInfo.public replicas( ): Node,replicas( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.PartitionInfo.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,0,5,7
<Method>org.apache.kafka.common.PartitionInfo.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.PartitionInfo->inSyncReplicas,final inSyncReplicas : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.PartitionInfo->leader,final leader : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.PartitionInfo->offlineReplicas,final offlineReplicas : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.PartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.PartitionInfo->replicas,final replicas : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.PartitionInfo->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Reconfigurable,Reconfigurable,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.167,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.Reconfigurable.public abstract reconfigurableConfigs( ): Set,reconfigurableConfigs( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.Reconfigurable.public abstract reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.Reconfigurable.public abstract validateReconfiguration( Map ): void,validateReconfiguration( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.TopicPartition,TopicPartition,low,low,low,low-medium,0,9,3,1,0,10,35,30,3,1,6,0,0,0.65,0.625,0.067,0,0,,,,,35,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.TopicPartition.public TopicPartition( String, int ): void","TopicPartition( String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.TopicPartition.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,3,4
<Method>org.apache.kafka.common.TopicPartition.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,0,1,5
<Method>org.apache.kafka.common.TopicPartition.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartition.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.TopicPartition.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartition->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartitionInfo,TopicPartitionInfo,low,low,low,low-medium,2,22,6,1,0,14,37,32,4,0,8,0,0,0.429,0.7,0.214,0,0,,,,,37,,,,,,14,,,,,,,
"<Method>org.apache.kafka.common.TopicPartitionInfo.public TopicPartitionInfo( int, Node, List, List ): void","TopicPartitionInfo( int, Node, List, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,2,4
<Method>org.apache.kafka.common.TopicPartitionInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,5,8
<Method>org.apache.kafka.common.TopicPartitionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,0,3,7
<Method>org.apache.kafka.common.TopicPartitionInfo.public isr( ): List,isr( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionInfo.public leader( ): Node,leader( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionInfo.public replicas( ): List,replicas( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionInfo.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,4
<Field>org.apache.kafka.common.TopicPartitionInfo->isr,final isr : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionInfo->leader,final leader : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionInfo->replicas,final replicas : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartitionReplica,TopicPartitionReplica,low,low,low,low-medium,0,12,5,1,0,11,39,34,4,0,7,0,0,0.5,0.643,0.143,0,0,,,,,39,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.TopicPartitionReplica.public TopicPartitionReplica( String, int, int ): void","TopicPartitionReplica( String, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,3
<Method>org.apache.kafka.common.TopicPartitionReplica.public brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionReplica.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,3,6
<Method>org.apache.kafka.common.TopicPartitionReplica.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,0,1,6
<Method>org.apache.kafka.common.TopicPartitionReplica.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.TopicPartitionReplica.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.TopicPartitionReplica.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartitionReplica->brokerId,final brokerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionReplica->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionReplica->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartitionReplica->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.acl,org.apache.kafka.common.acl,low,low,low-medium,low,,,,,,93,267,,,,,,,,,,,,,7,7,0,267,14,2,0,0.125,0.875,93,,,,,,,
org.apache.kafka.common.acl.AccessControlEntry,AccessControlEntry,low,low,low,medium-high,4,23,9,1,0,13,37,34,1,0,10,0,0,0,0.72,0,0,0,,,,,37,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.acl.AccessControlEntry.public AccessControlEntry( String, String, AclOperation, AclPermissionType ): void","AccessControlEntry( String, String, AclOperation, AclPermissionType ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,4,4,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,2
<Method>org.apache.kafka.common.acl.AccessControlEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public host( ): String,host( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public operation( ): AclOperation,operation( ): AclOperation,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public permissionType( ): AclPermissionType,permissionType( ): AclPermissionType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public principal( ): String,principal( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public toFilter( ): AccessControlEntryFilter,toFilter( ): AccessControlEntryFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AccessControlEntry.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.common.acl.AccessControlEntry->data,final data : AccessControlEntryData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AccessControlEntryData,AccessControlEntryData,low,low,low-medium,medium-high,2,14,8,1,0,19,52,47,4,0,10,0,0,0.438,0.72,0.5,2,0,,,,,52,,,,,,19,,,,,,,
"<Method>org.apache.kafka.common.acl.AccessControlEntryData. AccessControlEntryData( String, String, AclOperation, AclPermissionType ): void"," AccessControlEntryData( String, String, AclOperation, AclPermissionType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.common.acl.AccessControlEntryData. host( ): String, host( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AccessControlEntryData. isUnknown( ): boolean, isUnknown( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.acl.AccessControlEntryData. operation( ): AclOperation, operation( ): AclOperation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AccessControlEntryData. permissionType( ): AclPermissionType, permissionType( ): AclPermissionType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AccessControlEntryData. principal( ): String, principal( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AccessControlEntryData.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,1,4,8
<Method>org.apache.kafka.common.acl.AccessControlEntryData.public findIndefiniteField( ): String,findIndefiniteField( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,14,0,6,0
<Method>org.apache.kafka.common.acl.AccessControlEntryData.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.common.acl.AccessControlEntryData.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,0,6
<Field>org.apache.kafka.common.acl.AccessControlEntryData->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AccessControlEntryData->operation,final operation : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AccessControlEntryData->permissionType,final permissionType : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AccessControlEntryData->principal,final principal : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AccessControlEntryFilter,AccessControlEntryFilter,low,low,low,medium-high,4,33,21,1,0,20,45,40,1,1,13,0,0,0.5,0.791,0.167,0,0,,,,,45,,,,,,20,,,,,,,
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter. AccessControlEntryFilter( AccessControlEntryData ): void, AccessControlEntryFilter( AccessControlEntryData ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public AccessControlEntryFilter( String, String, AclOperation, AclPermissionType ): void","AccessControlEntryFilter( String, String, AclOperation, AclPermissionType ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,2,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,2
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public findIndefiniteField( ): String,findIndefiniteField( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public host( ): String,host( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public matches( AccessControlEntry ): boolean,matches( AccessControlEntry ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,8,1,16,3
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public operation( ): AclOperation,operation( ): AclOperation,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public permissionType( ): AclPermissionType,permissionType( ): AclPermissionType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public principal( ): String,principal( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.acl.AccessControlEntryFilter.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.common.acl.AccessControlEntryFilter->data,final data : AccessControlEntryData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AccessControlEntryFilter->ANY,static final ANY : AccessControlEntryFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclBinding,AclBinding,low,low,low,low-medium,5,24,10,1,0,12,31,27,2,0,9,0,0,0.143,0.689,0.25,0,0,,,,,31,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.acl.AclBinding.public AclBinding( Resource, AccessControlEntry ): void","AclBinding( Resource, AccessControlEntry ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.acl.AclBinding.public AclBinding( ResourcePattern, AccessControlEntry ): void","AclBinding( ResourcePattern, AccessControlEntry ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
<Method>org.apache.kafka.common.acl.AclBinding.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.common.acl.AclBinding.public final entry( ): AccessControlEntry,final entry( ): AccessControlEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclBinding.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.acl.AclBinding.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.acl.AclBinding.public pattern( ): ResourcePattern,pattern( ): ResourcePattern,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclBinding.public toFilter( ): AclBindingFilter,toFilter( ): AclBindingFilter,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.acl.AclBinding.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.common.acl.AclBinding->entry,final entry : AccessControlEntry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclBinding->pattern,final pattern : ResourcePattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclBindingFilter,AclBindingFilter,low-medium,low,low,medium-high,5,51,16,1,0,15,39,34,2,1,11,0,0,0.444,0.742,0.2,0,0,,,,,39,,,,,,15,,,,,,,
"<Method>org.apache.kafka.common.acl.AclBindingFilter.public AclBindingFilter( ResourceFilter, AccessControlEntryFilter ): void","AclBindingFilter( ResourceFilter, AccessControlEntryFilter ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.acl.AclBindingFilter.public AclBindingFilter( ResourcePatternFilter, AccessControlEntryFilter ): void","AclBindingFilter( ResourcePatternFilter, AccessControlEntryFilter ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.common.acl.AclBindingFilter.public final entryFilter( ): AccessControlEntryFilter,final entryFilter( ): AccessControlEntryFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclBindingFilter.public findIndefiniteField( ): String,findIndefiniteField( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public matches( AclBinding ): boolean,matches( AclBinding ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.acl.AclBindingFilter.public patternFilter( ): ResourcePatternFilter,patternFilter( ): ResourcePatternFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclBindingFilter.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.common.acl.AclBindingFilter->entryFilter,final entryFilter : AccessControlEntryFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclBindingFilter->patternFilter,final patternFilter : ResourcePatternFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclBindingFilter->ANY,static final ANY : AclBindingFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclOperation,AclOperation,low-medium,low,low,low,0,7,2,2,0,7,36,16,1,14,3,2,0,1.15,0.467,0.5,0,0,,,,,36,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.acl.AclOperation.private AclOperation( byte ): void,AclOperation( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclOperation.public static fromCode( byte ): AclOperation,static fromCode( byte ): AclOperation,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,2
<Method>org.apache.kafka.common.acl.AclOperation.public static fromString( String ): AclOperation,static fromString( String ): AclOperation,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Field>org.apache.kafka.common.acl.AclOperation->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALL,static final ALL : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALTER,static final ALTER : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ALTER_CONFIGS,static final ALTER_CONFIGS : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->ANY,static final ANY : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->CLUSTER_ACTION,static final CLUSTER_ACTION : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->CODE_TO_VALUE,static final CODE_TO_VALUE : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->CREATE,static final CREATE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DELETE,static final DELETE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DESCRIBE,static final DESCRIBE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->DESCRIBE_CONFIGS,static final DESCRIBE_CONFIGS : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->IDEMPOTENT_WRITE,static final IDEMPOTENT_WRITE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->READ,static final READ : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->UNKNOWN,static final UNKNOWN : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclOperation->WRITE,static final WRITE : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.acl.AclPermissionType,AclPermissionType,low-medium,low,low,low,0,7,2,2,0,7,27,16,1,5,3,2,0,1,0.467,0.5,0,0,,,,,27,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.acl.AclPermissionType.private AclPermissionType( byte ): void,AclPermissionType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.acl.AclPermissionType.public static fromCode( byte ): AclPermissionType,static fromCode( byte ): AclPermissionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,2
<Method>org.apache.kafka.common.acl.AclPermissionType.public static fromString( String ): AclPermissionType,static fromString( String ): AclPermissionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Field>org.apache.kafka.common.acl.AclPermissionType->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->ALLOW,static final ALLOW : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->ANY,static final ANY : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->CODE_TO_VALUE,static final CODE_TO_VALUE : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->DENY,static final DENY : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.acl.AclPermissionType->UNKNOWN,static final UNKNOWN : AclPermissionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.annotation,org.apache.kafka.common.annotation,low,low,low,low,,,,,,0,11,,,,,,,,,,,,,4,1,3,11,0,0,0.75,1,0.75,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability,InterfaceStability,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Evolving,Evolving,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Stable,Stable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Unstable,Unstable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.cache,org.apache.kafka.common.cache,low,low,low,low,,,,,,14,41,,,,,,,,,,,,,3,2,1,41,9,0,0.333,0,0.667,14,,,,,,,
"org.apache.kafka.common.cache.Cache<K,V>",Cache,low,low,low,low,0,4,0,1,2,4,5,4,0,0,4,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.common.cache.LRUCache<K,V>",LRUCache,low,low,low,low,0,9,4,1,0,5,20,18,1,0,5,0,0,0,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.cache.LRUCache$1116;,Lorg.apache.kafka.common.cache.LRUCache$1116;,low,low,low,low,0,0,0,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public LRUCache( int ): void",LRUCache( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,0,1
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.common.cache.LRUCache<K,V>->cache",final cache : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.common.cache.SynchronizedCache<K,V>",SynchronizedCache,low,low,low,low,0,9,4,1,0,5,16,14,1,0,5,0,0,0,0.5,0,0,0,,,,,16,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public SynchronizedCache( Cache ): void",SynchronizedCache( Cache ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized remove( K ): boolean",synchronized remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized size( ): long",synchronized size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.common.cache.SynchronizedCache<K,V>->underlying",final underlying : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.config,org.apache.kafka.common.config,low-medium,low,high,low,,,,,,429,1538,,,,,,,,,,,,,35,32,3,1538,113,4,0.086,0.034,0.88,429,,,,,,,
org.apache.kafka.common.config.AbstractConfig,AbstractConfig,medium-high,medium-high,medium-high,medium-high,12,128,62,1,17,86,264,219,5,2,37,0,0,0.829,0.723,0.911,0,0,,,,,264,,,,,,86,,,,,,,
org.apache.kafka.common.config.AbstractConfig.RecordingMap<V>,RecordingMap,low,low,low,low,0,9,3,3,0,8,27,24,2,0,5,0,0,0,0.52,0,0,0,,,,,27,,,,,,8,,,,,,,
org.apache.kafka.common.config.AbstractConfig.ResolvingMap<V>,ResolvingMap,low,low,low,low,0,6,4,3,0,4,10,8,1,0,2,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.config.AbstractConfig.public AbstractConfig( ConfigDef, Map ): void","AbstractConfig( ConfigDef, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public AbstractConfig( ConfigDef, Map, Map, boolean ): void","AbstractConfig( ConfigDef, Map, Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,15,4,16,8
"<Method>org.apache.kafka.common.config.AbstractConfig.public AbstractConfig( ConfigDef, Map, boolean ): void","AbstractConfig( ConfigDef, Map, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.config.AbstractConfig.private configProviderProperties( String, Map ): Map","configProviderProperties( String, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,2,9,0
<Method>org.apache.kafka.common.config.AbstractConfig.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,3,2
<Method>org.apache.kafka.common.config.AbstractConfig.private extractPotentialVariables( Map ): Map,extractPotentialVariables( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,5,0
<Method>org.apache.kafka.common.config.AbstractConfig.protected get( String ): Object,get( String ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,3
<Method>org.apache.kafka.common.config.AbstractConfig.public getBoolean( String ): Boolean,getBoolean( String ): Boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getClass( String ): Class,getClass( String ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.config.AbstractConfig.private getConfiguredInstance( Object, Class, Map ): T","getConfiguredInstance( Object, Class, Map ): T",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,18,3,8,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public getConfiguredInstance( String, Class ): T","getConfiguredInstance( String, Class ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public getConfiguredInstances( List, Class, Map ): List","getConfiguredInstances( List, Class, Map ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,3,5,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public getConfiguredInstances( String, Class ): List","getConfiguredInstances( String, Class ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public getConfiguredInstances( String, Class, Map ): List","getConfiguredInstances( String, Class, Map ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getDouble( String ): Double,getDouble( String ): Double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getInt( String ): Integer,getInt( String ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getList( String ): List,getList( String ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getLong( String ): Long,getLong( String ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getPassword( String ): Password,getPassword( String ): Password,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getShort( String ): Short,getShort( String ): Short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public getString( String ): String,getString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.config.AbstractConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.config.AbstractConfig.public ignore( String ): void,ignore( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.config.AbstractConfig.private instantiateConfigProviders( Map, Map ): Map","instantiateConfigProviders( Map, Map ): Map",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,21,2,18,5
<Method>org.apache.kafka.common.config.AbstractConfig.private logAll( ): void,logAll( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,15,2
<Method>org.apache.kafka.common.config.AbstractConfig.public logUnused( ): void,logUnused( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,1
<Method>org.apache.kafka.common.config.AbstractConfig.public originals( ): Map,originals( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.common.config.AbstractConfig.public originalsStrings( ): Map,originalsStrings( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,10,1
<Method>org.apache.kafka.common.config.AbstractConfig.public originalsWithPrefix( String ): Map,originalsWithPrefix( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.config.AbstractConfig.public originalsWithPrefix( String, boolean ): Map","originalsWithPrefix( String, boolean ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,9,2,14,1
<Method>org.apache.kafka.common.config.AbstractConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.config.AbstractConfig.private resolveConfigVariables( Map, Map ): Map","resolveConfigVariables( Map, Map ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,20,2,11,0
<Method>org.apache.kafka.common.config.AbstractConfig.public typeOf( String ): Type,typeOf( String ): Type,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,1
<Method>org.apache.kafka.common.config.AbstractConfig.public unused( ): Set,unused( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.common.config.AbstractConfig.public values( ): Map,values( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.AbstractConfig.public valuesWithPrefixAllOrNothing( String ): Map,valuesWithPrefixAllOrNothing( String ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,11,2
<Method>org.apache.kafka.common.config.AbstractConfig.public valuesWithPrefixOverride( String ): Map,valuesWithPrefixOverride( String ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,14,1,22,5
<Field>org.apache.kafka.common.config.AbstractConfig->definition,final definition : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->originals,final originals : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->used,final used : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->values,final values : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->CONFIG_PROVIDERS_CONFIG,static final CONFIG_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.AbstractConfig->CONFIG_PROVIDERS_PARAM,static final CONFIG_PROVIDERS_PARAM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.Config,Config,low,low,low,low,0,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.config.Config.public Config( List ): void,Config( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.config.Config.public configValues( ): List,configValues( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.Config->configValues,final configValues : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigChangeCallback,ConfigChangeCallback,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.config.ConfigChangeCallback.public abstract onChange( String, ConfigData ): void","onChange( String, ConfigData ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.common.config.ConfigData,ConfigData,low,low,low,low,0,4,0,1,0,4,12,9,2,0,4,0,0,0.5,0.417,0.667,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.config.ConfigData.public ConfigData( Map ): void,ConfigData( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.config.ConfigData.public ConfigData( Map, Long ): void","ConfigData( Map, Long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.config.ConfigData.public data( ): Map,data( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigData.public ttl( ): Long,ttl( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.ConfigData->data,final data : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigData->ttl,final ttl : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigDef,ConfigDef,very-high,low-medium,high,medium-high,6,130,91,1,0,192,715,522,3,2,49,7,0,0.75,0.763,0.935,0,0,,,,,715,,,,,,192,,,,,,,
org.apache.kafka.common.config.ConfigDef.CaseInsensitiveValidString,CaseInsensitiveValidString,low,low,low,low,2,19,8,1,0,6,15,13,1,0,3,1,0,0,0.5,0.667,0,0,,,,,15,,,,,,6,,,,,,,
org.apache.kafka.common.config.ConfigDef.CompositeValidator,CompositeValidator,low,low,low,low,0,12,8,1,0,8,19,17,1,0,3,1,0,0,0.6,0.667,0,0,,,,,19,,,,,,8,,,,,,,
org.apache.kafka.common.config.ConfigDef.ConfigKey,ConfigKey,low,low,low,low,5,27,4,1,0,6,38,24,13,0,3,0,0,0.923,0.606,0.333,0,0,,,,,38,,,,,,6,,,,,,,
org.apache.kafka.common.config.ConfigDef.Importance,Importance,low,low,low,low,0,0,0,2,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.LambdaValidator,LambdaValidator,low,low,low,low,0,6,2,1,0,4,16,13,2,0,3,1,0,0.5,0.5,1,0,0,,,,,16,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$60579;,Lorg.apache.kafka.common.config.ConfigDef$60579;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$61679;,Lorg.apache.kafka.common.config.ConfigDef$61679;,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.NonEmptyString,NonEmptyString,low,low,low,low,1,3,1,1,0,4,9,8,0,0,2,0,0,0,0.333,0,0,0,,,,,9,,,,,,4,,,,,,,
org.apache.kafka.common.config.ConfigDef.NonEmptyStringWithoutControlChars,NonEmptyStringWithoutControlChars,low,low,low,low,2,17,7,1,0,8,18,17,0,0,2,1,0,0,0.444,0,0,0,,,,,18,,,,,,8,,,,,,,
org.apache.kafka.common.config.ConfigDef.NonNullValidator,NonNullValidator,low,low,low,low,1,2,0,1,0,3,7,6,0,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,3,,,,,,,
org.apache.kafka.common.config.ConfigDef.Range,Range,low,low,low,low,1,6,1,1,0,14,27,24,2,0,3,2,0,0,0.5,0.833,0,0,,,,,27,,,,,,14,,,,,,,
org.apache.kafka.common.config.ConfigDef.Recommender,Recommender,low,low,low,low,0,2,0,1,2,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigDef.Type,Type,low,low,low,low,0,0,0,2,0,0,2,0,0,9,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidList,ValidList,low,low,low,low,1,16,3,1,0,5,14,12,1,0,3,1,0,0,0.5,0.667,0,0,,,,,14,,,,,,5,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidString,ValidString,low,low,low,low,2,14,3,1,0,5,13,11,1,0,3,1,0,0,0.5,0.667,0,0,,,,,13,,,,,,5,,,,,,,
org.apache.kafka.common.config.ConfigDef.Validator,Validator,low,low,low,low,0,1,0,1,15,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Width,Width,low,low,low,low,0,0,0,2,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.config.ConfigDef. getConfigsWithNoParent( ): Set, getConfigsWithNoParent( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,4,5
"<Method>org.apache.kafka.common.config.ConfigDef. parseForValidate( Map, Map ): Map"," parseForValidate( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.common.config.ConfigDef. parseValue( ConfigKey, Object, boolean ): Object"," parseValue( ConfigKey, Object, boolean ): Object",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,3,3,1
<Method>org.apache.kafka.common.config.ConfigDef.public ConfigDef( ): void,ConfigDef( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.common.config.ConfigDef.public ConfigDef( ConfigDef ): void,ConfigDef( ConfigDef ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,5
"<Method>org.apache.kafka.common.config.ConfigDef.private addColumnValue( StringBuilder, String ): void","addColumnValue( StringBuilder, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
"<Method>org.apache.kafka.common.config.ConfigDef.private addHeader( StringBuilder, String ): void","addHeader( StringBuilder, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
"<Method>org.apache.kafka.common.config.ConfigDef.private compare( ConfigKey, ConfigKey, Map ): int","compare( ConfigKey, ConfigKey, Map ): int",low-medium,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,16,3,10,0
<Method>org.apache.kafka.common.config.ConfigDef.public configKeys( ): Map,configKeys( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigDef.public defaultValues( ): Map,defaultValues( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,2,2
<Method>org.apache.kafka.common.config.ConfigDef.public define( ConfigKey ): ConfigDef,define( ConfigKey ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,4,4
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Importance, String ): ConfigDef","define( String, Type, Importance, String ): ConfigDef",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,1
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Importance, String, String, int, Width, String ): ConfigDef","define( String, Type, Importance, String, String, int, Width, String ): ConfigDef",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,8,2,1
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Importance, String, String, int, Width, String, List ): ConfigDef","define( String, Type, Importance, String, String, int, Width, String, List ): ConfigDef",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,9,1,1
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef","define( String, Type, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,10,1,1
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Importance, String, String, int, Width, String, Recommender ): ConfigDef","define( String, Type, Importance, String, String, int, Width, String, Recommender ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,9,2,1
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Importance, String ): ConfigDef","define( String, Type, Object, Importance, String ): ConfigDef",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Importance, String, String, int, Width, String ): ConfigDef","define( String, Type, Object, Importance, String, String, int, Width, String ): ConfigDef",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,9,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Importance, String, String, int, Width, String, List ): ConfigDef","define( String, Type, Object, Importance, String, String, int, Width, String, List ): ConfigDef",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,10,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef","define( String, Type, Object, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,11,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Importance, String, String, int, Width, String, Recommender ): ConfigDef","define( String, Type, Object, Importance, String, String, int, Width, String, Recommender ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,10,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Validator, Importance, String ): ConfigDef","define( String, Type, Object, Validator, Importance, String ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,6,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Validator, Importance, String, String, int, Width, String ): ConfigDef","define( String, Type, Object, Validator, Importance, String, String, int, Width, String ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,10,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Validator, Importance, String, String, int, Width, String, List ): ConfigDef","define( String, Type, Object, Validator, Importance, String, String, int, Width, String, List ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,11,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Validator, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef","define( String, Type, Object, Validator, Importance, String, String, int, Width, String, List, Recommender ): ConfigDef",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,12,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public define( String, Type, Object, Validator, Importance, String, String, int, Width, String, Recommender ): ConfigDef","define( String, Type, Object, Validator, Importance, String, String, int, Width, String, Recommender ): ConfigDef",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,11,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.public defineInternal( String, Type, Object, Importance ): ConfigDef","defineInternal( String, Type, Object, Importance ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.public embed( String, String, int, ConfigDef ): void","embed( String, String, int, ConfigDef ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,17,4,5,0
"<Method>org.apache.kafka.common.config.ConfigDef.private getConfigKeyRst( ConfigKey, StringBuilder ): void","getConfigKeyRst( ConfigKey, StringBuilder ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,2,26,0
"<Method>org.apache.kafka.common.config.ConfigDef.protected getConfigValue( ConfigKey, String ): String","getConfigValue( ConfigKey, String ): String",low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,25,2,7,0
<Method>org.apache.kafka.common.config.ConfigDef.public groups( ): List,groups( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigDef.protected headers( ): List,headers( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.config.ConfigDef.public names( ): Set,names( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.config.ConfigDef.public parse( Map ): Map,parse( Map ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,8,1
"<Method>org.apache.kafka.common.config.ConfigDef.private parseForValidate( String, Map, Map, Map ): void","parseForValidate( String, Map, Map, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,24,4,16,3
<Method>org.apache.kafka.common.config.ConfigDef.private sortedConfigs( ): List,sortedConfigs( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,4,3
"<Method>org.apache.kafka.common.config.ConfigDef.private static addConfigDetail( StringBuilder, String, String ): void","static addConfigDetail( StringBuilder, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.config.ConfigDef.public static convertToString( Object, Type ): String","static convertToString( Object, Type ): String",low-medium,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,22,2,4,0
<Method>org.apache.kafka.common.config.ConfigDef.public static convertToStringMapWithPasswordValues( Map ): Map,static convertToStringMapWithPasswordValues( Map ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,16,1,8,0
"<Method>org.apache.kafka.common.config.ConfigDef.private static embeddedDependents( String, List ): List","static embeddedDependents( String, List ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.private static embeddedRecommender( String, Recommender ): Recommender","static embeddedRecommender( String, Recommender ): Recommender",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,18,2,0,0
"<Method>org.apache.kafka.common.config.ConfigDef.private static embeddedValidator( String, Validator ): Validator","static embeddedValidator( String, Validator ): Validator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,2,0,0
"<Method>org.apache.kafka.common.config.ConfigDef.public static parseType( String, Object, Type ): Object","static parseType( String, Object, Type ): Object",very-high,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,4,86,3,29,1
<Method>org.apache.kafka.common.config.ConfigDef.public toEnrichedRst( ): String,toEnrichedRst( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,27,0,19,0
<Method>org.apache.kafka.common.config.ConfigDef.public toHtml( ): String,toHtml( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.config.ConfigDef.public toHtml( Map ): String,toHtml( Map ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,27,1,21,0
<Method>org.apache.kafka.common.config.ConfigDef.public toHtmlTable( ): String,toHtmlTable( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.config.ConfigDef.public toHtmlTable( Map ): String,toHtmlTable( Map ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,26,1,18,0
<Method>org.apache.kafka.common.config.ConfigDef.public toRst( ): String,toRst( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,4,0
<Method>org.apache.kafka.common.config.ConfigDef.private undefinedDependentConfigs( ): List,undefinedDependentConfigs( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,7,0,3,2
<Method>org.apache.kafka.common.config.ConfigDef.public validate( Map ): List,validate( Map ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.private validate( Map, Map ): Map","validate( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.common.config.ConfigDef.private validate( String, Map, Map ): void","validate( String, Map, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,19,3,14,2
<Method>org.apache.kafka.common.config.ConfigDef.public validateAll( Map ): Map,validateAll( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,8,1
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSaslSupport( ): ConfigDef,withClientSaslSupport( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSslSupport( ): ConfigDef,withClientSslSupport( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.common.config.ConfigDef->configsWithNoParent,configsWithNoParent : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigDef->configKeys,final configKeys : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigDef->groups,final groups : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigDef->COMMA_WITH_WHITESPACE,static final COMMA_WITH_WHITESPACE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigDef->NO_DEFAULT_VALUE,static final NO_DEFAULT_VALUE : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigException,ConfigException,medium-high,low,low,low,0,3,0,5,0,4,8,6,0,1,3,0,0,0,0.111,0,0,0,,,,,8,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.config.ConfigException.public ConfigException( String ): void,ConfigException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.config.ConfigException.public ConfigException( String, Object ): void","ConfigException( String, Object ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.config.ConfigException.public ConfigException( String, Object, String ): void","ConfigException( String, Object, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,3,0,0
<Field>org.apache.kafka.common.config.ConfigException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigResource,ConfigResource,low,low,low,low-medium,0,13,6,1,0,10,42,27,2,0,7,0,0,0.25,0.643,0.095,0,0,,,,,42,,,,,,10,,,,,,,
org.apache.kafka.common.config.ConfigResource.Type,Type,low,low,low,low,0,4,1,2,0,3,12,6,1,5,2,1,0,1.167,0.167,1,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.config.ConfigResource.public ConfigResource( Type, String ): void","ConfigResource( Type, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.common.config.ConfigResource.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,3,4
<Method>org.apache.kafka.common.config.ConfigResource.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,2
<Method>org.apache.kafka.common.config.ConfigResource.public isDefault( ): boolean,isDefault( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.config.ConfigResource.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigResource.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.config.ConfigResource.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.ConfigResource->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigResource->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigTransformer,ConfigTransformer,low,low,low-medium,low,3,24,22,1,0,19,75,61,1,2,2,2,0,1,0.312,0,0,0,,,,,75,,,,,,19,,,,,,,
org.apache.kafka.common.config.ConfigTransformer.ConfigVariable,ConfigVariable,low,low,low,low,0,3,1,1,0,4,10,6,3,0,2,0,0,0,0.25,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.config.ConfigTransformer.public ConfigTransformer( Map ): void,ConfigTransformer( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.config.ConfigTransformer.private static getVars( String, Pattern ): List","static getVars( String, Pattern ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,0
"<Method>org.apache.kafka.common.config.ConfigTransformer.private static replace( Map, String, Pattern ): String","static replace( Map, String, Pattern ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,22,3,14,0
<Method>org.apache.kafka.common.config.ConfigTransformer.public transform( Map ): ConfigTransformerResult,transform( Map ): ConfigTransformerResult,low-medium,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,5,31,1,25,3
<Field>org.apache.kafka.common.config.ConfigTransformer->configProviders,final configProviders : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigTransformer->DEFAULT_PATTERN,static final DEFAULT_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigTransformer->EMPTY_PATH,static final EMPTY_PATH : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigTransformerResult,ConfigTransformerResult,low,low,low,low,0,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.config.ConfigTransformerResult.public ConfigTransformerResult( Map, Map ): void","ConfigTransformerResult( Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.config.ConfigTransformerResult.public data( ): Map,data( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigTransformerResult.public ttls( ): Map,ttls( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.ConfigTransformerResult->data,data : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigTransformerResult->ttls,ttls : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.ConfigValue,ConfigValue,low,low,low-medium,low-medium,0,22,8,1,0,17,60,54,5,0,14,0,0,0.6,0.671,0.495,0,0,,,,,60,,,,,,17,,,,,,,
<Method>org.apache.kafka.common.config.ConfigValue.public ConfigValue( String ): void,ConfigValue( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.config.ConfigValue.public ConfigValue( String, Object, List, List ): void","ConfigValue( String, Object, List, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,5
<Method>org.apache.kafka.common.config.ConfigValue.public addErrorMessage( String ): void,addErrorMessage( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.config.ConfigValue.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,7,10
<Method>org.apache.kafka.common.config.ConfigValue.public errorMessages( ): List,errorMessages( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.common.config.ConfigValue.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public recommendedValues( ): List,recommendedValues( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public recommendedValues( List ): void,recommendedValues( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,0,12,5
<Method>org.apache.kafka.common.config.ConfigValue.public value( ): Object,value( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public value( Object ): void,value( Object ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.config.ConfigValue.public visible( boolean ): void,visible( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.config.ConfigValue->errorMessages,final errorMessages : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigValue->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigValue->recommendedValues,recommendedValues : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigValue->value,value : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.ConfigValue->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.LogLevelConfig,LogLevelConfig,low,low,low,low,0,0,0,1,0,0,11,0,0,7,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->DEBUG_LOG_LEVEL,static final DEBUG_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->ERROR_LOG_LEVEL,static final ERROR_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->FATAL_LOG_LEVEL,static final FATAL_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->INFO_LOG_LEVEL,static final INFO_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->TRACE_LOG_LEVEL,static final TRACE_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->VALID_LOG_LEVELS,static final VALID_LOG_LEVELS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.LogLevelConfig->WARN_LOG_LEVEL,static final WARN_LOG_LEVEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SaslConfigs,SaslConfigs,low,low,low-medium,low,4,13,3,1,0,1,90,15,0,44,0,1,0,0,0,0,0,0,,,,,90,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.SaslConfigs.public static addClientSaslSupport( ConfigDef ): void,static addClientSaslSupport( ConfigDef ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,1,18,37
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_KINIT_CMD,static final DEFAULT_KERBEROS_KINIT_CMD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN,static final DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_JITTER,static final DEFAULT_KERBEROS_TICKET_RENEW_JITTER : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR,static final DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_LOGIN_REFRESH_BUFFER_SECONDS,static final DEFAULT_LOGIN_REFRESH_BUFFER_SECONDS : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_LOGIN_REFRESH_MIN_PERIOD_SECONDS,static final DEFAULT_LOGIN_REFRESH_MIN_PERIOD_SECONDS : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_LOGIN_REFRESH_WINDOW_FACTOR,static final DEFAULT_LOGIN_REFRESH_WINDOW_FACTOR : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_LOGIN_REFRESH_WINDOW_JITTER,static final DEFAULT_LOGIN_REFRESH_WINDOW_JITTER : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_SASL_ENABLED_MECHANISMS,static final DEFAULT_SASL_ENABLED_MECHANISMS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES,static final DEFAULT_SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_SASL_MECHANISM,static final DEFAULT_SASL_MECHANISM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->GSSAPI_MECHANISM,static final GSSAPI_MECHANISM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_CLIENT_CALLBACK_HANDLER_CLASS,static final SASL_CLIENT_CALLBACK_HANDLER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_CLIENT_CALLBACK_HANDLER_CLASS_DOC,static final SASL_CLIENT_CALLBACK_HANDLER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_ENABLED_MECHANISMS,static final SASL_ENABLED_MECHANISMS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_ENABLED_MECHANISMS_DOC,static final SASL_ENABLED_MECHANISMS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_JAAS_CONFIG,static final SASL_JAAS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_JAAS_CONFIG_DOC,static final SASL_JAAS_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_KINIT_CMD,static final SASL_KERBEROS_KINIT_CMD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_KINIT_CMD_DOC,static final SASL_KERBEROS_KINIT_CMD_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN,static final SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN_DOC,static final SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES,static final SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_DOC,static final SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_SERVICE_NAME,static final SASL_KERBEROS_SERVICE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_SERVICE_NAME_DOC,static final SASL_KERBEROS_SERVICE_NAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_TICKET_RENEW_JITTER,static final SASL_KERBEROS_TICKET_RENEW_JITTER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_TICKET_RENEW_JITTER_DOC,static final SASL_KERBEROS_TICKET_RENEW_JITTER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR,static final SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR_DOC,static final SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_CALLBACK_HANDLER_CLASS,static final SASL_LOGIN_CALLBACK_HANDLER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_CALLBACK_HANDLER_CLASS_DOC,static final SASL_LOGIN_CALLBACK_HANDLER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_CLASS,static final SASL_LOGIN_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_CLASS_DOC,static final SASL_LOGIN_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_BUFFER_SECONDS,static final SASL_LOGIN_REFRESH_BUFFER_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_BUFFER_SECONDS_DOC,static final SASL_LOGIN_REFRESH_BUFFER_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS,static final SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS_DOC,static final SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_WINDOW_FACTOR,static final SASL_LOGIN_REFRESH_WINDOW_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_WINDOW_FACTOR_DOC,static final SASL_LOGIN_REFRESH_WINDOW_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_WINDOW_JITTER,static final SASL_LOGIN_REFRESH_WINDOW_JITTER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_LOGIN_REFRESH_WINDOW_JITTER_DOC,static final SASL_LOGIN_REFRESH_WINDOW_JITTER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_MECHANISM,static final SASL_MECHANISM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->SASL_MECHANISM_DOC,static final SASL_MECHANISM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SecurityConfig,SecurityConfig,low,low,low,low,0,0,0,1,0,0,5,0,0,2,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.SecurityConfig->SECURITY_PROVIDERS_CONFIG,static final SECURITY_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SecurityConfig->SECURITY_PROVIDERS_DOC,static final SECURITY_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SslClientAuth,SslClientAuth,low-medium,low,low,low,0,4,3,2,0,4,14,8,0,4,0,1,0,0,0,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.config.SslClientAuth.public static forConfig( String ): SslClientAuth,static forConfig( String ): SslClientAuth,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,1,3,2
<Field>org.apache.kafka.common.config.SslClientAuth->NONE,static final NONE : SslClientAuth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslClientAuth->REQUESTED,static final REQUESTED : SslClientAuth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslClientAuth->REQUIRED,static final REQUIRED : SslClientAuth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslClientAuth->VALUES,static final VALUES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SslConfigs,SslConfigs,low,low,low-medium,low,3,12,1,1,0,1,93,16,0,44,0,1,0,0,0,0,0,0,,,,,93,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.SslConfigs.public static addClientSslSupport( ConfigDef ): void,static addClientSslSupport( ConfigDef ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,1,15,37
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_PRINCIPAL_BUILDER_CLASS,static final DEFAULT_PRINCIPAL_BUILDER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_ENABLED_PROTOCOLS,static final DEFAULT_SSL_ENABLED_PROTOCOLS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM,static final DEFAULT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_KEYMANGER_ALGORITHM,static final DEFAULT_SSL_KEYMANGER_ALGORITHM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_KEYSTORE_TYPE,static final DEFAULT_SSL_KEYSTORE_TYPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_PROTOCOL,static final DEFAULT_SSL_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_TRUSTMANAGER_ALGORITHM,static final DEFAULT_SSL_TRUSTMANAGER_ALGORITHM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->DEFAULT_SSL_TRUSTSTORE_TYPE,static final DEFAULT_SSL_TRUSTSTORE_TYPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->NON_RECONFIGURABLE_CONFIGS,static final NON_RECONFIGURABLE_CONFIGS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->PRINCIPAL_BUILDER_CLASS_CONFIG,static final PRINCIPAL_BUILDER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->PRINCIPAL_BUILDER_CLASS_DOC,static final PRINCIPAL_BUILDER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->RECONFIGURABLE_CONFIGS,static final RECONFIGURABLE_CONFIGS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_CIPHER_SUITES_CONFIG,static final SSL_CIPHER_SUITES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_CIPHER_SUITES_DOC,static final SSL_CIPHER_SUITES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_CLIENT_AUTH_CONFIG,static final SSL_CLIENT_AUTH_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_CLIENT_AUTH_DOC,static final SSL_CLIENT_AUTH_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_ENABLED_PROTOCOLS_CONFIG,static final SSL_ENABLED_PROTOCOLS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_ENABLED_PROTOCOLS_DOC,static final SSL_ENABLED_PROTOCOLS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG,static final SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_DOC,static final SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYMANAGER_ALGORITHM_CONFIG,static final SSL_KEYMANAGER_ALGORITHM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYMANAGER_ALGORITHM_DOC,static final SSL_KEYMANAGER_ALGORITHM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_LOCATION_CONFIG,static final SSL_KEYSTORE_LOCATION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_LOCATION_DOC,static final SSL_KEYSTORE_LOCATION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_PASSWORD_CONFIG,static final SSL_KEYSTORE_PASSWORD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_PASSWORD_DOC,static final SSL_KEYSTORE_PASSWORD_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_TYPE_CONFIG,static final SSL_KEYSTORE_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEYSTORE_TYPE_DOC,static final SSL_KEYSTORE_TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEY_PASSWORD_CONFIG,static final SSL_KEY_PASSWORD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_KEY_PASSWORD_DOC,static final SSL_KEY_PASSWORD_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_PROTOCOL_CONFIG,static final SSL_PROTOCOL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_PROTOCOL_DOC,static final SSL_PROTOCOL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_PROVIDER_CONFIG,static final SSL_PROVIDER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_PROVIDER_DOC,static final SSL_PROVIDER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_SECURE_RANDOM_IMPLEMENTATION_CONFIG,static final SSL_SECURE_RANDOM_IMPLEMENTATION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_SECURE_RANDOM_IMPLEMENTATION_DOC,static final SSL_SECURE_RANDOM_IMPLEMENTATION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTMANAGER_ALGORITHM_CONFIG,static final SSL_TRUSTMANAGER_ALGORITHM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTMANAGER_ALGORITHM_DOC,static final SSL_TRUSTMANAGER_ALGORITHM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_LOCATION_CONFIG,static final SSL_TRUSTSTORE_LOCATION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_LOCATION_DOC,static final SSL_TRUSTSTORE_LOCATION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_PASSWORD_CONFIG,static final SSL_TRUSTSTORE_PASSWORD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_PASSWORD_DOC,static final SSL_TRUSTSTORE_PASSWORD_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_TYPE_CONFIG,static final SSL_TRUSTSTORE_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SslConfigs->SSL_TRUSTSTORE_TYPE_DOC,static final SSL_TRUSTSTORE_TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.TopicConfig,TopicConfig,low,low,low-medium,low,0,0,0,1,0,0,131,0,0,50,0,0,0,0,0,0,0,0,,,,,131,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->CLEANUP_POLICY_COMPACT,static final CLEANUP_POLICY_COMPACT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->CLEANUP_POLICY_CONFIG,static final CLEANUP_POLICY_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->CLEANUP_POLICY_DELETE,static final CLEANUP_POLICY_DELETE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->CLEANUP_POLICY_DOC,static final CLEANUP_POLICY_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->COMPRESSION_TYPE_CONFIG,static final COMPRESSION_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->COMPRESSION_TYPE_DOC,static final COMPRESSION_TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->DELETE_RETENTION_MS_CONFIG,static final DELETE_RETENTION_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->DELETE_RETENTION_MS_DOC,static final DELETE_RETENTION_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FILE_DELETE_DELAY_MS_CONFIG,static final FILE_DELETE_DELAY_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FILE_DELETE_DELAY_MS_DOC,static final FILE_DELETE_DELAY_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FLUSH_MESSAGES_INTERVAL_CONFIG,static final FLUSH_MESSAGES_INTERVAL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FLUSH_MESSAGES_INTERVAL_DOC,static final FLUSH_MESSAGES_INTERVAL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FLUSH_MS_CONFIG,static final FLUSH_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->FLUSH_MS_DOC,static final FLUSH_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->INDEX_INTERVAL_BYTES_CONFIG,static final INDEX_INTERVAL_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->INDEX_INTERVAL_BYTES_DOCS,static final INDEX_INTERVAL_BYTES_DOCS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MAX_COMPACTION_LAG_MS_CONFIG,static final MAX_COMPACTION_LAG_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MAX_COMPACTION_LAG_MS_DOC,static final MAX_COMPACTION_LAG_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MAX_MESSAGE_BYTES_CONFIG,static final MAX_MESSAGE_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MAX_MESSAGE_BYTES_DOC,static final MAX_MESSAGE_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_DOWNCONVERSION_ENABLE_CONFIG,static final MESSAGE_DOWNCONVERSION_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_DOWNCONVERSION_ENABLE_DOC,static final MESSAGE_DOWNCONVERSION_ENABLE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_FORMAT_VERSION_CONFIG,static final MESSAGE_FORMAT_VERSION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_FORMAT_VERSION_DOC,static final MESSAGE_FORMAT_VERSION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS_CONFIG,static final MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS_DOC,static final MESSAGE_TIMESTAMP_DIFFERENCE_MAX_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_TIMESTAMP_TYPE_CONFIG,static final MESSAGE_TIMESTAMP_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MESSAGE_TIMESTAMP_TYPE_DOC,static final MESSAGE_TIMESTAMP_TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_CLEANABLE_DIRTY_RATIO_CONFIG,static final MIN_CLEANABLE_DIRTY_RATIO_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_CLEANABLE_DIRTY_RATIO_DOC,static final MIN_CLEANABLE_DIRTY_RATIO_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_COMPACTION_LAG_MS_CONFIG,static final MIN_COMPACTION_LAG_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_COMPACTION_LAG_MS_DOC,static final MIN_COMPACTION_LAG_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_IN_SYNC_REPLICAS_CONFIG,static final MIN_IN_SYNC_REPLICAS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->MIN_IN_SYNC_REPLICAS_DOC,static final MIN_IN_SYNC_REPLICAS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->PREALLOCATE_CONFIG,static final PREALLOCATE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->PREALLOCATE_DOC,static final PREALLOCATE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->RETENTION_BYTES_CONFIG,static final RETENTION_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->RETENTION_BYTES_DOC,static final RETENTION_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->RETENTION_MS_CONFIG,static final RETENTION_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->RETENTION_MS_DOC,static final RETENTION_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_BYTES_CONFIG,static final SEGMENT_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_BYTES_DOC,static final SEGMENT_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_INDEX_BYTES_CONFIG,static final SEGMENT_INDEX_BYTES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_INDEX_BYTES_DOC,static final SEGMENT_INDEX_BYTES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_JITTER_MS_CONFIG,static final SEGMENT_JITTER_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_JITTER_MS_DOC,static final SEGMENT_JITTER_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_MS_CONFIG,static final SEGMENT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->SEGMENT_MS_DOC,static final SEGMENT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->UNCLEAN_LEADER_ELECTION_ENABLE_CONFIG,static final UNCLEAN_LEADER_ELECTION_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.TopicConfig->UNCLEAN_LEADER_ELECTION_ENABLE_DOC,static final UNCLEAN_LEADER_ELECTION_ENABLE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.config.internals,org.apache.kafka.common.config.internals,low,low,low,low,,,,,,0,56,,,,,,,,,,,,,1,1,0,56,9,0,0,0,1,0,,,,,,,
org.apache.kafka.common.config.internals.BrokerSecurityConfigs,BrokerSecurityConfigs,low,low,low-medium,low,0,0,0,1,0,0,56,0,0,17,0,0,0,0,0,0,0,0,,,,,56,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->CONNECTIONS_MAX_REAUTH_MS,static final CONNECTIONS_MAX_REAUTH_MS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->CONNECTIONS_MAX_REAUTH_MS_DOC,static final CONNECTIONS_MAX_REAUTH_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->DEFAULT_SASL_ENABLED_MECHANISMS,static final DEFAULT_SASL_ENABLED_MECHANISMS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->DEFAULT_SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES,static final DEFAULT_SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->DEFAULT_SSL_PRINCIPAL_MAPPING_RULES,static final DEFAULT_SSL_PRINCIPAL_MAPPING_RULES : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->PRINCIPAL_BUILDER_CLASS_CONFIG,static final PRINCIPAL_BUILDER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->PRINCIPAL_BUILDER_CLASS_DOC,static final PRINCIPAL_BUILDER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_ENABLED_MECHANISMS_CONFIG,static final SASL_ENABLED_MECHANISMS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_ENABLED_MECHANISMS_DOC,static final SASL_ENABLED_MECHANISMS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_CONFIG,static final SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_DOC,static final SASL_KERBEROS_PRINCIPAL_TO_LOCAL_RULES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_SERVER_CALLBACK_HANDLER_CLASS,static final SASL_SERVER_CALLBACK_HANDLER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SASL_SERVER_CALLBACK_HANDLER_CLASS_DOC,static final SASL_SERVER_CALLBACK_HANDLER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SSL_CLIENT_AUTH_CONFIG,static final SSL_CLIENT_AUTH_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SSL_CLIENT_AUTH_DOC,static final SSL_CLIENT_AUTH_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SSL_PRINCIPAL_MAPPING_RULES_CONFIG,static final SSL_PRINCIPAL_MAPPING_RULES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.internals.BrokerSecurityConfigs->SSL_PRINCIPAL_MAPPING_RULES_DOC,static final SSL_PRINCIPAL_MAPPING_RULES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.config.provider,org.apache.kafka.common.config.provider,low,low,low,low,,,,,,20,44,,,,,,,,,,,,,2,1,1,44,5,2,0.5,0.286,0.214,20,,,,,,,
org.apache.kafka.common.config.provider.ConfigProvider,ConfigProvider,low,low,low,low,2,5,0,1,1,5,9,5,0,0,5,0,0,0,0.3,0,0,0,,,,,9,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.config.provider.ConfigProvider.public abstract get( String ): ConfigData,get( String ): ConfigData,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.config.provider.ConfigProvider.public abstract get( String, Set ): ConfigData","get( String, Set ): ConfigData",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.config.provider.ConfigProvider.public subscribe( String, Set, ConfigChangeCallback ): void","subscribe( String, Set, ConfigChangeCallback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.common.config.provider.ConfigProvider.public unsubscribe( String, Set, ConfigChangeCallback ): void","unsubscribe( String, Set, ConfigChangeCallback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.common.config.provider.ConfigProvider.public unsubscribeAll( ): void,unsubscribeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.config.provider.FileConfigProvider,FileConfigProvider,low,low,low,low,2,15,11,1,0,15,35,34,0,0,5,0,0,0,0.5,0,0,0,,,,,35,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.config.provider.FileConfigProvider.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.config.provider.FileConfigProvider.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.config.provider.FileConfigProvider.public get( String ): ConfigData,get( String ): ConfigData,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,16,1,9,0
"<Method>org.apache.kafka.common.config.provider.FileConfigProvider.public get( String, Set ): ConfigData","get( String, Set ): ConfigData",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,14,2,5,0
<Method>org.apache.kafka.common.config.provider.FileConfigProvider.protected reader( String ): Reader,reader( String ): Reader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Package>org.apache.kafka.common.config.types,org.apache.kafka.common.config.types,low,low,low,low,,,,,,6,19,,,,,,,,,,,,,1,1,0,19,6,0,0,0,1,6,,,,,,,
org.apache.kafka.common.config.types.Password,Password,low,low,low,low,0,7,2,1,0,6,19,16,1,1,5,0,0,0.625,0.533,0.4,0,0,,,,,19,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.config.types.Password.public Password( String ): void,Password( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.config.types.Password.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,2
<Method>org.apache.kafka.common.config.types.Password.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.config.types.Password.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.config.types.Password.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.config.types.Password->value,final value : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.types.Password->HIDDEN,static final HIDDEN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.errors,org.apache.kafka.common.errors,low-medium,low,very-high,low,,,,,,233,654,,,,,,,,,,,,,98,98,0,654,111,4,0.02,0.035,0.945,233,,,,,,,
org.apache.kafka.common.errors.ApiException,ApiException,medium-high,low,low,low,0,5,0,5,60,5,13,11,0,1,5,0,1,0,0.4,0,0,1,,,,,13,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( ): void,ApiException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( String ): void,ApiException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ApiException.public ApiException( String, Throwable ): void","ApiException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( Throwable ): void,ApiException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.errors.ApiException.public fillInStackTrace( ): Throwable,fillInStackTrace( ): Throwable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.errors.ApiException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthenticationException,AuthenticationException,medium-high,low,low,low,0,3,0,6,5,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.errors.AuthenticationException.public AuthenticationException( String ): void,AuthenticationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.AuthenticationException.public AuthenticationException( String, Throwable ): void","AuthenticationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.AuthenticationException.public AuthenticationException( Throwable ): void,AuthenticationException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.AuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthorizationException,AuthorizationException,medium-high,low,low,low,0,2,0,6,5,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.AuthorizationException.public AuthorizationException( String ): void,AuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.AuthorizationException.public AuthorizationException( String, Throwable ): void","AuthorizationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.BrokerNotAvailableException,BrokerNotAvailableException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.BrokerNotAvailableException.public BrokerNotAvailableException( String ): void,BrokerNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.BrokerNotAvailableException.public BrokerNotAvailableException( String, Throwable ): void","BrokerNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.BrokerNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ClusterAuthorizationException,ClusterAuthorizationException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.ClusterAuthorizationException.public ClusterAuthorizationException( String ): void,ClusterAuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ClusterAuthorizationException.public ClusterAuthorizationException( String, Throwable ): void","ClusterAuthorizationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.ClusterAuthorizationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ConcurrentTransactionsException,ConcurrentTransactionsException,medium-high,low,low,low,0,1,0,6,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.ConcurrentTransactionsException.public ConcurrentTransactionsException( String ): void,ConcurrentTransactionsException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.ConcurrentTransactionsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ControllerMovedException,ControllerMovedException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.ControllerMovedException.public ControllerMovedException( String ): void,ControllerMovedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ControllerMovedException.public ControllerMovedException( String, Throwable ): void","ControllerMovedException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.ControllerMovedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CoordinatorLoadInProgressException,CoordinatorLoadInProgressException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.CoordinatorLoadInProgressException.public CoordinatorLoadInProgressException( String ): void,CoordinatorLoadInProgressException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.CoordinatorLoadInProgressException.public CoordinatorLoadInProgressException( String, Throwable ): void","CoordinatorLoadInProgressException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.CoordinatorLoadInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CoordinatorNotAvailableException,CoordinatorNotAvailableException,medium-high,low,low,low,0,3,0,7,0,3,9,6,0,2,3,0,0,0,0.333,1,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.errors.CoordinatorNotAvailableException.private CoordinatorNotAvailableException( ): void,CoordinatorNotAvailableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.CoordinatorNotAvailableException.public CoordinatorNotAvailableException( String ): void,CoordinatorNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.CoordinatorNotAvailableException.public CoordinatorNotAvailableException( String, Throwable ): void","CoordinatorNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.CoordinatorNotAvailableException->INSTANCE,static final INSTANCE : CoordinatorNotAvailableException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.CoordinatorNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CorruptRecordException,CorruptRecordException,medium-high,low,low,low,0,4,0,7,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( ): void,CorruptRecordException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( String ): void,CorruptRecordException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( String, Throwable ): void","CorruptRecordException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( Throwable ): void,CorruptRecordException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.CorruptRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DelegationTokenAuthorizationException,DelegationTokenAuthorizationException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.DelegationTokenAuthorizationException.public DelegationTokenAuthorizationException( String ): void,DelegationTokenAuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DelegationTokenAuthorizationException.public DelegationTokenAuthorizationException( String, Throwable ): void","DelegationTokenAuthorizationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.DelegationTokenAuthorizationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DelegationTokenDisabledException,DelegationTokenDisabledException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.DelegationTokenDisabledException.public DelegationTokenDisabledException( String ): void,DelegationTokenDisabledException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DelegationTokenDisabledException.public DelegationTokenDisabledException( String, Throwable ): void","DelegationTokenDisabledException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.DelegationTokenDisabledException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DelegationTokenExpiredException,DelegationTokenExpiredException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.DelegationTokenExpiredException.public DelegationTokenExpiredException( String ): void,DelegationTokenExpiredException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DelegationTokenExpiredException.public DelegationTokenExpiredException( String, Throwable ): void","DelegationTokenExpiredException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.DelegationTokenExpiredException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DelegationTokenNotFoundException,DelegationTokenNotFoundException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.DelegationTokenNotFoundException.public DelegationTokenNotFoundException( String ): void,DelegationTokenNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DelegationTokenNotFoundException.public DelegationTokenNotFoundException( String, Throwable ): void","DelegationTokenNotFoundException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.DelegationTokenNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DelegationTokenOwnerMismatchException,DelegationTokenOwnerMismatchException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.DelegationTokenOwnerMismatchException.public DelegationTokenOwnerMismatchException( String ): void,DelegationTokenOwnerMismatchException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DelegationTokenOwnerMismatchException.public DelegationTokenOwnerMismatchException( String, Throwable ): void","DelegationTokenOwnerMismatchException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.DelegationTokenOwnerMismatchException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DisconnectException,DisconnectException,medium-high,low,low,low,0,4,0,7,0,4,11,8,0,2,4,0,0,0,0.333,1,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( ): void,DisconnectException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( String ): void,DisconnectException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( String, Throwable ): void","DisconnectException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( Throwable ): void,DisconnectException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.DisconnectException->INSTANCE,static final INSTANCE : DisconnectException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.DisconnectException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DuplicateSequenceException,DuplicateSequenceException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.DuplicateSequenceException.public DuplicateSequenceException( String ): void,DuplicateSequenceException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.ElectionNotNeededException,ElectionNotNeededException,medium-high,low,low,low,0,2,0,8,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.ElectionNotNeededException.public ElectionNotNeededException( String ): void,ElectionNotNeededException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ElectionNotNeededException.public ElectionNotNeededException( String, Throwable ): void","ElectionNotNeededException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.EligibleLeadersNotAvailableException,EligibleLeadersNotAvailableException,medium-high,low,low,low,0,2,0,8,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.EligibleLeadersNotAvailableException.public EligibleLeadersNotAvailableException( String ): void,EligibleLeadersNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.EligibleLeadersNotAvailableException.public EligibleLeadersNotAvailableException( String, Throwable ): void","EligibleLeadersNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.FencedInstanceIdException,FencedInstanceIdException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.FencedInstanceIdException.public FencedInstanceIdException( String ): void,FencedInstanceIdException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.FencedInstanceIdException.public FencedInstanceIdException( String, Throwable ): void","FencedInstanceIdException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.FencedInstanceIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.FencedLeaderEpochException,FencedLeaderEpochException,medium-high,low,low,low,0,2,0,8,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.FencedLeaderEpochException.public FencedLeaderEpochException( String ): void,FencedLeaderEpochException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.FencedLeaderEpochException.public FencedLeaderEpochException( String, Throwable ): void","FencedLeaderEpochException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.FencedLeaderEpochException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.FetchSessionIdNotFoundException,FetchSessionIdNotFoundException,medium-high,low,low,low,0,2,0,7,0,2,5,3,0,1,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.FetchSessionIdNotFoundException.public FetchSessionIdNotFoundException( ): void,FetchSessionIdNotFoundException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.FetchSessionIdNotFoundException.public FetchSessionIdNotFoundException( String ): void,FetchSessionIdNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.FetchSessionIdNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupAuthorizationException,GroupAuthorizationException,medium-high,low,low,low,0,4,0,7,0,4,11,9,1,0,3,1,0,0,0.125,0.833,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.GroupAuthorizationException.public GroupAuthorizationException( String ): void,GroupAuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.GroupAuthorizationException.public GroupAuthorizationException( String, String ): void","GroupAuthorizationException( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.common.errors.GroupAuthorizationException.public groupId( ): String,groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.errors.GroupAuthorizationException.public static forGroupId( String ): GroupAuthorizationException,static forGroupId( String ): GroupAuthorizationException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.GroupAuthorizationException->groupId,final groupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupIdNotFoundException,GroupIdNotFoundException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupIdNotFoundException.public GroupIdNotFoundException( String ): void,GroupIdNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.GroupMaxSizeReachedException,GroupMaxSizeReachedException,medium-high,low,low,low,0,1,0,6,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupMaxSizeReachedException.public GroupMaxSizeReachedException( String ): void,GroupMaxSizeReachedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.GroupMaxSizeReachedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupNotEmptyException,GroupNotEmptyException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupNotEmptyException.public GroupNotEmptyException( String ): void,GroupNotEmptyException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.GroupSubscribedToTopicException,GroupSubscribedToTopicException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupSubscribedToTopicException.public GroupSubscribedToTopicException( String ): void,GroupSubscribedToTopicException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.IllegalGenerationException,IllegalGenerationException,medium-high,low,low,low,0,4,0,6,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( ): void,IllegalGenerationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( String ): void,IllegalGenerationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( String, Throwable ): void","IllegalGenerationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( Throwable ): void,IllegalGenerationException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.IllegalGenerationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalSaslStateException,IllegalSaslStateException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.IllegalSaslStateException.public IllegalSaslStateException( String ): void,IllegalSaslStateException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.IllegalSaslStateException.public IllegalSaslStateException( String, Throwable ): void","IllegalSaslStateException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.IllegalSaslStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InconsistentGroupProtocolException,InconsistentGroupProtocolException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InconsistentGroupProtocolException.public InconsistentGroupProtocolException( String ): void,InconsistentGroupProtocolException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InconsistentGroupProtocolException.public InconsistentGroupProtocolException( String, Throwable ): void","InconsistentGroupProtocolException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InconsistentGroupProtocolException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InterruptException,InterruptException,medium-high,low,low,low,0,5,2,5,0,3,11,9,0,1,3,0,0,0,0.222,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.errors.InterruptException.public InterruptException( InterruptedException ): void,InterruptException( InterruptedException ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.common.errors.InterruptException.public InterruptException( String ): void,InterruptException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.common.errors.InterruptException.public InterruptException( String, InterruptedException ): void","InterruptException( String, InterruptedException ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Field>org.apache.kafka.common.errors.InterruptException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidCommitOffsetSizeException,InvalidCommitOffsetSizeException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidCommitOffsetSizeException.public InvalidCommitOffsetSizeException( String ): void,InvalidCommitOffsetSizeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidCommitOffsetSizeException.public InvalidCommitOffsetSizeException( String, Throwable ): void","InvalidCommitOffsetSizeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidCommitOffsetSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidConfigurationException,InvalidConfigurationException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidConfigurationException.public InvalidConfigurationException( String ): void,InvalidConfigurationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidConfigurationException.public InvalidConfigurationException( String, Throwable ): void","InvalidConfigurationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidConfigurationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidFetchSessionEpochException,InvalidFetchSessionEpochException,medium-high,low,low,low,0,2,0,7,0,2,5,3,0,1,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidFetchSessionEpochException.public InvalidFetchSessionEpochException( ): void,InvalidFetchSessionEpochException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.InvalidFetchSessionEpochException.public InvalidFetchSessionEpochException( String ): void,InvalidFetchSessionEpochException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.InvalidFetchSessionEpochException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidFetchSizeException,InvalidFetchSizeException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidFetchSizeException.public InvalidFetchSizeException( String ): void,InvalidFetchSizeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidFetchSizeException.public InvalidFetchSizeException( String, Throwable ): void","InvalidFetchSizeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidFetchSizeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidGroupIdException,InvalidGroupIdException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidGroupIdException.public InvalidGroupIdException( String ): void,InvalidGroupIdException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidGroupIdException.public InvalidGroupIdException( String, Throwable ): void","InvalidGroupIdException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidGroupIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidMetadataException,InvalidMetadataException,medium-high,low,low,low,0,4,0,7,12,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( ): void,InvalidMetadataException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( String ): void,InvalidMetadataException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( String, Throwable ): void","InvalidMetadataException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( Throwable ): void,InvalidMetadataException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.InvalidMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidOffsetException,InvalidOffsetException,medium-high,low,low,low,0,2,0,6,1,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidOffsetException.public InvalidOffsetException( String ): void,InvalidOffsetException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidOffsetException.public InvalidOffsetException( String, Throwable ): void","InvalidOffsetException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidOffsetException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidPartitionsException,InvalidPartitionsException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidPartitionsException.public InvalidPartitionsException( String ): void,InvalidPartitionsException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidPartitionsException.public InvalidPartitionsException( String, Throwable ): void","InvalidPartitionsException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidPartitionsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidPidMappingException,InvalidPidMappingException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidPidMappingException.public InvalidPidMappingException( String ): void,InvalidPidMappingException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.InvalidPrincipalTypeException,InvalidPrincipalTypeException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidPrincipalTypeException.public InvalidPrincipalTypeException( String ): void,InvalidPrincipalTypeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidPrincipalTypeException.public InvalidPrincipalTypeException( String, Throwable ): void","InvalidPrincipalTypeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidPrincipalTypeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidReplicaAssignmentException,InvalidReplicaAssignmentException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidReplicaAssignmentException.public InvalidReplicaAssignmentException( String ): void,InvalidReplicaAssignmentException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidReplicaAssignmentException.public InvalidReplicaAssignmentException( String, Throwable ): void","InvalidReplicaAssignmentException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidReplicaAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidReplicationFactorException,InvalidReplicationFactorException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidReplicationFactorException.public InvalidReplicationFactorException( String ): void,InvalidReplicationFactorException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidReplicationFactorException.public InvalidReplicationFactorException( String, Throwable ): void","InvalidReplicationFactorException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidReplicationFactorException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequestException,InvalidRequestException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidRequestException.public InvalidRequestException( String ): void,InvalidRequestException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidRequestException.public InvalidRequestException( String, Throwable ): void","InvalidRequestException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidRequestException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequiredAcksException,InvalidRequiredAcksException,medium-high,low,low,low,0,1,0,6,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidRequiredAcksException.public InvalidRequiredAcksException( String ): void,InvalidRequiredAcksException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.InvalidRequiredAcksException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidSessionTimeoutException,InvalidSessionTimeoutException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidSessionTimeoutException.public InvalidSessionTimeoutException( String ): void,InvalidSessionTimeoutException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidSessionTimeoutException.public InvalidSessionTimeoutException( String, Throwable ): void","InvalidSessionTimeoutException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidSessionTimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTimestampException,InvalidTimestampException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTimestampException.public InvalidTimestampException( String ): void,InvalidTimestampException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidTimestampException.public InvalidTimestampException( String, Throwable ): void","InvalidTimestampException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidTimestampException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTopicException,InvalidTopicException,medium-high,low,low,low,0,6,0,6,0,6,20,17,1,1,6,0,0,0.6,0.542,0,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( ): void,InvalidTopicException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( Set ): void,InvalidTopicException( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( String ): void,InvalidTopicException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( String, Throwable ): void","InvalidTopicException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( Throwable ): void,InvalidTopicException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.errors.InvalidTopicException.public invalidTopics( ): Set,invalidTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.errors.InvalidTopicException->invalidTopics,final invalidTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidTopicException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTxnStateException,InvalidTxnStateException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTxnStateException.public InvalidTxnStateException( String ): void,InvalidTxnStateException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.InvalidTxnTimeoutException,InvalidTxnTimeoutException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTxnTimeoutException.public InvalidTxnTimeoutException( String ): void,InvalidTxnTimeoutException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.InvalidTxnTimeoutException.public InvalidTxnTimeoutException( String, Throwable ): void","InvalidTxnTimeoutException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.InvalidTxnTimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.KafkaStorageException,KafkaStorageException,medium-high,low,low,low,0,4,0,8,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.KafkaStorageException.public KafkaStorageException( ): void,KafkaStorageException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.KafkaStorageException.public KafkaStorageException( String ): void,KafkaStorageException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.KafkaStorageException.public KafkaStorageException( String, Throwable ): void","KafkaStorageException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.KafkaStorageException.public KafkaStorageException( Throwable ): void,KafkaStorageException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.KafkaStorageException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LeaderNotAvailableException,LeaderNotAvailableException,medium-high,low,low,low,0,2,0,8,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.LeaderNotAvailableException.public LeaderNotAvailableException( String ): void,LeaderNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.LeaderNotAvailableException.public LeaderNotAvailableException( String, Throwable ): void","LeaderNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.LeaderNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ListenerNotFoundException,ListenerNotFoundException,medium-high,low,low,low,0,2,0,8,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.ListenerNotFoundException.public ListenerNotFoundException( String ): void,ListenerNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ListenerNotFoundException.public ListenerNotFoundException( String, Throwable ): void","ListenerNotFoundException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.ListenerNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LogDirNotFoundException,LogDirNotFoundException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.errors.LogDirNotFoundException.public LogDirNotFoundException( String ): void,LogDirNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.LogDirNotFoundException.public LogDirNotFoundException( String, Throwable ): void","LogDirNotFoundException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.LogDirNotFoundException.public LogDirNotFoundException( Throwable ): void,LogDirNotFoundException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.LogDirNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.MemberIdRequiredException,MemberIdRequiredException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.MemberIdRequiredException.public MemberIdRequiredException( String ): void,MemberIdRequiredException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.MemberIdRequiredException.public MemberIdRequiredException( String, Throwable ): void","MemberIdRequiredException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.MemberIdRequiredException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NetworkException,NetworkException,medium-high,low,low,low,0,4,0,8,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( ): void,NetworkException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( String ): void,NetworkException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( String, Throwable ): void","NetworkException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( Throwable ): void,NetworkException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.NetworkException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NoReassignmentInProgressException,NoReassignmentInProgressException,medium-high,low,low,low,0,2,0,6,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.NoReassignmentInProgressException.public NoReassignmentInProgressException( String ): void,NoReassignmentInProgressException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NoReassignmentInProgressException.public NoReassignmentInProgressException( String, Throwable ): void","NoReassignmentInProgressException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.NotControllerException,NotControllerException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.NotControllerException.public NotControllerException( String ): void,NotControllerException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NotControllerException.public NotControllerException( String, Throwable ): void","NotControllerException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.NotControllerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotCoordinatorException,NotCoordinatorException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.NotCoordinatorException.public NotCoordinatorException( String ): void,NotCoordinatorException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NotCoordinatorException.public NotCoordinatorException( String, Throwable ): void","NotCoordinatorException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.NotCoordinatorException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException,NotEnoughReplicasAfterAppendException,medium-high,low,low,low,0,1,0,7,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException.public NotEnoughReplicasAfterAppendException( String ): void,NotEnoughReplicasAfterAppendException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasException,NotEnoughReplicasException,medium-high,low,low,low,0,4,0,7,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( ): void,NotEnoughReplicasException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( String ): void,NotEnoughReplicasException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( String, Throwable ): void","NotEnoughReplicasException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( Throwable ): void,NotEnoughReplicasException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.NotEnoughReplicasException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotLeaderForPartitionException,NotLeaderForPartitionException,medium-high,low,low,low,0,4,0,8,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( ): void,NotLeaderForPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( String ): void,NotLeaderForPartitionException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( String, Throwable ): void","NotLeaderForPartitionException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( Throwable ): void,NotLeaderForPartitionException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.NotLeaderForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetMetadataTooLarge,OffsetMetadataTooLarge,medium-high,low,low,low,0,4,0,6,0,4,9,7,0,1,4,0,0,0,0.333,0,0,0,,,,,9,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( ): void,OffsetMetadataTooLarge( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( String ): void,OffsetMetadataTooLarge( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( String, Throwable ): void","OffsetMetadataTooLarge( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( Throwable ): void,OffsetMetadataTooLarge( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.OffsetMetadataTooLarge->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetNotAvailableException,OffsetNotAvailableException,medium-high,low,low,low,0,1,0,7,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetNotAvailableException.public OffsetNotAvailableException( String ): void,OffsetNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.OffsetNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetOutOfRangeException,OffsetOutOfRangeException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetOutOfRangeException.public OffsetOutOfRangeException( String ): void,OffsetOutOfRangeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.OffsetOutOfRangeException.public OffsetOutOfRangeException( String, Throwable ): void","OffsetOutOfRangeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OperationNotAttemptedException,OperationNotAttemptedException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OperationNotAttemptedException.public OperationNotAttemptedException( String ): void,OperationNotAttemptedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.OutOfOrderSequenceException,OutOfOrderSequenceException,medium-high,low,low,low,0,1,0,6,1,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OutOfOrderSequenceException.public OutOfOrderSequenceException( String ): void,OutOfOrderSequenceException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.PolicyViolationException,PolicyViolationException,medium-high,low,low,low,0,2,0,6,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.PolicyViolationException.public PolicyViolationException( String ): void,PolicyViolationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.PolicyViolationException.public PolicyViolationException( String, Throwable ): void","PolicyViolationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.PreferredLeaderNotAvailableException,PreferredLeaderNotAvailableException,medium-high,low,low,low,0,2,0,8,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.PreferredLeaderNotAvailableException.public PreferredLeaderNotAvailableException( String ): void,PreferredLeaderNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.PreferredLeaderNotAvailableException.public PreferredLeaderNotAvailableException( String, Throwable ): void","PreferredLeaderNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.ProducerFencedException,ProducerFencedException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.ProducerFencedException.public ProducerFencedException( String ): void,ProducerFencedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.ReassignmentInProgressException,ReassignmentInProgressException,medium-high,low,low,low,0,2,0,6,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.ReassignmentInProgressException.public ReassignmentInProgressException( String ): void,ReassignmentInProgressException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ReassignmentInProgressException.public ReassignmentInProgressException( String, Throwable ): void","ReassignmentInProgressException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.errors.RebalanceInProgressException,RebalanceInProgressException,medium-high,low,low,low,0,4,0,6,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( ): void,RebalanceInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( String ): void,RebalanceInProgressException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( String, Throwable ): void","RebalanceInProgressException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( Throwable ): void,RebalanceInProgressException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.RebalanceInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordBatchTooLargeException,RecordBatchTooLargeException,medium-high,low,low,low,0,4,0,6,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( ): void,RecordBatchTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( String ): void,RecordBatchTooLargeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( String, Throwable ): void","RecordBatchTooLargeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( Throwable ): void,RecordBatchTooLargeException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.RecordBatchTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordTooLargeException,RecordTooLargeException,medium-high,low,low,low,0,6,0,6,0,6,16,13,1,1,6,0,0,1,0.5,0.933,0,0,,,,,16,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( ): void,RecordTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( String ): void,RecordTooLargeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( String, Map ): void","RecordTooLargeException( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( String, Throwable ): void","RecordTooLargeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( Throwable ): void,RecordTooLargeException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public recordTooLargePartitions( ): Map,recordTooLargePartitions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.errors.RecordTooLargeException->recordTooLargePartitions,recordTooLargePartitions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.RecordTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ReplicaNotAvailableException,ReplicaNotAvailableException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.errors.ReplicaNotAvailableException.public ReplicaNotAvailableException( String ): void,ReplicaNotAvailableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.ReplicaNotAvailableException.public ReplicaNotAvailableException( String, Throwable ): void","ReplicaNotAvailableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.ReplicaNotAvailableException.public ReplicaNotAvailableException( Throwable ): void,ReplicaNotAvailableException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.ReplicaNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RetriableException,RetriableException,medium-high,low,low,low,0,4,0,6,16,4,9,7,0,1,4,0,0,0,0.333,0,0,0,,,,,9,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( ): void,RetriableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( String ): void,RetriableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( String, Throwable ): void","RetriableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( Throwable ): void,RetriableException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.RetriableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SaslAuthenticationException,SaslAuthenticationException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.SaslAuthenticationException.public SaslAuthenticationException( String ): void,SaslAuthenticationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.SaslAuthenticationException.public SaslAuthenticationException( String, Throwable ): void","SaslAuthenticationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.SaslAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SecurityDisabledException,SecurityDisabledException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.SecurityDisabledException.public SecurityDisabledException( String ): void,SecurityDisabledException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.SecurityDisabledException.public SecurityDisabledException( String, Throwable ): void","SecurityDisabledException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.SecurityDisabledException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SerializationException,SerializationException,medium-high,low,low,low,0,5,0,5,0,5,13,11,0,1,5,0,1,0,0.4,0,0,1,,,,,13,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( ): void,SerializationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( String ): void,SerializationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( String, Throwable ): void","SerializationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( Throwable ): void,SerializationException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.errors.SerializationException.public fillInStackTrace( ): Throwable,fillInStackTrace( ): Throwable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.errors.SerializationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SslAuthenticationException,SslAuthenticationException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.SslAuthenticationException.public SslAuthenticationException( String ): void,SslAuthenticationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.SslAuthenticationException.public SslAuthenticationException( String, Throwable ): void","SslAuthenticationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.SslAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.StaleBrokerEpochException,StaleBrokerEpochException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.StaleBrokerEpochException.public StaleBrokerEpochException( String ): void,StaleBrokerEpochException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.StaleBrokerEpochException.public StaleBrokerEpochException( String, Throwable ): void","StaleBrokerEpochException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.StaleBrokerEpochException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TimeoutException,TimeoutException,medium-high,low,low,low,0,4,0,7,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( ): void,TimeoutException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( String ): void,TimeoutException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( String, Throwable ): void","TimeoutException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( Throwable ): void,TimeoutException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.TimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicAuthorizationException,TopicAuthorizationException,medium-high,low,low,low,0,5,1,7,0,4,11,9,1,0,4,0,0,0,0.333,0.833,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.TopicAuthorizationException.public TopicAuthorizationException( Set ): void,TopicAuthorizationException( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.errors.TopicAuthorizationException.public TopicAuthorizationException( String ): void,TopicAuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.errors.TopicAuthorizationException.public TopicAuthorizationException( String, Set ): void","TopicAuthorizationException( String, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.common.errors.TopicAuthorizationException.public unauthorizedTopics( ): Set,unauthorizedTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.errors.TopicAuthorizationException->unauthorizedTopics,final unauthorizedTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicDeletionDisabledException,TopicDeletionDisabledException,medium-high,low,low,low,0,2,0,6,0,2,5,3,0,1,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.TopicDeletionDisabledException.public TopicDeletionDisabledException( ): void,TopicDeletionDisabledException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.TopicDeletionDisabledException.public TopicDeletionDisabledException( String ): void,TopicDeletionDisabledException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.TopicDeletionDisabledException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicExistsException,TopicExistsException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.TopicExistsException.public TopicExistsException( String ): void,TopicExistsException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.TopicExistsException.public TopicExistsException( String, Throwable ): void","TopicExistsException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.TopicExistsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TransactionCoordinatorFencedException,TransactionCoordinatorFencedException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.TransactionCoordinatorFencedException.public TransactionCoordinatorFencedException( String ): void,TransactionCoordinatorFencedException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.TransactionCoordinatorFencedException.public TransactionCoordinatorFencedException( String, Throwable ): void","TransactionCoordinatorFencedException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.TransactionCoordinatorFencedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TransactionalIdAuthorizationException,TransactionalIdAuthorizationException,medium-high,low,low,low,0,1,0,7,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.TransactionalIdAuthorizationException.public TransactionalIdAuthorizationException( String ): void,TransactionalIdAuthorizationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.UnknownLeaderEpochException,UnknownLeaderEpochException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownLeaderEpochException.public UnknownLeaderEpochException( String ): void,UnknownLeaderEpochException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnknownLeaderEpochException.public UnknownLeaderEpochException( String, Throwable ): void","UnknownLeaderEpochException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnknownLeaderEpochException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownMemberIdException,UnknownMemberIdException,medium-high,low,low,low,0,4,0,6,0,4,10,8,0,1,4,0,0,0,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( ): void,UnknownMemberIdException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( String ): void,UnknownMemberIdException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( String, Throwable ): void","UnknownMemberIdException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( Throwable ): void,UnknownMemberIdException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.UnknownMemberIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownProducerIdException,UnknownProducerIdException,medium-high,low,low,low,0,1,0,7,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownProducerIdException.public UnknownProducerIdException( String ): void,UnknownProducerIdException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.errors.UnknownServerException,UnknownServerException,medium-high,low,low,low,0,4,0,6,0,4,9,7,0,1,4,0,0,0,0.333,0,0,0,,,,,9,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( ): void,UnknownServerException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( String ): void,UnknownServerException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( String, Throwable ): void","UnknownServerException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( Throwable ): void,UnknownServerException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.UnknownServerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownTopicOrPartitionException,UnknownTopicOrPartitionException,medium-high,low,low,low,0,4,0,8,0,4,9,7,0,1,4,0,0,0,0.333,0,0,0,,,,,9,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( ): void,UnknownTopicOrPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( String ): void,UnknownTopicOrPartitionException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( String, Throwable ): void","UnknownTopicOrPartitionException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( Throwable ): void,UnknownTopicOrPartitionException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.errors.UnknownTopicOrPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedByAuthenticationException,UnsupportedByAuthenticationException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnsupportedByAuthenticationException.public UnsupportedByAuthenticationException( String ): void,UnsupportedByAuthenticationException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnsupportedByAuthenticationException.public UnsupportedByAuthenticationException( String, Throwable ): void","UnsupportedByAuthenticationException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnsupportedByAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedCompressionTypeException,UnsupportedCompressionTypeException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnsupportedCompressionTypeException.public UnsupportedCompressionTypeException( String ): void,UnsupportedCompressionTypeException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnsupportedCompressionTypeException.public UnsupportedCompressionTypeException( String, Throwable ): void","UnsupportedCompressionTypeException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnsupportedCompressionTypeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedForMessageFormatException,UnsupportedForMessageFormatException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnsupportedForMessageFormatException.public UnsupportedForMessageFormatException( String ): void,UnsupportedForMessageFormatException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnsupportedForMessageFormatException.public UnsupportedForMessageFormatException( String, Throwable ): void","UnsupportedForMessageFormatException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnsupportedForMessageFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedSaslMechanismException,UnsupportedSaslMechanismException,medium-high,low,low,low,0,2,0,7,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnsupportedSaslMechanismException.public UnsupportedSaslMechanismException( String ): void,UnsupportedSaslMechanismException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnsupportedSaslMechanismException.public UnsupportedSaslMechanismException( String, Throwable ): void","UnsupportedSaslMechanismException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnsupportedSaslMechanismException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnsupportedVersionException,UnsupportedVersionException,medium-high,low,low,low,0,2,0,6,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.errors.UnsupportedVersionException.public UnsupportedVersionException( String ): void,UnsupportedVersionException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.errors.UnsupportedVersionException.public UnsupportedVersionException( String, Throwable ): void","UnsupportedVersionException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.errors.UnsupportedVersionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.WakeupException,WakeupException,medium-high,low,low,low,0,0,0,5,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.WakeupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.header,org.apache.kafka.common.header,low,low,low,low,,,,,,8,10,,,,,,,,,,,,,2,0,2,10,41,0,1,0,0,8,,,,,,,
org.apache.kafka.common.header.Header,Header,low,low,low,low,0,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.header.Header.public abstract key( ): String,key( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.header.Header.public abstract value( ): byte,value( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.header.Headers,Headers,low,low,low,low,1,6,0,1,1,6,7,6,0,0,6,0,0,0,0.5,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.header.Headers.public abstract add( Header ): Headers,add( Header ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.header.Headers.public abstract add( String, byte ): Headers","add( String, byte ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.header.Headers.public abstract headers( String ): Iterable,headers( String ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.header.Headers.public abstract lastHeader( String ): Header,lastHeader( String ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.header.Headers.public abstract remove( String ): Headers,remove( String ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.header.Headers.public abstract toArray( ): Header,toArray( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.common.header.internals,org.apache.kafka.common.header.internals,low,low,low,low,,,,,,51,143,,,,,,,,,,,,,3,3,0,143,10,2,0,0.167,0.833,51,,,,,,,
org.apache.kafka.common.header.internals.RecordHeader,RecordHeader,low,low,low,low-medium,1,24,9,1,0,13,36,32,3,0,7,0,0,0.611,0.657,0.19,0,0,,,,,36,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.header.internals.RecordHeader.public RecordHeader( String, ByteBuffer ): void","RecordHeader( String, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,2
"<Method>org.apache.kafka.common.header.internals.RecordHeader.public RecordHeader( String, byte ): void","RecordHeader( String, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,2
<Method>org.apache.kafka.common.header.internals.RecordHeader.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,6,2
<Method>org.apache.kafka.common.header.internals.RecordHeader.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,2
<Method>org.apache.kafka.common.header.internals.RecordHeader.public key( ): String,key( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.header.internals.RecordHeader.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.header.internals.RecordHeader.public value( ): byte,value( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,1,6
<Field>org.apache.kafka.common.header.internals.RecordHeader->key,final key : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.header.internals.RecordHeader->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.header.internals.RecordHeader->valueBuffer,valueBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.header.internals.RecordHeaders,RecordHeaders,low-medium,low,low-medium,medium-high,3,33,21,1,0,33,107,90,2,0,17,0,0,0.5,0.765,0.593,0,0,,,,,107,,,,,,33,,,,,,,
org.apache.kafka.common.header.internals.RecordHeaders.FilterByKeyIterator,FilterByKeyIterator,low,low,low,low,1,7,5,2,0,5,14,11,2,0,2,0,0,0,0.333,0,0,0,,,,,14,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.header.internals.RecordHeaders$4179;,Lorg.apache.kafka.common.header.internals.RecordHeaders$4179;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public RecordHeaders( ): void,RecordHeaders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public RecordHeaders( Header ): void,RecordHeaders( Header ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,2
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public RecordHeaders( Iterable ): void,RecordHeaders( Iterable ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,1,1,6
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public add( Header ): Headers,add( Header ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,1
"<Method>org.apache.kafka.common.header.internals.RecordHeaders.public add( String, byte ): Headers","add( String, byte ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.private canWrite( ): void,canWrite( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
<Method>org.apache.kafka.common.header.internals.RecordHeaders.private checkKey( String ): void,checkKey( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.private closeAware( Iterator ): Iterator,closeAware( Iterator ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,1,0,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,3,2
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public headers( String ): Iterable,headers( String ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public iterator( ): Iterator,iterator( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public lastHeader( String ): Header,lastHeader( String ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,5,2
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public remove( String ): Headers,remove( String ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,8,0
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public setReadOnly( ): void,setReadOnly( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public toArray( ): Header,toArray( ): Header,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,3,3
<Method>org.apache.kafka.common.header.internals.RecordHeaders.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.common.header.internals.RecordHeaders->headers,final headers : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.header.internals.RecordHeaders->isReadOnly,volatile isReadOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.internals,org.apache.kafka.common.internals,low,low,low-medium,low,,,,,,97,292,,,,,,,,,,,,,9,9,0,292,32,4,0,0.111,0.889,97,,,,,,,
org.apache.kafka.common.internals.ClusterResourceListeners,ClusterResourceListeners,low,low,low,low,2,6,3,1,0,7,13,11,1,0,4,0,0,0,0.562,0.5,0,0,,,,,13,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public ClusterResourceListeners( ): void,ClusterResourceListeners( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public maybeAdd( Object ): void,maybeAdd( Object ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,1
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public maybeAddAll( List ): void,maybeAddAll( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,0
<Method>org.apache.kafka.common.internals.ClusterResourceListeners.public onUpdate( ClusterResource ): void,onUpdate( ClusterResource ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,1
<Field>org.apache.kafka.common.internals.ClusterResourceListeners->clusterResourceListeners,final clusterResourceListeners : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.FatalExitError,FatalExitError,low-medium,low,low,low,0,3,0,3,0,4,11,8,1,1,3,0,0,1,0.333,0.667,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.internals.FatalExitError.public FatalExitError( ): void,FatalExitError( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.internals.FatalExitError.public FatalExitError( int ): void,FatalExitError( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,1
<Method>org.apache.kafka.common.internals.FatalExitError.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.internals.FatalExitError->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.FatalExitError->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.KafkaFutureImpl<T>,KafkaFutureImpl,low-medium,low,low-medium,high,4,25,9,2,0,26,162,89,4,0,15,1,0,0.5,0.819,0.758,0,0,,,,,162,,,,,,26,,,,,,,
"org.apache.kafka.common.internals.KafkaFutureImpl.Applicant<A,B>",Applicant,low,low,low,low,1,6,3,1,0,4,16,13,2,0,2,0,0,0,0.4,0,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.common.internals.KafkaFutureImpl.SingleWaiter<R>,SingleWaiter,low,low,low,low,1,9,6,1,0,10,32,28,3,0,3,0,0,0,0.533,0,0,0,,,,,32,,,,,,10,,,,,,,
org.apache.kafka.common.internals.KafkaFutureImpl.WhenCompleteBiConsumer<T>,WhenCompleteBiConsumer,low,low,low,low,0,5,3,1,0,6,20,17,2,0,2,0,0,0,0.4,0,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public completeExceptionally( Throwable ): boolean,completeExceptionally( Throwable ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,1,5
"<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public copyWith( KafkaFuture, BaseFunction ): void","copyWith( KafkaFuture, BaseFunction ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public get( ): T,get( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,0
"<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public get( long, TimeUnit ): T","get( long, TimeUnit ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.private static wrapAndThrow( Throwable ): void,static wrapAndThrow( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.protected synchronized addWaiter( BiConsumer ): void,synchronized addWaiter( BiConsumer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,3,5
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized cancel( boolean ): boolean,synchronized cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized complete( T ): boolean,synchronized complete( T ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,1,5
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized getNow( T ): T,synchronized getNow( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,1,4
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isCancelled( ): boolean,synchronized isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isCompletedExceptionally( ): boolean,synchronized isCompletedExceptionally( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public synchronized isDone( ): boolean,synchronized isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public thenApply( BaseFunction ): KafkaFuture,thenApply( BaseFunction ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public thenApply( Function ): KafkaFuture,thenApply( Function ): KafkaFuture,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.internals.KafkaFutureImpl<T>.public whenComplete( BiConsumer ): KafkaFuture,whenComplete( BiConsumer ): KafkaFuture,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,0
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->done,done : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->exception,exception : Throwable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->value,value : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.KafkaFutureImpl<T>->waiters,waiters : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.PartitionStates<S>,PartitionStates,low,low,low-medium,low-medium,1,31,18,1,0,19,74,44,3,0,15,0,0,0.692,0.617,0.423,0,0,,,,,74,,,,,,19,,,,,,,
org.apache.kafka.common.internals.PartitionStates.PartitionState<S>,PartitionState,low,low,low,low,2,14,6,1,0,9,26,23,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,26,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public PartitionStates( ): void,PartitionStates( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public contains( TopicPartition ): boolean,contains( TopicPartition ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public moveToEnd( TopicPartition ): void,moveToEnd( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,2
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public partitionSet( ): Set,partitionSet( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public partitionStateMap( ): LinkedHashMap,partitionStateMap( ): LinkedHashMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public partitionStateValues( ): List,partitionStateValues( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public remove( TopicPartition ): void,remove( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public set( Map ): void,set( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public stateValue( TopicPartition ): S,stateValue( TopicPartition ): S,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.public stream( ): Stream,stream( ): Stream,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.internals.PartitionStates<S>.private update( Map ): void,update( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,8,1
"<Method>org.apache.kafka.common.internals.PartitionStates<S>.public updateAndMoveToEnd( TopicPartition, S ): void","updateAndMoveToEnd( TopicPartition, S ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,2
<Method>org.apache.kafka.common.internals.PartitionStates<S>.private updateSize( ): void,updateSize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Field>org.apache.kafka.common.internals.PartitionStates<S>->map,final map : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.PartitionStates<S>->partitionSetView,final partitionSetView : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.PartitionStates<S>->size,volatile size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.internals.Topic,Topic,low,low,low,low,1,12,8,1,0,12,32,25,0,5,0,5,0,1.6,0,1,0,0,,,,,32,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.internals.Topic.static containsValidPattern( String ): boolean,static containsValidPattern( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,0
"<Method>org.apache.kafka.common.internals.Topic.public static hasCollision( String, String ): boolean","static hasCollision( String, String ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
<Method>org.apache.kafka.common.internals.Topic.public static hasCollisionChars( String ): boolean,static hasCollisionChars( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.internals.Topic.public static isInternal( String ): boolean,static isInternal( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.internals.Topic.public static validate( String ): void,static validate( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,11,1,5,2
<Field>org.apache.kafka.common.internals.Topic->GROUP_METADATA_TOPIC_NAME,static final GROUP_METADATA_TOPIC_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.Topic->INTERNAL_TOPICS,static final INTERNAL_TOPICS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.Topic->LEGAL_CHARS,static final LEGAL_CHARS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.Topic->MAX_NAME_LENGTH,static final MAX_NAME_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.internals.Topic->TRANSACTION_STATE_TOPIC_NAME,static final TRANSACTION_STATE_TOPIC_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.memory,org.apache.kafka.common.memory,low,low,low-medium,low,,,,,,50,173,,,,,,,,,,,,,6,5,1,173,7,2,0.167,0.222,0.611,50,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool,GarbageCollectedMemoryPool,low-medium,low,low-medium,low-medium,3,21,10,2,0,8,79,30,5,0,5,0,2,0.8,0.633,0.667,0,0.8,,,,,79,,,,,,8,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.BufferMetadata,BufferMetadata,low,low,low,low,0,1,0,1,0,1,4,2,1,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.BufferReference,BufferReference,low,low,low,low,0,7,3,3,0,9,24,22,1,0,4,0,0,0,0.5,0,0,0,,,,,24,,,,,,9,,,,,,,
org.apache.kafka.common.memory.GarbageCollectedMemoryPool.GarbageCollectionListener,GarbageCollectionListener,low,low,low,low,4,8,7,1,0,4,15,14,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.public GarbageCollectedMemoryPool( long, int, boolean, Sensor ): void","GarbageCollectedMemoryPool( long, int, boolean, Sensor ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,5
<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.protected bufferToBeReleased( ByteBuffer ): void,bufferToBeReleased( ByteBuffer ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,4,5
<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.protected bufferToBeReturned( ByteBuffer ): void,bufferToBeReturned( ByteBuffer ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,3,4
<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.common.memory.GarbageCollectedMemoryPool.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,4,4
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->buffersInFlight,final buffersInFlight : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->garbageCollectedBuffers,final garbageCollectedBuffers : ReferenceQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->gcListener,final gcListener : GarbageCollectionListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->gcListenerThread,final gcListenerThread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.GarbageCollectedMemoryPool->alive,volatile alive : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.memory.MemoryPool,MemoryPool,low,low,low,low,0,5,0,1,1,5,25,5,0,1,5,0,0,0,0.533,1,0,0,,,,,25,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract isOutOfMemory( ): boolean,isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract release( ByteBuffer ): void,release( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.memory.MemoryPool.public abstract tryAllocate( int ): ByteBuffer,tryAllocate( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.common.memory.MemoryPool->NONE,static final NONE : MemoryPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.memory.SimpleMemoryPool,SimpleMemoryPool,low-medium,low,low-medium,low-medium,3,43,13,1,1,23,69,61,7,0,10,0,0,0.778,0.7,0.19,0,0,,,,,69,,,,,,23,,,,,,,
"<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public SimpleMemoryPool( long, int, boolean, Sensor ): void","SimpleMemoryPool( long, int, boolean, Sensor ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,4,0,5
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.protected bufferToBeReleased( ByteBuffer ): void,bufferToBeReleased( ByteBuffer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.protected bufferToBeReturned( ByteBuffer ): void,bufferToBeReturned( ByteBuffer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public isOutOfMemory( ): boolean,isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.protected maybeRecordEndOfDrySpell( ): void,maybeRecordEndOfDrySpell( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,3,3
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public release( ByteBuffer ): void,release( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,4,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
<Method>org.apache.kafka.common.memory.SimpleMemoryPool.public tryAllocate( int ): ByteBuffer,tryAllocate( int ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,23,1,8,8
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->availableMemory,final availableMemory : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->maxSingleAllocationSize,final maxSingleAllocationSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->sizeBytes,final sizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->startOfNoMemPeriod,final startOfNoMemPeriod : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->strict,final strict : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.memory.SimpleMemoryPool->oomTimeSensor,volatile oomTimeSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.metrics,org.apache.kafka.common.metrics,low-medium,low-medium,medium-high,low,,,,,,217,666,,,,,,,,,,,,,18,11,7,666,94,7,0.389,0.069,0.542,217,,,,,,,
org.apache.kafka.common.metrics.CompoundStat,CompoundStat,low,low,low,low,0,1,0,1,3,1,13,1,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.CompoundStat.NamedMeasurable,NamedMeasurable,low,low,low,low,2,3,0,1,0,3,11,8,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.metrics.CompoundStat.public abstract stats( ): List,stats( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.metrics.Gauge<T>,Gauge,low,low,low,low,1,1,0,1,5,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.metrics.Gauge<T>.public abstract value( MetricConfig, long ): T","value( MetricConfig, long ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.common.metrics.JmxReporter,JmxReporter,low-medium,low,low-medium,medium-high,5,40,29,1,0,27,135,79,2,2,12,1,0,0.679,0.714,0.643,0,0,,,,,135,,,,,,27,,,,,,,
org.apache.kafka.common.metrics.JmxReporter.KafkaMbean,KafkaMbean,low,low,low,low,3,28,16,1,0,14,51,48,2,0,10,0,0,0.5,0.667,0.952,0,0,,,,,51,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.metrics.JmxReporter.public JmxReporter( ): void,JmxReporter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.JmxReporter.public JmxReporter( String ): void,JmxReporter( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.metrics.JmxReporter.private addAttribute( KafkaMetric ): KafkaMbean,addAttribute( KafkaMetric ): KafkaMbean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,8,4
<Method>org.apache.kafka.common.metrics.JmxReporter.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,2
<Method>org.apache.kafka.common.metrics.JmxReporter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.JmxReporter.public containsMbean( String ): boolean,containsMbean( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.metrics.JmxReporter.public init( List ): void,init( List ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,3,2
<Method>org.apache.kafka.common.metrics.JmxReporter.public metricChange( KafkaMetric ): void,metricChange( KafkaMetric ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,2,1
<Method>org.apache.kafka.common.metrics.JmxReporter.public metricRemoval( KafkaMetric ): void,metricRemoval( KafkaMetric ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,12,1,7,3
"<Method>org.apache.kafka.common.metrics.JmxReporter.private removeAttribute( KafkaMetric, String ): KafkaMbean","removeAttribute( KafkaMetric, String ): KafkaMbean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,4,1
<Method>org.apache.kafka.common.metrics.JmxReporter.private reregister( KafkaMbean ): void,reregister( KafkaMbean ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,5,0
"<Method>org.apache.kafka.common.metrics.JmxReporter.static getMBeanName( String, MetricName ): String","static getMBeanName( String, MetricName ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,2,18,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private unregister( KafkaMbean ): void,unregister( KafkaMbean ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,5,0
<Field>org.apache.kafka.common.metrics.JmxReporter->mbeans,final mbeans : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.JmxReporter->prefix,prefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.JmxReporter->LOCK,static final LOCK : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.JmxReporter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.KafkaMetric,KafkaMetric,low,low-medium,low,medium-high,6,11,4,1,0,14,48,42,5,0,8,0,0,0.629,0.732,0.476,0,0,,,,,48,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.metrics.KafkaMetric. measurableValue( long ): double, measurableValue( long ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,4
"<Method>org.apache.kafka.common.metrics.KafkaMetric.public KafkaMetric( Object, MetricName, MetricValueProvider, MetricConfig, Time ): void","KafkaMetric( Object, MetricName, MetricValueProvider, MetricConfig, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,5,0,5
<Method>org.apache.kafka.common.metrics.KafkaMetric.public config( ): MetricConfig,config( ): MetricConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.KafkaMetric.public config( MetricConfig ): void,config( MetricConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,1,0,2
<Method>org.apache.kafka.common.metrics.KafkaMetric.public measurable( ): Measurable,measurable( ): Measurable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,3
<Method>org.apache.kafka.common.metrics.KafkaMetric.public metricName( ): MetricName,metricName( ): MetricName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.metrics.KafkaMetric.public metricValue( ): Object,metricValue( ): Object,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,3,9
<Method>org.apache.kafka.common.metrics.KafkaMetric.public value( ): double,value( ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Field>org.apache.kafka.common.metrics.KafkaMetric->config,config : MetricConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.KafkaMetric->lock,final lock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.KafkaMetric->metricValueProvider,final metricValueProvider : MetricValueProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.KafkaMetric->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.KafkaMetric->metricName,metricName : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Measurable,Measurable,low,low,low,low,1,1,0,1,9,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.metrics.Measurable.public abstract measure( MetricConfig, long ): double","measure( MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.common.metrics.MeasurableStat,MeasurableStat,low,low,low,low,0,0,0,1,4,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.MetricConfig,MetricConfig,low,low,low,medium-high,2,14,1,1,0,14,47,40,6,0,13,0,0,0.833,0.78,0.769,0,0,,,,,47,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricConfig.public MetricConfig( ): void,MetricConfig( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,1,6
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( ): long,eventWindow( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( long ): MetricConfig,eventWindow( long ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public quota( ): Quota,quota( ): Quota,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public quota( Quota ): MetricConfig,quota( Quota ): MetricConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public recordLevel( ): RecordingLevel,recordLevel( ): RecordingLevel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public recordLevel( RecordingLevel ): MetricConfig,recordLevel( RecordingLevel ): MetricConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( ): int,samples( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( int ): MetricConfig,samples( int ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public tags( ): Map,tags( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public tags( Map ): MetricConfig,tags( Map ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.common.metrics.MetricConfig.public timeWindow( long, TimeUnit ): MetricConfig","timeWindow( long, TimeUnit ): MetricConfig",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public timeWindowMs( ): long,timeWindowMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.MetricConfig->eventWindow,eventWindow : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->quota,quota : Quota,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->recordingLevel,recordingLevel : RecordingLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->samples,samples : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->tags,tags : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->timeWindowMs,timeWindowMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.MetricValueProvider<T>,MetricValueProvider,low,low,low,low,0,0,0,1,2,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.Metrics,Metrics,medium-high,medium-high,medium-high,high,12,97,64,1,0,72,219,203,7,1,37,2,0,0.767,0.842,0.935,0,0,,,,,219,,,,,,72,,,,,,,
org.apache.kafka.common.metrics.Metrics.ExpireSensorTask,ExpireSensorTask,low,low,low,low,2,26,6,1,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.metrics.Metrics. childrenSensors( ): Map, childrenSensors( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( ): void,Metrics( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( MetricConfig ): void,Metrics( MetricConfig ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( MetricConfig, List, Time ): void","Metrics( MetricConfig, List, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( MetricConfig, List, Time, boolean ): void","Metrics( MetricConfig, List, Time, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,17,4,6,10
"<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( MetricConfig, Time ): void","Metrics( MetricConfig, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( Time ): void,Metrics( Time ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.metrics.Metrics.public addMetric( MetricName, Measurable ): void","addMetric( MetricName, Measurable ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public addMetric( MetricName, MetricConfig, Measurable ): void","addMetric( MetricName, MetricConfig, Measurable ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public addMetric( MetricName, MetricConfig, MetricValueProvider ): void","addMetric( MetricName, MetricConfig, MetricValueProvider ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,3,2
"<Method>org.apache.kafka.common.metrics.Metrics.public addMetric( MetricName, MetricValueProvider ): void","addMetric( MetricName, MetricValueProvider ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.metrics.Metrics.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,0,7,5
<Method>org.apache.kafka.common.metrics.Metrics.public config( ): MetricConfig,config( ): MetricConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Metrics.public getSensor( String ): Sensor,getSensor( String ): Sensor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.metrics.Metrics.public metric( MetricName ): KafkaMetric,metric( MetricName ): KafkaMetric,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.metrics.Metrics.public metricInstance( MetricNameTemplate, Map ): MetricName","metricInstance( MetricNameTemplate, Map ): MetricName",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,12,0
"<Method>org.apache.kafka.common.metrics.Metrics.public metricInstance( MetricNameTemplate, String ): MetricName","metricInstance( MetricNameTemplate, String ): MetricName",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.metrics.Metrics.public metricName( String, String ): MetricName","metricName( String, String ): MetricName",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public metricName( String, String, Map ): MetricName","metricName( String, String, Map ): MetricName",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public metricName( String, String, String ): MetricName","metricName( String, String, String ): MetricName",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public metricName( String, String, String, Map ): MetricName","metricName( String, String, String, Map ): MetricName",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,2,1
"<Method>org.apache.kafka.common.metrics.Metrics.public metricName( String, String, String, String ): MetricName","metricName( String, String, String, String ): MetricName",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,2,0
<Method>org.apache.kafka.common.metrics.Metrics.public metrics( ): Map,metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Metrics.public removeSensor( String ): void,removeSensor( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,16,1,13,5
<Method>org.apache.kafka.common.metrics.Metrics.public reporters( ): List,reporters( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Metrics.public sensor( String ): Sensor,sensor( String ): Sensor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public sensor( String, RecordingLevel ): Sensor","sensor( String, RecordingLevel ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public sensor( String, RecordingLevel, Sensor ): Sensor","sensor( String, RecordingLevel, Sensor ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public sensor( String, Sensor ): Sensor","sensor( String, Sensor ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.metrics.Metrics.private static getTags( String ): Map,static getTags( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public static toHtmlTable( String, Iterable ): String","static toHtmlTable( String, Iterable ): String",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,41,2,44,0
<Method>org.apache.kafka.common.metrics.Metrics.public synchronized addReporter( MetricsReporter ): void,synchronized addReporter( MetricsReporter ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
<Method>org.apache.kafka.common.metrics.Metrics.synchronized registerMetric( KafkaMetric ): void,synchronized registerMetric( KafkaMetric ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,7,5
<Method>org.apache.kafka.common.metrics.Metrics.public synchronized removeMetric( MetricName ): KafkaMetric,synchronized removeMetric( MetricName ): KafkaMetric,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,1,5,4
<Method>org.apache.kafka.common.metrics.Metrics.public synchronized removeReporter( MetricsReporter ): void,synchronized removeReporter( MetricsReporter ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,1
"<Method>org.apache.kafka.common.metrics.Metrics.public synchronized sensor( String, MetricConfig, RecordingLevel, Sensor ): Sensor","synchronized sensor( String, MetricConfig, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public synchronized sensor( String, MetricConfig, Sensor ): Sensor","synchronized sensor( String, MetricConfig, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.metrics.Metrics.public synchronized sensor( String, MetricConfig, long, RecordingLevel, Sensor ): Sensor","synchronized sensor( String, MetricConfig, long, RecordingLevel, Sensor ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,5,5,5
"<Method>org.apache.kafka.common.metrics.Metrics.public synchronized sensor( String, MetricConfig, long, Sensor ): Sensor","synchronized sensor( String, MetricConfig, long, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
<Field>org.apache.kafka.common.metrics.Metrics->childrenSensors,final childrenSensors : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->config,final config : MetricConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->metrics,final metrics : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->metricsScheduler,final metricsScheduler : ScheduledThreadPoolExecutor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->reporters,final reporters : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->sensors,final sensors : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Metrics->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.MetricsReporter,MetricsReporter,low,low,low,low,1,4,0,1,2,4,5,4,0,0,4,0,0,0,0.417,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract init( List ): void,init( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract metricChange( KafkaMetric ): void,metricChange( KafkaMetric ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract metricRemoval( KafkaMetric ): void,metricRemoval( KafkaMetric ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.metrics.Quota,Quota,low,low,low,low,0,9,0,1,0,13,34,31,2,0,7,2,0,0.167,0.583,0.444,0,0,,,,,34,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.metrics.Quota.public Quota( double, boolean ): void","Quota( double, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.Quota.public acceptable( double ): boolean,acceptable( double ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,4
<Method>org.apache.kafka.common.metrics.Quota.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,1,0,4
<Method>org.apache.kafka.common.metrics.Quota.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,0,2
<Method>org.apache.kafka.common.metrics.Quota.public isUpperBound( ): boolean,isUpperBound( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public static lowerBound( double ): Quota,static lowerBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.Quota.public static upperBound( double ): Quota,static upperBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.Quota.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,2
<Field>org.apache.kafka.common.metrics.Quota->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Quota->upper,final upper : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.QuotaViolationException,QuotaViolationException,medium-high,low,low,low,1,5,1,5,0,4,20,15,3,1,4,0,0,0.833,0.5,0.5,0,0,,,,,20,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.metrics.QuotaViolationException.public QuotaViolationException( MetricName, double, double ): void","QuotaViolationException( MetricName, double, double ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,1,3
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public metricName( ): MetricName,metricName( ): MetricName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.QuotaViolationException.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.QuotaViolationException->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->metricName,final metricName : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->value,final value : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Sensor,Sensor,low-medium,medium-high,low-medium,high,11,50,35,1,0,39,137,97,11,0,19,0,0,0.818,0.842,0.769,0,0,,,,,137,,,,,,39,,,,,,,
org.apache.kafka.common.metrics.Sensor.RecordingLevel,RecordingLevel,low,low,low,low,0,6,2,2,0,6,28,12,2,5,2,2,0,1,0.25,1,0,0,,,,,28,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.metrics.Sensor. Sensor( Metrics, String, Sensor, MetricConfig, Time, long, RecordingLevel ): void"," Sensor( Metrics, String, Sensor, MetricConfig, Time, long, RecordingLevel ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,7,4,11
<Method>org.apache.kafka.common.metrics.Sensor. parents( ): List, parents( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.metrics.Sensor.public add( CompoundStat ): boolean,add( CompoundStat ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.metrics.Sensor.public add( MetricName, MeasurableStat ): boolean","add( MetricName, MeasurableStat ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.metrics.Sensor.private checkForest( Set ): void,checkForest( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,3,1
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( ): void,checkQuotas( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.metrics.Sensor.public checkQuotas( long ): void,checkQuotas( long ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,10,1,7,1
<Method>org.apache.kafka.common.metrics.Sensor.public hasExpired( ): boolean,hasExpired( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,3
<Method>org.apache.kafka.common.metrics.Sensor.private metricLock( ): Object,metricLock( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Sensor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Sensor.public record( ): void,record( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,0
<Method>org.apache.kafka.common.metrics.Sensor.public record( double ): void,record( double ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,3,1
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long ): void","record( double, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long, boolean ): void","record( double, long, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,3,5,4
<Method>org.apache.kafka.common.metrics.Sensor.public shouldRecord( ): boolean,shouldRecord( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
"<Method>org.apache.kafka.common.metrics.Sensor.public synchronized add( CompoundStat, MetricConfig ): boolean","synchronized add( CompoundStat, MetricConfig ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,2,12,6
"<Method>org.apache.kafka.common.metrics.Sensor.public synchronized add( MetricName, MeasurableStat, MetricConfig ): boolean","synchronized add( MetricName, MeasurableStat, MetricConfig ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,3,9,6
<Method>org.apache.kafka.common.metrics.Sensor.public synchronized hasMetrics( ): boolean,synchronized hasMetrics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.metrics.Sensor.synchronized metrics( ): List,synchronized metrics( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Field>org.apache.kafka.common.metrics.Sensor->config,final config : MetricConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->inactiveSensorExpirationTimeMs,final inactiveSensorExpirationTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->metricLock,final metricLock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->metrics,final metrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->parents,final parents : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->recordingLevel,final recordingLevel : RecordingLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->registry,final registry : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->stats,final stats : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->lastRecordTime,volatile lastRecordTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Stat,Stat,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.metrics.Stat.public abstract record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Package>org.apache.kafka.common.metrics.internals,org.apache.kafka.common.metrics.internals,low,low,low,low,,,,,,29,134,,,,,,,,,,,,,3,3,0,134,1,1,0,0.5,0.5,29,,,,,,,
org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>,IntGaugeSuite,low-medium,low,low-medium,medium-high,3,54,36,1,0,23,134,102,10,0,8,0,0,0.629,0.732,0.2,0,0,,,,,134,,,,,,23,,,,,,,
org.apache.kafka.common.metrics.internals.IntGaugeSuite.PendingMetricsChange,PendingMetricsChange,low,low,low,low,2,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.internals.IntGaugeSuite.StoredIntGauge,StoredIntGauge,low,low,low,low,2,5,0,1,0,5,15,12,2,0,5,0,0,0.5,0.6,0,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>. metrics( ): Metrics, metrics( ): Metrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.public IntGaugeSuite( Logger, String, Metrics, Function, int ): void","IntGaugeSuite( Logger, String, Metrics, Function, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,1,10
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.public increment( K ): void,increment( K ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,30,1,23,22
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.public maxEntries( ): int,maxEntries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.private performPendingMetricsOperations( ): void,performPendingMetricsOperations( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,18,0,12,16
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,0,9,8
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.public synchronized decrement( K ): void,synchronized decrement( K ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,1,9,9
<Method>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>.synchronized values( ): Map,synchronized values( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,1
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->closed,closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->gauges,final gauges : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->maxEntries,final maxEntries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->metricNameCalculator,final metricNameCalculator : Function,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->modifyMetricsLock,final modifyMetricsLock : Lock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->pending,final pending : ConcurrentLinkedDeque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->removable,final removable : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.internals.IntGaugeSuite<K>->suiteName,final suiteName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.metrics.stats,org.apache.kafka.common.metrics.stats,low,medium-high,medium-high,low,,,,,,157,506,,,,,,,,,,,,,28,27,1,506,16,16,0.071,0.5,0.429,157,,,,,,,
org.apache.kafka.common.metrics.stats.Avg,Avg,low-medium,low,low,low,2,3,0,2,0,5,14,13,0,0,3,0,0,0,0.444,0,0,0,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Avg.public Avg( ): void,Avg( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.metrics.stats.Avg.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,3,0,0
"<Method>org.apache.kafka.common.metrics.stats.Avg.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,0,0
org.apache.kafka.common.metrics.stats.Count,Count,medium-high,low,low,low,0,0,0,4,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.CumulativeCount,CumulativeCount,low-medium,low,low,low,1,2,1,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.CumulativeCount.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
org.apache.kafka.common.metrics.stats.CumulativeSum,CumulativeSum,low,low,low,low,1,4,0,1,2,4,12,10,1,0,4,0,0,0,0.375,0,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.CumulativeSum.public CumulativeSum( ): void,CumulativeSum( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.CumulativeSum.public CumulativeSum( double ): void,CumulativeSum( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.metrics.stats.CumulativeSum.public measure( MetricConfig, long ): double","measure( MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.metrics.stats.CumulativeSum.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Field>org.apache.kafka.common.metrics.stats.CumulativeSum->total,total : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Frequencies,Frequencies,low-medium,low-medium,low-medium,low-medium,8,21,11,2,0,22,77,65,2,0,7,1,1,0.625,0.681,0.8,0,0.286,,,,,77,,,,,,22,,,,,,,
org.apache.kafka.common.metrics.stats.Frequencies.HistogramSample,HistogramSample,low,low,low,low,2,4,2,2,0,2,9,7,1,0,2,0,0,0,0.167,0,0,0,,,,,9,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Frequencies$6087;,Lorg.apache.kafka.common.metrics.stats.Frequencies$6087;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Frequencies. totalCount( ): double, totalCount( ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,1
"<Method>org.apache.kafka.common.metrics.stats.Frequencies.public Frequencies( int, double, double, Frequency ): void","Frequencies( int, double, double, Frequency ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,16,4,3,2
"<Method>org.apache.kafka.common.metrics.stats.Frequencies.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
"<Method>org.apache.kafka.common.metrics.stats.Frequencies.public frequency( MetricConfig, long, double ): double","frequency( MetricConfig, long, double ): double",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,3,3,3
<Method>org.apache.kafka.common.metrics.stats.Frequencies.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.common.metrics.stats.Frequencies.public static forBooleanValues( MetricName, MetricName ): Frequencies","static forBooleanValues( MetricName, MetricName ): Frequencies",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,2,5,0
<Method>org.apache.kafka.common.metrics.stats.Frequencies.public stats( ): List,stats( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,3,2
"<Method>org.apache.kafka.common.metrics.stats.Frequencies.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,1,0
<Field>org.apache.kafka.common.metrics.stats.Frequencies->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Frequencies->frequencies,final frequencies : Frequency,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Frequency,Frequency,low,low,low,low,1,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.Frequency.public Frequency( MetricName, double ): void","Frequency( MetricName, double ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.stats.Frequency.public centerValue( ): double,centerValue( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Frequency.public name( ): MetricName,name( ): MetricName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Frequency->centerValue,final centerValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Frequency->name,final name : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram,Histogram,low,low,low-medium,low,0,14,8,1,0,13,105,40,3,0,6,0,0,0.267,0.5,0,0,0,,,,,105,,,,,,13,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.BinScheme,BinScheme,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.ConstantBinScheme,ConstantBinScheme,low,low,low,low,0,4,0,1,0,9,30,23,5,1,4,0,0,0.556,0.333,0.333,0,0,,,,,30,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.LinearBinScheme,LinearBinScheme,low,low,low,low,0,5,1,1,0,9,27,23,3,0,4,0,0,0.333,0.333,0,0,0,,,,,27,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Histogram.public Histogram( BinScheme ): void,Histogram( BinScheme ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public counts( ): float,counts( ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Histogram.public record( double ): void,record( double ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,13,5
<Method>org.apache.kafka.common.metrics.stats.Histogram.public value( double ): double,value( double ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,14,1,2,7
<Field>org.apache.kafka.common.metrics.stats.Histogram->count,count : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->hist,final hist : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Max,Max,low-medium,low,low,low,2,4,1,2,0,5,14,13,0,0,3,0,0,0,0.444,0,0,0,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Max.public Max( ): void,Max( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.metrics.stats.Max.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,3,1,0
"<Method>org.apache.kafka.common.metrics.stats.Max.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
org.apache.kafka.common.metrics.stats.Meter,Meter,low,low-medium,low,low,7,22,3,1,0,8,28,23,4,0,6,0,0,0.25,0.595,0.8,0,0,,,,,28,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.Meter.public Meter( MetricName, MetricName ): void","Meter( MetricName, MetricName ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.metrics.stats.Meter.public Meter( SampledStat, MetricName, MetricName ): void","Meter( SampledStat, MetricName, MetricName ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.metrics.stats.Meter.public Meter( TimeUnit, MetricName, MetricName ): void","Meter( TimeUnit, MetricName, MetricName ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.metrics.stats.Meter.public Meter( TimeUnit, SampledStat, MetricName, MetricName ): void","Meter( TimeUnit, SampledStat, MetricName, MetricName ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,0,4
"<Method>org.apache.kafka.common.metrics.stats.Meter.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,3
<Method>org.apache.kafka.common.metrics.stats.Meter.public stats( ): List,stats( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,4
<Field>org.apache.kafka.common.metrics.stats.Meter->rate,final rate : Rate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Meter->rateMetricName,final rateMetricName : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Meter->total,final total : CumulativeSum,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Meter->totalMetricName,final totalMetricName : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Min,Min,low-medium,low,low,low,2,4,1,2,0,5,14,13,0,0,3,0,0,0,0.444,0,0,0,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Min.public Min( ): void,Min( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.metrics.stats.Min.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,3,1,0
"<Method>org.apache.kafka.common.metrics.stats.Min.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
org.apache.kafka.common.metrics.stats.Percentile,Percentile,low,low,low,low,1,3,0,1,0,3,11,8,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.Percentile.public Percentile( MetricName, double ): void","Percentile( MetricName, double ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.common.metrics.stats.Percentile.public name( ): MetricName,name( ): MetricName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Percentile.public percentile( ): double,percentile( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Percentile->name,final name : MetricName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Percentile->percentile,final percentile : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles,Percentiles,low-medium,low-medium,low-medium,low,8,18,8,2,0,16,66,51,3,0,7,0,1,0.556,0.587,0.8,0,0.286,,,,,66,,,,,,16,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.BucketSizing,BucketSizing,low,low,low,low,0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.HistogramSample,HistogramSample,low,low,low,low,2,4,2,2,0,2,9,7,1,0,2,0,0,0,0.167,0,0,0,,,,,9,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Percentiles$2770;,Lorg.apache.kafka.common.metrics.stats.Percentiles$2770;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.Percentiles.public Percentiles( int, double, BucketSizing, Percentile ): void","Percentiles( int, double, BucketSizing, Percentile ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.common.metrics.stats.Percentiles.public Percentiles( int, double, double, BucketSizing, Percentile ): void","Percentiles( int, double, double, BucketSizing, Percentile ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,5,0,6
"<Method>org.apache.kafka.common.metrics.stats.Percentiles.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Method>org.apache.kafka.common.metrics.stats.Percentiles.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.stats.Percentiles.public stats( ): List,stats( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,3,2
"<Method>org.apache.kafka.common.metrics.stats.Percentiles.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,1,0
"<Method>org.apache.kafka.common.metrics.stats.Percentiles.public value( MetricConfig, long, double ): double","value( MetricConfig, long, double ): double",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,17,3,3,4
<Field>org.apache.kafka.common.metrics.stats.Percentiles->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Percentiles->buckets,final buckets : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Percentiles->percentiles,final percentiles : Percentile,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Rate,Rate,low,low,low,low-medium,4,30,12,1,1,17,49,44,2,0,9,0,0,0.5,0.611,0.75,0,0,,,,,49,,,,,,17,,,,,,,
org.apache.kafka.common.metrics.stats.Rate.SampledTotal,SampledTotal,low,low,low,low,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( ): void,Rate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( SampledStat ): void,Rate( SampledStat ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( TimeUnit ): void,Rate( TimeUnit ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( TimeUnit, SampledStat ): void","Rate( TimeUnit, SampledStat ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.stats.Rate.private convert( long ): double,convert( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,1,0,2
"<Method>org.apache.kafka.common.metrics.stats.Rate.public measure( MetricConfig, long ): double","measure( MetricConfig, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,1
"<Method>org.apache.kafka.common.metrics.stats.Rate.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,1
<Method>org.apache.kafka.common.metrics.stats.Rate.public unitName( ): String,unitName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,5,2
"<Method>org.apache.kafka.common.metrics.stats.Rate.public windowSize( MetricConfig, long ): long","windowSize( MetricConfig, long ): long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,2,5,2
<Field>org.apache.kafka.common.metrics.stats.Rate->stat,final stat : SampledStat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Rate->unit,final unit : TimeUnit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.SampledStat,SampledStat,low,low,low-medium,low,1,18,13,1,6,18,66,46,3,0,10,0,0,0.611,0.5,0.6,0,0,,,,,66,,,,,,18,,,,,,,
org.apache.kafka.common.metrics.stats.SampledStat.Sample,Sample,low,low,low,low,1,5,2,1,2,3,16,11,4,0,3,0,0,0.25,0.333,0,0,0,,,,,16,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public SampledStat( double ): void,SampledStat( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.public abstract combine( List, MetricConfig, long ): double","abstract combine( List, MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected abstract update( Sample, MetricConfig, double, long ): void","abstract update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,4,0,0
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.private advance( MetricConfig, long ): Sample","advance( MetricConfig, long ): Sample",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,6,5
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public current( long ): Sample,current( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,4,4
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.public measure( MetricConfig, long ): double","measure( MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected newSample( long ): Sample,newSample( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public oldest( long ): Sample,oldest( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,6,5
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected purgeObsoleteSamples( MetricConfig, long ): void","purgeObsoleteSamples( MetricConfig, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,3,1
"<Method>org.apache.kafka.common.metrics.stats.SampledStat.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,4,0
<Field>org.apache.kafka.common.metrics.stats.SampledStat->current,current : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.SampledStat->initialValue,initialValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.SampledStat->samples,samples : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.SimpleRate,SimpleRate,low-medium,low,low,low,3,10,3,2,0,2,6,5,0,0,1,0,1,0,0,0,0,2,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.SimpleRate.public windowSize( MetricConfig, long ): long","windowSize( MetricConfig, long ): long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,2
org.apache.kafka.common.metrics.stats.Sum,Sum,low-medium,low,low,low,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Total,Total,low-medium,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Value,Value,low,low,low,low,1,2,0,1,0,2,8,6,1,0,2,0,0,0,0.125,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.Value.public measure( MetricConfig, long ): double","measure( MetricConfig, long ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.metrics.stats.Value.public record( MetricConfig, double, long ): void","record( MetricConfig, double, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Field>org.apache.kafka.common.metrics.stats.Value->value,value : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.WindowedCount,WindowedCount,low-medium,low,low,low,2,2,1,3,1,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.metrics.stats.WindowedCount.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
org.apache.kafka.common.metrics.stats.WindowedSum,WindowedSum,low-medium,low,low,low,2,3,0,2,3,4,12,11,0,0,3,0,0,0,0.444,0,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.WindowedSum.public WindowedSum( ): void,WindowedSum( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.metrics.stats.WindowedSum.public combine( List, MetricConfig, long ): double","combine( List, MetricConfig, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,0,0
"<Method>org.apache.kafka.common.metrics.stats.WindowedSum.protected update( Sample, MetricConfig, double, long ): void","update( Sample, MetricConfig, double, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,0,0
<Package>org.apache.kafka.common.network,org.apache.kafka.common.network,medium-high,medium-high,high,low,,,,,,809,2571,,,,,,,,,,,,,40,32,8,2571,25,15,0.2,0.375,0.425,809,,,,,,,
org.apache.kafka.common.network.Authenticator,Authenticator,low,low,low,low,2,11,1,1,4,10,16,10,0,0,10,0,0,0,0.45,0,0,0,,,,,16,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.network.Authenticator.public abstract authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public clientSessionReauthenticationTimeNanos( ): Long,clientSessionReauthenticationTimeNanos( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public connectedClientSupportsReauthentication( ): boolean,connectedClientSupportsReauthentication( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public getAndClearResponsesReceivedDuringReauthentication( ): List,getAndClearResponsesReceivedDuringReauthentication( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.common.network.Authenticator.public handleAuthenticationFailure( ): void,handleAuthenticationFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public reauthenticate( ReauthenticationContext ): void,reauthenticate( ReauthenticationContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Authenticator.public reauthenticationLatencyMs( ): Long,reauthenticationLatencyMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public serverSessionExpirationTimeNanos( ): Long,serverSessionExpirationTimeNanos( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ByteBufferSend,ByteBufferSend,low,low,low,low-medium,1,10,3,1,1,8,31,25,5,0,6,0,0,0.72,0.625,0.467,0,0,,,,,31,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.network.ByteBufferSend.public ByteBufferSend( String, ByteBuffer ): void","ByteBufferSend( String, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,1,5
<Method>org.apache.kafka.common.network.ByteBufferSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.network.ByteBufferSend.public destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.ByteBufferSend.public remaining( ): long,remaining( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ByteBufferSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.ByteBufferSend.public writeTo( GatheringByteChannel ): long,writeTo( GatheringByteChannel ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,2,3
<Field>org.apache.kafka.common.network.ByteBufferSend->buffers,final buffers : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->destination,final destination : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ChannelBuilder,ChannelBuilder,low,low,low,low,3,2,0,1,3,2,5,2,0,0,2,0,0,0,0.417,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.network.ChannelBuilder.public abstract buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel","buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
<Method>org.apache.kafka.common.network.ChannelBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ChannelBuilders,ChannelBuilders,low-medium,high,low-medium,low-medium,25,76,24,1,0,27,126,125,0,0,1,7,0,0,0.684,0,0,0,,,,,126,,,,,,27,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilders.private ChannelBuilders( ): void,ChannelBuilders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.protected static channelBuilderConfigs( AbstractConfig, ListenerName ): Map","static channelBuilderConfigs( AbstractConfig, ListenerName ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,14,2,10,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.public static clientChannelBuilder( SecurityProtocol, Type, AbstractConfig, ListenerName, String, Time, boolean ): ChannelBuilder","static clientChannelBuilder( SecurityProtocol, Type, AbstractConfig, ListenerName, String, Time, boolean ): ChannelBuilder",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,7,1,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.private static create( SecurityProtocol, Mode, Type, AbstractConfig, ListenerName, boolean, String, boolean, CredentialCache, DelegationTokenCache, Time ): ChannelBuilder","static create( SecurityProtocol, Mode, Type, AbstractConfig, ListenerName, boolean, String, boolean, CredentialCache, DelegationTokenCache, Time ): ChannelBuilder",low,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,50,11,11,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.private static createPrincipalBuilder( Class, Map ): PrincipalBuilder","static createPrincipalBuilder( Class, Map ): PrincipalBuilder",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,2,2,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.public static createPrincipalBuilder( Map, TransportLayer, Authenticator, KerberosShortNamer, SslPrincipalMapper ): KafkaPrincipalBuilder","static createPrincipalBuilder( Map, TransportLayer, Authenticator, KerberosShortNamer, SslPrincipalMapper ): KafkaPrincipalBuilder",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,24,5,10,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.private static requireNonNullMode( Mode, SecurityProtocol ): void","static requireNonNullMode( Mode, SecurityProtocol ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,0,0
"<Method>org.apache.kafka.common.network.ChannelBuilders.public static serverChannelBuilder( ListenerName, boolean, SecurityProtocol, AbstractConfig, CredentialCache, DelegationTokenCache, Time ): ChannelBuilder","static serverChannelBuilder( ListenerName, boolean, SecurityProtocol, AbstractConfig, CredentialCache, DelegationTokenCache, Time ): ChannelBuilder",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,7,1,0
org.apache.kafka.common.network.ChannelMetadataRegistry,ChannelMetadataRegistry,low,low,low,low,2,5,0,1,2,5,6,5,0,0,5,0,0,0,0.533,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.network.ChannelMetadataRegistry.public abstract cipherInformation( ): CipherInformation,cipherInformation( ): CipherInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.ChannelMetadataRegistry.public abstract clientInformation( ): ClientInformation,clientInformation( ): ClientInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.ChannelMetadataRegistry.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.ChannelMetadataRegistry.public abstract registerCipherInformation( CipherInformation ): void,registerCipherInformation( CipherInformation ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.ChannelMetadataRegistry.public abstract registerClientInformation( ClientInformation ): void,registerClientInformation( ClientInformation ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.network.ChannelState,ChannelState,low,low,low,low,1,6,0,1,0,6,32,14,3,6,6,0,0,1.111,0.5,0.8,0,0,,,,,32,,,,,,6,,,,,,,
org.apache.kafka.common.network.ChannelState.State,State,low,low,low,low,0,0,0,2,0,0,8,0,0,7,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.network.ChannelState.public ChannelState( State ): void,ChannelState( State ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.network.ChannelState.public ChannelState( State, AuthenticationException, String ): void","ChannelState( State, AuthenticationException, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.common.network.ChannelState.public ChannelState( State, String ): void","ChannelState( State, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.network.ChannelState.public exception( ): AuthenticationException,exception( ): AuthenticationException,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ChannelState.public remoteAddress( ): String,remoteAddress( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ChannelState.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.network.ChannelState->exception,final exception : AuthenticationException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->remoteAddress,final remoteAddress : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->state,final state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->AUTHENTICATE,static final AUTHENTICATE : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->EXPIRED,static final EXPIRED : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->FAILED_SEND,static final FAILED_SEND : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->LOCAL_CLOSE,static final LOCAL_CLOSE : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->NOT_CONNECTED,static final NOT_CONNECTED : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ChannelState->READY,static final READY : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.CipherInformation,CipherInformation,low,low,low,low,0,9,3,1,0,12,26,23,2,0,6,0,0,0.2,0.556,0.067,0,0,,,,,26,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.network.CipherInformation.public CipherInformation( String, String ): void","CipherInformation( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,3,2,2,2
<Method>org.apache.kafka.common.network.CipherInformation.public cipher( ): String,cipher( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.CipherInformation.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,2,4
<Method>org.apache.kafka.common.network.CipherInformation.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.network.CipherInformation.public protocol( ): String,protocol( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.CipherInformation.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.common.network.CipherInformation->cipher,final cipher : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.CipherInformation->protocol,final protocol : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ClientInformation,ClientInformation,low,low,low,low,0,9,3,1,0,10,28,23,2,2,6,0,0,0.65,0.556,0.067,0,0,,,,,28,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.network.ClientInformation.public ClientInformation( String, String ): void","ClientInformation( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,2,2,4
<Method>org.apache.kafka.common.network.ClientInformation.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,2,4
<Method>org.apache.kafka.common.network.ClientInformation.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.network.ClientInformation.public softwareName( ): String,softwareName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ClientInformation.public softwareVersion( ): String,softwareVersion( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ClientInformation.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.common.network.ClientInformation->softwareName,final softwareName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ClientInformation->softwareVersion,final softwareVersion : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ClientInformation->EMPTY,static final EMPTY : ClientInformation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ClientInformation->UNKNOWN_NAME_OR_VERSION,static final UNKNOWN_NAME_OR_VERSION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.DefaultChannelMetadataRegistry,DefaultChannelMetadataRegistry,low,low,low,low,2,5,0,1,0,6,20,17,2,0,5,0,0,0.5,0.533,0.4,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.network.DefaultChannelMetadataRegistry.public cipherInformation( ): CipherInformation,cipherInformation( ): CipherInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.DefaultChannelMetadataRegistry.public clientInformation( ): ClientInformation,clientInformation( ): ClientInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.DefaultChannelMetadataRegistry.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.common.network.DefaultChannelMetadataRegistry.public registerCipherInformation( CipherInformation ): void,registerCipherInformation( CipherInformation ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,2
<Method>org.apache.kafka.common.network.DefaultChannelMetadataRegistry.public registerClientInformation( ClientInformation ): void,registerClientInformation( ClientInformation ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.common.network.DefaultChannelMetadataRegistry->cipherInformation,cipherInformation : CipherInformation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.DefaultChannelMetadataRegistry->clientInformation,clientInformation : ClientInformation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.DelayedResponseAuthenticationException,DelayedResponseAuthenticationException,medium-high,low,low,low,0,1,0,7,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.DelayedResponseAuthenticationException.public DelayedResponseAuthenticationException( Throwable ): void,DelayedResponseAuthenticationException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.network.DelayedResponseAuthenticationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.InvalidReceiveException,InvalidReceiveException,medium-high,low,low,low,0,2,0,5,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.InvalidReceiveException.public InvalidReceiveException( String ): void,InvalidReceiveException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.network.InvalidReceiveException.public InvalidReceiveException( String, Throwable ): void","InvalidReceiveException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.network.KafkaChannel,KafkaChannel,medium-high,medium-high,high,very-high,14,94,47,1,0,100,266,236,17,1,45,0,0,0.907,0.902,0.707,0,0,,,,,266,,,,,,100,,,,,,,
org.apache.kafka.common.network.KafkaChannel.ChannelMuteEvent,ChannelMuteEvent,low,low,low,low,0,0,0,2,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.network.KafkaChannel.ChannelMuteState,ChannelMuteState,low,low,low,low,0,0,0,2,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.network.KafkaChannel. completeCloseOnAuthenticationFailure( ): void, completeCloseOnAuthenticationFailure( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.common.network.KafkaChannel. connectedClientSupportsReauthentication( ): boolean, connectedClientSupportsReauthentication( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel. maybeUnmute( ): boolean, maybeUnmute( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,1,5
<Method>org.apache.kafka.common.network.KafkaChannel. mute( ): void, mute( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,0,1,4
"<Method>org.apache.kafka.common.network.KafkaChannel.public KafkaChannel( String, TransportLayer, Supplier, int, MemoryPool, ChannelMetadataRegistry ): void","KafkaChannel( String, TransportLayer, Supplier, int, MemoryPool, ChannelMetadataRegistry ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,6,1,11
<Method>org.apache.kafka.common.network.KafkaChannel.public addNetworkThreadTimeNanos( long ): void,addNetworkThreadTimeNanos( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public channelMetadataRegistry( ): ChannelMetadataRegistry,channelMetadataRegistry( ): ChannelMetadataRegistry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.common.network.KafkaChannel.public currentReceive( ): NetworkReceive,currentReceive( ): NetworkReceive,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.private delayCloseOnAuthenticationFailure( ): void,delayCloseOnAuthenticationFailure( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public disconnect( ): void,disconnect( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,2,6
<Method>org.apache.kafka.common.network.KafkaChannel.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,3,2
<Method>org.apache.kafka.common.network.KafkaChannel.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,0,5,8
<Method>org.apache.kafka.common.network.KafkaChannel.public getAndClearResponsesReceivedDuringReauthentication( ): List,getAndClearResponsesReceivedDuringReauthentication( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public getAndResetNetworkThreadTimeNanos( ): long,getAndResetNetworkThreadTimeNanos( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.common.network.KafkaChannel.public handleChannelMuteEvent( ChannelMuteEvent ): void,handleChannelMuteEvent( ChannelMuteEvent ): void,low-medium,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,30,1,2,13
<Method>org.apache.kafka.common.network.KafkaChannel.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public hasSend( ): boolean,hasSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public id( ): String,id( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public isInMutableState( ): boolean,isInMutableState( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,2,3
<Method>org.apache.kafka.common.network.KafkaChannel.public isMuted( ): boolean,isMuted( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public maybeBeginClientReauthentication( Supplier ): boolean,maybeBeginClientReauthentication( Supplier ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,14,1,5,7
"<Method>org.apache.kafka.common.network.KafkaChannel.public maybeBeginServerReauthentication( NetworkReceive, Supplier ): boolean","maybeBeginServerReauthentication( NetworkReceive, Supplier ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,15,2,4,6
<Method>org.apache.kafka.common.network.KafkaChannel.public maybeCompleteReceive( ): NetworkReceive,maybeCompleteReceive( ): NetworkReceive,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,3,5
<Method>org.apache.kafka.common.network.KafkaChannel.public maybeCompleteSend( ): Send,maybeCompleteSend( ): Send,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,2,6
<Method>org.apache.kafka.common.network.KafkaChannel.public muteState( ): ChannelMuteState,muteState( ): ChannelMuteState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public prepare( ): void,prepare( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,18,0,8,10
<Method>org.apache.kafka.common.network.KafkaChannel.public principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public read( ): long,read( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,0,5,8
<Method>org.apache.kafka.common.network.KafkaChannel.public ready( ): boolean,ready( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.network.KafkaChannel.public reauthenticationLatencyMs( ): Long,reauthenticationLatencyMs( ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.private receive( NetworkReceive ): long,receive( NetworkReceive ): long,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,4
<Method>org.apache.kafka.common.network.KafkaChannel.public selectionKey( ): SelectionKey,selectionKey( ): SelectionKey,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public serverAuthenticationSessionExpired( long ): boolean,serverAuthenticationSessionExpired( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public setSend( Send ): void,setSend( Send ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,4
<Method>org.apache.kafka.common.network.KafkaChannel.public socketAddress( ): InetAddress,socketAddress( ): InetAddress,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.network.KafkaChannel.public socketDescription( ): String,socketDescription( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,7,1
<Method>org.apache.kafka.common.network.KafkaChannel.public state( ): ChannelState,state( ): ChannelState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public state( ChannelState ): void,state( ChannelState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.public successfulAuthentications( ): int,successfulAuthentications( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.KafkaChannel.private swapAuthenticatorsAndBeginReauthentication( ReauthenticationContext ): void,swapAuthenticatorsAndBeginReauthentication( ReauthenticationContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,3
<Method>org.apache.kafka.common.network.KafkaChannel.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.KafkaChannel.public write( ): long,write( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,4
<Field>org.apache.kafka.common.network.KafkaChannel->authenticator,authenticator : Authenticator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->disconnected,disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->authenticatorCreator,final authenticatorCreator : Supplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->memoryPool,final memoryPool : MemoryPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->metadataRegistry,final metadataRegistry : ChannelMetadataRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->transportLayer,final transportLayer : TransportLayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->lastReauthenticationStartNanos,lastReauthenticationStartNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->midWrite,midWrite : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->muteState,muteState : ChannelMuteState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->networkThreadTimeNanos,networkThreadTimeNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->receive,receive : NetworkReceive,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->remoteAddress,remoteAddress : SocketAddress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->send,send : Send,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->state,state : ChannelState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->MIN_REAUTH_INTERVAL_ONE_SECOND_NANOS,static final MIN_REAUTH_INTERVAL_ONE_SECOND_NANOS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.KafkaChannel->successfulAuthentications,successfulAuthentications : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ListenerName,ListenerName,low,low,low,low,1,15,7,1,0,11,30,27,1,1,7,3,0,0.5,0.6,0.667,0,0,,,,,30,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.network.ListenerName.public ListenerName( String ): void,ListenerName( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.network.ListenerName.public configPrefix( ): String,configPrefix( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.network.ListenerName.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,2
<Method>org.apache.kafka.common.network.ListenerName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.ListenerName.public saslMechanismConfigPrefix( String ): String,saslMechanismConfigPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.network.ListenerName.public static forSecurityProtocol( SecurityProtocol ): ListenerName,static forSecurityProtocol( SecurityProtocol ): ListenerName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.network.ListenerName.public static normalised( String ): ListenerName,static normalised( String ): ListenerName,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.network.ListenerName.public static saslMechanismPrefix( String ): String,static saslMechanismPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.network.ListenerName.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.ListenerName.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.network.ListenerName->value,final value : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ListenerName->CONFIG_STATIC_PREFIX,static final CONFIG_STATIC_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ListenerReconfigurable,ListenerReconfigurable,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ListenerReconfigurable.public abstract listenerName( ): ListenerName,listenerName( ): ListenerName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.Mode,Mode,low-medium,low,low,low,0,0,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.Mode->CLIENT,static final CLIENT : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Mode->SERVER,static final SERVER : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkReceive,NetworkReceive,low-medium,low,low-medium,medium-high,3,24,11,1,0,29,89,78,6,4,14,0,0,0.738,0.726,0.363,0,0,,,,,89,,,,,,29,,,,,,,
<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( ): void,NetworkReceive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( String ): void,NetworkReceive( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,1,6
"<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( String, ByteBuffer ): void","NetworkReceive( String, ByteBuffer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,6
"<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( int, String ): void","NetworkReceive( int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,1,5
"<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( int, String, MemoryPool ): void","NetworkReceive( int, String, MemoryPool ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,5
<Method>org.apache.kafka.common.network.NetworkReceive.public bytesRead( ): int,bytesRead( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,3,4
<Method>org.apache.kafka.common.network.NetworkReceive.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,1,6
<Method>org.apache.kafka.common.network.NetworkReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,3
<Method>org.apache.kafka.common.network.NetworkReceive.public memoryAllocated( ): boolean,memoryAllocated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.NetworkReceive.public payload( ): ByteBuffer,payload( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.NetworkReceive.public readFrom( ScatteringByteChannel ): long,readFrom( ScatteringByteChannel ): long,low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,27,1,8,23
<Method>org.apache.kafka.common.network.NetworkReceive.public requiredMemoryAmountKnown( ): boolean,requiredMemoryAmountKnown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.NetworkReceive.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.network.NetworkReceive.public source( ): String,source( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.NetworkReceive->buffer,buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->maxSize,final maxSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->memoryPool,final memoryPool : MemoryPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->size,final size : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->source,final source : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->requestedBufferSize,requestedBufferSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->EMPTY_BUFFER,static final EMPTY_BUFFER : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->UNKNOWN_SOURCE,static final UNKNOWN_SOURCE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->UNLIMITED,static final UNLIMITED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkSend,NetworkSend,low-medium,low,low,low,0,6,5,2,0,2,8,7,0,0,1,1,0,0,0.375,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.network.NetworkSend.public NetworkSend( String, ByteBuffer ): void","NetworkSend( String, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.network.NetworkSend.private static sizeBuffer( int ): ByteBuffer,static sizeBuffer( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
org.apache.kafka.common.network.PlaintextChannelBuilder,PlaintextChannelBuilder,low,low-medium,low,low-medium,7,5,1,1,0,6,44,17,2,1,4,0,0,1,0.656,1,0,0,,,,,44,,,,,,6,,,,,,,
org.apache.kafka.common.network.PlaintextChannelBuilder.PlaintextAuthenticator,PlaintextAuthenticator,low,low,low,low,7,25,7,1,0,7,23,19,3,0,5,0,0,0.333,0.6,0.833,0,0,,,,,23,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public PlaintextChannelBuilder( ListenerName ): void,PlaintextChannelBuilder( ListenerName ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel","buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,5,1,1
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.network.PlaintextChannelBuilder->configs,configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.PlaintextChannelBuilder->listenerName,final listenerName : ListenerName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.PlaintextChannelBuilder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.PlaintextTransportLayer,PlaintextTransportLayer,low-medium,low,low-medium,medium-high,0,41,18,1,0,24,76,72,3,0,23,0,0,0.667,0.739,0.613,0,0,,,,,76,,,,,,24,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public PlaintextTransportLayer( SelectionKey ): void,PlaintextTransportLayer( SelectionKey ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,2
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,3
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public peerPrincipal( ): Principal,peerPrincipal( ): Principal,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public read( ByteBuffer ): int,read( ByteBuffer ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public read( ByteBuffer ): long,read( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public read( ByteBuffer, int, int ): long","read( ByteBuffer, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public selectionKey( ): SelectionKey,selectionKey( ): SelectionKey,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public socketChannel( ): SocketChannel,socketChannel( ): SocketChannel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public transferFrom( FileChannel, long, long ): long","transferFrom( FileChannel, long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public write( ByteBuffer ): int,write( ByteBuffer ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public write( ByteBuffer ): long,write( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public write( ByteBuffer, int, int ): long","write( ByteBuffer, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,1
<Field>org.apache.kafka.common.network.PlaintextTransportLayer->key,final key : SelectionKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.PlaintextTransportLayer->principal,final principal : Principal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.PlaintextTransportLayer->socketChannel,final socketChannel : SocketChannel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ReauthenticationContext,ReauthenticationContext,low,low,low,low,2,5,1,1,0,4,14,10,3,0,4,0,0,0.667,0.562,0.5,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.network.ReauthenticationContext.public ReauthenticationContext( Authenticator, NetworkReceive, long ): void","ReauthenticationContext( Authenticator, NetworkReceive, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,3
<Method>org.apache.kafka.common.network.ReauthenticationContext.public networkReceive( ): NetworkReceive,networkReceive( ): NetworkReceive,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ReauthenticationContext.public previousAuthenticator( ): Authenticator,previousAuthenticator( ): Authenticator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.ReauthenticationContext.public reauthenticationBeginNanos( ): long,reauthenticationBeginNanos( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.network.ReauthenticationContext->networkReceive,final networkReceive : NetworkReceive,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ReauthenticationContext->previousAuthenticator,final previousAuthenticator : Authenticator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ReauthenticationContext->reauthenticationBeginNanos,final reauthenticationBeginNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Receive,Receive,low,low,low,low,0,5,0,1,1,5,6,5,0,0,5,0,0,0,0.4,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.network.Receive.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract memoryAllocated( ): boolean,memoryAllocated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract readFrom( ScatteringByteChannel ): long,readFrom( ScatteringByteChannel ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract requiredMemoryAmountKnown( ): boolean,requiredMemoryAmountKnown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Receive.public abstract source( ): String,source( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SaslChannelBuilder,SaslChannelBuilder,high,very-high,low-medium,high,39,178,59,1,0,57,235,215,17,2,20,1,0,0.88,0.849,0.429,0,0,,,,,235,,,,,,57,,,,,,,
<Method>org.apache.kafka.common.network.SaslChannelBuilder. loginManagers( ): Map, loginManagers( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.network.SaslChannelBuilder.public SaslChannelBuilder( Mode, Map, SecurityProtocol, ListenerName, boolean, String, boolean, CredentialCache, DelegationTokenCache, Time ): void","SaslChannelBuilder( Mode, Map, SecurityProtocol, ListenerName, boolean, String, boolean, CredentialCache, DelegationTokenCache, Time ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,10,2,14
"<Method>org.apache.kafka.common.network.SaslChannelBuilder.public buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel","buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,30,5,5,4
"<Method>org.apache.kafka.common.network.SaslChannelBuilder.protected buildClientAuthenticator( Map, AuthenticateCallbackHandler, String, String, String, TransportLayer, Subject ): SaslClientAuthenticator","buildClientAuthenticator( Map, AuthenticateCallbackHandler, String, String, String, TransportLayer, Subject ): SaslClientAuthenticator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,7,0,3
"<Method>org.apache.kafka.common.network.SaslChannelBuilder.protected buildServerAuthenticator( Map, Map, String, TransportLayer, Map, Map, ChannelMetadataRegistry ): SaslServerAuthenticator","buildServerAuthenticator( Map, Map, String, TransportLayer, Map, Map, ChannelMetadataRegistry ): SaslServerAuthenticator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,7,0,4
"<Method>org.apache.kafka.common.network.SaslChannelBuilder.protected buildTransportLayer( String, SelectionKey, SocketChannel, ChannelMetadataRegistry ): TransportLayer","buildTransportLayer( String, SelectionKey, SocketChannel, ChannelMetadataRegistry ): TransportLayer",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,4,7,2
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private clientCallbackHandlerClass( ): Class,clientCallbackHandlerClass( ): Class,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,0,1
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,5,3
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public configure( Map ): void,configure( Map ): void,low-medium,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,37,1,25,15
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private createClientCallbackHandler( Map ): void,createClientCallbackHandler( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,4,2
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private createConnectionsMaxReauthMsMap( Map ): void,createConnectionsMaxReauthMsMap( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,5,2
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private createServerCallbackHandlers( Map ): void,createServerCallbackHandlers( Map ): void,low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,18,1,9,4
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private defaultLoginClass( Map ): Class,defaultLoginClass( Map ): Class,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,2,2
<Method>org.apache.kafka.common.network.SaslChannelBuilder.protected gssManager( ): GSSManager,gssManager( ): GSSManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public listenerName( ): ListenerName,listenerName( ): ListenerName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private maybeAddNativeGssapiCredentials( Subject ): void,maybeAddNativeGssapiCredentials( Subject ): void,low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,1,14,3
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public reconfigurableConfigs( ): Set,reconfigurableConfigs( ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,2
<Method>org.apache.kafka.common.network.SaslChannelBuilder.private static defaultKerberosRealm( ): String,static defaultKerberosRealm( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.network.SaslChannelBuilder.protected subject( String ): Subject,subject( String ): Subject,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public validateReconfiguration( Map ): void,validateReconfiguration( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,2
<Field>org.apache.kafka.common.network.SaslChannelBuilder->configs,configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->connectionsMaxReauthMsByMechanism,connectionsMaxReauthMsByMechanism : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->clientSaslMechanism,final clientSaslMechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->credentialCache,final credentialCache : CredentialCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->handshakeRequestEnable,final handshakeRequestEnable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->isInterBrokerListener,final isInterBrokerListener : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->jaasContexts,final jaasContexts : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->listenerName,final listenerName : ListenerName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->loginManagers,final loginManagers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->mode,final mode : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->securityProtocol,final securityProtocol : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->subjects,final subjects : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->tokenCache,final tokenCache : DelegationTokenCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->kerberosShortNamer,kerberosShortNamer : KerberosShortNamer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->saslCallbackHandlers,saslCallbackHandlers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->sslFactory,sslFactory : SslFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->GSS_NATIVE_PROP,static final GSS_NATIVE_PROP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SaslChannelBuilder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selectable,Selectable,low,low,low,medium-high,1,15,0,1,1,15,17,15,0,1,15,0,0,0,0.733,1,0,0,,,,,17,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.network.Selectable.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract close( String ): void,close( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract completedReceives( ): List,completedReceives( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract completedSends( ): List,completedSends( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.network.Selectable.public abstract connect( String, InetSocketAddress, int, int ): void","connect( String, InetSocketAddress, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract connected( ): List,connected( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract disconnected( ): Map,disconnected( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract isChannelReady( String ): boolean,isChannelReady( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract mute( String ): void,mute( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract send( Send ): void,send( Send ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract unmute( String ): void,unmute( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.network.Selectable->USE_DEFAULT_BUFFER_SIZE,static final USE_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selector,Selector,very-high,medium-high,very-high,high,15,288,163,1,0,180,848,534,25,2,59,0,0,0.915,0.86,0.783,1,0,,,,,848,,,,,,180,,,,,,,
org.apache.kafka.common.network.Selector.CloseMode,CloseMode,low,low,low,low,0,1,0,2,0,1,7,2,1,3,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
org.apache.kafka.common.network.Selector.DelayedAuthenticationFailureClose,DelayedAuthenticationFailureClose,low,low,low,low,2,52,3,1,0,5,17,13,3,0,3,0,0,0.333,0.5,0,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.common.network.Selector.IdleExpiryManager,IdleExpiryManager,low,low,low,low,1,12,8,1,0,7,25,21,3,0,4,0,0,0.444,0.375,0,0,0,,,,,25,,,,,,7,,,,,,,
org.apache.kafka.common.network.Selector.SelectorChannelMetadataRegistry,SelectorChannelMetadataRegistry,low,low,low,low,4,49,4,1,0,11,33,30,2,0,5,0,0,0.5,0.533,0.4,0,0,,,,,33,,,,,,11,,,,,,,
org.apache.kafka.common.network.Selector.SelectorMetrics,SelectorMetrics,low,low,low,low,10,93,24,1,0,26,204,180,23,0,11,0,0,0.888,0.591,0,0,0,,,,,204,,,,,,26,,,,,,,
<Method>org.apache.kafka.common.network.Selector. completeDelayedChannelClose( long ): void, completeDelayedChannelClose( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,5,3
<Method>org.apache.kafka.common.network.Selector. delayedClosingChannels( ): Map, delayedClosingChannels( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.Selector. isMadeReadProgressLastPoll( ): boolean, isMadeReadProgressLastPoll( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.Selector. isOutOfMemory( ): boolean, isOutOfMemory( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.network.Selector. pollSelectionKeys( Set, boolean, long ): void"," pollSelectionKeys( Set, boolean, long ): void",very-high,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,6,80,3,56,21
<Method>org.apache.kafka.common.network.Selector. write( KafkaChannel ): void, write( KafkaChannel ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,1,8,4
"<Method>org.apache.kafka.common.network.Selector.public Selector( int, long, Metrics, Time, String, Map, boolean, ChannelBuilder, LogContext ): void","Selector( int, long, Metrics, Time, String, Map, boolean, ChannelBuilder, LogContext ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,9,0,1
"<Method>org.apache.kafka.common.network.Selector.public Selector( int, long, Metrics, Time, String, Map, boolean, boolean, ChannelBuilder, MemoryPool, LogContext ): void","Selector( int, long, Metrics, Time, String, Map, boolean, boolean, ChannelBuilder, MemoryPool, LogContext ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,11,0,1
"<Method>org.apache.kafka.common.network.Selector.public Selector( int, long, int, Metrics, Time, String, Map, boolean, ChannelBuilder, LogContext ): void","Selector( int, long, int, Metrics, Time, String, Map, boolean, ChannelBuilder, LogContext ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,10,0,0
"<Method>org.apache.kafka.common.network.Selector.public Selector( int, long, int, Metrics, Time, String, Map, boolean, boolean, ChannelBuilder, MemoryPool, LogContext ): void","Selector( int, long, int, Metrics, Time, String, Map, boolean, boolean, ChannelBuilder, MemoryPool, LogContext ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,39,12,3,26
"<Method>org.apache.kafka.common.network.Selector.public Selector( long, Metrics, Time, String, ChannelBuilder, LogContext ): void","Selector( long, Metrics, Time, String, ChannelBuilder, LogContext ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,6,1,0
"<Method>org.apache.kafka.common.network.Selector.public Selector( long, int, Metrics, Time, String, ChannelBuilder, LogContext ): void","Selector( long, int, Metrics, Time, String, ChannelBuilder, LogContext ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,7,1,0
<Method>org.apache.kafka.common.network.Selector.private addToCompletedReceives( ): void,addToCompletedReceives( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,0,11,3
"<Method>org.apache.kafka.common.network.Selector.private addToCompletedReceives( KafkaChannel, Deque ): void","addToCompletedReceives( KafkaChannel, Deque ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.common.network.Selector.private addToStagedReceives( KafkaChannel, NetworkReceive ): void","addToStagedReceives( KafkaChannel, NetworkReceive ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,3
"<Method>org.apache.kafka.common.network.Selector.private attemptRead( SelectionKey, KafkaChannel ): void","attemptRead( SelectionKey, KafkaChannel ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,20,2,14,7
"<Method>org.apache.kafka.common.network.Selector.private attemptWrite( SelectionKey, KafkaChannel, long ): void","attemptWrite( SelectionKey, KafkaChannel, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,6,3,5,0
"<Method>org.apache.kafka.common.network.Selector.private buildAndAttachKafkaChannel( SocketChannel, String, SelectionKey ): KafkaChannel","buildAndAttachKafkaChannel( SocketChannel, String, SelectionKey ): KafkaChannel",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,12,3,4,3
<Method>org.apache.kafka.common.network.Selector.private channel( SelectionKey ): KafkaChannel,channel( SelectionKey ): KafkaChannel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.network.Selector.public channel( String ): KafkaChannel,channel( String ): KafkaChannel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.network.Selector.public channels( ): List,channels( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.Selector.private clear( ): void,clear( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,0,17,11
<Method>org.apache.kafka.common.network.Selector.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,0,6,4
"<Method>org.apache.kafka.common.network.Selector.private close( KafkaChannel, CloseMode ): void","close( KafkaChannel, CloseMode ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,14,2,16,9
<Method>org.apache.kafka.common.network.Selector.public close( String ): void,close( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,5,2
<Method>org.apache.kafka.common.network.Selector.public closingChannel( String ): KafkaChannel,closingChannel( String ): KafkaChannel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.network.Selector.public completedReceives( ): List,completedReceives( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.Selector.public completedSends( ): List,completedSends( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.network.Selector.private configureSocketChannel( SocketChannel, int, int ): void","configureSocketChannel( SocketChannel, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,3,6,0
"<Method>org.apache.kafka.common.network.Selector.public connect( String, InetSocketAddress, int, int ): void","connect( String, InetSocketAddress, int, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,19,4,11,4
<Method>org.apache.kafka.common.network.Selector.public connected( ): List,connected( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.Selector.private determineHandlingOrder( Set ): Collection,determineHandlingOrder( Set ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,3
<Method>org.apache.kafka.common.network.Selector.public disconnected( ): Map,disconnected( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.network.Selector.private doClose( KafkaChannel, boolean ): void","doClose( KafkaChannel, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,2,14,7
"<Method>org.apache.kafka.common.network.Selector.protected doConnect( SocketChannel, InetSocketAddress ): boolean","doConnect( SocketChannel, InetSocketAddress ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,1,0
<Method>org.apache.kafka.common.network.Selector.private ensureNotRegistered( String ): void,ensureNotRegistered( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,2,2
<Method>org.apache.kafka.common.network.Selector.private handleCloseOnAuthenticationFailure( KafkaChannel ): void,handleCloseOnAuthenticationFailure( KafkaChannel ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,1
<Method>org.apache.kafka.common.network.Selector.private hasStagedReceive( KafkaChannel ): boolean,hasStagedReceive( KafkaChannel ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.network.Selector.private hasStagedReceives( ): boolean,hasStagedReceives( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,2,1
<Method>org.apache.kafka.common.network.Selector.public isChannelReady( String ): boolean,isChannelReady( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.common.network.Selector.public keys( ): Set,keys( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.Selector.public lowestPriorityChannel( ): KafkaChannel,lowestPriorityChannel( ): KafkaChannel,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,10,0,13,7
<Method>org.apache.kafka.common.network.Selector.private maybeCloseOldestConnection( long ): void,maybeCloseOldestConnection( long ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,8,5
<Method>org.apache.kafka.common.network.Selector.private maybeDelayCloseOnAuthenticationFailure( KafkaChannel ): void,maybeDelayCloseOnAuthenticationFailure( KafkaChannel ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,3,3
"<Method>org.apache.kafka.common.network.Selector.private maybeRecordTimePerConnection( KafkaChannel, long ): void","maybeRecordTimePerConnection( KafkaChannel, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,2
<Method>org.apache.kafka.common.network.Selector.private mute( KafkaChannel ): void,mute( KafkaChannel ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.common.network.Selector.public mute( String ): void,mute( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.common.network.Selector.public muteAll( ): void,muteAll( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,1
<Method>org.apache.kafka.common.network.Selector.public numStagedReceives( KafkaChannel ): int,numStagedReceives( KafkaChannel ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,1
<Method>org.apache.kafka.common.network.Selector.private openOrClosingChannelOrFail( String ): KafkaChannel,openOrClosingChannelOrFail( String ): KafkaChannel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,3,3
<Method>org.apache.kafka.common.network.Selector.public poll( long ): void,poll( long ): void,low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,4,37,1,29,24
"<Method>org.apache.kafka.common.network.Selector.public register( String, SocketChannel ): void","register( String, SocketChannel ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,2,7,1
"<Method>org.apache.kafka.common.network.Selector.protected registerChannel( String, SocketChannel, int ): SelectionKey","registerChannel( String, SocketChannel, int ): SelectionKey",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,6,5
<Method>org.apache.kafka.common.network.Selector.private select( long ): int,select( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,2,2
<Method>org.apache.kafka.common.network.Selector.public send( Send ): void,send( Send ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,1,9,4
<Method>org.apache.kafka.common.network.Selector.private unmute( KafkaChannel ): void,unmute( KafkaChannel ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,1
<Method>org.apache.kafka.common.network.Selector.public unmute( String ): void,unmute( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.common.network.Selector.public unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,1
<Method>org.apache.kafka.common.network.Selector.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.common.network.Selector->channelBuilder,final channelBuilder : ChannelBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->channels,final channels : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->closingChannels,final closingChannels : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->completedReceives,final completedReceives : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->completedSends,final completedSends : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->connected,final connected : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->delayedClosingChannels,final delayedClosingChannels : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->disconnected,final disconnected : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->explicitlyMutedChannels,final explicitlyMutedChannels : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->failedAuthenticationDelayMs,final failedAuthenticationDelayMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->failedSends,final failedSends : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->idleExpiryManager,final idleExpiryManager : IdleExpiryManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->immediatelyConnectedKeys,final immediatelyConnectedKeys : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->lowMemThreshold,final lowMemThreshold : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->memoryPool,final memoryPool : MemoryPool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->nioSelector,final nioSelector : Selector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->recordTimePerConnection,final recordTimePerConnection : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->sensors,final sensors : SelectorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->stagedReceives,final stagedReceives : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->keysWithBufferedRead,keysWithBufferedRead : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->madeReadProgressLastPoll,madeReadProgressLastPoll : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->outOfMemory,outOfMemory : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->NO_FAILED_AUTHENTICATION_DELAY,static final NO_FAILED_AUTHENTICATION_DELAY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->NO_IDLE_TIMEOUT_MS,static final NO_IDLE_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Send,Send,low,low,low,low,0,4,0,1,3,4,5,4,0,0,4,0,0,0,0.375,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.Send.public abstract completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract writeTo( GatheringByteChannel ): long,writeTo( GatheringByteChannel ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.network.SslChannelBuilder,SslChannelBuilder,low-medium,medium-high,low-medium,medium-high,12,92,15,1,0,14,84,49,6,1,10,0,0,0.829,0.764,0.714,0,0,,,,,84,,,,,,14,,,,,,,
org.apache.kafka.common.network.SslChannelBuilder.SslAuthenticator,SslAuthenticator,low,low,low,low,8,27,8,1,0,7,27,23,3,0,5,0,0,0.333,0.64,0.833,0,0,,,,,27,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.network.SslChannelBuilder.public SslChannelBuilder( Mode, ListenerName, boolean ): void","SslChannelBuilder( Mode, ListenerName, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.common.network.SslChannelBuilder.public buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel","buildChannel( String, SelectionKey, int, MemoryPool, ChannelMetadataRegistry ): KafkaChannel",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,5,3,2
"<Method>org.apache.kafka.common.network.SslChannelBuilder.protected buildTransportLayer( SslFactory, String, SelectionKey, String, ChannelMetadataRegistry ): SslTransportLayer","buildTransportLayer( SslFactory, String, SelectionKey, String, ChannelMetadataRegistry ): SslTransportLayer",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,5,5,0
<Method>org.apache.kafka.common.network.SslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslChannelBuilder.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,3,7
<Method>org.apache.kafka.common.network.SslChannelBuilder.public listenerName( ): ListenerName,listenerName( ): ListenerName,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslChannelBuilder.private peerHost( SelectionKey ): String,peerHost( SelectionKey ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,0
<Method>org.apache.kafka.common.network.SslChannelBuilder.public reconfigurableConfigs( ): Set,reconfigurableConfigs( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslChannelBuilder.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.network.SslChannelBuilder.public validateReconfiguration( Map ): void,validateReconfiguration( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Field>org.apache.kafka.common.network.SslChannelBuilder->configs,configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->isInterBrokerListener,final isInterBrokerListener : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->listenerName,final listenerName : ListenerName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->mode,mode : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->sslFactory,sslFactory : SslFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->sslPrincipalMapper,sslPrincipalMapper : SslPrincipalMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslChannelBuilder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.SslTransportLayer,SslTransportLayer,very-high,low-medium,high,high,9,116,93,1,0,187,526,503,15,0,45,1,0,0.844,0.862,0.793,0,0,,,,,526,,,,,,187,,,,,,,
org.apache.kafka.common.network.SslTransportLayer.State,State,low,low,low,low,0,0,0,2,0,0,7,0,0,6,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.network.SslTransportLayer. SslTransportLayer( String, SelectionKey, SSLEngine, ChannelMetadataRegistry ): void"," SslTransportLayer( String, SelectionKey, SSLEngine, ChannelMetadataRegistry ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,4,7
<Method>org.apache.kafka.common.network.SslTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,4,3
<Method>org.apache.kafka.common.network.SslTransportLayer.protected appReadBuffer( ): ByteBuffer,appReadBuffer( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected applicationBufferSize( ): int,applicationBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public close( ): void,close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,28,0,14,19
<Method>org.apache.kafka.common.network.SslTransportLayer.private closingException( ): IllegalStateException,closingException( ): IllegalStateException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected delegatedTask( ): Runnable,delegatedTask( ): Runnable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private doHandshake( ): void,doHandshake( ): void,high,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22,5,71,0,60,70
<Method>org.apache.kafka.common.network.SslTransportLayer.public finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,3
<Method>org.apache.kafka.common.network.SslTransportLayer.protected flush( ByteBuffer ): boolean,flush( ByteBuffer ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public handshake( ): void,handshake( ): void,low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,4,30,0,15,4
"<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFailure( SSLException, boolean ): void","handshakeFailure( SSLException, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,2,5,9
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFinished( ): void,handshakeFinished( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,0,22,16
"<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeUnwrap( boolean, boolean ): SSLEngineResult","handshakeUnwrap( boolean, boolean ): SSLEngineResult",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,24,2,15,16
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeWrap( boolean ): SSLEngineResult,handshakeWrap( boolean ): SSLEngineResult,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,10,10
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.network.SslTransportLayer.private maybeProcessHandshakeFailure( SSLException, boolean, IOException ): void","maybeProcessHandshakeFailure( SSLException, boolean, IOException ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,11,3,6,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private maybeThrowSslAuthenticationException( ): void,maybeThrowSslAuthenticationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,2
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netReadBuffer( ): ByteBuffer,netReadBuffer( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netReadBufferSize( ): int,netReadBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netWriteBufferSize( ): int,netWriteBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public peerPrincipal( ): Principal,peerPrincipal( ): Principal,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public read( ByteBuffer ): int,read( ByteBuffer ): int,very-high,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,5,68,1,39,30
<Method>org.apache.kafka.common.network.SslTransportLayer.public read( ByteBuffer ): long,read( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.common.network.SslTransportLayer.public read( ByteBuffer, int, int ): long","read( ByteBuffer, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,16,3,3,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private readFromAppBuffer( ByteBuffer ): int,readFromAppBuffer( ByteBuffer ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,10,8
<Method>org.apache.kafka.common.network.SslTransportLayer.protected readFromSocketChannel( ): int,readFromSocketChannel( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,4,3
<Method>org.apache.kafka.common.network.SslTransportLayer.private renegotiationException( ): SSLHandshakeException,renegotiationException( ): SSLHandshakeException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private runDelegatedTasks( ): HandshakeStatus,runDelegatedTasks( ): HandshakeStatus,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public selectionKey( ): SelectionKey,selectionKey( ): SelectionKey,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public socketChannel( ): SocketChannel,socketChannel( ): SocketChannel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public sslSession( ): SSLSession,sslSession( ): SSLSession,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected startHandshake( ): void,startHandshake( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,0,10,11
"<Method>org.apache.kafka.common.network.SslTransportLayer.public static create( String, SelectionKey, SSLEngine, ChannelMetadataRegistry ): SslTransportLayer","static create( String, SelectionKey, SSLEngine, ChannelMetadataRegistry ): SslTransportLayer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,0,0
"<Method>org.apache.kafka.common.network.SslTransportLayer.public transferFrom( FileChannel, long, long ): long","transferFrom( FileChannel, long, long ): long",low-medium,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,39,3,16,15
<Method>org.apache.kafka.common.network.SslTransportLayer.private updateBytesBuffered( boolean ): void,updateBytesBuffered( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,4
<Method>org.apache.kafka.common.network.SslTransportLayer.public write( ByteBuffer ): int,write( ByteBuffer ): int,low-medium,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,23,1,19,10
<Method>org.apache.kafka.common.network.SslTransportLayer.public write( ByteBuffer ): long,write( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.common.network.SslTransportLayer.public write( ByteBuffer, int, int ): long","write( ByteBuffer, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,16,3,5,0
<Field>org.apache.kafka.common.network.SslTransportLayer->appReadBuffer,appReadBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->fileChannelBuffer,fileChannelBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->channelId,final channelId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->key,final key : SelectionKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->metadataRegistry,final metadataRegistry : ChannelMetadataRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->socketChannel,final socketChannel : SocketChannel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->sslEngine,final sslEngine : SSLEngine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->handshakeException,handshakeException : SslAuthenticationException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->handshakeResult,handshakeResult : SSLEngineResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->handshakeStatus,handshakeStatus : HandshakeStatus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->hasBytesBuffered,hasBytesBuffered : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->netReadBuffer,netReadBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->netWriteBuffer,netWriteBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.TransportLayer,TransportLayer,low,low,low,low-medium,0,14,0,1,2,14,15,14,0,0,14,0,0,0,0.679,0,0,0,,,,,15,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayer.public abstract addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract finishConnect( ): boolean,finishConnect( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasBytesBuffered( ): boolean,hasBytesBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract peerPrincipal( ): Principal,peerPrincipal( ): Principal,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract selectionKey( ): SelectionKey,selectionKey( ): SelectionKey,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract socketChannel( ): SocketChannel,socketChannel( ): SocketChannel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.network.TransportLayer.public abstract transferFrom( FileChannel, long, long ): long","transferFrom( FileChannel, long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.network.TransportLayers,TransportLayers,low,low,low,low,1,3,1,1,0,3,6,5,0,0,1,1,0,0,0.25,0,0,0,,,,,6,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayers.private TransportLayers( ): void,TransportLayers( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayers.public static hasPendingWrites( GatheringByteChannel ): boolean,static hasPendingWrites( GatheringByteChannel ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,0
<Package>org.apache.kafka.common.protocol,org.apache.kafka.common.protocol,low,low-medium,medium-high,low,,,,,,129,747,,,,,,,,,,,,,11,7,4,747,128,7,0.364,0.052,0.584,129,,,,,,,
org.apache.kafka.common.protocol.ApiKeys,ApiKeys,low-medium,low,low-medium,low-medium,5,44,19,2,0,31,189,98,7,51,14,5,0,1.084,0.684,0.955,0,0,,,,,189,,,,,,31,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.protocol.ApiKeys$20683;,Lorg.apache.kafka.common.protocol.ApiKeys$20683;,low,low,low,low,0,0,0,2,0,0,6,0,0,0,0,0,1,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.protocol.ApiKeys.private ApiKeys( int, String, Schema, Schema ): void","ApiKeys( int, String, Schema, Schema ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.common.protocol.ApiKeys.private ApiKeys( int, String, boolean, Schema, Schema ): void","ApiKeys( int, String, boolean, Schema, Schema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.common.protocol.ApiKeys.private ApiKeys( int, String, boolean, byte, Schema, Schema ): void","ApiKeys( int, String, boolean, byte, Schema, Schema ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,24,6,1,7
<Method>org.apache.kafka.common.protocol.ApiKeys.public isVersionSupported( short ): boolean,isVersionSupported( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public latestVersion( ): short,latestVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.ApiKeys.public oldestVersion( ): short,oldestVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.protocol.ApiKeys.public parseRequest( short, ByteBuffer ): Struct","parseRequest( short, ByteBuffer ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.protocol.ApiKeys.public parseResponse( short, ByteBuffer ): Struct","parseResponse( short, ByteBuffer ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.protocol.ApiKeys.protected parseResponse( short, ByteBuffer, short ): Struct","parseResponse( short, ByteBuffer, short ): Struct",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,3,6,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public requestHeaderVersion( short ): short,requestHeaderVersion( short ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.protocol.ApiKeys.public requestSchema( short ): Schema,requestSchema( short ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.protocol.ApiKeys.public responseHeaderVersion( short ): short,responseHeaderVersion( short ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.protocol.ApiKeys.public responseSchema( short ): Schema,responseSchema( short ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.protocol.ApiKeys.private schemaFor( Schema, short ): Schema","schemaFor( Schema, short ): Schema",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,1,0
<Method>org.apache.kafka.common.protocol.ApiKeys.public static forId( int ): ApiKeys,static forId( int ): ApiKeys,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,3
<Method>org.apache.kafka.common.protocol.ApiKeys.public static hasId( int ): boolean,static hasId( int ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.common.protocol.ApiKeys.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.protocol.ApiKeys.private static retainsBufferReference( Schema ): boolean,static retainsBufferReference( Schema ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,1,2,0
<Method>org.apache.kafka.common.protocol.ApiKeys.private static toHtml( ): String,static toHtml( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,0,15,3
<Field>org.apache.kafka.common.protocol.ApiKeys->clusterAction,final clusterAction : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->minRequiredInterBrokerMagic,final minRequiredInterBrokerMagic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->requestSchemas,final requestSchemas : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->requiresDelayedAllocation,final requiresDelayedAllocation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->responseSchemas,final responseSchemas : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ADD_OFFSETS_TO_TXN,static final ADD_OFFSETS_TO_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ADD_PARTITIONS_TO_TXN,static final ADD_PARTITIONS_TO_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ALTER_CONFIGS,static final ALTER_CONFIGS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ALTER_PARTITION_REASSIGNMENTS,static final ALTER_PARTITION_REASSIGNMENTS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ALTER_REPLICA_LOG_DIRS,static final ALTER_REPLICA_LOG_DIRS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->API_VERSIONS,static final API_VERSIONS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CONTROLLED_SHUTDOWN,static final CONTROLLED_SHUTDOWN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_ACLS,static final CREATE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_DELEGATION_TOKEN,static final CREATE_DELEGATION_TOKEN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_PARTITIONS,static final CREATE_PARTITIONS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CREATE_TOPICS,static final CREATE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_ACLS,static final DELETE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_GROUPS,static final DELETE_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_RECORDS,static final DELETE_RECORDS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DELETE_TOPICS,static final DELETE_TOPICS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_ACLS,static final DESCRIBE_ACLS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_CONFIGS,static final DESCRIBE_CONFIGS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_DELEGATION_TOKEN,static final DESCRIBE_DELEGATION_TOKEN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_GROUPS,static final DESCRIBE_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_LOG_DIRS,static final DESCRIBE_LOG_DIRS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ELECT_LEADERS,static final ELECT_LEADERS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->END_TXN,static final END_TXN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->EXPIRE_DELEGATION_TOKEN,static final EXPIRE_DELEGATION_TOKEN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FETCH,static final FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FIND_COORDINATOR,static final FIND_COORDINATOR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->HEARTBEAT,static final HEARTBEAT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->ID_TO_TYPE,static final ID_TO_TYPE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->INCREMENTAL_ALTER_CONFIGS,static final INCREMENTAL_ALTER_CONFIGS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->INIT_PRODUCER_ID,static final INIT_PRODUCER_ID : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->JOIN_GROUP,static final JOIN_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEADER_AND_ISR,static final LEADER_AND_ISR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEAVE_GROUP,static final LEAVE_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_GROUPS,static final LIST_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_OFFSETS,static final LIST_OFFSETS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_PARTITION_REASSIGNMENTS,static final LIST_PARTITION_REASSIGNMENTS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MAX_API_KEY,static final MAX_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->METADATA,static final METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MIN_API_KEY,static final MIN_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_COMMIT,static final OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_DELETE,static final OFFSET_DELETE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FETCH,static final OFFSET_FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FOR_LEADER_EPOCH,static final OFFSET_FOR_LEADER_EPOCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->PRODUCE,static final PRODUCE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->RENEW_DELEGATION_TOKEN,static final RENEW_DELEGATION_TOKEN : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SASL_AUTHENTICATE,static final SASL_AUTHENTICATE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SASL_HANDSHAKE,static final SASL_HANDSHAKE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->STOP_REPLICA,static final STOP_REPLICA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SYNC_GROUP,static final SYNC_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->TXN_OFFSET_COMMIT,static final TXN_OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->UPDATE_METADATA,static final UPDATE_METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->WRITE_TXN_MARKERS,static final WRITE_TXN_MARKERS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.ApiMessage,ApiMessage,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.ApiMessage.public abstract apiKey( ): short,apiKey( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.protocol.ByteBufferAccessor,ByteBufferAccessor,low,low,low,medium-high,1,34,17,1,0,15,49,47,1,0,15,0,0,0,0.722,0,0,0,,,,,49,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public ByteBufferAccessor( ByteBuffer ): void,ByteBufferAccessor( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readArray( byte ): void,readArray( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readByte( ): byte,readByte( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readByteBuffer( int ): ByteBuffer,readByteBuffer( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,3
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readInt( ): int,readInt( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readLong( ): long,readLong( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readShort( ): short,readShort( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public readUnsignedVarint( ): int,readUnsignedVarint( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeByte( byte ): void,writeByte( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeByteArray( byte ): void,writeByteArray( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeByteBuffer( ByteBuffer ): void,writeByteBuffer( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeInt( int ): void,writeInt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeLong( long ): void,writeLong( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeShort( short ): void,writeShort( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.protocol.ByteBufferAccessor.public writeUnsignedVarint( int ): void,writeUnsignedVarint( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Field>org.apache.kafka.common.protocol.ByteBufferAccessor->buf,final buf : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.CommonFields,CommonFields,low,low-medium,low,low,6,0,0,1,0,0,41,0,0,28,0,0,0,0,0,0,0,0,,,,,41,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->COMMITTED_LEADER_EPOCH,static final COMMITTED_LEADER_EPOCH : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->COMMITTED_METADATA,static final COMMITTED_METADATA : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->COMMITTED_OFFSET,static final COMMITTED_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->CURRENT_LEADER_EPOCH,static final CURRENT_LEADER_EPOCH : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->ERROR_CODE,static final ERROR_CODE : Int16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->ERROR_MESSAGE,static final ERROR_MESSAGE : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->GROUP_ID,static final GROUP_ID : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->HOST,static final HOST : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->HOST_FILTER,static final HOST_FILTER : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->LEADER_EPOCH,static final LEADER_EPOCH : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->NULLABLE_TRANSACTIONAL_ID,static final NULLABLE_TRANSACTIONAL_ID : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->OPERATION,static final OPERATION : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PARTITION_ID,static final PARTITION_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PERMISSION_TYPE,static final PERMISSION_TYPE : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRINCIPAL,static final PRINCIPAL : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRINCIPAL_FILTER,static final PRINCIPAL_FILTER : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRINCIPAL_NAME,static final PRINCIPAL_NAME : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRINCIPAL_TYPE,static final PRINCIPAL_TYPE : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRODUCER_EPOCH,static final PRODUCER_EPOCH : Int16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->PRODUCER_ID,static final PRODUCER_ID : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->RESOURCE_NAME,static final RESOURCE_NAME : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->RESOURCE_NAME_FILTER,static final RESOURCE_NAME_FILTER : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->RESOURCE_PATTERN_TYPE,static final RESOURCE_PATTERN_TYPE : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->RESOURCE_PATTERN_TYPE_FILTER,static final RESOURCE_PATTERN_TYPE_FILTER : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->RESOURCE_TYPE,static final RESOURCE_TYPE : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->THROTTLE_TIME_MS,static final THROTTLE_TIME_MS : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->TOPIC_NAME,static final TOPIC_NAME : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.CommonFields->TRANSACTIONAL_ID,static final TRANSACTIONAL_ID : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Errors,Errors,low-medium,low,low-medium,medium-high,2,25,17,2,0,22,271,64,3,92,7,4,0,1.105,0.727,0.694,0,0,,,,,271,,,,,,22,,,,,,,
"<Method>org.apache.kafka.common.protocol.Errors.private Errors( int, String, Function ): void","Errors( int, String, Function ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,3
<Method>org.apache.kafka.common.protocol.Errors.public code( ): short,code( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.Errors.public exception( ): ApiException,exception( ): ApiException,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.Errors.public exception( String ): ApiException,exception( String ): ApiException,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,2
<Method>org.apache.kafka.common.protocol.Errors.public exceptionName( ): String,exceptionName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,2
<Method>org.apache.kafka.common.protocol.Errors.public maybeThrow( ): void,maybeThrow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,2
<Method>org.apache.kafka.common.protocol.Errors.public message( ): String,message( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,2
<Method>org.apache.kafka.common.protocol.Errors.public static forCode( short ): Errors,static forCode( short ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,3
<Method>org.apache.kafka.common.protocol.Errors.public static forException( Throwable ): Errors,static forException( Throwable ): Errors,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,3,2
<Method>org.apache.kafka.common.protocol.Errors.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.protocol.Errors.private static toHtml( ): String,static toHtml( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,26,0,30,0
<Field>org.apache.kafka.common.protocol.Errors->builder,final builder : Function,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->code,final code : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->exception,final exception : ApiException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->classToError,static classToError : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->codeToError,static codeToError : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->BROKER_NOT_AVAILABLE,static final BROKER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CLUSTER_AUTHORIZATION_FAILED,static final CLUSTER_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CONCURRENT_TRANSACTIONS,static final CONCURRENT_TRANSACTIONS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->COORDINATOR_LOAD_IN_PROGRESS,static final COORDINATOR_LOAD_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->COORDINATOR_NOT_AVAILABLE,static final COORDINATOR_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CORRUPT_MESSAGE,static final CORRUPT_MESSAGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_AUTHORIZATION_FAILED,static final DELEGATION_TOKEN_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_AUTH_DISABLED,static final DELEGATION_TOKEN_AUTH_DISABLED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_EXPIRED,static final DELEGATION_TOKEN_EXPIRED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_NOT_FOUND,static final DELEGATION_TOKEN_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_OWNER_MISMATCH,static final DELEGATION_TOKEN_OWNER_MISMATCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DELEGATION_TOKEN_REQUEST_NOT_ALLOWED,static final DELEGATION_TOKEN_REQUEST_NOT_ALLOWED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->DUPLICATE_SEQUENCE_NUMBER,static final DUPLICATE_SEQUENCE_NUMBER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ELECTION_NOT_NEEDED,static final ELECTION_NOT_NEEDED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ELIGIBLE_LEADERS_NOT_AVAILABLE,static final ELIGIBLE_LEADERS_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->FENCED_INSTANCE_ID,static final FENCED_INSTANCE_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->FENCED_LEADER_EPOCH,static final FENCED_LEADER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->FETCH_SESSION_ID_NOT_FOUND,static final FETCH_SESSION_ID_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_AUTHORIZATION_FAILED,static final GROUP_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_ID_NOT_FOUND,static final GROUP_ID_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_MAX_SIZE_REACHED,static final GROUP_MAX_SIZE_REACHED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_SUBSCRIBED_TO_TOPIC,static final GROUP_SUBSCRIBED_TO_TOPIC : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_GENERATION,static final ILLEGAL_GENERATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_SASL_STATE,static final ILLEGAL_SASL_STATE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INCONSISTENT_GROUP_PROTOCOL,static final INCONSISTENT_GROUP_PROTOCOL : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_COMMIT_OFFSET_SIZE,static final INVALID_COMMIT_OFFSET_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_CONFIG,static final INVALID_CONFIG : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_FETCH_SESSION_EPOCH,static final INVALID_FETCH_SESSION_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_FETCH_SIZE,static final INVALID_FETCH_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_GROUP_ID,static final INVALID_GROUP_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PARTITIONS,static final INVALID_PARTITIONS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PRINCIPAL_TYPE,static final INVALID_PRINCIPAL_TYPE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PRODUCER_EPOCH,static final INVALID_PRODUCER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_PRODUCER_ID_MAPPING,static final INVALID_PRODUCER_ID_MAPPING : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_RECORD,static final INVALID_RECORD : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICATION_FACTOR,static final INVALID_REPLICATION_FACTOR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REPLICA_ASSIGNMENT,static final INVALID_REPLICA_ASSIGNMENT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUEST,static final INVALID_REQUEST : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUIRED_ACKS,static final INVALID_REQUIRED_ACKS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_SESSION_TIMEOUT,static final INVALID_SESSION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TIMESTAMP,static final INVALID_TIMESTAMP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TOPIC_EXCEPTION,static final INVALID_TOPIC_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TRANSACTION_TIMEOUT,static final INVALID_TRANSACTION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TXN_STATE,static final INVALID_TXN_STATE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->KAFKA_STORAGE_ERROR,static final KAFKA_STORAGE_ERROR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LEADER_NOT_AVAILABLE,static final LEADER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LISTENER_NOT_FOUND,static final LISTENER_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LOG_DIR_NOT_FOUND,static final LOG_DIR_NOT_FOUND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->MEMBER_ID_REQUIRED,static final MEMBER_ID_REQUIRED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->MESSAGE_TOO_LARGE,static final MESSAGE_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NETWORK_EXCEPTION,static final NETWORK_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NONE,static final NONE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NON_EMPTY_GROUP,static final NON_EMPTY_GROUP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_CONTROLLER,static final NOT_CONTROLLER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_COORDINATOR,static final NOT_COORDINATOR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS,static final NOT_ENOUGH_REPLICAS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS_AFTER_APPEND,static final NOT_ENOUGH_REPLICAS_AFTER_APPEND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_LEADER_FOR_PARTITION,static final NOT_LEADER_FOR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NO_REASSIGNMENT_IN_PROGRESS,static final NO_REASSIGNMENT_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_METADATA_TOO_LARGE,static final OFFSET_METADATA_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_NOT_AVAILABLE,static final OFFSET_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_OUT_OF_RANGE,static final OFFSET_OUT_OF_RANGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OPERATION_NOT_ATTEMPTED,static final OPERATION_NOT_ATTEMPTED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OUT_OF_ORDER_SEQUENCE_NUMBER,static final OUT_OF_ORDER_SEQUENCE_NUMBER : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->POLICY_VIOLATION,static final POLICY_VIOLATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->PREFERRED_LEADER_NOT_AVAILABLE,static final PREFERRED_LEADER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REASSIGNMENT_IN_PROGRESS,static final REASSIGNMENT_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REBALANCE_IN_PROGRESS,static final REBALANCE_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->RECORD_LIST_TOO_LARGE,static final RECORD_LIST_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REPLICA_NOT_AVAILABLE,static final REPLICA_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REQUEST_TIMED_OUT,static final REQUEST_TIMED_OUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->SASL_AUTHENTICATION_FAILED,static final SASL_AUTHENTICATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->SECURITY_DISABLED,static final SECURITY_DISABLED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->STALE_BROKER_EPOCH,static final STALE_BROKER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->STALE_CONTROLLER_EPOCH,static final STALE_CONTROLLER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_ALREADY_EXISTS,static final TOPIC_ALREADY_EXISTS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_AUTHORIZATION_FAILED,static final TOPIC_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_DELETION_DISABLED,static final TOPIC_DELETION_DISABLED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TRANSACTIONAL_ID_AUTHORIZATION_FAILED,static final TRANSACTIONAL_ID_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TRANSACTION_COORDINATOR_FENCED,static final TRANSACTION_COORDINATOR_FENCED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_LEADER_EPOCH,static final UNKNOWN_LEADER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_PRODUCER_ID,static final UNKNOWN_PRODUCER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_SERVER_ERROR,static final UNKNOWN_SERVER_ERROR : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_TOPIC_OR_PARTITION,static final UNKNOWN_TOPIC_OR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_COMPRESSION_TYPE,static final UNSUPPORTED_COMPRESSION_TYPE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_FOR_MESSAGE_FORMAT,static final UNSUPPORTED_FOR_MESSAGE_FORMAT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_SASL_MECHANISM,static final UNSUPPORTED_SASL_MECHANISM : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNSUPPORTED_VERSION,static final UNSUPPORTED_VERSION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Message,Message,low,low,low,low-medium,4,8,0,1,1,8,9,8,0,0,8,0,0,0,0.625,0,0,0,,,,,9,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.protocol.Message.public abstract fromStruct( Struct, short ): void","fromStruct( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.protocol.Message.public abstract highestSupportedVersion( ): short,highestSupportedVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.protocol.Message.public abstract lowestSupportedVersion( ): short,lowestSupportedVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.protocol.Message.public abstract read( Readable, short ): void","read( Readable, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.protocol.Message.public abstract size( ObjectSerializationCache, short ): int","size( ObjectSerializationCache, short ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.protocol.Message.public abstract toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Message.public abstract unknownTaggedFields( ): List,unknownTaggedFields( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.protocol.Message.public abstract write( Writable, ObjectSerializationCache, short ): void","write( Writable, ObjectSerializationCache, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.protocol.MessageUtil,MessageUtil,low,low,low,low,0,11,9,1,0,3,20,18,0,1,0,2,0,0,0.333,1,0,0,,,,,20,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.protocol.MessageUtil.public static byteBufferToArray( ByteBuffer ): byte,static byteBufferToArray( ByteBuffer ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,1,4,0
<Method>org.apache.kafka.common.protocol.MessageUtil.public static deepToString( Iterator ): String,static deepToString( Iterator ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,7,0
<Field>org.apache.kafka.common.protocol.MessageUtil->ZERO_UUID,static final ZERO_UUID : UUID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.ObjectSerializationCache,ObjectSerializationCache,low,low,low,low,0,8,3,1,0,5,15,13,1,0,5,0,0,0,0.45,0,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.protocol.ObjectSerializationCache.public ObjectSerializationCache( ): void,ObjectSerializationCache( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.protocol.ObjectSerializationCache.public cacheSerializedValue( Object, byte ): void","cacheSerializedValue( Object, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.common.protocol.ObjectSerializationCache.public getArraySizeInBytes( Object ): int,getArraySizeInBytes( Object ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.common.protocol.ObjectSerializationCache.public getSerializedValue( Object ): byte,getSerializedValue( Object ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.protocol.ObjectSerializationCache.public setArraySizeInBytes( Object, int ): void","setArraySizeInBytes( Object, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
<Field>org.apache.kafka.common.protocol.ObjectSerializationCache->map,final map : IdentityHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Protocol,Protocol,low-medium,low,low-medium,low,5,23,20,1,0,26,119,118,0,0,0,6,0,0,0.583,0,0,0,,,,,119,,,,,,26,,,,,,,
<Method>org.apache.kafka.common.protocol.Protocol.private static indentString( int ): String,static indentString( int ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,0
<Method>org.apache.kafka.common.protocol.Protocol.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.protocol.Protocol.private static populateSchemaFields( Schema, Set ): void","static populateSchemaFields( Schema, Set ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,9,2,7,0
"<Method>org.apache.kafka.common.protocol.Protocol.private static schemaToBnfHtml( Schema, StringBuilder, int ): void","static schemaToBnfHtml( Schema, StringBuilder, int ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,31,3,31,0
"<Method>org.apache.kafka.common.protocol.Protocol.private static schemaToFieldTableHtml( Schema, StringBuilder ): void","static schemaToFieldTableHtml( Schema, StringBuilder ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,2,15,0
<Method>org.apache.kafka.common.protocol.Protocol.public static toHtml( ): String,static toHtml( ): String,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,53,0,44,0
org.apache.kafka.common.protocol.Readable,Readable,low,low,low,low-medium,1,11,3,1,1,10,21,10,0,0,10,0,0,0,0.625,0,0,0,,,,,21,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.protocol.Readable.public abstract readArray( byte ): void,readArray( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readByte( ): byte,readByte( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readByteBuffer( int ): ByteBuffer,readByteBuffer( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readInt( ): int,readInt( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readLong( ): long,readLong( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readShort( ): short,readShort( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.protocol.Readable.public readString( int ): String,readString( int ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
<Method>org.apache.kafka.common.protocol.Readable.public readUUID( ): UUID,readUUID( ): UUID,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,2,0
"<Method>org.apache.kafka.common.protocol.Readable.public readUnknownTaggedField( List, int, int ): List","readUnknownTaggedField( List, int, int ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,2,0
<Method>org.apache.kafka.common.protocol.Readable.public abstract readUnsignedVarint( ): int,readUnsignedVarint( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.protocol.Writable,Writable,low,low,low,medium-high,0,10,3,1,1,8,11,8,0,0,8,0,0,0,0.714,0,0,0,,,,,11,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeByte( byte ): void,writeByte( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeByteArray( byte ): void,writeByteArray( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeByteBuffer( ByteBuffer ): void,writeByteBuffer( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeInt( int ): void,writeInt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeLong( long ): void,writeLong( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeShort( short ): void,writeShort( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.protocol.Writable.public writeUUID( UUID ): void,writeUUID( UUID ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,4,0
<Method>org.apache.kafka.common.protocol.Writable.public abstract writeUnsignedVarint( int ): void,writeUnsignedVarint( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.common.protocol.types,org.apache.kafka.common.protocol.types,low-medium,low,medium-high,low,,,,,,294,1437,,,,,,,,,,,,,27,27,0,1437,121,5,0.111,0.04,0.849,294,,,,,,,
org.apache.kafka.common.protocol.types.ArrayOf,ArrayOf,low-medium,low,low-medium,low-medium,2,20,9,3,0,25,73,69,2,1,11,1,2,0.704,0.65,0.709,1,0.545,,,,,73,,,,,,25,,,,,,,
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public ArrayOf( Type ): void,ArrayOf( Type ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.protocol.types.ArrayOf.private ArrayOf( Type, boolean ): void","ArrayOf( Type, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public arrayElementType( ): Optional,arrayElementType( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public documentation( ): String,documentation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,2
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public read( ByteBuffer ): Object,read( ByteBuffer ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,13,1,5,1
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public sizeOf( Object ): int,sizeOf( Object ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,1,1,1
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public static nullable( Type ): ArrayOf,static nullable( Type ): ArrayOf,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public typeName( ): String,typeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.protocol.types.ArrayOf.public validate( Object ): Object,validate( Object ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,1,2,1
"<Method>org.apache.kafka.common.protocol.types.ArrayOf.public write( ByteBuffer, Object ): void","write( ByteBuffer, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,3,1
<Field>org.apache.kafka.common.protocol.types.ArrayOf->nullable,final nullable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.ArrayOf->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.ArrayOf->ARRAY_TYPE_NAME,static final ARRAY_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.BoundField,BoundField,low,low,low,low,2,2,0,1,0,2,11,7,3,0,2,0,0,0.667,0.375,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.protocol.types.BoundField.public BoundField( Field, Schema, int ): void","BoundField( Field, Schema, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.protocol.types.BoundField.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.common.protocol.types.BoundField->def,final def : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.BoundField->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.BoundField->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.CompactArrayOf,CompactArrayOf,low-medium,low,low-medium,low-medium,3,25,10,3,0,24,75,71,2,1,11,1,2,0.704,0.65,0.709,1,0.545,,,,,75,,,,,,24,,,,,,,
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public CompactArrayOf( Type ): void,CompactArrayOf( Type ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.private CompactArrayOf( Type, boolean ): void","CompactArrayOf( Type, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public arrayElementType( ): Optional,arrayElementType( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public documentation( ): String,documentation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public read( ByteBuffer ): Object,read( ByteBuffer ): Object,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,1,5,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public sizeOf( Object ): int,sizeOf( Object ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,2,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public static nullable( Type ): CompactArrayOf,static nullable( Type ): CompactArrayOf,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public typeName( ): String,typeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public validate( Object ): Object,validate( Object ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,1,2,1
"<Method>org.apache.kafka.common.protocol.types.CompactArrayOf.public write( ByteBuffer, Object ): void","write( ByteBuffer, Object ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,3,1
<Field>org.apache.kafka.common.protocol.types.CompactArrayOf->nullable,final nullable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.CompactArrayOf->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.CompactArrayOf->COMPACT_ARRAY_TYPE_NAME,static final COMPACT_ARRAY_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Field,Field,low,low,low-medium,low,1,5,1,1,13,5,86,14,5,0,4,0,0,0,0.25,1,0,0,,,,,86,,,,,,5,,,,,,,
org.apache.kafka.common.protocol.types.Field.Array,Array,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.Bool,Bool,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.CompactArray,CompactArray,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.CompactNullableStr,CompactNullableStr,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.CompactStr,CompactStr,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.ComplexArray,ComplexArray,low,low,low,low,2,5,1,1,0,4,15,12,2,0,4,0,0,0.167,0.25,0,0,0,,,,,15,,,,,,4,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int16,Int16,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int32,Int32,low,low,low,low,1,2,0,2,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int64,Int64,low,low,low,low,1,2,0,2,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
org.apache.kafka.common.protocol.types.Field.Int8,Int8,low,low,low,low,1,2,0,2,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
org.apache.kafka.common.protocol.types.Field.NullableStr,NullableStr,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.Str,Str,low,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.protocol.types.Field.TaggedFieldsSection,TaggedFieldsSection,low,low,low,low,2,4,1,2,0,2,7,4,0,2,1,1,0,0,0.333,1,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.common.protocol.types.Field.UUID,UUID,low,low,low,low,1,2,0,2,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.protocol.types.Field.public Field( String, Type ): void","Field( String, Type ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.protocol.types.Field.public Field( String, Type, String ): void","Field( String, Type, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.protocol.types.Field.public Field( String, Type, String, Object ): void","Field( String, Type, String, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.common.protocol.types.Field.public Field( String, Type, String, boolean, Object ): void","Field( String, Type, String, boolean, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,5,1,5
<Field>org.apache.kafka.common.protocol.types.Field->defaultValue,final defaultValue : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->docString,final docString : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->hasDefaultValue,final hasDefaultValue : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.RawTaggedField,RawTaggedField,low,low,low,low-medium,0,10,4,1,0,8,21,18,2,0,6,0,0,0.3,0.625,0.133,0,0,,,,,21,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public RawTaggedField( int, byte ): void","RawTaggedField( int, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public data( ): byte,data( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,4,4
<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.types.RawTaggedField.public tag( ): int,tag( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.protocol.types.RawTaggedField->data,final data : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.RawTaggedField->tag,final tag : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.RawTaggedFieldWriter,RawTaggedFieldWriter,low,low,low,low,2,13,9,1,0,9,33,27,3,1,3,1,0,0.75,0.5,1,0,0,,,,,33,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.private RawTaggedFieldWriter( List ): void,RawTaggedFieldWriter( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,4
<Method>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.public numFields( ): int,numFields( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.public static forFields( List ): RawTaggedFieldWriter,static forFields( List ): RawTaggedFieldWriter,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Method>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter.public writeRawTags( Writable, int ): void","writeRawTags( Writable, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,17,2,10,6
<Field>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter->fields,final fields : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter->iter,final iter : ListIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter->prevTag,prevTag : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.RawTaggedFieldWriter->EMPTY_WRITER,static final EMPTY_WRITER : RawTaggedFieldWriter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Schema,Schema,low-medium,low,low-medium,medium-high,4,41,25,2,0,35,103,96,3,0,12,1,0,0.63,0.778,0.439,0,0,,,,,103,,,,,,35,,,,,,,
org.apache.kafka.common.protocol.types.Schema.Visitor,Visitor,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0.333,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Schema.public Schema( Field ): void,Schema( Field ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.protocol.types.Schema.public Schema( boolean, Field ): void","Schema( boolean, Field ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,2,8
<Method>org.apache.kafka.common.protocol.types.Schema.public fields( ): BoundField,fields( ): BoundField,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.types.Schema.public get( String ): BoundField,get( String ): BoundField,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.protocol.types.Schema.public get( int ): BoundField,get( int ): BoundField,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.protocol.types.Schema.public numFields( ): int,numFields( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.types.Schema.public read( ByteBuffer ): Struct,read( ByteBuffer ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,19,1,7,9
<Method>org.apache.kafka.common.protocol.types.Schema.public sizeOf( Object ): int,sizeOf( Object ): int,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,6,1
"<Method>org.apache.kafka.common.protocol.types.Schema.private static handleNode( Type, Visitor ): void","static handleNode( Type, Visitor ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,9,0
<Method>org.apache.kafka.common.protocol.types.Schema.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,6,3
<Method>org.apache.kafka.common.protocol.types.Schema.public validate( Object ): Struct,validate( Object ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,3,1
<Method>org.apache.kafka.common.protocol.types.Schema.public walk( Visitor ): void,walk( Visitor ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.common.protocol.types.Schema.public write( ByteBuffer, Object ): void","write( ByteBuffer, Object ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,2,7,1
<Field>org.apache.kafka.common.protocol.types.Schema->fields,final fields : BoundField,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Schema->fieldsByName,final fieldsByName : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Schema->tolerateMissingFieldsWithDefaults,final tolerateMissingFieldsWithDefaults : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.SchemaException,SchemaException,medium-high,low,low,low,0,1,0,5,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.SchemaException.public SchemaException( String ): void,SchemaException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.protocol.types.SchemaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Struct,Struct,very-high,medium-high,very-high,very-high,16,115,40,1,0,123,287,284,2,0,81,0,0,0.333,0.902,0.95,0,0,,,,,287,,,,,,123,,,,,,,
"<Method>org.apache.kafka.common.protocol.types.Struct. Struct( Schema, Object ): void"," Struct( Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.protocol.types.Struct.public Struct( Schema ): void,Struct( Schema ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.protocol.types.Struct.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public equals( Object ): boolean,equals( Object ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,23,1,10,4
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Array ): Object,get( Array ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Bool ): Boolean,get( Bool ): Boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( BoundField ): Object,get( BoundField ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( ComplexArray ): Object,get( ComplexArray ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Int16 ): Short,get( Int16 ): Short,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Int32 ): Integer,get( Int32 ): Integer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Int64 ): Long,get( Int64 ): Long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Int8 ): Byte,get( Int8 ): Byte,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( NullableStr ): String,get( NullableStr ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( Str ): String,get( Str ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public get( String ): Object,get( String ): Object,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,1
<Method>org.apache.kafka.common.protocol.types.Struct.public get( UUID ): UUID,get( UUID ): UUID,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getArray( BoundField ): Object,getArray( BoundField ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getArray( String ): Object,getArray( String ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getBoolean( BoundField ): Boolean,getBoolean( BoundField ): Boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getBoolean( String ): Boolean,getBoolean( String ): Boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getByte( BoundField ): Byte,getByte( BoundField ): Byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getByte( String ): byte,getByte( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getByteArray( String ): byte,getByteArray( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,1,4,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getBytes( BoundField ): ByteBuffer,getBytes( BoundField ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getBytes( String ): ByteBuffer,getBytes( String ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.private getFieldOrDefault( BoundField ): Object,getFieldOrDefault( BoundField ): Object,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public getInt( BoundField ): Integer,getInt( BoundField ): Integer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getInt( String ): Integer,getInt( String ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getLong( BoundField ): Long,getLong( BoundField ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getLong( String ): Long,getLong( String ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Bool, boolean ): boolean","getOrElse( Bool, boolean ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Int16, short ): Short","getOrElse( Int16, short ): Short",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Int32, int ): Integer","getOrElse( Int32, int ): Integer",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Int64, long ): Long","getOrElse( Int64, long ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Int8, byte ): Byte","getOrElse( Int8, byte ): Byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( NullableStr, String ): String","getOrElse( NullableStr, String ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( Str, String ): String","getOrElse( Str, String ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public getOrElse( UUID, UUID ): UUID","getOrElse( UUID, UUID ): UUID",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getOrEmpty( Array ): Object,getOrEmpty( Array ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getOrEmpty( ComplexArray ): Object,getOrEmpty( ComplexArray ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getRecords( String ): BaseRecords,getRecords( String ): BaseRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getShort( BoundField ): Short,getShort( BoundField ): Short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getShort( String ): Short,getShort( String ): Short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getString( BoundField ): String,getString( BoundField ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getString( String ): String,getString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getStruct( BoundField ): Struct,getStruct( BoundField ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getStruct( String ): Struct,getStruct( String ): Struct,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getUUID( BoundField ): UUID,getUUID( BoundField ): UUID,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getUUID( String ): UUID,getUUID( String ): UUID,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public getUnsignedInt( String ): Long,getUnsignedInt( String ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.protocol.types.Struct.public hasField( ComplexArray ): boolean,hasField( ComplexArray ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public hasField( Field ): boolean,hasField( Field ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public hasField( String ): boolean,hasField( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public hashCode( ): int,hashCode( ): int,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,16,0,7,2
<Method>org.apache.kafka.common.protocol.types.Struct.public instance( BoundField ): Struct,instance( BoundField ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,4,0
<Method>org.apache.kafka.common.protocol.types.Struct.public instance( ComplexArray ): Struct,instance( ComplexArray ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.protocol.types.Struct.public instance( Field ): Struct,instance( Field ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.protocol.types.Struct.public instance( String ): Struct,instance( String ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.protocol.types.Struct.public schema( ): Schema,schema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Array, Object ): Struct","set( Array, Object ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Bool, boolean ): Struct","set( Bool, boolean ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( BoundField, Object ): Struct","set( BoundField, Object ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( ComplexArray, Object ): Struct","set( ComplexArray, Object ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Int16, short ): Struct","set( Int16, short ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Int32, int ): Struct","set( Int32, int ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Int64, long ): Struct","set( Int64, long ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Int8, byte ): Struct","set( Int8, byte ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( NullableStr, String ): Struct","set( NullableStr, String ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( Str, String ): Struct","set( Str, String ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( String, Object ): Struct","set( String, Object ): Struct",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,1,2
"<Method>org.apache.kafka.common.protocol.types.Struct.public set( UUID, UUID ): Struct","set( UUID, UUID ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public setByteArray( String, byte ): Struct","setByteArray( String, byte ): Struct",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public setIfExists( Array, Object ): Struct","setIfExists( Array, Object ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public setIfExists( ComplexArray, Object ): Struct","setIfExists( ComplexArray, Object ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public setIfExists( Field, Object ): Struct","setIfExists( Field, Object ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.protocol.types.Struct.public setIfExists( String, Object ): Struct","setIfExists( String, Object ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,2
<Method>org.apache.kafka.common.protocol.types.Struct.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.public toString( ): String,toString( ): String,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,22,0,13,6
<Method>org.apache.kafka.common.protocol.types.Struct.public validate( ): void,validate( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.protocol.types.Struct.private validateField( BoundField ): void,validateField( BoundField ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,1,3
<Method>org.apache.kafka.common.protocol.types.Struct.public writeTo( ByteBuffer ): void,writeTo( ByteBuffer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Field>org.apache.kafka.common.protocol.types.Struct->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Struct->values,final values : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.TaggedFields,TaggedFields,low-medium,low,low-medium,low,5,37,23,3,0,25,107,104,1,1,9,1,1,0.583,0.575,0.667,0,0.333,,,,,107,,,,,,25,,,,,,,
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public TaggedFields( Map ): void,TaggedFields( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public documentation( ): String,documentation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public read( ByteBuffer ): NavigableMap,read( ByteBuffer ): NavigableMap,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,22,1,9,1
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public sizeOf( Object ): int,sizeOf( Object ): int,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,17,1,13,1
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public static of( Object ): TaggedFields,static of( Object ): TaggedFields,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,1,0
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,10,1
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public typeName( ): String,typeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.protocol.types.TaggedFields.public validate( Object ): Map,validate( Object ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,17,1,6,1
"<Method>org.apache.kafka.common.protocol.types.TaggedFields.public write( ByteBuffer, Object ): void","write( ByteBuffer, Object ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,16,1
<Field>org.apache.kafka.common.protocol.types.TaggedFields->fields,final fields : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.TaggedFields->TAGGED_FIELDS_TYPE_NAME,static final TAGGED_FIELDS_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Type,Type,low,low,medium-high,low,2,16,9,1,2,10,637,36,0,18,7,2,0,0,0.583,1,0,0,,,,,637,,,,,,10,,,,,,,
org.apache.kafka.common.protocol.types.Type.DocumentedType,DocumentedType,low,low,low,low,0,3,1,2,3,3,6,5,0,0,3,0,0,0,0,0,0,0,,,,,6,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Type.public abstract read( ByteBuffer ): Object,abstract read( ByteBuffer ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.protocol.types.Type.public abstract sizeOf( Object ): int,abstract sizeOf( Object ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.protocol.types.Type.public abstract validate( Object ): Object,abstract validate( Object ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.common.protocol.types.Type.public abstract write( ByteBuffer, Object ): void","abstract write( ByteBuffer, Object ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
<Method>org.apache.kafka.common.protocol.types.Type.public arrayElementType( ): Optional,arrayElementType( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.protocol.types.Type.public final isArray( ): boolean,final isArray( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.protocol.types.Type.public isNullable( ): boolean,isNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Type.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.protocol.types.Type.private static toHtml( ): String,static toHtml( ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,24,0,17,20
<Field>org.apache.kafka.common.protocol.types.Type->BOOLEAN,static final BOOLEAN : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->BYTES,static final BYTES : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->COMPACT_BYTES,static final COMPACT_BYTES : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->COMPACT_NULLABLE_BYTES,static final COMPACT_NULLABLE_BYTES : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->COMPACT_NULLABLE_STRING,static final COMPACT_NULLABLE_STRING : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->COMPACT_STRING,static final COMPACT_STRING : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT16,static final INT16 : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT32,static final INT32 : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT64,static final INT64 : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT8,static final INT8 : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_BYTES,static final NULLABLE_BYTES : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->NULLABLE_STRING,static final NULLABLE_STRING : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->RECORDS,static final RECORDS : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->STRING,static final STRING : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->UNSIGNED_INT32,static final UNSIGNED_INT32 : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->UUID,static final UUID : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->VARINT,static final VARINT : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->VARLONG,static final VARLONG : DocumentedType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.record,org.apache.kafka.common.record,high,high,very-high,low,,,,,,1140,3953,,,,,,,,,,,,,60,54,6,3953,37,28,0.217,0.431,0.352,1140,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch,AbstractLegacyRecordBatch,low-medium,low-medium,medium-high,high,8,89,30,2,2,40,351,133,0,0,37,2,1,0,0.84,0,0,0.054,,,,,351,,,,,,40,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.BasicLegacyRecordBatch,BasicLegacyRecordBatch,low,low,low,low,1,10,4,3,0,9,26,23,2,0,5,0,0,0.25,0.6,0.167,0,0,,,,,26,,,,,,9,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.ByteBufferLegacyRecordBatch,ByteBufferLegacyRecordBatch,low,low,low,low,8,59,21,3,0,18,51,48,2,0,11,0,0,0.438,0.761,0.694,0,0,,,,,51,,,,,,18,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.DataLogInputStream,DataLogInputStream,low,low,low,low,5,17,8,1,0,6,25,21,3,0,2,0,0,0,0.333,0,0,0,,,,,25,,,,,,6,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.DeepRecordsIterator,DeepRecordsIterator,low,low,low,low,11,40,18,2,0,20,72,68,3,0,3,0,0,0,0.533,0,0,0,,,,,72,,,,,,20,,,,,,,
org.apache.kafka.common.record.AbstractLegacyRecordBatch.LegacyFileChannelRecordBatch,LegacyFileChannelRecordBatch,low,low,low,low,5,28,3,3,0,13,43,42,0,0,13,0,0,0,0.769,0,0,0,,,,,43,,,,,,13,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.AbstractLegacyRecordBatch$6336;,Lorg.apache.kafka.common.record.AbstractLegacyRecordBatch$6336;,low,low,low,low,0,0,0,1,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch. iterator( BufferSupplier ): CloseableIterator, iterator( BufferSupplier ): CloseableIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,20,1,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public abstract outerRecord( ): LegacyRecord,abstract outerRecord( ): LegacyRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public checksum( ): long,checksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public checksumOrNull( ): Long,checksumOrNull( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public countOrNull( ): Integer,countOrNull( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasTimestampType( TimestampType ): boolean,hasTimestampType( TimestampType ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public headers( ): Header,headers( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public iterator( ): Iterator,iterator( ): Iterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public keySize( ): int,keySize( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public lastSequence( ): int,lastSequence( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public magic( ): byte,magic( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public producerId( ): long,producerId( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public sequence( ): int,sequence( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.static writeHeader( ByteBuffer, long, int ): void","static writeHeader( ByteBuffer, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.static writeHeader( DataOutputStream, long, int ): void","static writeHeader( DataOutputStream, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public streamingIterator( BufferSupplier ): CloseableIterator,streamingIterator( BufferSupplier ): CloseableIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public timestamp( ): long,timestamp( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public timestampType( ): TimestampType,timestampType( ): TimestampType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public valueSize( ): int,valueSize( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.AbstractLegacyRecordBatch.public writeTo( ByteBuffer ): void,writeTo( ByteBuffer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,8,0
org.apache.kafka.common.record.AbstractRecordBatch,AbstractRecordBatch,low,low,low,low,1,6,3,1,3,3,10,9,0,0,3,0,0,0,0,0,0,0,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.AbstractRecordBatch.public nextOffset( ): long,nextOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.record.AbstractRecords,AbstractRecords,low-medium,low-medium,low-medium,low-medium,10,52,19,1,2,26,78,76,1,0,6,6,0,0,0.694,1,0,0,,,,,78,,,,,,26,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.AbstractRecords$2184;,Lorg.apache.kafka.common.record.AbstractRecords$2184;,low,low,low,low,0,0,0,2,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.record.AbstractRecords.public firstBatch( ): RecordBatch,firstBatch( ): RecordBatch,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,4,0
<Method>org.apache.kafka.common.record.AbstractRecords.public hasCompatibleMagic( byte ): boolean,hasCompatibleMagic( byte ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,2,0
<Method>org.apache.kafka.common.record.AbstractRecords.public hasMatchingMagic( byte ): boolean,hasMatchingMagic( byte ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,2,0
<Method>org.apache.kafka.common.record.AbstractRecords.public records( ): Iterable,records( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.AbstractRecords.private recordsIterator( ): Iterator,recordsIterator( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,13,0,0,0
"<Method>org.apache.kafka.common.record.AbstractRecords.private static estimateCompressedSizeInBytes( int, CompressionType ): int","static estimateCompressedSizeInBytes( int, CompressionType ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,2,0
"<Method>org.apache.kafka.common.record.AbstractRecords.public static estimateSizeInBytes( byte, CompressionType, Iterable ): int","static estimateSizeInBytes( byte, CompressionType, Iterable ): int",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,3,5,0
"<Method>org.apache.kafka.common.record.AbstractRecords.public static estimateSizeInBytes( byte, long, CompressionType, Iterable ): int","static estimateSizeInBytes( byte, long, CompressionType, Iterable ): int",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,4,5,0
"<Method>org.apache.kafka.common.record.AbstractRecords.public static estimateSizeInBytesUpperBound( byte, CompressionType, ByteBuffer, ByteBuffer, Header ): int","static estimateSizeInBytesUpperBound( byte, CompressionType, ByteBuffer, ByteBuffer, Header ): int",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,5,4,0
"<Method>org.apache.kafka.common.record.AbstractRecords.public static estimateSizeInBytesUpperBound( byte, CompressionType, byte, byte, Header ): int","static estimateSizeInBytesUpperBound( byte, CompressionType, byte, byte, Header ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,3,0
"<Method>org.apache.kafka.common.record.AbstractRecords.public static recordBatchHeaderSizeInBytes( byte, CompressionType ): int","static recordBatchHeaderSizeInBytes( byte, CompressionType ): int",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,1,0
<Method>org.apache.kafka.common.record.AbstractRecords.public toSend( String ): RecordsSend,toSend( String ): RecordsSend,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.record.AbstractRecords->records,final records : Iterable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.BaseRecords,BaseRecords,low,low,low,low,1,2,0,1,3,2,3,2,0,0,2,0,0,0,0.25,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.BaseRecords.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.BaseRecords.public abstract toSend( String ): RecordsSend,toSend( String ): RecordsSend,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.record.BufferSupplier,BufferSupplier,low,low,low-medium,low,0,4,0,1,2,4,53,5,0,1,3,1,0,0,0.5,1,0,0,,,,,53,,,,,,4,,,,,,,
org.apache.kafka.common.record.BufferSupplier.DefaultSupplier,DefaultSupplier,low,low,low,low,0,12,9,2,0,6,20,18,1,0,3,0,0,0,0.444,0,0,0,,,,,20,,,,,,6,,,,,,,
org.apache.kafka.common.record.BufferSupplier.GrowableBufferSupplier,GrowableBufferSupplier,low,low,low,low,0,6,3,2,0,5,18,16,1,0,3,0,0,0,0.444,0,0,0,,,,,18,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.record.BufferSupplier.public abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.record.BufferSupplier.public abstract get( int ): ByteBuffer,abstract get( int ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.record.BufferSupplier.public abstract release( ByteBuffer ): void,abstract release( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.record.BufferSupplier.public static create( ): BufferSupplier,static create( ): BufferSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.record.BufferSupplier->NO_CACHING,static final NO_CACHING : BufferSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ByteBufferLogInputStream,ByteBufferLogInputStream,low,low-medium,low,low,7,11,9,1,0,12,36,33,2,0,3,0,0,0.25,0.444,0,0,0,,,,,36,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.record.ByteBufferLogInputStream. ByteBufferLogInputStream( ByteBuffer, int ): void"," ByteBufferLogInputStream( ByteBuffer, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.record.ByteBufferLogInputStream. nextBatchSize( ): Integer, nextBatchSize( ): Integer,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,17,0,7,7
<Method>org.apache.kafka.common.record.ByteBufferLogInputStream.public nextBatch( ): MutableRecordBatch,nextBatch( ): MutableRecordBatch,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,13,0,8,6
<Field>org.apache.kafka.common.record.ByteBufferLogInputStream->buffer,final buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ByteBufferLogInputStream->maxMessageSize,final maxMessageSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionRatioEstimator,CompressionRatioEstimator,low,low,low,low,1,11,6,1,0,13,40,36,0,3,0,7,0,0.833,0.357,1,0,0,,,,,40,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.record.CompressionRatioEstimator.public static estimation( String, CompressionType ): float","static estimation( String, CompressionType ): float",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.record.CompressionRatioEstimator.private static getAndCreateEstimationIfAbsent( String ): float,static getAndCreateEstimationIfAbsent( String ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,3,2
<Method>org.apache.kafka.common.record.CompressionRatioEstimator.private static initialCompressionRatio( ): float,static initialCompressionRatio( ): float,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.common.record.CompressionRatioEstimator.public static removeEstimation( String ): void,static removeEstimation( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.record.CompressionRatioEstimator.public static resetEstimation( String ): void,static resetEstimation( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,5,1,1,0
"<Method>org.apache.kafka.common.record.CompressionRatioEstimator.public static setEstimation( String, CompressionType, float ): void","static setEstimation( String, CompressionType, float ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,3,1,0
"<Method>org.apache.kafka.common.record.CompressionRatioEstimator.public static updateEstimation( String, CompressionType, float ): float","static updateEstimation( String, CompressionType, float ): float",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,3,2,2
<Field>org.apache.kafka.common.record.CompressionRatioEstimator->COMPRESSION_RATIO,static final COMPRESSION_RATIO : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionRatioEstimator->COMPRESSION_RATIO_DETERIORATE_STEP,static final COMPRESSION_RATIO_DETERIORATE_STEP : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionRatioEstimator->COMPRESSION_RATIO_IMPROVING_STEP,static final COMPRESSION_RATIO_IMPROVING_STEP : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionType,CompressionType,low-medium,low,low-medium,low-medium,2,10,4,2,0,17,118,38,3,5,3,3,0,0.625,0.667,0.833,0,0,,,,,118,,,,,,17,,,,,,,
org.apache.kafka.common.record.CompressionType.SnappyConstructors,SnappyConstructors,low,low,low,low,0,0,0,1,0,0,5,0,0,2,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.record.CompressionType.ZstdConstructors,ZstdConstructors,low,low,low,low,0,0,0,1,0,0,5,0,0,2,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.record.CompressionType.private CompressionType( int, String, float ): void","CompressionType( int, String, float ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.common.record.CompressionType.public abstract wrapForInput( ByteBuffer, byte, BufferSupplier ): InputStream","abstract wrapForInput( ByteBuffer, byte, BufferSupplier ): InputStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
"<Method>org.apache.kafka.common.record.CompressionType.public abstract wrapForOutput( ByteBufferOutputStream, byte ): OutputStream","abstract wrapForOutput( ByteBufferOutputStream, byte ): OutputStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
"<Method>org.apache.kafka.common.record.CompressionType.private static findConstructor( String, MethodType ): MethodHandle","static findConstructor( String, MethodType ): MethodHandle",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,3,0
<Method>org.apache.kafka.common.record.CompressionType.public static forId( int ): CompressionType,static forId( int ): CompressionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,14,1,0,5
<Method>org.apache.kafka.common.record.CompressionType.public static forName( String ): CompressionType,static forName( String ): CompressionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,13,1,5,15
<Field>org.apache.kafka.common.record.CompressionType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->rate,final rate : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->GZIP,static final GZIP : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->LZ4,static final LZ4 : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->NONE,static final NONE : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->SNAPPY,static final SNAPPY : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->ZSTD,static final ZSTD : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ControlRecordType,ControlRecordType,low-medium,low,low,low,4,11,6,2,0,11,42,31,1,7,2,3,0,0.875,0.4,0.667,0,0,,,,,42,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.record.ControlRecordType.private ControlRecordType( short ): void,ControlRecordType( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.ControlRecordType.public recordKey( ): Struct,recordKey( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,2,4
<Method>org.apache.kafka.common.record.ControlRecordType.public static fromTypeId( short ): ControlRecordType,static fromTypeId( short ): ControlRecordType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,3
<Method>org.apache.kafka.common.record.ControlRecordType.public static parse( ByteBuffer ): ControlRecordType,static parse( ByteBuffer ): ControlRecordType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.record.ControlRecordType.public static parseTypeId( ByteBuffer ): short,static parseTypeId( ByteBuffer ): short,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,12,1,5,5
<Field>org.apache.kafka.common.record.ControlRecordType->type,final type : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->ABORT,static final ABORT : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->COMMIT,static final COMMIT : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->CONTROL_RECORD_KEY_SCHEMA_VERSION_V0,static final CONTROL_RECORD_KEY_SCHEMA_VERSION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->CURRENT_CONTROL_RECORD_KEY_SIZE,static final CURRENT_CONTROL_RECORD_KEY_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->CURRENT_CONTROL_RECORD_KEY_VERSION,static final CURRENT_CONTROL_RECORD_KEY_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->UNKNOWN,static final UNKNOWN : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ControlRecordType->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.ConvertedRecords<T>,ConvertedRecords,low,low,low,low,2,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.record.ConvertedRecords<T>.public ConvertedRecords( T, RecordConversionStats ): void","ConvertedRecords( T, RecordConversionStats ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.record.ConvertedRecords<T>.public recordConversionStats( ): RecordConversionStats,recordConversionStats( ): RecordConversionStats,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.ConvertedRecords<T>.public records( ): T,records( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.ConvertedRecords<T>->recordConversionStats,final recordConversionStats : RecordConversionStats,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.ConvertedRecords<T>->records,final records : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.DefaultRecord,DefaultRecord,high,medium-high,medium-high,medium-high,13,108,53,1,1,103,402,391,8,2,22,19,0,0.835,0.77,0.892,0,0,,,,,402,,,,,,103,,,,,,,
"<Method>org.apache.kafka.common.record.DefaultRecord. DefaultRecord( int, byte, long, long, int, ByteBuffer, ByteBuffer, Header ): void"," DefaultRecord( int, byte, long, long, int, ByteBuffer, ByteBuffer, Header ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,0,8
<Method>org.apache.kafka.common.record.DefaultRecord.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public checksumOrNull( ): Long,checksumOrNull( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,15,1,5,16
<Method>org.apache.kafka.common.record.DefaultRecord.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hasTimestampType( TimestampType ): boolean,hasTimestampType( TimestampType ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,0,5,10
<Method>org.apache.kafka.common.record.DefaultRecord.public headers( ): Header,headers( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.DefaultRecord.public key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecord.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecord.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public sequence( ): int,sequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.record.DefaultRecord.public static computePartialChecksum( long, int, int ): long","static computePartialChecksum( long, int, int ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,5,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readByte( ByteBuffer, DataInput, IntRef ): byte","static readByte( ByteBuffer, DataInput, IntRef ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,3,3,1
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readFrom( ByteBuffer, int, int, long, long, int, Long ): DefaultRecord","static readFrom( ByteBuffer, int, int, long, long, int, Long ): DefaultRecord",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,45,7,19,0
"<Method>org.apache.kafka.common.record.DefaultRecord.public static readFrom( ByteBuffer, long, long, int, Long ): DefaultRecord","static readFrom( ByteBuffer, long, long, int, Long ): DefaultRecord",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,5,4,0
"<Method>org.apache.kafka.common.record.DefaultRecord.public static readFrom( DataInput, long, long, int, Long ): DefaultRecord","static readFrom( DataInput, long, long, int, Long ): DefaultRecord",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,6,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readHeaders( ByteBuffer, int ): Header","static readHeaders( ByteBuffer, int ): Header",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,2,9,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readMore( ByteBuffer, DataInput, IntRef ): void","static readMore( ByteBuffer, DataInput, IntRef ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,3,7,3
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readPartiallyFrom( DataInput, byte, int, int, long, long, int, Long ): PartialDefaultRecord","static readPartiallyFrom( DataInput, byte, int, int, long, long, int, Long ): PartialDefaultRecord",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,38,8,13,1
"<Method>org.apache.kafka.common.record.DefaultRecord.public static readPartiallyFrom( DataInput, byte, long, long, int, Long ): PartialDefaultRecord","static readPartiallyFrom( DataInput, byte, long, long, int, Long ): PartialDefaultRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,6,3,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readVarInt( ByteBuffer, DataInput, IntRef ): int","static readVarInt( ByteBuffer, DataInput, IntRef ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,3,3,1
"<Method>org.apache.kafka.common.record.DefaultRecord.private static readVarLong( ByteBuffer, DataInput, IntRef ): long","static readVarLong( ByteBuffer, DataInput, IntRef ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,3,3,1
"<Method>org.apache.kafka.common.record.DefaultRecord.static recordSizeUpperBound( ByteBuffer, ByteBuffer, Header ): int","static recordSizeUpperBound( ByteBuffer, ByteBuffer, Header ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,3,3,1
"<Method>org.apache.kafka.common.record.DefaultRecord.public static sizeInBytes( int, long, ByteBuffer, ByteBuffer, Header ): int","static sizeInBytes( int, long, ByteBuffer, ByteBuffer, Header ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,2,0
"<Method>org.apache.kafka.common.record.DefaultRecord.public static sizeInBytes( int, long, int, int, Header ): int","static sizeInBytes( int, long, int, int, Header ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,2,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static sizeOf( int, int, Header ): int","static sizeOf( int, int, Header ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,25,3,8,3
"<Method>org.apache.kafka.common.record.DefaultRecord.private static sizeOfBodyInBytes( int, long, ByteBuffer, ByteBuffer, Header ): int","static sizeOfBodyInBytes( int, long, ByteBuffer, ByteBuffer, Header ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,5,3,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static sizeOfBodyInBytes( int, long, int, int, Header ): int","static sizeOfBodyInBytes( int, long, int, int, Header ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,3,0
"<Method>org.apache.kafka.common.record.DefaultRecord.private static skipLengthDelimitedField( ByteBuffer, DataInput, IntRef ): int","static skipLengthDelimitedField( ByteBuffer, DataInput, IntRef ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,25,3,9,1
"<Method>org.apache.kafka.common.record.DefaultRecord.public static writeTo( DataOutputStream, int, long, ByteBuffer, ByteBuffer, Header ): int","static writeTo( DataOutputStream, int, long, ByteBuffer, ByteBuffer, Header ): int",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,41,6,23,0
<Method>org.apache.kafka.common.record.DefaultRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.DefaultRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,3,6
<Method>org.apache.kafka.common.record.DefaultRecord.public value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecord.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Field>org.apache.kafka.common.record.DefaultRecord->attributes,final attributes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->headers,final headers : Header,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->key,final key : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->sequence,final sequence : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->sizeInBytes,final sizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->value,final value : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->MAX_RECORD_OVERHEAD,static final MAX_RECORD_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecord->NULL_VARINT_SIZE_BYTES,static final NULL_VARINT_SIZE_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch,DefaultRecordBatch,medium-high,medium-high,medium-high,high,14,116,62,2,0,78,416,274,1,33,37,8,0,0.966,0.87,0.755,0,0,,,,,416,,,,,,78,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch.DefaultFileChannelRecordBatch,DefaultFileChannelRecordBatch,low,low,low,low,2,37,11,3,0,14,46,45,0,0,14,0,1,0,0.774,0,0,0.214,,,,,46,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.DefaultRecordBatch$11178;,Lorg.apache.kafka.common.record.DefaultRecordBatch$11178;,low,low,low,low,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.DefaultRecordBatch$11597;,Lorg.apache.kafka.common.record.DefaultRecordBatch$11597;,low,low,low,low,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.record.DefaultRecordBatch$12155;,Lorg.apache.kafka.common.record.DefaultRecordBatch$12155;,low,low,low,low,0,0,0,2,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch.RecordIterator,RecordIterator,low,low,low,low,3,18,9,1,2,11,35,28,6,0,6,0,0,0.417,0.625,0.667,0,0,,,,,35,,,,,,11,,,,,,,
org.apache.kafka.common.record.DefaultRecordBatch.StreamRecordIterator,StreamRecordIterator,low,low,low,low,3,7,3,2,2,9,26,24,1,0,5,0,0,0,0.52,0,0,0,,,,,26,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.record.DefaultRecordBatch. DefaultRecordBatch( ByteBuffer ): void, DefaultRecordBatch( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public checksum( ): long,checksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.private compressedIterator( BufferSupplier, boolean ): CloseableIterator","compressedIterator( BufferSupplier, boolean ): CloseableIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,18,2,5,3
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,4
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private count( ): int,count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public countOrNull( ): Integer,countOrNull( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,5,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,3,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public firstTimestamp( ): long,firstTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public iterator( ): Iterator,iterator( ): Iterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,0,10,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private lastOffsetDelta( ): int,lastOffsetDelta( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public lastSequence( ): int,lastSequence( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public setLastOffset( long ): void,setLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.public setMaxTimestamp( TimestampType, long ): void","setMaxTimestamp( TimestampType, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,2,10,6
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public setPartitionLeaderEpoch( int ): void,setPartitionLeaderEpoch( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public skipKeyValueIterator( BufferSupplier ): CloseableIterator,skipKeyValueIterator( BufferSupplier ): CloseableIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,6,0
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.private static computeAttributes( CompressionType, TimestampType, boolean, boolean ): byte","static computeAttributes( CompressionType, TimestampType, boolean, boolean ): byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,13,4,0,4
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.public static decrementSequence( int, int ): int","static decrementSequence( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,0,0
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.static estimateBatchSizeUpperBound( ByteBuffer, ByteBuffer, Header ): int","static estimateBatchSizeUpperBound( ByteBuffer, ByteBuffer, Header ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.public static incrementSequence( int, int ): int","static incrementSequence( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,0,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public static sizeInBytes( Iterable ): int,static sizeInBytes( Iterable ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,1,10,1
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.public static sizeInBytes( long, Iterable ): int","static sizeInBytes( long, Iterable ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,2,11,1
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.public static writeEmptyHeader( ByteBuffer, byte, long, short, int, long, long, int, TimestampType, long, boolean, boolean ): void","static writeEmptyHeader( ByteBuffer, byte, long, short, int, long, long, int, TimestampType, long, boolean, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,12,1,1
"<Method>org.apache.kafka.common.record.DefaultRecordBatch.static writeHeader( ByteBuffer, long, int, int, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void","static writeHeader( ByteBuffer, long, int, int, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,37,16,17,16
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public streamingIterator( BufferSupplier ): CloseableIterator,streamingIterator( BufferSupplier ): CloseableIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,3,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public timestampType( ): TimestampType,timestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,6,0
<Method>org.apache.kafka.common.record.DefaultRecordBatch.private uncompressedIterator( ): CloseableIterator,uncompressedIterator( ): CloseableIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,16,0,2,2
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public writeTo( ByteBuffer ): void,writeTo( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.common.record.DefaultRecordBatch.public writeTo( ByteBufferOutputStream ): void,writeTo( ByteBufferOutputStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Field>org.apache.kafka.common.record.DefaultRecordBatch->buffer,final buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->ATTRIBUTE_LENGTH,static final ATTRIBUTE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_OFFSET_LENGTH,static final BASE_OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_OFFSET_OFFSET,static final BASE_OFFSET_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_SEQUENCE_LENGTH,static final BASE_SEQUENCE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->BASE_SEQUENCE_OFFSET,static final BASE_SEQUENCE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CONTROL_FLAG_MASK,static final CONTROL_FLAG_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->FIRST_TIMESTAMP_LENGTH,static final FIRST_TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->FIRST_TIMESTAMP_OFFSET,static final FIRST_TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LAST_OFFSET_DELTA_LENGTH,static final LAST_OFFSET_DELTA_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LAST_OFFSET_DELTA_OFFSET,static final LAST_OFFSET_DELTA_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LENGTH_LENGTH,static final LENGTH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->LENGTH_OFFSET,static final LENGTH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAX_SKIP_BUFFER_SIZE,static final MAX_SKIP_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAX_TIMESTAMP_LENGTH,static final MAX_TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->MAX_TIMESTAMP_OFFSET,static final MAX_TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PARTITION_LEADER_EPOCH_LENGTH,static final PARTITION_LEADER_EPOCH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PARTITION_LEADER_EPOCH_OFFSET,static final PARTITION_LEADER_EPOCH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_EPOCH_LENGTH,static final PRODUCER_EPOCH_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_EPOCH_OFFSET,static final PRODUCER_EPOCH_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_ID_LENGTH,static final PRODUCER_ID_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->PRODUCER_ID_OFFSET,static final PRODUCER_ID_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_COUNT_LENGTH,static final RECORDS_COUNT_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_COUNT_OFFSET,static final RECORDS_COUNT_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORDS_OFFSET,static final RECORDS_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->RECORD_BATCH_OVERHEAD,static final RECORD_BATCH_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->TIMESTAMP_TYPE_MASK,static final TIMESTAMP_TYPE_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.DefaultRecordBatch->TRANSACTIONAL_FLAG_MASK,static final TRANSACTIONAL_FLAG_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.DefaultRecordsSend,DefaultRecordsSend,low-medium,low,low,low,1,6,3,2,0,3,8,7,0,0,3,0,0,0,0.389,0,0,0,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.record.DefaultRecordsSend.public DefaultRecordsSend( String, Records ): void","DefaultRecordsSend( String, Records ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.record.DefaultRecordsSend.public DefaultRecordsSend( String, Records, int ): void","DefaultRecordsSend( String, Records, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.record.DefaultRecordsSend.protected writeTo( GatheringByteChannel, long, int ): long","writeTo( GatheringByteChannel, long, int ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
org.apache.kafka.common.record.EndTransactionMarker,EndTransactionMarker,low,low-medium,low-medium,medium-high,6,41,17,1,0,19,63,50,2,5,7,3,0,0.833,0.717,0.571,0,0,,,,,63,,,,,,19,,,,,,,
"<Method>org.apache.kafka.common.record.EndTransactionMarker.public EndTransactionMarker( ControlRecordType, int ): void","EndTransactionMarker( ControlRecordType, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,2
<Method>org.apache.kafka.common.record.EndTransactionMarker.private buildRecordValue( ): Struct,buildRecordValue( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,3
<Method>org.apache.kafka.common.record.EndTransactionMarker.public controlType( ): ControlRecordType,controlType( ): ControlRecordType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.EndTransactionMarker.public coordinatorEpoch( ): int,coordinatorEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.EndTransactionMarker.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,2,4
<Method>org.apache.kafka.common.record.EndTransactionMarker.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,3
<Method>org.apache.kafka.common.record.EndTransactionMarker.public serializeValue( ): ByteBuffer,serializeValue( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,0
<Method>org.apache.kafka.common.record.EndTransactionMarker.public static deserialize( Record ): EndTransactionMarker,static deserialize( Record ): EndTransactionMarker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,0
"<Method>org.apache.kafka.common.record.EndTransactionMarker.static deserializeValue( ControlRecordType, ByteBuffer ): EndTransactionMarker","static deserializeValue( ControlRecordType, ByteBuffer ): EndTransactionMarker",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,14,2,6,5
<Method>org.apache.kafka.common.record.EndTransactionMarker.private static ensureTransactionMarkerControlType( ControlRecordType ): void,static ensureTransactionMarkerControlType( ControlRecordType ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,0,0
<Field>org.apache.kafka.common.record.EndTransactionMarker->coordinatorEpoch,final coordinatorEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->type,final type : ControlRecordType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_MARKER_VALUE_SIZE,static final CURRENT_END_TXN_MARKER_VALUE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_MARKER_VERSION,static final CURRENT_END_TXN_MARKER_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->CURRENT_END_TXN_SCHEMA_RECORD_SIZE,static final CURRENT_END_TXN_SCHEMA_RECORD_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->END_TXN_MARKER_SCHEMA_VERSION_V0,static final END_TXN_MARKER_SCHEMA_VERSION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.EndTransactionMarker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileLogInputStream,FileLogInputStream,low,low-medium,low-medium,low,8,15,9,1,0,6,142,29,4,0,2,0,0,0.25,0.333,0,0,0,,,,,142,,,,,,6,,,,,,,
org.apache.kafka.common.record.FileLogInputStream.FileChannelRecordBatch,FileChannelRecordBatch,low,low,low,low,9,45,26,2,2,33,108,100,7,0,21,0,0,0.714,0.836,0.886,0,0,,,,,108,,,,,,33,,,,,,,
"<Method>org.apache.kafka.common.record.FileLogInputStream. FileLogInputStream( FileRecords, int, int ): void"," FileLogInputStream( FileRecords, int, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.common.record.FileLogInputStream.public nextBatch( ): FileChannelRecordBatch,nextBatch( ): FileChannelRecordBatch,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,23,0,10,18
<Field>org.apache.kafka.common.record.FileLogInputStream->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->fileRecords,final fileRecords : FileRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->logHeaderBuffer,final logHeaderBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileLogInputStream->position,position : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.FileRecords,FileRecords,very-high,medium-high,low-medium,high,14,203,47,2,0,61,252,187,7,0,26,5,0,0.759,0.801,0.786,0,0,,,,,252,,,,,,61,,,,,,,
org.apache.kafka.common.record.FileRecords.LogOffsetPosition,LogOffsetPosition,low,low,low,low,0,6,2,1,0,7,31,27,3,0,4,0,0,0,0.562,0,0,0,,,,,31,,,,,,7,,,,,,,
org.apache.kafka.common.record.FileRecords.TimestampAndOffset,TimestampAndOffset,low,low,low,low,0,7,3,1,0,7,26,22,3,0,4,0,0,0,0.562,0,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.record.FileRecords. FileRecords( File, FileChannel, int, int, boolean ): void"," FileRecords( File, FileChannel, int, int, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,21,5,8,9
<Method>org.apache.kafka.common.record.FileRecords.public append( MemoryRecords ): int,append( MemoryRecords ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,6,4
<Method>org.apache.kafka.common.record.FileRecords.public batchIterator( ): AbstractIterator,batchIterator( ): AbstractIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.FileRecords.private batchIterator( int ): AbstractIterator,batchIterator( int ): AbstractIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,1,2
<Method>org.apache.kafka.common.record.FileRecords.public batches( ): Iterable,batches( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.FileRecords.public batchesFrom( int ): Iterable,batchesFrom( int ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.record.FileRecords.public channel( ): FileChannel,channel( ): FileChannel,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.FileRecords.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
<Method>org.apache.kafka.common.record.FileRecords.public closeHandlers( ): void,closeHandlers( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.FileRecords.public deleteIfExists( ): boolean,deleteIfExists( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,2
"<Method>org.apache.kafka.common.record.FileRecords.public downConvert( byte, long, Time ): ConvertedRecords","downConvert( byte, long, Time ): ConvertedRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,3,3,1
<Method>org.apache.kafka.common.record.FileRecords.public file( ): File,file( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.FileRecords.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.FileRecords.public largestTimestampAfter( int ): TimestampAndOffset,largestTimestampAfter( int ): TimestampAndOffset,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,5,0
<Method>org.apache.kafka.common.record.FileRecords.private maybeLeaderEpoch( int ): Optional,maybeLeaderEpoch( int ): Optional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,0
"<Method>org.apache.kafka.common.record.FileRecords.public readInto( ByteBuffer, int ): void","readInto( ByteBuffer, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
<Method>org.apache.kafka.common.record.FileRecords.public renameTo( File ): void,renameTo( File ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,3,2
"<Method>org.apache.kafka.common.record.FileRecords.public searchForOffsetWithSize( long, int ): LogOffsetPosition","searchForOffsetWithSize( long, int ): LogOffsetPosition",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,4,0
"<Method>org.apache.kafka.common.record.FileRecords.public searchForTimestamp( long, int, long ): TimestampAndOffset","searchForTimestamp( long, int, long ): TimestampAndOffset",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,9,3,7,0
<Method>org.apache.kafka.common.record.FileRecords.public setFile( File ): void,setFile( File ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.FileRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.record.FileRecords.public slice( int, int ): FileRecords","slice( int, int ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,11,2,3,7
<Method>org.apache.kafka.common.record.FileRecords.public static open( File ): FileRecords,static open( File ): FileRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.record.FileRecords.public static open( File, boolean ): FileRecords","static open( File, boolean ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.record.FileRecords.public static open( File, boolean, boolean, int, boolean ): FileRecords","static open( File, boolean, boolean, int, boolean ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,5,1,0
"<Method>org.apache.kafka.common.record.FileRecords.public static open( File, boolean, int, boolean ): FileRecords","static open( File, boolean, int, boolean ): FileRecords",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.common.record.FileRecords.private static openChannel( File, boolean, boolean, int, boolean ): FileChannel","static openChannel( File, boolean, boolean, int, boolean ): FileChannel",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,5,6,0
<Method>org.apache.kafka.common.record.FileRecords.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,3
<Method>org.apache.kafka.common.record.FileRecords.public trim( ): void,trim( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.record.FileRecords.public truncateTo( int ): int,truncateTo( int ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
"<Method>org.apache.kafka.common.record.FileRecords.public writeTo( GatheringByteChannel, long, int ): long","writeTo( GatheringByteChannel, long, int ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,17,3,8,7
<Field>org.apache.kafka.common.record.FileRecords->batches,final batches : Iterable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->channel,final channel : FileChannel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->end,final end : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->isSlice,final isSlice : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->size,final size : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->start,final start : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.FileRecords->file,volatile file : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockInputStream,KafkaLZ4BlockInputStream,low-medium,low-medium,low-medium,medium-high,8,43,34,2,0,42,141,126,8,6,12,0,7,0.821,0.774,0.756,1,1.167,,,,,141,,,,,,42,,,,,,,
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public KafkaLZ4BlockInputStream( ByteBuffer, BufferSupplier, boolean ): void","KafkaLZ4BlockInputStream( ByteBuffer, BufferSupplier, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,3,6,8
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public available( ): int,available( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public ignoreFlagDescriptorChecksum( ): boolean,ignoreFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public mark( int ): void,mark( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public markSupported( ): boolean,markSupported( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,3,3
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,3,6,3
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readBlock( ): void,readBlock( ): void,low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,4,46,0,31,44
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readHeader( ): void,readHeader( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,0,27,31
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public skip( long ): long,skip( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,6,4
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->decompressedBuffer,decompressedBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->bufferSupplier,final bufferSupplier : BufferSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->decompressionBuffer,final decompressionBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->ignoreFlagDescriptorChecksum,final ignoreFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->in,final in : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->flg,flg : FLG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->maxBlockSize,maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->BLOCK_HASH_MISMATCH,static final BLOCK_HASH_MISMATCH : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->CHECKSUM,static final CHECKSUM : XXHash32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->DECOMPRESSOR,static final DECOMPRESSOR : LZ4SafeDecompressor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->DESCRIPTOR_HASH_MISMATCH,static final DESCRIPTOR_HASH_MISMATCH : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->NOT_SUPPORTED,static final NOT_SUPPORTED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->PREMATURE_EOS,static final PREMATURE_EOS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream,KafkaLZ4BlockOutputStream,low-medium,low-medium,low-medium,low,6,32,21,2,0,25,207,100,11,8,14,0,3,0.876,0.6,0.778,1,0.429,,,,,207,,,,,,25,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.BD,BD,low,low,low,low,0,7,1,1,0,11,29,25,3,0,6,1,0,0.222,0.524,0.9,0,0,,,,,29,,,,,,11,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.FLG,FLG,low,low,low,low,0,12,2,1,0,15,58,50,6,1,10,1,0,0.732,0.682,0.861,0,0,,,,,58,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public KafkaLZ4BlockOutputStream( OutputStream ): void,KafkaLZ4BlockOutputStream( OutputStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public KafkaLZ4BlockOutputStream( OutputStream, boolean ): void","KafkaLZ4BlockOutputStream( OutputStream, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public KafkaLZ4BlockOutputStream( OutputStream, int ): void","KafkaLZ4BlockOutputStream( OutputStream, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public KafkaLZ4BlockOutputStream( OutputStream, int, boolean ): void","KafkaLZ4BlockOutputStream( OutputStream, int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public KafkaLZ4BlockOutputStream( OutputStream, int, boolean, boolean ): void","KafkaLZ4BlockOutputStream( OutputStream, int, boolean, boolean ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,4,7,15
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,5,16,0,3,7
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private ensureNotFinished( ): void,ensureNotFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,2,3
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public useBrokenFlagDescriptorChecksum( ): boolean,useBrokenFlagDescriptorChecksum( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,5,10
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,4
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeBlock( ): void,writeBlock( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,0,6,16
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeEndMark( ): void,writeEndMark( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeHeader( ): void,writeHeader( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,5,19
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->buffer,buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->compressedBuffer,compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bd,final bd : BD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->checksum,final checksum : XXHash32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->compressor,final compressor : LZ4Compressor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->flg,final flg : FLG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->useBrokenFlagDescriptorChecksum,final useBrokenFlagDescriptorChecksum : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->out,out : OutputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_1MB,static final BLOCKSIZE_1MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_256KB,static final BLOCKSIZE_256KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_4MB,static final BLOCKSIZE_4MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_64KB,static final BLOCKSIZE_64KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->CLOSED_STREAM,static final CLOSED_STREAM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_FRAME_INCOMPRESSIBLE_MASK,static final LZ4_FRAME_INCOMPRESSIBLE_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_MAX_HEADER_LENGTH,static final LZ4_MAX_HEADER_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->MAGIC,static final MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LazyDownConversionRecords,LazyDownConversionRecords,low,low,low-medium,medium-high,5,20,10,1,0,10,86,48,7,0,8,0,0,0.619,0.75,0.464,0,0,,,,,86,,,,,,10,,,,,,,
org.apache.kafka.common.record.LazyDownConversionRecords.Iterator,Iterator,low,low,low,low,4,141,10,2,0,9,30,26,3,0,2,0,0,0,0.375,0,0,0,,,,,30,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public LazyDownConversionRecords( TopicPartition, Records, byte, long, Time ): void","LazyDownConversionRecords( TopicPartition, Records, byte, long, Time ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,5,10,10
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,1,8
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,2,4
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public iterator( long ): Iterator,iterator( long ): Iterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,3
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public toSend( String ): LazyDownConversionRecordsSend,toSend( String ): LazyDownConversionRecordsSend,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,4
<Method>org.apache.kafka.common.record.LazyDownConversionRecords.public topicPartition( ): TopicPartition,topicPartition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->firstOffset,final firstOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->records,final records : Records,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->sizeInBytes,final sizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->toMagic,final toMagic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->topicPartition,final topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecords->firstConvertedBatch,firstConvertedBatch : ConvertedRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LazyDownConversionRecordsSend,LazyDownConversionRecordsSend,low-medium,low-medium,low,low-medium,9,31,22,2,0,9,39,32,3,3,5,0,0,0.667,0.633,0.5,0,0,,,,,39,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.record.LazyDownConversionRecordsSend.public LazyDownConversionRecordsSend( String, LazyDownConversionRecords ): void","LazyDownConversionRecordsSend( String, LazyDownConversionRecords ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,4
<Method>org.apache.kafka.common.record.LazyDownConversionRecordsSend.private buildOverflowBatch( int ): MemoryRecords,buildOverflowBatch( int ): MemoryRecords,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,9,3
<Method>org.apache.kafka.common.record.LazyDownConversionRecordsSend.public recordConversionStats( ): RecordConversionStats,recordConversionStats( ): RecordConversionStats,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LazyDownConversionRecordsSend.public topicPartition( ): TopicPartition,topicPartition( ): TopicPartition,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
"<Method>org.apache.kafka.common.record.LazyDownConversionRecordsSend.public writeTo( GatheringByteChannel, long, int ): long","writeTo( GatheringByteChannel, long, int ): long",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,3,15,8
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->convertedRecordsIterator,convertedRecordsIterator : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->convertedRecordsWriter,convertedRecordsWriter : RecordsSend,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->recordConversionStats,recordConversionStats : RecordConversionStats,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->MAX_READ_SIZE,static final MAX_READ_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->MIN_OVERFLOW_MESSAGE_LENGTH,static final MIN_OVERFLOW_MESSAGE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LazyDownConversionRecordsSend->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LegacyRecord,LegacyRecord,medium-high,low-medium,low-medium,medium-high,10,85,55,1,0,86,276,251,3,21,25,17,0,0.96,0.764,0.79,0,0,,,,,276,,,,,,86,,,,,,,
<Method>org.apache.kafka.common.record.LegacyRecord.public LegacyRecord( ByteBuffer ): void,LegacyRecord( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public LegacyRecord( ByteBuffer, Long, TimestampType ): void","LegacyRecord( ByteBuffer, Long, TimestampType ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.record.LegacyRecord.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.LegacyRecord.public buffer( ): ByteBuffer,buffer( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LegacyRecord.public checksum( ): long,checksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.LegacyRecord.public compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,3
<Method>org.apache.kafka.common.record.LegacyRecord.public computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,4
<Method>org.apache.kafka.common.record.LegacyRecord.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,5,1
<Method>org.apache.kafka.common.record.LegacyRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,3,2
<Method>org.apache.kafka.common.record.LegacyRecord.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.public hasNullValue( ): boolean,hasNullValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.LegacyRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.LegacyRecord.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.LegacyRecord.public key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,4
<Method>org.apache.kafka.common.record.LegacyRecord.public keySize( ): int,keySize( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,4
<Method>org.apache.kafka.common.record.LegacyRecord.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.record.LegacyRecord.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.record.LegacyRecord.public static computeAttributes( byte, CompressionType, TimestampType ): byte","static computeAttributes( byte, CompressionType, TimestampType ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,3,0,2
"<Method>org.apache.kafka.common.record.LegacyRecord.private static computeChecksum( byte, byte, long, ByteBuffer, ByteBuffer ): long","static computeChecksum( byte, byte, long, ByteBuffer, ByteBuffer ): long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,5,12,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static computeChecksum( byte, byte, long, byte, byte ): long","static computeChecksum( byte, byte, long, byte, byte ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,3,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static create( byte, long, byte, byte ): LegacyRecord","static create( byte, long, byte, byte ): LegacyRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static create( byte, long, byte, byte, CompressionType, TimestampType ): LegacyRecord","static create( byte, long, byte, byte, CompressionType, TimestampType ): LegacyRecord",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,6,6,0
<Method>org.apache.kafka.common.record.LegacyRecord.static headerSize( byte ): int,static headerSize( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
<Method>org.apache.kafka.common.record.LegacyRecord.private static keyOffset( byte ): int,static keyOffset( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
<Method>org.apache.kafka.common.record.LegacyRecord.static recordOverhead( byte ): int,static recordOverhead( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,2
"<Method>org.apache.kafka.common.record.LegacyRecord.static recordSize( byte, ByteBuffer, ByteBuffer ): int","static recordSize( byte, ByteBuffer, ByteBuffer ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,2,3,3,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static recordSize( byte, int, int ): int","static recordSize( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static timestampType( byte, TimestampType, byte ): TimestampType","static timestampType( byte, TimestampType, byte ): TimestampType",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,3,0,1
"<Method>org.apache.kafka.common.record.LegacyRecord.private static write( ByteBuffer, byte, long, ByteBuffer, ByteBuffer, CompressionType, TimestampType ): void","static write( ByteBuffer, byte, long, ByteBuffer, ByteBuffer, CompressionType, TimestampType ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,7,1,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static write( DataOutputStream, byte, long, ByteBuffer, ByteBuffer, CompressionType, TimestampType ): long","static write( DataOutputStream, byte, long, ByteBuffer, ByteBuffer, CompressionType, TimestampType ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,7,3,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static write( DataOutputStream, byte, long, byte, byte, CompressionType, TimestampType ): long","static write( DataOutputStream, byte, long, byte, byte, CompressionType, TimestampType ): long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,7,3,0
"<Method>org.apache.kafka.common.record.LegacyRecord.private static write( DataOutputStream, byte, long, byte, long, ByteBuffer, ByteBuffer ): void","static write( DataOutputStream, byte, long, byte, long, ByteBuffer, ByteBuffer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,28,7,12,1
"<Method>org.apache.kafka.common.record.LegacyRecord.public static write( DataOutputStream, byte, long, byte, long, byte, byte ): void","static write( DataOutputStream, byte, long, byte, long, byte, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,7,3,0
"<Method>org.apache.kafka.common.record.LegacyRecord.public static writeCompressedRecordHeader( ByteBuffer, byte, int, long, CompressionType, TimestampType ): void","static writeCompressedRecordHeader( ByteBuffer, byte, int, long, CompressionType, TimestampType ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,6,8,3
<Method>org.apache.kafka.common.record.LegacyRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,2,6
<Method>org.apache.kafka.common.record.LegacyRecord.public timestampType( ): TimestampType,timestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.record.LegacyRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,19,0,25,0
<Method>org.apache.kafka.common.record.LegacyRecord.public value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.record.LegacyRecord.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.record.LegacyRecord.private valueSizeOffset( ): int,valueSizeOffset( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,5,2
<Method>org.apache.kafka.common.record.LegacyRecord.public wrapperRecordTimestamp( ): Long,wrapperRecordTimestamp( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LegacyRecord.public wrapperRecordTimestampType( ): TimestampType,wrapperRecordTimestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.LegacyRecord->buffer,final buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->wrapperRecordTimestamp,final wrapperRecordTimestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->wrapperRecordTimestampType,final wrapperRecordTimestampType : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->ATTRIBUTES_LENGTH,static final ATTRIBUTES_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->HEADER_SIZE_V0,static final HEADER_SIZE_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->HEADER_SIZE_V1,static final HEADER_SIZE_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_OFFSET_V0,static final KEY_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_OFFSET_V1,static final KEY_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_LENGTH,static final KEY_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_OFFSET_V0,static final KEY_SIZE_OFFSET_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->KEY_SIZE_OFFSET_V1,static final KEY_SIZE_OFFSET_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->NO_TIMESTAMP,static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->RECORD_OVERHEAD_V0,static final RECORD_OVERHEAD_V0 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->RECORD_OVERHEAD_V1,static final RECORD_OVERHEAD_V1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_LENGTH,static final TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_OFFSET,static final TIMESTAMP_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->TIMESTAMP_TYPE_MASK,static final TIMESTAMP_TYPE_MASK : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.LegacyRecord->VALUE_SIZE_LENGTH,static final VALUE_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LogInputStream<T>,LogInputStream,low,low,low,low,0,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.LogInputStream<T>.public abstract nextBatch( ): T,nextBatch( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.record.MemoryRecords,MemoryRecords,very-high,high,medium-high,medium-high,23,238,74,2,0,74,386,328,3,2,14,30,0,0.862,0.792,0.956,0,0,,,,,386,,,,,,74,,,,,,,
org.apache.kafka.common.record.MemoryRecords.FilterResult,FilterResult,low,low,low,low,3,16,6,1,0,17,45,36,8,0,12,0,0,0.917,0.736,1,0,0,,,,,45,,,,,,17,,,,,,,
org.apache.kafka.common.record.MemoryRecords.RecordFilter,RecordFilter,low,low,low,low,2,2,0,1,0,2,7,2,0,0,2,0,0,0,0.167,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.MemoryRecords.private MemoryRecords( ByteBuffer ): void,MemoryRecords( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.record.MemoryRecords.public batchIterator( ): AbstractIterator,batchIterator( ): AbstractIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecords.public batches( ): Iterable,batches( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecords.public buffer( ): ByteBuffer,buffer( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.record.MemoryRecords.public downConvert( byte, long, Time ): ConvertedRecords","downConvert( byte, long, Time ): ConvertedRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
<Method>org.apache.kafka.common.record.MemoryRecords.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,3,2
"<Method>org.apache.kafka.common.record.MemoryRecords.public filterTo( TopicPartition, RecordFilter, ByteBuffer, int, BufferSupplier ): FilterResult","filterTo( TopicPartition, RecordFilter, ByteBuffer, int, BufferSupplier ): FilterResult",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,5,2,0
<Method>org.apache.kafka.common.record.MemoryRecords.public firstBatchSize( ): Integer,firstBatchSize( ): Integer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,2
<Method>org.apache.kafka.common.record.MemoryRecords.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.record.MemoryRecords.private static buildRetainedRecordsInto( RecordBatch, List, ByteBufferOutputStream ): MemoryRecordsBuilder","static buildRetainedRecordsInto( RecordBatch, List, ByteBufferOutputStream ): MemoryRecordsBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,18,3,17,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, CompressionType, TimestampType, long ): MemoryRecordsBuilder","static builder( ByteBuffer, CompressionType, TimestampType, long ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, CompressionType, long, long, short, int, boolean ): MemoryRecordsBuilder","static builder( ByteBuffer, CompressionType, long, long, short, int, boolean ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,7,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,5,2,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,6,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, int ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, int ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,7,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,9,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int ): MemoryRecordsBuilder",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,12,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, int ): MemoryRecordsBuilder","static builder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, int ): MemoryRecordsBuilder",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,11,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.private static filterTo( TopicPartition, Iterable, RecordFilter, ByteBuffer, int, BufferSupplier ): FilterResult","static filterTo( TopicPartition, Iterable, RecordFilter, ByteBuffer, int, BufferSupplier ): FilterResult",low-medium,very-high,medium-high,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,56,6,39,1
"<Method>org.apache.kafka.common.record.MemoryRecords.public static idempotentBuilder( ByteBuffer, CompressionType, long, long, short, int ): MemoryRecordsBuilder","static idempotentBuilder( ByteBuffer, CompressionType, long, long, short, int ): MemoryRecordsBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,2,0
<Method>org.apache.kafka.common.record.MemoryRecords.public static readableRecords( ByteBuffer ): MemoryRecords,static readableRecords( ByteBuffer ): MemoryRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withEndTransactionMarker( long, long, int, long, short, EndTransactionMarker ): MemoryRecords","static withEndTransactionMarker( long, long, int, long, short, EndTransactionMarker ): MemoryRecords",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,6,4,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withEndTransactionMarker( long, long, short, EndTransactionMarker ): MemoryRecords","static withEndTransactionMarker( long, long, short, EndTransactionMarker ): MemoryRecords",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withEndTransactionMarker( long, short, EndTransactionMarker ): MemoryRecords","static withEndTransactionMarker( long, short, EndTransactionMarker ): MemoryRecords",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withIdempotentRecords( CompressionType, long, short, int, SimpleRecord ): MemoryRecords","static withIdempotentRecords( CompressionType, long, short, int, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,5,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withIdempotentRecords( byte, long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords","static withIdempotentRecords( byte, long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,8,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withIdempotentRecords( long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords","static withIdempotentRecords( long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,7,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( CompressionType, SimpleRecord ): MemoryRecords","static withRecords( CompressionType, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( CompressionType, int, SimpleRecord ): MemoryRecords","static withRecords( CompressionType, int, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( byte, CompressionType, SimpleRecord ): MemoryRecords","static withRecords( byte, CompressionType, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( byte, long, CompressionType, SimpleRecord ): MemoryRecords","static withRecords( byte, long, CompressionType, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( byte, long, CompressionType, TimestampType, SimpleRecord ): MemoryRecords","static withRecords( byte, long, CompressionType, TimestampType, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,5,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( byte, long, CompressionType, TimestampType, long, short, int, int, boolean, SimpleRecord ): MemoryRecords","static withRecords( byte, long, CompressionType, TimestampType, long, short, int, int, boolean, SimpleRecord ): MemoryRecords",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,17,10,5,1
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( long, CompressionType, Integer, SimpleRecord ): MemoryRecords","static withRecords( long, CompressionType, Integer, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withRecords( long, CompressionType, SimpleRecord ): MemoryRecords","static withRecords( long, CompressionType, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withTransactionalRecords( CompressionType, long, short, int, SimpleRecord ): MemoryRecords","static withTransactionalRecords( CompressionType, long, short, int, SimpleRecord ): MemoryRecords",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,5,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withTransactionalRecords( byte, long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords","static withTransactionalRecords( byte, long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,8,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static withTransactionalRecords( long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords","static withTransactionalRecords( long, CompressionType, long, short, int, int, SimpleRecord ): MemoryRecords",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,7,1,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public static writeEndTransactionalMarker( ByteBuffer, long, long, int, long, short, EndTransactionMarker ): void","static writeEndTransactionalMarker( ByteBuffer, long, long, int, long, short, EndTransactionMarker ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,7,3,0
<Method>org.apache.kafka.common.record.MemoryRecords.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecords.public validBytes( ): int,validBytes( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,2,3
<Method>org.apache.kafka.common.record.MemoryRecords.public writeFullyTo( GatheringByteChannel ): int,writeFullyTo( GatheringByteChannel ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,4,3
"<Method>org.apache.kafka.common.record.MemoryRecords.public writeTo( GatheringByteChannel, long, int ): long","writeTo( GatheringByteChannel, long, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,3,6,3
<Field>org.apache.kafka.common.record.MemoryRecords->batches,final batches : Iterable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->buffer,final buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->EMPTY,static final EMPTY : MemoryRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->validBytes,validBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder,MemoryRecordsBuilder,very-high,medium-high,very-high,high,19,192,73,1,0,123,379,339,26,2,57,0,0,0.895,0.858,0.92,0,0,,,,,379,,,,,,123,,,,,,,
org.apache.kafka.common.record.MemoryRecordsBuilder.RecordsInfo,RecordsInfo,low,low,low,low,0,1,0,1,0,1,7,4,2,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public MemoryRecordsBuilder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void","MemoryRecordsBuilder( ByteBuffer, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,13,0,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public MemoryRecordsBuilder( ByteBufferOutputStream, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void","MemoryRecordsBuilder( ByteBufferOutputStream, byte, CompressionType, TimestampType, long, long, long, short, int, boolean, boolean, int, int ): void",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,43,13,4,23
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public abort( ): void,abort( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( LegacyRecord ): void,append( LegacyRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( Record ): void,append( Record ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,6,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( SimpleRecord ): Long,append( SimpleRecord ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( long, ByteBuffer, ByteBuffer ): Long","append( long, ByteBuffer, ByteBuffer ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( long, ByteBuffer, ByteBuffer, Header ): Long","append( long, ByteBuffer, ByteBuffer, Header ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,2,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( long, byte, byte ): Long","append( long, byte, byte ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,3,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public append( long, byte, byte, Header ): Long","append( long, byte, byte, Header ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,3,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private appendControlRecord( long, ControlRecordType, ByteBuffer ): Long","appendControlRecord( long, ControlRecordType, ByteBuffer ): Long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,7,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private appendDefaultRecord( long, long, ByteBuffer, ByteBuffer, Header ): void","appendDefaultRecord( long, long, ByteBuffer, ByteBuffer, Header ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,3,3
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendEndTxnMarker( long, EndTransactionMarker ): Long","appendEndTxnMarker( long, EndTransactionMarker ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,2,3,2
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private appendLegacyRecord( long, long, ByteBuffer, ByteBuffer, byte ): long","appendLegacyRecord( long, long, ByteBuffer, ByteBuffer, byte ): long",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,5,6,8
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendUncheckedWithOffset( long, LegacyRecord ): void","appendUncheckedWithOffset( long, LegacyRecord ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,12,2
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, LegacyRecord ): void","appendWithOffset( long, LegacyRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,4,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, Record ): void","appendWithOffset( long, Record ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,5,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, SimpleRecord ): Long","appendWithOffset( long, SimpleRecord ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,5,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private appendWithOffset( long, boolean, long, ByteBuffer, ByteBuffer, Header ): Long","appendWithOffset( long, boolean, long, ByteBuffer, ByteBuffer, Header ): Long",low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,21,6,3,10
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, long, ByteBuffer, ByteBuffer ): Long","appendWithOffset( long, long, ByteBuffer, ByteBuffer ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, long, ByteBuffer, ByteBuffer, Header ): Long","appendWithOffset( long, long, ByteBuffer, ByteBuffer, Header ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,1,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, long, byte, byte ): Long","appendWithOffset( long, long, byte, byte ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,3,0
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public appendWithOffset( long, long, byte, byte, Header ): Long","appendWithOffset( long, long, byte, byte, Header ): Long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,3,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public buffer( ): ByteBuffer,buffer( ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public build( ): MemoryRecords,build( ): MemoryRecords,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public close( ): void,close( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,19,0,12,13
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public closeForRecordAppends( ): void,closeForRecordAppends( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,1,5
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public compressionRatio( ): double,compressionRatio( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private ensureOpenForRecordAppend( ): void,ensureOpenForRecordAppend( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private ensureOpenForRecordBatchWrite( ): void,ensureOpenForRecordBatchWrite( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private estimatedBytesWritten( ): int,estimatedBytesWritten( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,7
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public estimatedSizeInBytes( ): int,estimatedSizeInBytes( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,2
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public hasRoomFor( long, ByteBuffer, ByteBuffer, Header ): boolean","hasRoomFor( long, ByteBuffer, ByteBuffer, Header ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,13,4,4,9
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public hasRoomFor( long, byte, byte, Header ): boolean","hasRoomFor( long, byte, byte, Header ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,3,0
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public info( ): RecordsInfo,info( ): RecordsInfo,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,17,0,0,13
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,4
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private nextSequentialOffset( ): long,nextSequentialOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,3
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public numRecords( ): int,numRecords( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public overrideLastOffset( long ): void,overrideLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private recordWritten( long, long, int ): void","recordWritten( long, long, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,3,0,10
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public reopenAndRewriteProducerState( long, short, int, boolean ): void","reopenAndRewriteProducerState( long, short, int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,0,6
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public setEstimatedCompressionRatio( float ): void,setEstimatedCompressionRatio( float ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public setProducerState( long, short, int, boolean ): void","setProducerState( long, short, int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,1,4
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private toInnerOffset( long ): long,toInnerOffset( long ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,3
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.public uncompressedBytesWritten( ): int,uncompressedBytesWritten( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private validateProducerState( ): void,validateProducerState( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,10,0,0,8
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private writeDefaultBatchHeader( ): int,writeDefaultBatchHeader( ): int,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,18,0,6,20
<Method>org.apache.kafka.common.record.MemoryRecordsBuilder.private writeLegacyCompressedWrapperHeader( ): int,writeLegacyCompressedWrapperHeader( ): int,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,12,0,8,11
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->aborted,aborted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->actualCompressionRatio,actualCompressionRatio : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->appendStream,appendStream : DataOutputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->baseSequence,baseSequence : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->builtRecords,builtRecords : MemoryRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->estimatedCompressionRatio,estimatedCompressionRatio : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->baseOffset,final baseOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->batchHeaderSizeInBytes,final batchHeaderSizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->bufferStream,final bufferStream : ByteBufferOutputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->compressionType,final compressionType : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->initialPosition,final initialPosition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->isControlBatch,final isControlBatch : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->logAppendTime,final logAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->magic,final magic : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->partitionLeaderEpoch,final partitionLeaderEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->timestampType,final timestampType : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->writeLimit,final writeLimit : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->firstTimestamp,firstTimestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->isTransactional,isTransactional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->lastOffset,lastOffset : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->maxTimestamp,maxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->numRecords,numRecords : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->offsetOfMaxTimestamp,offsetOfMaxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->producerEpoch,producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->producerId,producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->CLOSED_STREAM,static final CLOSED_STREAM : DataOutputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->COMPRESSION_RATE_ESTIMATION_FACTOR,static final COMPRESSION_RATE_ESTIMATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecordsBuilder->uncompressedRecordsSizeInBytes,uncompressedRecordsSizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MultiRecordsSend,MultiRecordsSend,low,low,low-medium,low-medium,3,20,12,1,0,18,59,51,6,1,8,0,0,0.816,0.7,0.6,0,0,,,,,59,,,,,,18,,,,,,,
<Method>org.apache.kafka.common.record.MultiRecordsSend. numResidentSends( ): int, numResidentSends( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,1,2
"<Method>org.apache.kafka.common.record.MultiRecordsSend.public MultiRecordsSend( String, Queue ): void","MultiRecordsSend( String, Queue ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,2,2,5
<Method>org.apache.kafka.common.record.MultiRecordsSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.MultiRecordsSend.public destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.MultiRecordsSend.public recordConversionStats( ): Map,recordConversionStats( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MultiRecordsSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.MultiRecordsSend.private updateRecordConversionStats( Send ): void,updateRecordConversionStats( Send ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,3,3
<Method>org.apache.kafka.common.record.MultiRecordsSend.public writeTo( GatheringByteChannel ): long,writeTo( GatheringByteChannel ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,20,1,9,14
<Field>org.apache.kafka.common.record.MultiRecordsSend->current,current : Send,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->dest,final dest : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->sendQueue,final sendQueue : Queue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->size,final size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->recordConversionStats,recordConversionStats : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MultiRecordsSend->totalWritten,totalWritten : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MutableRecordBatch,MutableRecordBatch,low,low,low,low-medium,4,5,0,1,2,5,6,5,0,0,5,0,0,0,0.633,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract setLastOffset( long ): void,setLastOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract setMaxTimestamp( TimestampType, long ): void","setMaxTimestamp( TimestampType, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract setPartitionLeaderEpoch( int ): void,setPartitionLeaderEpoch( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract skipKeyValueIterator( BufferSupplier ): CloseableIterator,skipKeyValueIterator( BufferSupplier ): CloseableIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.MutableRecordBatch.public abstract writeTo( ByteBufferOutputStream ): void,writeTo( ByteBufferOutputStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.record.PartialDefaultRecord,PartialDefaultRecord,low-medium,low,low-medium,medium-high,1,22,5,2,0,11,52,49,2,0,11,0,7,0.286,0.727,0.622,0,1.273,,,,,52,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.record.PartialDefaultRecord. PartialDefaultRecord( int, byte, long, long, int, int, int ): void"," PartialDefaultRecord( int, byte, long, long, int, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,7,0,2
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,4
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public headers( ): Header,headers( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,3,2
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.PartialDefaultRecord.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.record.PartialDefaultRecord->keySize,final keySize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.PartialDefaultRecord->valueSize,final valueSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Record,Record,low,low,low,low-medium,2,17,0,1,2,17,19,17,0,1,17,0,0,0,0.627,1,0,0,,,,,19,,,,,,17,,,,,,,
<Method>org.apache.kafka.common.record.Record.public abstract checksumOrNull( ): Long,checksumOrNull( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasMagic( byte ): boolean,hasMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasTimestampType( TimestampType ): boolean,hasTimestampType( TimestampType ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Record.public abstract hasValue( ): boolean,hasValue( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract headers( ): Header,headers( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract sequence( ): int,sequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Record.public abstract valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.record.Record->EMPTY_HEADERS,static final EMPTY_HEADERS : Header,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordBatch,RecordBatch,low-medium,low,low-medium,low-medium,4,23,0,1,2,23,33,23,0,9,23,0,0,0,0.638,1,0,0,,,,,33,,,,,,23,,,,,,,
<Method>org.apache.kafka.common.record.RecordBatch.public abstract baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract baseSequence( ): int,baseSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract countOrNull( ): Integer,countOrNull( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract hasProducerId( ): boolean,hasProducerId( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isCompressed( ): boolean,isCompressed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isControlBatch( ): boolean,isControlBatch( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isTransactional( ): boolean,isTransactional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract lastOffset( ): long,lastOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract lastSequence( ): int,lastSequence( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract nextOffset( ): long,nextOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract partitionLeaderEpoch( ): int,partitionLeaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract streamingIterator( BufferSupplier ): CloseableIterator,streamingIterator( BufferSupplier ): CloseableIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract timestampType( ): TimestampType,timestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.RecordBatch.public abstract writeTo( ByteBuffer ): void,writeTo( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.common.record.RecordBatch->CURRENT_MAGIC_VALUE,static final CURRENT_MAGIC_VALUE : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V0,static final MAGIC_VALUE_V0 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V1,static final MAGIC_VALUE_V1 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->MAGIC_VALUE_V2,static final MAGIC_VALUE_V2 : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PARTITION_LEADER_EPOCH,static final NO_PARTITION_LEADER_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PRODUCER_EPOCH,static final NO_PRODUCER_EPOCH : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_PRODUCER_ID,static final NO_PRODUCER_ID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_SEQUENCE,static final NO_SEQUENCE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordBatch->NO_TIMESTAMP,static final NO_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordBatchIterator<T>,RecordBatchIterator,low-medium,low,low,low,2,4,2,2,0,4,13,11,1,0,2,0,0,0,0.25,0,0,0,,,,,13,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.record.RecordBatchIterator<T>. RecordBatchIterator( LogInputStream ): void, RecordBatchIterator( LogInputStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.RecordBatchIterator<T>.protected makeNext( ): T,makeNext( ): T,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,1
<Field>org.apache.kafka.common.record.RecordBatchIterator<T>->logInputStream,final logInputStream : LogInputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordConversionStats,RecordConversionStats,low,low,low,low-medium,0,8,1,1,0,7,25,20,3,1,7,0,0,0.6,0.643,0.429,0,0,,,,,25,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.record.RecordConversionStats.public RecordConversionStats( ): void,RecordConversionStats( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.record.RecordConversionStats.public RecordConversionStats( long, int, long ): void","RecordConversionStats( long, int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.record.RecordConversionStats.public add( RecordConversionStats ): void,add( RecordConversionStats ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,6
<Method>org.apache.kafka.common.record.RecordConversionStats.public conversionTimeNanos( ): long,conversionTimeNanos( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordConversionStats.public numRecordsConverted( ): int,numRecordsConverted( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordConversionStats.public temporaryMemoryBytes( ): long,temporaryMemoryBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordConversionStats.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,3
<Field>org.apache.kafka.common.record.RecordConversionStats->conversionTimeNanos,conversionTimeNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordConversionStats->numRecordsConverted,numRecordsConverted : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordConversionStats->EMPTY,static final EMPTY : RecordConversionStats,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordConversionStats->temporaryMemoryBytes,temporaryMemoryBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordVersion,RecordVersion,low-medium,low,low,low,0,4,0,2,0,6,14,10,1,4,2,2,0,1.067,0.562,1,0,0,,,,,14,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.record.RecordVersion.private RecordVersion( int ): void,RecordVersion( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.record.RecordVersion.public precedes( RecordVersion ): boolean,precedes( RecordVersion ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.common.record.RecordVersion.public static current( ): RecordVersion,static current( ): RecordVersion,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordVersion.public static lookup( byte ): RecordVersion,static lookup( byte ): RecordVersion,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,2
<Field>org.apache.kafka.common.record.RecordVersion->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordVersion->V0,static final V0 : RecordVersion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordVersion->V1,static final V1 : RecordVersion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordVersion->V2,static final V2 : RecordVersion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordVersion->VALUES,static final VALUES : RecordVersion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Records,Records,low,low,low,low-medium,3,7,0,1,1,7,16,7,0,8,7,0,0,0,0.643,1,0,0,,,,,16,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.record.Records.public abstract batchIterator( ): AbstractIterator,batchIterator( ): AbstractIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.record.Records.public abstract batches( ): Iterable,batches( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.record.Records.public abstract downConvert( byte, long, Time ): ConvertedRecords","downConvert( byte, long, Time ): ConvertedRecords",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.common.record.Records.public abstract hasCompatibleMagic( byte ): boolean,hasCompatibleMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Records.public abstract hasMatchingMagic( byte ): boolean,hasMatchingMagic( byte ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.record.Records.public abstract records( ): Iterable,records( ): Iterable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.record.Records.public abstract writeTo( GatheringByteChannel, long, int ): long","writeTo( GatheringByteChannel, long, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Field>org.apache.kafka.common.record.Records->HEADER_SIZE_UP_TO_MAGIC,static final HEADER_SIZE_UP_TO_MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->LOG_OVERHEAD,static final LOG_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_LENGTH,static final OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_OFFSET,static final OFFSET_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_LENGTH,static final SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_OFFSET,static final SIZE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordsSend<T>,RecordsSend,low,low,low,low-medium,2,10,4,1,2,11,36,29,5,1,7,0,0,0.8,0.667,0.833,0,0,,,,,36,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.record.RecordsSend<T>.protected RecordsSend( String, T, int ): void","RecordsSend( String, T, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,4
"<Method>org.apache.kafka.common.record.RecordsSend<T>.protected abstract writeTo( GatheringByteChannel, long, int ): long","abstract writeTo( GatheringByteChannel, long, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.common.record.RecordsSend<T>.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.record.RecordsSend<T>.public destination( ): String,destination( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.RecordsSend<T>.public final writeTo( GatheringByteChannel ): long,final writeTo( GatheringByteChannel ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,4,8
<Method>org.apache.kafka.common.record.RecordsSend<T>.protected records( ): T,records( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.RecordsSend<T>.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.record.RecordsSend<T>->destination,final destination : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsSend<T>->maxBytesToWrite,final maxBytesToWrite : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsSend<T>->records,final records : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsSend<T>->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsSend<T>->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.RecordsSend<T>->EMPTY_BYTE_BUFFER,static final EMPTY_BYTE_BUFFER : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.RecordsUtil,RecordsUtil,medium-high,medium-high,low-medium,low,12,130,31,1,0,19,68,59,0,0,0,2,0,0,0.357,0,0,0,,,,,68,,,,,,19,,,,,,,
org.apache.kafka.common.record.RecordsUtil.RecordBatchAndRecords,RecordBatchAndRecords,low,low,low,low,1,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.record.RecordsUtil.private static convertRecordBatch( byte, ByteBuffer, RecordBatchAndRecords ): MemoryRecordsBuilder","static convertRecordBatch( byte, ByteBuffer, RecordBatchAndRecords ): MemoryRecordsBuilder",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,3,11,0
"<Method>org.apache.kafka.common.record.RecordsUtil.protected static downConvert( Iterable, byte, long, Time ): ConvertedRecords","static downConvert( Iterable, byte, long, Time ): ConvertedRecords",low-medium,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,4,46,4,31,0
org.apache.kafka.common.record.SimpleRecord,SimpleRecord,low-medium,low,low-medium,medium-high,4,30,15,1,0,22,57,52,4,0,15,0,0,0.5,0.705,0.81,0,0,,,,,57,,,,,,22,,,,,,,
<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( Record ): void,SimpleRecord( Record ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,0
<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( byte ): void,SimpleRecord( byte ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( byte, byte ): void","SimpleRecord( byte, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, ByteBuffer, ByteBuffer ): void","SimpleRecord( long, ByteBuffer, ByteBuffer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, ByteBuffer, ByteBuffer, Header ): void","SimpleRecord( long, ByteBuffer, ByteBuffer, Header ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,4
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, byte ): void","SimpleRecord( long, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, byte, byte ): void","SimpleRecord( long, byte, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
"<Method>org.apache.kafka.common.record.SimpleRecord.public SimpleRecord( long, byte, byte, Header ): void","SimpleRecord( long, byte, byte, Header ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,2,0
<Method>org.apache.kafka.common.record.SimpleRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,1,5,8
<Method>org.apache.kafka.common.record.SimpleRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,0,4,6
<Method>org.apache.kafka.common.record.SimpleRecord.public headers( ): Header,headers( ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.SimpleRecord.public key( ): ByteBuffer,key( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.SimpleRecord.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.SimpleRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,4,4
<Method>org.apache.kafka.common.record.SimpleRecord.public value( ): ByteBuffer,value( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.record.SimpleRecord->headers,final headers : Header,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.SimpleRecord->key,final key : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.SimpleRecord->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.SimpleRecord->value,final value : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.TimestampType,TimestampType,low-medium,low,low,low,0,4,1,2,0,5,15,11,2,3,2,1,0,1.1,0.333,0,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.record.TimestampType.private TimestampType( int, String ): void","TimestampType( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.record.TimestampType.public static forName( String ): TimestampType,static forName( String ): TimestampType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,1,1
<Method>org.apache.kafka.common.record.TimestampType.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.record.TimestampType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->CREATE_TIME,static final CREATE_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->LOG_APPEND_TIME,static final LOG_APPEND_TIME : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.TimestampType->NO_TIMESTAMP_TYPE,static final NO_TIMESTAMP_TYPE : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.replica,org.apache.kafka.common.replica,low,low,low-medium,low,,,,,,50,156,,,,,,,,,,,,,8,4,4,156,0,4,0.5,1,0.5,50,,,,,,,
org.apache.kafka.common.replica.ClientMetadata,ClientMetadata,low,low,low-medium,low,1,5,0,1,1,5,56,5,0,0,5,0,0,0,0,0,0,0,,,,,56,,,,,,5,,,,,,,
org.apache.kafka.common.replica.ClientMetadata.DefaultClientMetadata,DefaultClientMetadata,low,low,low,low,1,12,3,1,0,12,50,44,5,0,9,0,0,0.5,0.711,0.278,0,0,,,,,50,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.replica.ClientMetadata.public abstract clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ClientMetadata.public abstract clientId( ): String,clientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ClientMetadata.public abstract listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ClientMetadata.public abstract principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ClientMetadata.public abstract rackId( ): String,rackId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.replica.PartitionView,PartitionView,low,low,low,low,1,2,0,1,1,2,31,2,0,0,2,0,0,0,0,0,0,0,,,,,31,,,,,,2,,,,,,,
org.apache.kafka.common.replica.PartitionView.DefaultPartitionView,DefaultPartitionView,low,low,low,low,1,10,4,1,0,9,28,25,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,28,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.replica.PartitionView.public abstract leader( ): ReplicaView,leader( ): ReplicaView,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.PartitionView.public abstract replicas( ): Set,replicas( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.replica.RackAwareReplicaSelector,RackAwareReplicaSelector,low,low,low,low,4,18,13,1,0,5,18,17,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.replica.RackAwareReplicaSelector.public select( TopicPartition, ClientMetadata, PartitionView ): Optional","select( TopicPartition, ClientMetadata, PartitionView ): Optional",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,17,3,20,0
org.apache.kafka.common.replica.ReplicaSelector,ReplicaSelector,low,low,low,low,3,3,0,1,1,3,8,3,0,0,3,0,0,0,0.533,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.replica.ReplicaSelector.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ReplicaSelector.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.replica.ReplicaSelector.public abstract select( TopicPartition, ClientMetadata, PartitionView ): Optional","select( TopicPartition, ClientMetadata, PartitionView ): Optional",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.replica.ReplicaView,ReplicaView,low,low,low,low,1,8,4,1,1,4,43,4,0,0,3,1,0,0,0,0,0,0,,,,,43,,,,,,4,,,,,,,
org.apache.kafka.common.replica.ReplicaView.DefaultReplicaView,DefaultReplicaView,low,low,low,low,1,10,3,1,0,10,35,31,3,0,7,0,0,0.333,0.643,0.143,0,0,,,,,35,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.replica.ReplicaView.public abstract endpoint( ): Node,endpoint( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ReplicaView.public abstract logEndOffset( ): long,logEndOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.replica.ReplicaView.public static comparator( ): Comparator,static comparator( ): Comparator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,5,0
<Method>org.apache.kafka.common.replica.ReplicaView.public abstract timeSinceLastCaughtUpMs( ): long,timeSinceLastCaughtUpMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.common.requests,org.apache.kafka.common.requests,high,very-high,very-high,low,,,,,,1737,7872,,,,,,,,,,,,,189,188,1,7872,36,106,0.032,0.746,0.222,1737,,,,,,,
org.apache.kafka.common.requests.AbstractControlRequest,AbstractControlRequest,low-medium,low,low,low,1,4,0,2,3,4,16,5,0,1,4,0,0,0,0.5,1,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.common.requests.AbstractControlRequest.Builder<T>,Builder,low,low,low,low,1,1,0,2,3,1,9,5,3,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.requests.AbstractControlRequest.protected AbstractControlRequest( ApiKeys, short ): void","AbstractControlRequest( ApiKeys, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.AbstractControlRequest.public abstract brokerEpoch( ): long,abstract brokerEpoch( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.requests.AbstractControlRequest.public abstract controllerEpoch( ): int,abstract controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.requests.AbstractControlRequest.public abstract controllerId( ): int,abstract controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Field>org.apache.kafka.common.requests.AbstractControlRequest->UNKNOWN_BROKER_EPOCH,static final UNKNOWN_BROKER_EPOCH : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AbstractRequest,AbstractRequest,medium-high,very-high,low-medium,medium-high,56,45,10,1,46,61,151,127,2,0,10,1,0,0.5,0.758,0.978,0,0,,,,,151,,,,,,61,,,,,,,
org.apache.kafka.common.requests.AbstractRequest.Builder<T>,Builder,low,low,low,low,1,10,4,1,46,8,21,17,3,0,8,0,0,0.667,0.417,0.893,0,0,,,,,21,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.AbstractRequest.public AbstractRequest( ApiKeys, short ): void","AbstractRequest( ApiKeys, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,2
"<Method>org.apache.kafka.common.requests.AbstractRequest.public abstract getErrorResponse( int, Throwable ): AbstractResponse","abstract getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
<Method>org.apache.kafka.common.requests.AbstractRequest.protected abstract toStruct( ): Struct,abstract toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public errorCounts( Throwable ): Map,errorCounts( Throwable ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public final toString( ): String,final toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public getErrorResponse( Throwable ): AbstractResponse,getErrorResponse( Throwable ): AbstractResponse,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public serialize( RequestHeader ): ByteBuffer,serialize( RequestHeader ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
"<Method>org.apache.kafka.common.requests.AbstractRequest.public static parseRequest( ApiKeys, short, Struct ): AbstractRequest","static parseRequest( ApiKeys, short, Struct ): AbstractRequest",very-high,very-high,high,low,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,49,2,101,3,1,0
"<Method>org.apache.kafka.common.requests.AbstractRequest.public toSend( String, RequestHeader ): Send","toSend( String, RequestHeader ): Send",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public toString( boolean ): String,toString( boolean ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.requests.AbstractRequest.public version( ): short,version( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AbstractRequest->api,final api : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AbstractRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AbstractRequestResponse,AbstractRequestResponse,low,low,low,low,0,0,0,1,4,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AbstractResponse,AbstractResponse,medium-high,very-high,low-medium,medium-high,56,76,14,1,48,64,134,132,0,1,12,1,0,0,0.754,1,0,0,,,,,134,,,,,,64,,,,,,,
<Method>org.apache.kafka.common.requests.AbstractResponse.public abstract errorCounts( ): Map,abstract errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.requests.AbstractResponse.protected abstract toStruct( short ): Struct,abstract toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.requests.AbstractResponse.protected apiErrorCounts( Map ): Map,apiErrorCounts( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,0
<Method>org.apache.kafka.common.requests.AbstractResponse.protected errorCounts( Collection ): Map,errorCounts( Collection ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,0
<Method>org.apache.kafka.common.requests.AbstractResponse.protected errorCounts( Errors ): Map,errorCounts( Errors ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.requests.AbstractResponse.public serialize( ApiKeys, short, int ): ByteBuffer","serialize( ApiKeys, short, int ): ByteBuffer",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,4,0
"<Method>org.apache.kafka.common.requests.AbstractResponse.public serialize( short, ResponseHeader ): ByteBuffer","serialize( short, ResponseHeader ): ByteBuffer",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
<Method>org.apache.kafka.common.requests.AbstractResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.requests.AbstractResponse.public static parseResponse( ApiKeys, Struct, short ): AbstractResponse","static parseResponse( ApiKeys, Struct, short ): AbstractResponse",very-high,very-high,high,low,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,49,2,101,3,3,0
<Method>org.apache.kafka.common.requests.AbstractResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AbstractResponse.protected toSend( String, ResponseHeader, short ): Send","toSend( String, ResponseHeader, short ): Send",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,3,0
<Method>org.apache.kafka.common.requests.AbstractResponse.public toString( short ): String,toString( short ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.requests.AbstractResponse.protected updateErrorCounts( Map, Errors ): void","updateErrorCounts( Map, Errors ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,0
<Field>org.apache.kafka.common.requests.AbstractResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnRequest,AddOffsetsToTxnRequest,low-medium,low-medium,low-medium,medium-high,6,41,10,2,0,10,72,35,4,2,8,2,0,0.714,0.762,0.857,0,0,,,,,72,,,,,,10,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnRequest.Builder,Builder,low,low,low,low,1,8,4,2,0,4,26,21,4,0,4,0,0,0.25,0.5,0,0,0,,,,,26,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public AddOffsetsToTxnRequest( Struct, short ): void","AddOffsetsToTxnRequest( Struct, short ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,4
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.private AddOffsetsToTxnRequest( short, String, long, short, String ): void","AddOffsetsToTxnRequest( short, String, long, short, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,4
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public consumerGroupId( ): String,consumerGroupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public getErrorResponse( int, Throwable ): AddOffsetsToTxnResponse","getErrorResponse( int, Throwable ): AddOffsetsToTxnResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public static parse( ByteBuffer, short ): AddOffsetsToTxnRequest","static parse( ByteBuffer, short ): AddOffsetsToTxnRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,6,4
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnRequest.public transactionalId( ): String,transactionalId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->consumerGroupId,final consumerGroupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->transactionalId,final transactionalId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->ADD_OFFSETS_TO_TXN_REQUEST_V0,static final ADD_OFFSETS_TO_TXN_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnRequest->ADD_OFFSETS_TO_TXN_REQUEST_V1,static final ADD_OFFSETS_TO_TXN_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddOffsetsToTxnResponse,AddOffsetsToTxnResponse,low-medium,low,low,medium-high,5,39,9,2,0,10,40,33,2,2,8,2,2,0.679,0.717,0.639,0,0.5,,,,,40,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public AddOffsetsToTxnResponse( Struct ): void,AddOffsetsToTxnResponse( Struct ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public AddOffsetsToTxnResponse( int, Errors ): void","AddOffsetsToTxnResponse( int, Errors ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public static parse( ByteBuffer, short ): AddOffsetsToTxnResponse","static parse( ByteBuffer, short ): AddOffsetsToTxnResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.common.requests.AddOffsetsToTxnResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,2
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnResponse->error,final error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnResponse->ADD_OFFSETS_TO_TXN_RESPONSE_V0,static final ADD_OFFSETS_TO_TXN_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddOffsetsToTxnResponse->ADD_OFFSETS_TO_TXN_RESPONSE_V1,static final ADD_OFFSETS_TO_TXN_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnRequest,AddPartitionsToTxnRequest,low-medium,low-medium,low-medium,medium-high,8,62,21,2,0,14,96,54,4,4,8,2,0,0.766,0.778,0.786,0,0,,,,,96,,,,,,14,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnRequest.Builder,Builder,low,low,low,low,1,9,5,2,0,4,26,21,4,0,4,0,0,0.25,0.55,0,0,0,,,,,26,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public AddPartitionsToTxnRequest( Struct, short ): void","AddPartitionsToTxnRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,7,6
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.private AddPartitionsToTxnRequest( short, String, long, short, List ): void","AddPartitionsToTxnRequest( short, String, long, short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,0,4
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public getErrorResponse( int, Throwable ): AddPartitionsToTxnResponse","getErrorResponse( int, Throwable ): AddPartitionsToTxnResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public partitions( ): List,partitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public static parse( ByteBuffer, short ): AddPartitionsToTxnRequest","static parse( ByteBuffer, short ): AddPartitionsToTxnRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,0,15,7
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnRequest.public transactionalId( ): String,transactionalId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->partitions,final partitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->transactionalId,final transactionalId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->ADD_PARTITIONS_TO_TXN_REQUEST_V0,static final ADD_PARTITIONS_TO_TXN_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->ADD_PARTITIONS_TO_TXN_REQUEST_V1,static final ADD_PARTITIONS_TO_TXN_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnRequest->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AddPartitionsToTxnResponse,AddPartitionsToTxnResponse,low-medium,low-medium,low-medium,medium-high,7,64,23,2,0,14,66,53,2,4,8,2,2,0.738,0.717,0.639,0,0.5,,,,,66,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public AddPartitionsToTxnResponse( Struct ): void,AddPartitionsToTxnResponse( Struct ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,8,5
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public AddPartitionsToTxnResponse( int, Map ): void","AddPartitionsToTxnResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public errors( ): Map,errors( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public static parse( ByteBuffer, short ): AddPartitionsToTxnResponse","static parse( ByteBuffer, short ): AddPartitionsToTxnResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.common.requests.AddPartitionsToTxnResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,19,1,22,6
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->errors,final errors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->ADD_PARTITIONS_TO_TXN_RESPONSE_V0,static final ADD_PARTITIONS_TO_TXN_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->ADD_PARTITIONS_TO_TXN_RESPONSE_V1,static final ADD_PARTITIONS_TO_TXN_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->ERRORS_KEY_NAME,static final ERRORS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AddPartitionsToTxnResponse->PARTITION_ERRORS,static final PARTITION_ERRORS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest,AlterConfigsRequest,low-medium,low-medium,low-medium,medium-high,8,62,24,2,0,13,107,59,2,11,6,2,0,0.846,0.734,0.619,0,0,,,,,107,,,,,,13,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.Builder,Builder,low,low,low,low,1,3,1,2,0,2,10,7,2,0,2,0,0,0,0.375,0,0,0,,,,,10,,,,,,2,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.Config,Config,low,low,low,low,0,3,1,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
org.apache.kafka.common.requests.AlterConfigsRequest.ConfigEntry,ConfigEntry,low,low,low,low,0,4,1,1,0,3,10,7,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public AlterConfigsRequest( Struct, short ): void","AlterConfigsRequest( Struct, short ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,19,2,10,10
"<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public AlterConfigsRequest( short, Map, boolean ): void","AlterConfigsRequest( short, Map, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,2
<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,2,4,2
"<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public static parse( ByteBuffer, short ): AlterConfigsRequest","static parse( ByteBuffer, short ): AlterConfigsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AlterConfigsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,21,0,23,12
<Method>org.apache.kafka.common.requests.AlterConfigsRequest.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->validateOnly,final validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->ALTER_CONFIGS_REQUEST_RESOURCE_V0,static final ALTER_CONFIGS_REQUEST_RESOURCE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->ALTER_CONFIGS_REQUEST_V0,static final ALTER_CONFIGS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->ALTER_CONFIGS_REQUEST_V1,static final ALTER_CONFIGS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->CONFIG_ENTRIES_KEY_NAME,static final CONFIG_ENTRIES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->CONFIG_ENTRY,static final CONFIG_ENTRY : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->CONFIG_NAME,static final CONFIG_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->CONFIG_VALUE,static final CONFIG_VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->RESOURCES_KEY_NAME,static final RESOURCES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->RESOURCE_NAME_KEY_NAME,static final RESOURCE_NAME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->RESOURCE_TYPE_KEY_NAME,static final RESOURCE_TYPE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsRequest->VALIDATE_ONLY_KEY_NAME,static final VALIDATE_ONLY_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterConfigsResponse,AlterConfigsResponse,low-medium,low-medium,low-medium,medium-high,7,63,23,2,0,11,57,42,2,6,7,2,2,0.813,0.704,0.714,0,0.571,,,,,57,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public AlterConfigsResponse( Struct ): void,AlterConfigsResponse( Struct ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,6,6
"<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public AlterConfigsResponse( int, Map ): void","AlterConfigsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,2
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public errors( ): Map,errors( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public static parse( ByteBuffer, short ): AlterConfigsResponse","static parse( ByteBuffer, short ): AlterConfigsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.AlterConfigsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,1,16,7
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->errors,final errors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->ALTER_CONFIGS_RESPONSE_ENTITY_V0,static final ALTER_CONFIGS_RESPONSE_ENTITY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->ALTER_CONFIGS_RESPONSE_V0,static final ALTER_CONFIGS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->ALTER_CONFIGS_RESPONSE_V1,static final ALTER_CONFIGS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->RESOURCES_KEY_NAME,static final RESOURCES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->RESOURCE_NAME_KEY_NAME,static final RESOURCE_NAME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterConfigsResponse->RESOURCE_TYPE_KEY_NAME,static final RESOURCE_TYPE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest,AlterPartitionReassignmentsRequest,low-medium,low-medium,low-medium,low,6,30,7,2,0,5,54,34,1,0,3,1,0,0,0.583,1,0,0,,,,,54,,,,,,5,,,,,,,
org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest. AlterPartitionReassignmentsRequest( Struct, short ): void"," AlterPartitionReassignmentsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,22,2,6,0
"<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest.public static parse( ByteBuffer, short ): AlterPartitionReassignmentsRequest","static parse( ByteBuffer, short ): AlterPartitionReassignmentsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.AlterPartitionReassignmentsRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse,AlterPartitionReassignmentsResponse,low-medium,low,low,low,4,23,6,2,0,9,31,25,0,0,6,1,2,0,0.5,0,0,0.667,,,,,31,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse. AlterPartitionReassignmentsResponse( Struct, short ): void"," AlterPartitionReassignmentsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.public AlterPartitionReassignmentsResponse( Struct ): void,AlterPartitionReassignmentsResponse( Struct ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,6,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.public static parse( ByteBuffer, short ): AlterPartitionReassignmentsResponse","static parse( ByteBuffer, short ): AlterPartitionReassignmentsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.AlterPartitionReassignmentsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.AlterReplicaLogDirsRequest,AlterReplicaLogDirsRequest,low-medium,low-medium,low-medium,low-medium,9,53,19,2,0,15,78,49,1,6,5,2,0,0.771,0.694,0.6,0,0,,,,,78,,,,,,15,,,,,,,
org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.Builder,Builder,low,low,low,low,1,6,3,2,0,3,16,14,1,0,3,0,0,0,0.444,0,0,0,,,,,16,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public AlterReplicaLogDirsRequest( Map, short ): void","AlterReplicaLogDirsRequest( Map, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public AlterReplicaLogDirsRequest( Struct, short ): void","AlterReplicaLogDirsRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,2,6,6
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public partitionDirs( ): Map,partitionDirs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public static parse( ByteBuffer, short ): AlterReplicaLogDirsRequest","static parse( ByteBuffer, short ): AlterReplicaLogDirsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,22,0,30,7
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->partitionDirs,final partitionDirs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->ALTER_REPLICA_LOG_DIRS_REQUEST_V0,static final ALTER_REPLICA_LOG_DIRS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->ALTER_REPLICA_LOG_DIRS_REQUEST_V1,static final ALTER_REPLICA_LOG_DIRS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->LOG_DIRS_KEY_NAME,static final LOG_DIRS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->LOG_DIR_KEY_NAME,static final LOG_DIR_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsRequest->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.AlterReplicaLogDirsResponse,AlterReplicaLogDirsResponse,low-medium,low-medium,low-medium,medium-high,7,61,22,2,0,13,62,49,2,4,7,2,2,0.75,0.704,0.714,0,0.571,,,,,62,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public AlterReplicaLogDirsResponse( Struct ): void,AlterReplicaLogDirsResponse( Struct ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,8,5
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public AlterReplicaLogDirsResponse( int, Map ): void","AlterReplicaLogDirsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public responses( ): Map,responses( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public static parse( ByteBuffer, short ): AlterReplicaLogDirsResponse","static parse( ByteBuffer, short ): AlterReplicaLogDirsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,1,21,6
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->responses,final responses : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->ALTER_REPLICA_LOG_DIRS_RESPONSE_V0,static final ALTER_REPLICA_LOG_DIRS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->ALTER_REPLICA_LOG_DIRS_RESPONSE_V1,static final ALTER_REPLICA_LOG_DIRS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.AlterReplicaLogDirsResponse->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiError,ApiError,low,low,low,low-medium,4,39,13,1,0,16,39,35,2,1,12,1,0,0.481,0.692,0.551,0,0,,,,,39,,,,,,16,,,,,,,
<Method>org.apache.kafka.common.requests.ApiError.public ApiError( Errors ): void,ApiError( Errors ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.requests.ApiError.public ApiError( Errors, String ): void","ApiError( Errors, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.ApiError.public ApiError( Struct ): void,ApiError( Struct ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.common.requests.ApiError.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ApiError.public exception( ): ApiException,exception( ): ApiException,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.requests.ApiError.public is( Errors ): boolean,is( Errors ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.ApiError.public isFailure( ): boolean,isFailure( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.ApiError.public isSuccess( ): boolean,isSuccess( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.requests.ApiError.public message( ): String,message( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ApiError.public messageWithFallback( ): String,messageWithFallback( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,3
<Method>org.apache.kafka.common.requests.ApiError.public static fromThrowable( Throwable ): ApiError,static fromThrowable( Throwable ): ApiError,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,5,0
<Method>org.apache.kafka.common.requests.ApiError.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.requests.ApiError.public write( Struct ): void,write( Struct ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,3,4
<Field>org.apache.kafka.common.requests.ApiError->error,final error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ApiError->message,final message : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ApiError->NONE,static final NONE : ApiError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiVersionsRequest,ApiVersionsRequest,low-medium,low,low-medium,low-medium,4,26,8,2,0,9,54,29,1,1,5,1,0,1,0.667,1,0,0,,,,,54,,,,,,9,,,,,,,
org.apache.kafka.common.requests.ApiVersionsRequest.Builder,Builder,low,low,low,low,1,4,0,2,0,4,15,10,0,1,4,0,0,0,0.25,1,0,0,,,,,15,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public ApiVersionsRequest( Struct, short ): void","ApiVersionsRequest( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public getErrorResponse( int, Throwable ): ApiVersionsResponse","getErrorResponse( int, Throwable ): ApiVersionsResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,2,6,0
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public hasUnsupportedRequestVersion( ): boolean,hasUnsupportedRequestVersion( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,5,2
"<Method>org.apache.kafka.common.requests.ApiVersionsRequest.public static parse( ByteBuffer, short ): ApiVersionsRequest","static parse( ByteBuffer, short ): ApiVersionsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ApiVersionsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.common.requests.ApiVersionsRequest->unsupportedRequestVersion,final unsupportedRequestVersion : Short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ApiVersionsRequest->SOFTWARE_NAME_VERSION_PATTERN,static final SOFTWARE_NAME_VERSION_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ApiVersionsResponse,ApiVersionsResponse,low-medium,low-medium,low-medium,low-medium,6,20,8,2,0,18,61,53,0,1,6,4,2,0,0.617,1,0,0.667,,,,,61,,,,,,18,,,,,,,
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public ApiVersionsResponse( Struct ): void,ApiVersionsResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public ApiVersionsResponse( Struct, short ): void","ApiVersionsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static apiVersionsResponse( int, byte ): ApiVersionsResponse","static apiVersionsResponse( int, byte ): ApiVersionsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,1,2
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static createApiVersionsResponse( int, byte ): ApiVersionsResponse","static createApiVersionsResponse( int, byte ): ApiVersionsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,3,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static fromStruct( Struct, short ): ApiVersionsResponse","static fromStruct( Struct, short ): ApiVersionsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,0,0
"<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public static parse( ByteBuffer, short ): ApiVersionsResponse","static parse( ByteBuffer, short ): ApiVersionsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,2,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.ApiVersionsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.requests.ApiVersionsResponse->DEFAULT_API_VERSIONS_RESPONSE,static final DEFAULT_API_VERSIONS_RESPONSE : ApiVersionsResponse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownRequest,ControlledShutdownRequest,low-medium,low,low,low,4,21,3,2,0,4,35,15,1,0,3,1,0,0,0.583,1,0,0,,,,,35,,,,,,4,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public ControlledShutdownRequest( Struct, short ): void","ControlledShutdownRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public getErrorResponse( int, Throwable ): ControlledShutdownResponse","getErrorResponse( int, Throwable ): ControlledShutdownResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public static parse( ByteBuffer, short ): ControlledShutdownRequest","static parse( ByteBuffer, short ): ControlledShutdownRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownResponse,ControlledShutdownResponse,low-medium,low,low,low-medium,3,24,6,2,0,6,29,23,0,0,4,2,0,0,0.639,0,0,0,,,,,29,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public ControlledShutdownResponse( Struct, short ): void","ControlledShutdownResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public static parse( ByteBuffer, short ): ControlledShutdownResponse","static parse( ByteBuffer, short ): ControlledShutdownResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public static prepareResponse( Errors, Set ): ControlledShutdownResponse","static prepareResponse( Errors, Set ): ControlledShutdownResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,2,2,0
<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.CreateAclsRequest,CreateAclsRequest,low-medium,low-medium,low-medium,low-medium,8,90,16,2,0,14,93,46,1,3,6,2,0,0.75,0.696,0.7,0,0,,,,,93,,,,,,14,,,,,,,
org.apache.kafka.common.requests.CreateAclsRequest.AclCreation,AclCreation,low,low,low,low,5,48,6,1,0,5,16,14,1,0,4,1,0,0,0.467,0,0,0,,,,,16,,,,,,5,,,,,,,
org.apache.kafka.common.requests.CreateAclsRequest.Builder,Builder,low,low,low,low,2,11,1,2,0,3,11,9,1,0,3,0,0,0,0.444,0,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.CreateAclsRequest. CreateAclsRequest( short, List ): void"," CreateAclsRequest( short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.common.requests.CreateAclsRequest.public CreateAclsRequest( Struct, short ): void","CreateAclsRequest( Struct, short ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,3
<Method>org.apache.kafka.common.requests.CreateAclsRequest.public aclCreations( ): List,aclCreations( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.CreateAclsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,3,1
"<Method>org.apache.kafka.common.requests.CreateAclsRequest.public static parse( ByteBuffer, short ): CreateAclsRequest","static parse( ByteBuffer, short ): CreateAclsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.CreateAclsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.CreateAclsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,7,3
<Method>org.apache.kafka.common.requests.CreateAclsRequest.private validate( List ): void,validate( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,9,0
<Field>org.apache.kafka.common.requests.CreateAclsRequest->aclCreations,final aclCreations : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsRequest->CREATE_ACLS_REQUEST_V0,static final CREATE_ACLS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsRequest->CREATE_ACLS_REQUEST_V1,static final CREATE_ACLS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsRequest->CREATIONS_KEY_NAME,static final CREATIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateAclsResponse,CreateAclsResponse,low-medium,low,low-medium,medium-high,5,49,12,2,0,12,58,39,2,3,7,2,2,0.733,0.704,0.714,0,0.571,,,,,58,,,,,,12,,,,,,,
org.apache.kafka.common.requests.CreateAclsResponse.AclCreationResponse,AclCreationResponse,low,low,low,low,1,3,0,1,0,3,9,7,1,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public CreateAclsResponse( Struct ): void,CreateAclsResponse( Struct ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,4
"<Method>org.apache.kafka.common.requests.CreateAclsResponse.public CreateAclsResponse( int, List ): void","CreateAclsResponse( int, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public aclCreationResponses( ): List,aclCreationResponses( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.CreateAclsResponse.public static parse( ByteBuffer, short ): CreateAclsResponse","static parse( ByteBuffer, short ): CreateAclsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.CreateAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.CreateAclsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,7,4
<Field>org.apache.kafka.common.requests.CreateAclsResponse->aclCreationResponses,final aclCreationResponses : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsResponse->CREATE_ACLS_RESPONSE_V0,static final CREATE_ACLS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsResponse->CREATE_ACLS_RESPONSE_V1,static final CREATE_ACLS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateAclsResponse->CREATION_RESPONSES_KEY_NAME,static final CREATION_RESPONSES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateDelegationTokenRequest,CreateDelegationTokenRequest,low-medium,low-medium,low,low,6,28,4,2,0,4,29,11,0,0,3,1,0,0,0.583,0,0,0,,,,,29,,,,,,4,,,,,,,
org.apache.kafka.common.requests.CreateDelegationTokenRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenRequest.public CreateDelegationTokenRequest( Struct, short ): void","CreateDelegationTokenRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenRequest.public static parse( ByteBuffer, short ): CreateDelegationTokenRequest","static parse( ByteBuffer, short ): CreateDelegationTokenRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.CreateDelegationTokenResponse,CreateDelegationTokenResponse,low-medium,low,low,medium-high,5,30,11,2,0,10,47,41,0,0,7,3,2,0,0.722,0,1,0.571,,,,,47,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public CreateDelegationTokenResponse( Struct, short ): void","CreateDelegationTokenResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public static parse( ByteBuffer, short ): CreateDelegationTokenResponse","static parse( ByteBuffer, short ): CreateDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public static prepareResponse( int, Errors, KafkaPrincipal ): CreateDelegationTokenResponse","static prepareResponse( int, Errors, KafkaPrincipal ): CreateDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
"<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public static prepareResponse( int, Errors, KafkaPrincipal, long, long, long, String, ByteBuffer ): CreateDelegationTokenResponse","static prepareResponse( int, Errors, KafkaPrincipal, long, long, long, String, ByteBuffer ): CreateDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,8,4,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.CreateDelegationTokenResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.CreatePartitionsRequest,CreatePartitionsRequest,low-medium,low-medium,low-medium,medium-high,7,65,24,2,0,19,139,78,4,8,8,2,0,0.813,0.75,0.786,0,0,,,,,139,,,,,,19,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsRequest.Builder,Builder,low,low,low,low,1,8,5,2,0,3,21,17,3,0,3,0,0,0,0.533,0,0,0,,,,,21,,,,,,3,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsRequest.PartitionDetails,PartitionDetails,low,low,low,low,0,5,2,1,0,5,15,12,2,0,5,0,0,0.5,0.467,0.8,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.CreatePartitionsRequest. CreatePartitionsRequest( Map, int, boolean, short ): void"," CreatePartitionsRequest( Map, int, boolean, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,4
"<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public CreatePartitionsRequest( Struct, short ): void","CreatePartitionsRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,30,2,11,10
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public duplicates( ): Set,duplicates( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,1
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public newPartitions( ): Map,newPartitions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public static parse( ByteBuffer, short ): CreatePartitionsRequest","static parse( ByteBuffer, short ): CreatePartitionsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,24,0,22,11
<Method>org.apache.kafka.common.requests.CreatePartitionsRequest.public validateOnly( ): boolean,validateOnly( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->duplicates,final duplicates : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->newPartitions,final newPartitions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->validateOnly,final validateOnly : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->ASSIGNMENT_KEY_NAME,static final ASSIGNMENT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->COUNT_KEY_NAME,static final COUNT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->CREATE_PARTITIONS_REQUEST_V0,static final CREATE_PARTITIONS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->CREATE_PARTITIONS_REQUEST_V1,static final CREATE_PARTITIONS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->NEW_PARTITIONS_KEY_NAME,static final NEW_PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->TIMEOUT_KEY_NAME,static final TIMEOUT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->TOPIC_PARTITIONS_KEY_NAME,static final TOPIC_PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsRequest->VALIDATE_ONLY_KEY_NAME,static final VALIDATE_ONLY_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreatePartitionsResponse,CreatePartitionsResponse,low-medium,low,low-medium,medium-high,5,60,19,2,0,11,55,41,2,3,7,2,2,0.733,0.704,0.714,0,0.571,,,,,55,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public CreatePartitionsResponse( Struct ): void,CreatePartitionsResponse( Struct ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,4,3
"<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public CreatePartitionsResponse( int, Map ): void","CreatePartitionsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public errors( ): Map,errors( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public static parse( ByteBuffer, short ): CreatePartitionsResponse","static parse( ByteBuffer, short ): CreatePartitionsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.CreatePartitionsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,13,5
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->errors,final errors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->CREATE_PARTITIONS_RESPONSE_V0,static final CREATE_PARTITIONS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->CREATE_PARTITIONS_RESPONSE_V1,static final CREATE_PARTITIONS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreatePartitionsResponse->TOPIC_ERRORS_KEY_NAME,static final TOPIC_ERRORS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest,CreateTopicsRequest,low-medium,low-medium,low-medium,low,6,29,6,2,0,6,56,20,0,2,3,1,0,0,0.583,1,0,0,,,,,56,,,,,,6,,,,,,,
org.apache.kafka.common.requests.CreateTopicsRequest.Builder,Builder,low,low,low,low,1,4,2,2,0,6,27,22,0,0,2,0,0,0,0.25,0,0,0,,,,,27,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public CreateTopicsRequest( Struct, short ): void","CreateTopicsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,5,0
"<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public static parse( ByteBuffer, short ): CreateTopicsRequest","static parse( ByteBuffer, short ): CreateTopicsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.CreateTopicsRequest.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_NUM_PARTITIONS,static final NO_NUM_PARTITIONS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.CreateTopicsRequest->NO_REPLICATION_FACTOR,static final NO_REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.CreateTopicsResponse,CreateTopicsResponse,low-medium,low,low,low,4,22,5,2,0,7,27,21,0,0,5,1,2,0,0.5,0,0,0.8,,,,,27,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public CreateTopicsResponse( Struct, short ): void","CreateTopicsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,3,0
<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public static parse( ByteBuffer, short ): CreateTopicsResponse","static parse( ByteBuffer, short ): CreateTopicsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.common.requests.CreateTopicsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.CreateTopicsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.DeleteAclsRequest,DeleteAclsRequest,low-medium,medium-high,low-medium,low-medium,12,89,21,2,0,14,78,47,1,3,6,2,0,0.75,0.679,0.7,0,0,,,,,78,,,,,,14,,,,,,,
org.apache.kafka.common.requests.DeleteAclsRequest.Builder,Builder,low,low,low,low,2,11,1,2,0,3,11,9,1,0,3,0,0,0,0.444,0,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.DeleteAclsRequest. DeleteAclsRequest( short, List ): void"," DeleteAclsRequest( short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.common.requests.DeleteAclsRequest.public DeleteAclsRequest( Struct, short ): void","DeleteAclsRequest( Struct, short ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,4,3
<Method>org.apache.kafka.common.requests.DeleteAclsRequest.public filters( ): List,filters( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.DeleteAclsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,1
"<Method>org.apache.kafka.common.requests.DeleteAclsRequest.public static parse( ByteBuffer, short ): DeleteAclsRequest","static parse( ByteBuffer, short ): DeleteAclsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteAclsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DeleteAclsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,0,10,3
"<Method>org.apache.kafka.common.requests.DeleteAclsRequest.private validate( short, List ): void","validate( short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,6,0
<Field>org.apache.kafka.common.requests.DeleteAclsRequest->filters,final filters : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsRequest->DELETE_ACLS_REQUEST_V0,static final DELETE_ACLS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsRequest->DELETE_ACLS_REQUEST_V1,static final DELETE_ACLS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsRequest->FILTERS,static final FILTERS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse,DeleteAclsResponse,medium-high,medium-high,low-medium,medium-high,12,101,27,2,0,19,142,73,2,7,9,2,2,0.889,0.712,0.667,0,0.444,,,,,142,,,,,,19,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse.AclDeletionResult,AclDeletionResult,low,low,low,low,2,5,0,1,0,5,15,12,2,0,5,0,0,0.333,0.467,0.5,0,0,,,,,15,,,,,,5,,,,,,,
org.apache.kafka.common.requests.DeleteAclsResponse.AclFilterResponse,AclFilterResponse,low,low,low,low,2,13,1,1,0,5,15,12,2,0,5,0,0,0.333,0.467,0.5,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public DeleteAclsResponse( Struct ): void,DeleteAclsResponse( Struct ): void,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,1,7,5
"<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public DeleteAclsResponse( int, List ): void","DeleteAclsResponse( int, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public responses( ): List,responses( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public static parse( ByteBuffer, short ): DeleteAclsResponse","static parse( ByteBuffer, short ): DeleteAclsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,1,20,6
<Method>org.apache.kafka.common.requests.DeleteAclsResponse.private validate( short ): void,validate( short ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,1,10,2
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->responses,final responses : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->DELETE_ACLS_RESPONSE_V0,static final DELETE_ACLS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->DELETE_ACLS_RESPONSE_V1,static final DELETE_ACLS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->FILTER_RESPONSES_KEY_NAME,static final FILTER_RESPONSES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->MATCHING_ACLS_KEY_NAME,static final MATCHING_ACLS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->MATCHING_ACL_V0,static final MATCHING_ACL_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->MATCHING_ACL_V1,static final MATCHING_ACL_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteAclsResponse->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteGroupsRequest,DeleteGroupsRequest,low-medium,low,low,low,5,22,4,2,0,5,37,21,0,0,3,1,0,0,0.583,0,0,0,,,,,37,,,,,,5,,,,,,,
org.apache.kafka.common.requests.DeleteGroupsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.DeleteGroupsRequest.public DeleteGroupsRequest( Struct, short ): void","DeleteGroupsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.DeleteGroupsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,2,0
"<Method>org.apache.kafka.common.requests.DeleteGroupsRequest.public static parse( ByteBuffer, short ): DeleteGroupsRequest","static parse( ByteBuffer, short ): DeleteGroupsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteGroupsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.DeleteGroupsResponse,DeleteGroupsResponse,low-medium,low,low,low-medium,3,26,4,2,0,12,37,33,0,0,8,1,2,0,0.622,0,0,0.5,,,,,37,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public DeleteGroupsResponse( Struct ): void,DeleteGroupsResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public DeleteGroupsResponse( Struct, short ): void","DeleteGroupsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,3,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public errors( ): Map,errors( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public get( String ): Errors,get( String ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public static parse( ByteBuffer, short ): DeleteGroupsResponse","static parse( ByteBuffer, short ): DeleteGroupsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.DeleteGroupsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.DeleteRecordsRequest,DeleteRecordsRequest,low-medium,low-medium,low-medium,low-medium,10,57,20,2,0,13,85,49,2,9,6,2,0,0.879,0.696,0.619,0,0,,,,,85,,,,,,13,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsRequest.Builder,Builder,low,low,low,low,1,7,4,2,0,3,18,15,2,0,3,0,0,0,0.5,0,0,0,,,,,18,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public DeleteRecordsRequest( Struct, short ): void","DeleteRecordsRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,2,7,7
"<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public DeleteRecordsRequest( int, Map, short ): void","DeleteRecordsRequest( int, Map, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,2
"<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public partitionOffsets( ): Map,partitionOffsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public static parse( ByteBuffer, short ): DeleteRecordsRequest","static parse( ByteBuffer, short ): DeleteRecordsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DeleteRecordsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,19,0,21,8
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->partitionOffsets,final partitionOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->DELETE_RECORDS_REQUEST_PARTITION_V0,static final DELETE_RECORDS_REQUEST_PARTITION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->DELETE_RECORDS_REQUEST_TOPIC_V0,static final DELETE_RECORDS_REQUEST_TOPIC_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->DELETE_RECORDS_REQUEST_V0,static final DELETE_RECORDS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->DELETE_RECORDS_REQUEST_V1,static final DELETE_RECORDS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->HIGH_WATERMARK,static final HIGH_WATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->OFFSET_KEY_NAME,static final OFFSET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->TIMEOUT_KEY_NAME,static final TIMEOUT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsRequest->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsResponse,DeleteRecordsResponse,low-medium,low-medium,low-medium,medium-high,7,65,25,2,0,14,88,54,2,8,7,2,2,0.883,0.704,0.714,0,0.571,,,,,88,,,,,,14,,,,,,,
org.apache.kafka.common.requests.DeleteRecordsResponse.PartitionResponse,PartitionResponse,low,low,low,low,1,7,5,1,0,2,16,13,2,0,2,0,0,0,0.333,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public DeleteRecordsResponse( Struct ): void,DeleteRecordsResponse( Struct ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,9,7
"<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public DeleteRecordsResponse( int, Map ): void","DeleteRecordsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public responses( ): Map,responses( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public static parse( ByteBuffer, short ): DeleteRecordsResponse","static parse( ByteBuffer, short ): DeleteRecordsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.DeleteRecordsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,21,1,22,7
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->responses,final responses : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->DELETE_RECORDS_RESPONSE_PARTITION_V0,static final DELETE_RECORDS_RESPONSE_PARTITION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->DELETE_RECORDS_RESPONSE_TOPIC_V0,static final DELETE_RECORDS_RESPONSE_TOPIC_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->DELETE_RECORDS_RESPONSE_V0,static final DELETE_RECORDS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->DELETE_RECORDS_RESPONSE_V1,static final DELETE_RECORDS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->INVALID_LOW_WATERMARK,static final INVALID_LOW_WATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->LOW_WATERMARK_KEY_NAME,static final LOW_WATERMARK_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DeleteRecordsResponse->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsRequest,DeleteTopicsRequest,low-medium,low-medium,low,low,6,27,4,2,0,6,40,20,1,0,3,1,0,0,0.583,0.667,0,0,,,,,40,,,,,,6,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.DeleteTopicsRequest.public DeleteTopicsRequest( Struct, short ): void","DeleteTopicsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.DeleteTopicsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,2,3,1
"<Method>org.apache.kafka.common.requests.DeleteTopicsRequest.public static parse( ByteBuffer, short ): DeleteTopicsRequest","static parse( ByteBuffer, short ): DeleteTopicsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteTopicsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.DeleteTopicsRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DeleteTopicsResponse,DeleteTopicsResponse,low-medium,low,low,low,3,23,4,2,0,7,26,20,0,0,5,1,2,0,0.5,0,0,0.8,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public DeleteTopicsResponse( Struct, short ): void","DeleteTopicsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,3,0
<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public static parse( ByteBuffer, short ): DeleteTopicsResponse","static parse( ByteBuffer, short ): DeleteTopicsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.DeleteTopicsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.DescribeAclsRequest,DescribeAclsRequest,low-medium,medium-high,low-medium,low-medium,12,81,14,2,0,12,59,31,1,2,6,2,0,0.75,0.679,0.9,0,0,,,,,59,,,,,,12,,,,,,,
org.apache.kafka.common.requests.DescribeAclsRequest.Builder,Builder,low,low,low,low,2,3,0,2,0,3,11,9,1,0,3,0,0,0,0.444,0,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeAclsRequest. DescribeAclsRequest( AclBindingFilter, short ): void"," DescribeAclsRequest( AclBindingFilter, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.common.requests.DescribeAclsRequest.public DescribeAclsRequest( Struct, short ): void","DescribeAclsRequest( Struct, short ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,1
<Method>org.apache.kafka.common.requests.DescribeAclsRequest.public filter( ): AclBindingFilter,filter( ): AclBindingFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.DescribeAclsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.requests.DescribeAclsRequest.public static parse( ByteBuffer, short ): DescribeAclsRequest","static parse( ByteBuffer, short ): DescribeAclsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DescribeAclsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DescribeAclsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,6,2
"<Method>org.apache.kafka.common.requests.DescribeAclsRequest.private validate( AclBindingFilter, short ): void","validate( AclBindingFilter, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,2,5,0
<Field>org.apache.kafka.common.requests.DescribeAclsRequest->filter,final filter : AclBindingFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsRequest->DESCRIBE_ACLS_REQUEST_V0,static final DESCRIBE_ACLS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsRequest->DESCRIBE_ACLS_REQUEST_V1,static final DESCRIBE_ACLS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeAclsResponse,DescribeAclsResponse,low-medium,low-medium,low-medium,medium-high,10,94,27,2,0,19,101,68,3,6,9,2,2,0.847,0.74,0.722,0,0.444,,,,,101,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public DescribeAclsResponse( Struct ): void,DescribeAclsResponse( Struct ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,6,6
"<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public DescribeAclsResponse( int, ApiError, Collection ): void","DescribeAclsResponse( int, ApiError, Collection ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public acls( ): Collection,acls( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public error( ): ApiError,error( ): ApiError,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public static parse( ByteBuffer, short ): DescribeAclsResponse","static parse( ByteBuffer, short ): DescribeAclsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,25,1,21,7
<Method>org.apache.kafka.common.requests.DescribeAclsResponse.private validate( short ): void,validate( short ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,6,2
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->acls,final acls : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->error,final error : ApiError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->ACLS_KEY_NAME,static final ACLS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->DESCRIBE_ACLS_RESOURCE_V0,static final DESCRIBE_ACLS_RESOURCE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->DESCRIBE_ACLS_RESOURCE_V1,static final DESCRIBE_ACLS_RESOURCE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->DESCRIBE_ACLS_RESPONSE_V0,static final DESCRIBE_ACLS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->DESCRIBE_ACLS_RESPONSE_V1,static final DESCRIBE_ACLS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeAclsResponse->RESOURCES_KEY_NAME,static final RESOURCES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsRequest,DescribeConfigsRequest,low-medium,low-medium,low-medium,medium-high,8,66,29,2,0,16,91,54,2,9,7,2,0,0.833,0.765,0.714,0,0,,,,,91,,,,,,16,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsRequest.Builder,Builder,low,low,low,low,2,8,4,2,0,6,19,16,2,0,4,1,0,0.5,0.6,0.667,0,0,,,,,19,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public DescribeConfigsRequest( Struct, short ): void","DescribeConfigsRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,2,9,9
"<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public DescribeConfigsRequest( short, Map, boolean ): void","DescribeConfigsRequest( short, Map, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,2
<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public configNames( ConfigResource ): Collection,configNames( ConfigResource ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public getErrorResponse( int, Throwable ): DescribeConfigsResponse","getErrorResponse( int, Throwable ): DescribeConfigsResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,2,6,0
<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public includeSynonyms( ): boolean,includeSynonyms( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public resources( ): Collection,resources( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public static parse( ByteBuffer, short ): DescribeConfigsRequest","static parse( ByteBuffer, short ): DescribeConfigsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,3
<Method>org.apache.kafka.common.requests.DescribeConfigsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,0,20,8
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->includeSynonyms,final includeSynonyms : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->resourceToConfigNames,final resourceToConfigNames : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->CONFIG_NAMES_KEY_NAME,static final CONFIG_NAMES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->DESCRIBE_CONFIGS_REQUEST_RESOURCE_V0,static final DESCRIBE_CONFIGS_REQUEST_RESOURCE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->DESCRIBE_CONFIGS_REQUEST_V0,static final DESCRIBE_CONFIGS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->DESCRIBE_CONFIGS_REQUEST_V1,static final DESCRIBE_CONFIGS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->DESCRIBE_CONFIGS_REQUEST_V2,static final DESCRIBE_CONFIGS_REQUEST_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->INCLUDE_SYNONYMS,static final INCLUDE_SYNONYMS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->RESOURCES_KEY_NAME,static final RESOURCES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->RESOURCE_NAME_KEY_NAME,static final RESOURCE_NAME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsRequest->RESOURCE_TYPE_KEY_NAME,static final RESOURCE_TYPE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse,DescribeConfigsResponse,low-medium,low-medium,low-medium,medium-high,7,69,33,2,0,24,229,110,2,19,8,2,2,0.905,0.743,0.667,0,0.5,,,,,229,,,,,,24,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.Config,Config,low,low,low,low,1,4,1,1,0,3,10,7,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.ConfigEntry,ConfigEntry,low,low,low,low,1,8,1,1,0,7,27,20,6,0,7,0,0,0.833,0.686,0.714,0,0,,,,,27,,,,,,7,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.ConfigSource,ConfigSource,low,low,low,low,0,2,0,2,0,4,18,8,1,8,1,1,0,1.667,0,0,0,0,,,,,18,,,,,,4,,,,,,,
org.apache.kafka.common.requests.DescribeConfigsResponse.ConfigSynonym,ConfigSynonym,low,low,low,low,1,5,1,1,0,4,14,10,3,0,4,0,0,0.667,0.5,0.5,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public DescribeConfigsResponse( Struct ): void,DescribeConfigsResponse( Struct ): void,low,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,6,52,1,25,20
"<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public DescribeConfigsResponse( int, Map ): void","DescribeConfigsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,2
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public config( ConfigResource ): Config,config( ConfigResource ): Config,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,1
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public static parse( ByteBuffer, short ): DescribeConfigsResponse","static parse( ByteBuffer, short ): DescribeConfigsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,3
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.DescribeConfigsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,35,1,36,21
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->CONFIG_ENTRIES_KEY_NAME,static final CONFIG_ENTRIES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->CONFIG_NAME_KEY_NAME,static final CONFIG_NAME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->CONFIG_SOURCE_KEY_NAME,static final CONFIG_SOURCE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->CONFIG_SYNONYMS_KEY_NAME,static final CONFIG_SYNONYMS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->CONFIG_VALUE_KEY_NAME,static final CONFIG_VALUE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_ENTITY_V0,static final DESCRIBE_CONFIGS_RESPONSE_ENTITY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_ENTITY_V1,static final DESCRIBE_CONFIGS_RESPONSE_ENTITY_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_ENTRY_V0,static final DESCRIBE_CONFIGS_RESPONSE_ENTRY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_ENTRY_V1,static final DESCRIBE_CONFIGS_RESPONSE_ENTRY_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_SYNONYM_V1,static final DESCRIBE_CONFIGS_RESPONSE_SYNONYM_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_V0,static final DESCRIBE_CONFIGS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_V1,static final DESCRIBE_CONFIGS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->DESCRIBE_CONFIGS_RESPONSE_V2,static final DESCRIBE_CONFIGS_RESPONSE_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->IS_DEFAULT_KEY_NAME,static final IS_DEFAULT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->IS_SENSITIVE_KEY_NAME,static final IS_SENSITIVE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->READ_ONLY_KEY_NAME,static final READ_ONLY_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->RESOURCES_KEY_NAME,static final RESOURCES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->RESOURCE_NAME_KEY_NAME,static final RESOURCE_NAME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeConfigsResponse->RESOURCE_TYPE_KEY_NAME,static final RESOURCE_TYPE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeDelegationTokenRequest,DescribeDelegationTokenRequest,low-medium,low,low,low,5,9,2,2,0,4,35,11,0,0,4,0,0,0,0.6,0,0,0,,,,,35,,,,,,4,,,,,,,
org.apache.kafka.common.requests.DescribeDelegationTokenRequest.Builder,Builder,low,low,low,low,1,7,4,2,0,4,17,15,0,0,3,0,0,0,0.444,0,0,0,,,,,17,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenRequest.public DescribeDelegationTokenRequest( Struct, short ): void","DescribeDelegationTokenRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenRequest.public ownersListEmpty( ): boolean,ownersListEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.DescribeDelegationTokenResponse,DescribeDelegationTokenResponse,low-medium,low,low-medium,medium-high,4,32,10,2,0,11,56,54,0,0,10,1,2,0,0.714,0,0,0.4,,,,,56,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public DescribeDelegationTokenResponse( Struct, short ): void","DescribeDelegationTokenResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public DescribeDelegationTokenResponse( int, Errors ): void","DescribeDelegationTokenResponse( int, Errors ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public DescribeDelegationTokenResponse( int, Errors, List ): void","DescribeDelegationTokenResponse( int, Errors, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,20,3,5,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public static parse( ByteBuffer, short ): DescribeDelegationTokenResponse","static parse( ByteBuffer, short ): DescribeDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.requests.DescribeDelegationTokenResponse.public tokens( ): List,tokens( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,1,0
org.apache.kafka.common.requests.DescribeGroupsRequest,DescribeGroupsRequest,low-medium,low,low,low,5,21,3,2,0,5,35,15,1,0,3,1,0,0,0.583,0.667,0,0,,,,,35,,,,,,5,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeGroupsRequest.public DescribeGroupsRequest( Struct, short ): void","DescribeGroupsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.DescribeGroupsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
"<Method>org.apache.kafka.common.requests.DescribeGroupsRequest.public static parse( ByteBuffer, short ): DescribeGroupsRequest","static parse( ByteBuffer, short ): DescribeGroupsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DescribeGroupsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.DescribeGroupsRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse,DescribeGroupsResponse,low-medium,low,low-medium,low-medium,4,18,2,2,0,8,88,27,0,4,5,2,2,0,0.673,1,0,0.8,,,,,88,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public DescribeGroupsResponse( Struct, short ): void","DescribeGroupsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,0,0
<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public static fromError( int, Errors, List ): DescribeGroupsResponse","static fromError( int, Errors, List ): DescribeGroupsResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,0,0
"<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public static parse( ByteBuffer, short ): DescribeGroupsResponse","static parse( ByteBuffer, short ): DescribeGroupsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.DescribeGroupsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.requests.DescribeGroupsResponse->AUTHORIZED_OPERATIONS_OMITTED,static final AUTHORIZED_OPERATIONS_OMITTED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeGroupsResponse->UNKNOWN_PROTOCOL,static final UNKNOWN_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeGroupsResponse->UNKNOWN_PROTOCOL_TYPE,static final UNKNOWN_PROTOCOL_TYPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeGroupsResponse->UNKNOWN_STATE,static final UNKNOWN_STATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsRequest,DescribeLogDirsRequest,low-medium,low-medium,low-medium,medium-high,7,50,19,2,0,15,70,45,1,4,6,2,0,0.76,0.714,0.714,0,0,,,,,70,,,,,,15,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsRequest.Builder,Builder,low,low,low,low,1,6,3,2,0,3,16,14,1,0,3,0,0,0,0.444,0,0,0,,,,,16,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public DescribeLogDirsRequest( Set, short ): void","DescribeLogDirsRequest( Set, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public DescribeLogDirsRequest( Struct, short ): void","DescribeLogDirsRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,2,5,6
"<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public isAllTopicPartitions( ): boolean,isAllTopicPartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public static parse( ByteBuffer, short ): DescribeLogDirsRequest","static parse( ByteBuffer, short ): DescribeLogDirsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,0,21,6
<Method>org.apache.kafka.common.requests.DescribeLogDirsRequest.public topicPartitions( ): Set,topicPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.DescribeLogDirsRequest->topicPartitions,final topicPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsRequest->DESCRIBE_LOG_DIRS_REQUEST_V0,static final DESCRIBE_LOG_DIRS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsRequest->DESCRIBE_LOG_DIRS_REQUEST_V1,static final DESCRIBE_LOG_DIRS_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsRequest->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsRequest->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsResponse,DescribeLogDirsResponse,low-medium,low-medium,low-medium,medium-high,7,62,25,2,0,16,133,71,2,10,7,2,2,0.819,0.704,0.714,0,0.571,,,,,133,,,,,,16,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsResponse.LogDirInfo,LogDirInfo,low,low,low,low,1,5,3,1,0,2,15,12,2,0,2,0,0,0,0.333,0,0,0,,,,,15,,,,,,2,,,,,,,
org.apache.kafka.common.requests.DescribeLogDirsResponse.ReplicaInfo,ReplicaInfo,low,low,low,low,0,6,4,1,0,2,19,15,3,0,2,0,0,0,0.333,0,0,0,,,,,19,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public DescribeLogDirsResponse( Struct ): void,DescribeLogDirsResponse( Struct ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,20,1,14,10
"<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public DescribeLogDirsResponse( int, Map ): void","DescribeLogDirsResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public logDirInfos( ): Map,logDirInfos( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public static parse( ByteBuffer, short ): DescribeLogDirsResponse","static parse( ByteBuffer, short ): DescribeLogDirsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.DescribeLogDirsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,30,1,32,12
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->logDirInfos,final logDirInfos : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->DESCRIBE_LOG_DIRS_RESPONSE_V0,static final DESCRIBE_LOG_DIRS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->DESCRIBE_LOG_DIRS_RESPONSE_V1,static final DESCRIBE_LOG_DIRS_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->INVALID_OFFSET_LAG,static final INVALID_OFFSET_LAG : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->IS_FUTURE_KEY_NAME,static final IS_FUTURE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->LOG_DIRS_KEY_NAME,static final LOG_DIRS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->LOG_DIR_KEY_NAME,static final LOG_DIR_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->OFFSET_LAG_KEY_NAME,static final OFFSET_LAG_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->SIZE_KEY_NAME,static final SIZE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.DescribeLogDirsResponse->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ElectLeadersRequest,ElectLeadersRequest,low-medium,low-medium,low-medium,low,6,30,7,2,0,6,61,23,0,0,3,1,0,0,0.583,0,0,0,,,,,61,,,,,,6,,,,,,,
org.apache.kafka.common.requests.ElectLeadersRequest.Builder,Builder,low,low,low,low,3,10,2,2,0,4,31,15,3,0,3,0,0,0,0.533,0.667,0,0,,,,,31,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.ElectLeadersRequest.public ElectLeadersRequest( Struct, short ): void","ElectLeadersRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.ElectLeadersRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,2,8,0
"<Method>org.apache.kafka.common.requests.ElectLeadersRequest.public static parse( ByteBuffer, short ): ElectLeadersRequest","static parse( ByteBuffer, short ): ElectLeadersRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ElectLeadersRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.ElectLeadersResponse,ElectLeadersResponse,low-medium,low,low-medium,low-medium,4,26,6,2,0,13,58,42,1,0,9,1,2,0,0.617,0.917,0,0.444,,,,,58,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public ElectLeadersResponse( Struct ): void,ElectLeadersResponse( Struct ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public ElectLeadersResponse( Struct, short ): void","ElectLeadersResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public ElectLeadersResponse( int, short, List ): void","ElectLeadersResponse( int, short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public ElectLeadersResponse( int, short, List, short ): void","ElectLeadersResponse( int, short, List, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,4,0,1
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,3,0
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public static parse( ByteBuffer, short ): ElectLeadersResponse","static parse( ByteBuffer, short ): ElectLeadersResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.requests.ElectLeadersResponse.public version( ): short,version( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ElectLeadersResponse->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EndTxnRequest,EndTxnRequest,low-medium,low-medium,low-medium,medium-high,7,43,13,2,0,10,73,35,4,3,8,2,0,0.735,0.778,0.857,0,0,,,,,73,,,,,,10,,,,,,,
org.apache.kafka.common.requests.EndTxnRequest.Builder,Builder,low,low,low,low,2,9,5,2,0,4,26,21,4,0,4,0,0,0.25,0.55,0,0,0,,,,,26,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.EndTxnRequest.public EndTxnRequest( Struct, short ): void","EndTxnRequest( Struct, short ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,5,5
"<Method>org.apache.kafka.common.requests.EndTxnRequest.private EndTxnRequest( short, String, long, short, TransactionResult ): void","EndTxnRequest( short, String, long, short, TransactionResult ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,4
<Method>org.apache.kafka.common.requests.EndTxnRequest.public command( ): TransactionResult,command( ): TransactionResult,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.EndTxnRequest.public getErrorResponse( int, Throwable ): EndTxnResponse","getErrorResponse( int, Throwable ): EndTxnResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.requests.EndTxnRequest.public producerEpoch( ): short,producerEpoch( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EndTxnRequest.public producerId( ): long,producerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.EndTxnRequest.public static parse( ByteBuffer, short ): EndTxnRequest","static parse( ByteBuffer, short ): EndTxnRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.EndTxnRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.EndTxnRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,6,5
<Method>org.apache.kafka.common.requests.EndTxnRequest.public transactionalId( ): String,transactionalId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.EndTxnRequest->producerEpoch,final producerEpoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->result,final result : TransactionResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->transactionalId,final transactionalId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->END_TXN_REQUEST_V0,static final END_TXN_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->END_TXN_REQUEST_V1,static final END_TXN_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnRequest->TRANSACTION_RESULT_KEY_NAME,static final TRANSACTION_RESULT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EndTxnResponse,EndTxnResponse,low-medium,low,low,medium-high,5,39,9,2,0,10,40,33,2,2,8,2,2,0.679,0.717,0.639,0,0.5,,,,,40,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.requests.EndTxnResponse.public EndTxnResponse( Struct ): void,EndTxnResponse( Struct ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
"<Method>org.apache.kafka.common.requests.EndTxnResponse.public EndTxnResponse( int, Errors ): void","EndTxnResponse( int, Errors ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.EndTxnResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EndTxnResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.EndTxnResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.EndTxnResponse.public static parse( ByteBuffer, short ): EndTxnResponse","static parse( ByteBuffer, short ): EndTxnResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.EndTxnResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.EndTxnResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.EndTxnResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.common.requests.EndTxnResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,2
<Field>org.apache.kafka.common.requests.EndTxnResponse->error,final error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnResponse->END_TXN_RESPONSE_V0,static final END_TXN_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EndTxnResponse->END_TXN_RESPONSE_V1,static final END_TXN_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.EpochEndOffset,EpochEndOffset,low,low,low,low-medium,1,12,3,1,0,12,40,34,3,2,9,0,0,0.65,0.667,0.139,0,0,,,,,40,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.requests.EpochEndOffset.public EpochEndOffset( Errors, int, long ): void","EpochEndOffset( Errors, int, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.common.requests.EpochEndOffset.public EpochEndOffset( int, long ): void","EpochEndOffset( int, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,3
<Method>org.apache.kafka.common.requests.EpochEndOffset.public endOffset( ): long,endOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,5,6
<Method>org.apache.kafka.common.requests.EpochEndOffset.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.requests.EpochEndOffset.public leaderEpoch( ): int,leaderEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.EpochEndOffset.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.common.requests.EpochEndOffset->endOffset,endOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->error,error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->leaderEpoch,leaderEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->UNDEFINED_EPOCH,static final UNDEFINED_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.EpochEndOffset->UNDEFINED_EPOCH_OFFSET,static final UNDEFINED_EPOCH_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ExpireDelegationTokenRequest,ExpireDelegationTokenRequest,low-medium,low,low,low-medium,5,25,5,2,0,6,34,18,0,0,5,1,0,0,0.667,0,0,0,,,,,34,,,,,,6,,,,,,,
org.apache.kafka.common.requests.ExpireDelegationTokenRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.public ExpireDelegationTokenRequest( Struct, short ): void","ExpireDelegationTokenRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.public expiryTimePeriod( ): long,expiryTimePeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.public hmac( ): ByteBuffer,hmac( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.public static parse( ByteBuffer, short ): ExpireDelegationTokenRequest","static parse( ByteBuffer, short ): ExpireDelegationTokenRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.ExpireDelegationTokenResponse,ExpireDelegationTokenResponse,low-medium,low,low,low,4,24,5,2,0,9,26,22,0,0,8,1,2,0,0.583,0,0,0.5,,,,,26,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public ExpireDelegationTokenResponse( Struct, short ): void","ExpireDelegationTokenResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public expiryTimestamp( ): long,expiryTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public static parse( ByteBuffer, short ): ExpireDelegationTokenResponse","static parse( ByteBuffer, short ): ExpireDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.ExpireDelegationTokenResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.FetchMetadata,FetchMetadata,low,low,low-medium,low,1,16,6,1,0,19,54,45,2,6,9,2,0,0.825,0.545,0.309,0,0,,,,,54,,,,,,19,,,,,,,
"<Method>org.apache.kafka.common.requests.FetchMetadata.public FetchMetadata( int, int ): void","FetchMetadata( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.FetchMetadata.public epoch( ): int,epoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchMetadata.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,2,4
<Method>org.apache.kafka.common.requests.FetchMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.requests.FetchMetadata.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,4
<Method>org.apache.kafka.common.requests.FetchMetadata.public nextCloseExisting( ): FetchMetadata,nextCloseExisting( ): FetchMetadata,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.requests.FetchMetadata.public nextIncremental( ): FetchMetadata,nextIncremental( ): FetchMetadata,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.requests.FetchMetadata.public sessionId( ): int,sessionId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchMetadata.public static newIncremental( int ): FetchMetadata,static newIncremental( int ): FetchMetadata,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.requests.FetchMetadata.public static nextEpoch( int ): int,static nextEpoch( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,1
<Method>org.apache.kafka.common.requests.FetchMetadata.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,10,8
<Field>org.apache.kafka.common.requests.FetchMetadata->epoch,final epoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->sessionId,final sessionId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->FINAL_EPOCH,static final FINAL_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->INITIAL,static final INITIAL : FetchMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->INITIAL_EPOCH,static final INITIAL_EPOCH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->INVALID_SESSION_ID,static final INVALID_SESSION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->LEGACY,static final LEGACY : FetchMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchMetadata->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchRequest,FetchRequest,low-medium,medium-high,medium-high,high,20,98,42,2,0,28,370,126,9,37,14,2,0,0.941,0.835,0.846,0,0,,,,,370,,,,,,28,,,,,,,
org.apache.kafka.common.requests.FetchRequest.Builder,Builder,low,low,low,low,4,23,7,2,0,13,63,53,9,0,10,2,0,0.753,0.729,0.712,0,0,,,,,63,,,,,,13,,,,,,,
org.apache.kafka.common.requests.FetchRequest.PartitionData,PartitionData,low,low,low,low,0,7,3,1,0,7,29,24,4,0,4,0,0,0,0.6,0,0,0,,,,,29,,,,,,7,,,,,,,
org.apache.kafka.common.requests.FetchRequest.TopicAndPartitionData<T>,TopicAndPartitionData,low,low,low,low,1,14,12,1,0,5,17,14,2,0,1,1,0,0,0.333,0,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.FetchRequest.public FetchRequest( Struct, short ): void","FetchRequest( Struct, short ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,34,2,24,31
"<Method>org.apache.kafka.common.requests.FetchRequest.private FetchRequest( short, int, int, int, int, Map, IsolationLevel, List, FetchMetadata, String ): void","FetchRequest( short, int, int, int, int, Map, IsolationLevel, List, FetchMetadata, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,10,0,9
<Method>org.apache.kafka.common.requests.FetchRequest.public fetchData( ): Map,fetchData( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.FetchRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,6,3
<Method>org.apache.kafka.common.requests.FetchRequest.public isFromFollower( ): boolean,isFromFollower( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public isolationLevel( ): IsolationLevel,isolationLevel( ): IsolationLevel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxBytes( ): int,maxBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public maxWait( ): int,maxWait( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public metadata( ): FetchMetadata,metadata( ): FetchMetadata,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public minBytes( ): int,minBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public rackId( ): String,rackId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.FetchRequest.public static parse( ByteBuffer, short ): FetchRequest","static parse( ByteBuffer, short ): FetchRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.FetchRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,12
<Method>org.apache.kafka.common.requests.FetchRequest.public toForget( ): List,toForget( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,43,0,48,30
<Field>org.apache.kafka.common.requests.FetchRequest->fetchData,final fetchData : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->isolationLevel,final isolationLevel : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->maxBytes,final maxBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->maxWait,final maxWait : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->metadata,final metadata : FetchMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->minBytes,final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->rackId,final rackId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->toForget,final toForget : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->DEFAULT_RESPONSE_MAX_BYTES,static final DEFAULT_RESPONSE_MAX_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_OFFSET,static final FETCH_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_PARTITION_V9,static final FETCH_REQUEST_PARTITION_V9 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_TOPIC_V9,static final FETCH_REQUEST_TOPIC_V9 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V0,static final FETCH_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V1,static final FETCH_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V10,static final FETCH_REQUEST_V10 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V11,static final FETCH_REQUEST_V11 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V2,static final FETCH_REQUEST_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V3,static final FETCH_REQUEST_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V4,static final FETCH_REQUEST_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V5,static final FETCH_REQUEST_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V6,static final FETCH_REQUEST_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V7,static final FETCH_REQUEST_V7 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V8,static final FETCH_REQUEST_V8 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FETCH_REQUEST_V9,static final FETCH_REQUEST_V9 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FORGOTTEN_PARTITIONS,static final FORGOTTEN_PARTITIONS : Array,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FORGOTTEN_TOPICS,static final FORGOTTEN_TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->FORGOTTEN_TOPIC_DATA_V7,static final FORGOTTEN_TOPIC_DATA_V7 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->INVALID_LOG_START_OFFSET,static final INVALID_LOG_START_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->ISOLATION_LEVEL,static final ISOLATION_LEVEL : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->LOG_START_OFFSET,static final LOG_START_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->MAX_BYTES,static final MAX_BYTES : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->MAX_WAIT_TIME,static final MAX_WAIT_TIME : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->MIN_BYTES,static final MIN_BYTES : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->PARTITIONS,static final PARTITIONS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->PARTITIONS_V0,static final PARTITIONS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->PARTITIONS_V5,static final PARTITIONS_V5 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->PARTITION_MAX_BYTES,static final PARTITION_MAX_BYTES : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->RACK_ID,static final RACK_ID : Str,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->REPLICA_ID,static final REPLICA_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->SESSION_EPOCH,static final SESSION_EPOCH : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->SESSION_ID,static final SESSION_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->TOPICS,static final TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->TOPICS_V0,static final TOPICS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->TOPICS_V5,static final TOPICS_V5 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchResponse<T>,FetchResponse,medium-high,medium-high,medium-high,medium-high,19,109,58,2,0,36,372,175,4,41,9,8,3,0.974,0.765,0.803,0,0.667,,,,,372,,,,,,36,,,,,,,
org.apache.kafka.common.requests.FetchResponse.AbortedTransaction,AbortedTransaction,low,low,low,low,0,6,2,1,0,7,22,19,2,0,4,0,0,0,0.5,0,0,0,,,,,22,,,,,,7,,,,,,,
org.apache.kafka.common.requests.FetchResponse.PartitionData<T>,PartitionData,low,low,low,low,2,16,11,1,0,11,68,60,7,0,5,0,0,0,0.571,0,0,0,,,,,68,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.public FetchResponse( Errors, LinkedHashMap, int, int ): void","FetchResponse( Errors, LinkedHashMap, int, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,2
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public responseData( ): LinkedHashMap,responseData( ): LinkedHashMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public sessionId( ): int,sessionId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.private static addPartitionData( String, Queue, Struct ): void","static addPartitionData( String, Queue, Struct ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,3,12,2
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.private static addResponseData( Struct, int, String, Queue ): void","static addResponseData( Struct, int, String, Queue ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,23,4,22,2
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.private static addTopicData( String, Queue, Struct ): void","static addTopicData( String, Queue, Struct ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,3,9,1
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.public static parse( ByteBuffer, short ): FetchResponse","static parse( ByteBuffer, short ): FetchResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public static parse( Struct ): FetchResponse,static parse( Struct ): FetchResponse,low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,35,1,26,18
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,12
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.public static sizeOf( short, Iterator ): int","static sizeOf( short, Iterator ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.private static toStruct( short, int, Errors, Iterator, int ): Struct","static toStruct( short, int, Errors, Iterator, int ): Struct",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,6,45,5,40,19
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.requests.FetchResponse<T>.protected toSend( String, ResponseHeader, short ): Send","toSend( String, ResponseHeader, short ): Send",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,11,1
<Method>org.apache.kafka.common.requests.FetchResponse<T>.public toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,4
<Field>org.apache.kafka.common.requests.FetchResponse<T>->error,final error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->responseData,final responseData : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->sessionId,final sessionId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->ABORTED_TRANSACTIONS_KEY_NAME,static final ABORTED_TRANSACTIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_ABORTED_TRANSACTION_V4,static final FETCH_RESPONSE_ABORTED_TRANSACTION_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_HEADER_V0,static final FETCH_RESPONSE_PARTITION_HEADER_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_HEADER_V4,static final FETCH_RESPONSE_PARTITION_HEADER_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_HEADER_V5,static final FETCH_RESPONSE_PARTITION_HEADER_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_HEADER_V6,static final FETCH_RESPONSE_PARTITION_HEADER_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_V0,static final FETCH_RESPONSE_PARTITION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_V4,static final FETCH_RESPONSE_PARTITION_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_V5,static final FETCH_RESPONSE_PARTITION_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_PARTITION_V6,static final FETCH_RESPONSE_PARTITION_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_TOPIC_V0,static final FETCH_RESPONSE_TOPIC_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_TOPIC_V4,static final FETCH_RESPONSE_TOPIC_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_TOPIC_V5,static final FETCH_RESPONSE_TOPIC_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_TOPIC_V6,static final FETCH_RESPONSE_TOPIC_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V0,static final FETCH_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V1,static final FETCH_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V10,static final FETCH_RESPONSE_V10 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V11,static final FETCH_RESPONSE_V11 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V2,static final FETCH_RESPONSE_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V3,static final FETCH_RESPONSE_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V4,static final FETCH_RESPONSE_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V5,static final FETCH_RESPONSE_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V6,static final FETCH_RESPONSE_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V7,static final FETCH_RESPONSE_V7 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V8,static final FETCH_RESPONSE_V8 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FETCH_RESPONSE_V9,static final FETCH_RESPONSE_V9 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->FIRST_OFFSET,static final FIRST_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->HIGH_WATERMARK,static final HIGH_WATERMARK : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->INVALID_HIGHWATERMARK,static final INVALID_HIGHWATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->INVALID_LAST_STABLE_OFFSET,static final INVALID_LAST_STABLE_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->INVALID_LOG_START_OFFSET,static final INVALID_LOG_START_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->INVALID_PREFERRED_REPLICA_ID,static final INVALID_PREFERRED_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->LAST_STABLE_OFFSET,static final LAST_STABLE_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->LOG_START_OFFSET,static final LOG_START_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->PARTITION_HEADER_KEY_NAME,static final PARTITION_HEADER_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->PREFERRED_READ_REPLICA,static final PREFERRED_READ_REPLICA : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->PRODUCER_ID,static final PRODUCER_ID : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->RECORD_SET_KEY_NAME,static final RECORD_SET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->RESPONSES_KEY_NAME,static final RESPONSES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse<T>->SESSION_ID,static final SESSION_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest,FindCoordinatorRequest,low-medium,low-medium,low-medium,low,6,30,5,2,0,5,53,15,0,0,3,1,0,0,0.583,0,0,0,,,,,53,,,,,,5,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest.Builder,Builder,low,low,low,low,2,3,1,2,0,4,16,9,0,0,2,0,0,0,0.25,0,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.common.requests.FindCoordinatorRequest.CoordinatorType,CoordinatorType,low,low,low,low,0,3,0,2,0,5,15,12,1,2,2,1,0,0.833,0.167,1,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.FindCoordinatorRequest.public FindCoordinatorRequest( Struct, short ): void","FindCoordinatorRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.FindCoordinatorRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,0
"<Method>org.apache.kafka.common.requests.FindCoordinatorRequest.public static parse( ByteBuffer, short ): FindCoordinatorRequest","static parse( ByteBuffer, short ): FindCoordinatorRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.FindCoordinatorRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.FindCoordinatorResponse,FindCoordinatorResponse,low-medium,low,low,medium-high,5,33,10,2,0,11,39,33,0,0,9,2,2,0,0.712,0,0,0.444,,,,,39,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public FindCoordinatorResponse( Struct, short ): void","FindCoordinatorResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public node( ): Node,node( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public static parse( ByteBuffer, short ): FindCoordinatorResponse","static parse( ByteBuffer, short ): FindCoordinatorResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public static prepareResponse( Errors, Node ): FindCoordinatorResponse","static prepareResponse( Errors, Node ): FindCoordinatorResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,5,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.FindCoordinatorResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.HeartbeatRequest,HeartbeatRequest,low-medium,low,low,low,5,22,4,2,0,5,34,15,0,0,3,1,0,0,0.583,0,0,0,,,,,34,,,,,,5,,,,,,,
org.apache.kafka.common.requests.HeartbeatRequest.Builder,Builder,low,low,low,low,1,2,0,2,0,4,14,9,0,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.HeartbeatRequest.public HeartbeatRequest( Struct, short ): void","HeartbeatRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.HeartbeatRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
"<Method>org.apache.kafka.common.requests.HeartbeatRequest.public static parse( ByteBuffer, short ): HeartbeatRequest","static parse( ByteBuffer, short ): HeartbeatRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.HeartbeatRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.HeartbeatResponse,HeartbeatResponse,low-medium,low,low,low,3,23,4,2,0,7,22,18,0,0,6,1,2,0,0.536,0,0,0.667,,,,,22,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.HeartbeatResponse.public HeartbeatResponse( Struct, short ): void","HeartbeatResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.HeartbeatResponse.public static parse( ByteBuffer, short ): HeartbeatResponse","static parse( ByteBuffer, short ): HeartbeatResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.HeartbeatResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.IncrementalAlterConfigsRequest,IncrementalAlterConfigsRequest,low-medium,low-medium,low,low,6,28,5,2,0,5,40,20,1,0,3,1,0,0,0.583,1,0,0,,,,,40,,,,,,5,,,,,,,
org.apache.kafka.common.requests.IncrementalAlterConfigsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsRequest. IncrementalAlterConfigsRequest( Struct, short ): void"," IncrementalAlterConfigsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,2,4,0
"<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsRequest.public static parse( ByteBuffer, short ): IncrementalAlterConfigsRequest","static parse( ByteBuffer, short ): IncrementalAlterConfigsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.IncrementalAlterConfigsRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.IncrementalAlterConfigsResponse,IncrementalAlterConfigsResponse,low-medium,low,low,low,4,22,5,2,0,7,44,21,0,0,5,1,2,0,0.5,0,0,0.8,,,,,44,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.public IncrementalAlterConfigsResponse( Struct, short ): void","IncrementalAlterConfigsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,3,0
<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.public static parse( ByteBuffer, short ): IncrementalAlterConfigsResponse","static parse( ByteBuffer, short ): IncrementalAlterConfigsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.IncrementalAlterConfigsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.InitProducerIdRequest,InitProducerIdRequest,low-medium,low-medium,low,low,6,22,4,2,0,4,36,16,0,0,3,1,0,0,0.583,0,0,0,,,,,36,,,,,,4,,,,,,,
org.apache.kafka.common.requests.InitProducerIdRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,5,15,10,0,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.InitProducerIdRequest.public InitProducerIdRequest( Struct, short ): void","InitProducerIdRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.InitProducerIdRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,2,0
"<Method>org.apache.kafka.common.requests.InitProducerIdRequest.public static parse( ByteBuffer, short ): InitProducerIdRequest","static parse( ByteBuffer, short ): InitProducerIdRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.InitProducerIdRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.InitProducerIdResponse,InitProducerIdResponse,low-medium,low,low,low,3,25,3,2,0,8,25,21,0,0,7,1,2,0,0.562,0,0,0.571,,,,,25,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public InitProducerIdResponse( Struct, short ): void","InitProducerIdResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public static parse( ByteBuffer, short ): InitProducerIdResponse","static parse( ByteBuffer, short ): InitProducerIdResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.InitProducerIdResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.JoinGroupRequest,JoinGroupRequest,low-medium,low-medium,low-medium,low-medium,6,29,10,2,0,15,65,41,0,2,4,3,0,1,0.673,1,0,0,,,,,65,,,,,,15,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest.Builder,Builder,low,low,low,low,1,2,0,2,0,4,14,9,0,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.JoinGroupRequest.public JoinGroupRequest( Struct, short ): void","JoinGroupRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.common.requests.JoinGroupRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,3,2
<Method>org.apache.kafka.common.requests.JoinGroupRequest.private maybeOverrideRebalanceTimeout( short ): void,maybeOverrideRebalanceTimeout( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,0
<Method>org.apache.kafka.common.requests.JoinGroupRequest.static containsValidPattern( String ): boolean,static containsValidPattern( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,0
"<Method>org.apache.kafka.common.requests.JoinGroupRequest.public static parse( ByteBuffer, short ): JoinGroupRequest","static parse( ByteBuffer, short ): JoinGroupRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public static validateGroupInstanceId( String ): void,static validateGroupInstanceId( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,11,1,5,2
<Method>org.apache.kafka.common.requests.JoinGroupRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.common.requests.JoinGroupRequest->MAX_GROUP_INSTANCE_ID_LENGTH,static final MAX_GROUP_INSTANCE_ID_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupRequest->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupResponse,JoinGroupResponse,low-medium,low,low,low,3,26,3,2,0,10,35,26,0,3,9,1,2,0,0.575,1,0,0.444,,,,,35,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public JoinGroupResponse( Struct ): void,JoinGroupResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.JoinGroupResponse.public JoinGroupResponse( Struct, short ): void","JoinGroupResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.JoinGroupResponse.public static parse( ByteBuffer, short ): JoinGroupResponse","static parse( ByteBuffer, short ): JoinGroupResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.JoinGroupResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_GENERATION_ID,static final UNKNOWN_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_PROTOCOL,static final UNKNOWN_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest,LeaderAndIsrRequest,low-medium,low,low-medium,medium-high,5,30,7,3,0,15,93,41,0,0,9,1,0,0,0.733,0,0,0,,,,,93,,,,,,15,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest.Builder,Builder,low,low,low,low,2,20,13,3,0,6,44,41,2,0,3,1,0,0,0.542,0,0,0,,,,,44,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public LeaderAndIsrRequest( Struct, short ): void","LeaderAndIsrRequest( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public brokerEpoch( ): long,brokerEpoch( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public getErrorResponse( int, Throwable ): LeaderAndIsrResponse","getErrorResponse( int, Throwable ): LeaderAndIsrResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,5,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public liveLeaders( ): List,liveLeaders( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.private normalize( ): void,normalize( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,5,0,1,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public partitionStates( ): Iterable,partitionStates( ): Iterable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,0
"<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public static parse( ByteBuffer, short ): LeaderAndIsrRequest","static parse( ByteBuffer, short ): LeaderAndIsrRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.LeaderAndIsrResponse,LeaderAndIsrResponse,low-medium,low,low,low,3,24,5,2,0,8,24,20,0,0,6,1,0,0,0.571,0,0,0,,,,,24,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public LeaderAndIsrResponse( Struct, short ): void","LeaderAndIsrResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public partitions( ): List,partitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public static parse( ByteBuffer, short ): LeaderAndIsrResponse","static parse( ByteBuffer, short ): LeaderAndIsrResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.LeaveGroupRequest,LeaveGroupRequest,low-medium,low,low-medium,low-medium,5,24,5,2,0,7,61,20,1,0,4,1,0,0,0.633,0.833,0,0,,,,,61,,,,,,7,,,,,,,
org.apache.kafka.common.requests.LeaveGroupRequest.Builder,Builder,low,low,low,low,3,16,7,2,0,7,32,29,2,0,4,0,0,0,0.375,0.667,0,0,,,,,32,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.LeaveGroupRequest.public LeaveGroupRequest( Struct, short ): void","LeaveGroupRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.LeaveGroupRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
<Method>org.apache.kafka.common.requests.LeaveGroupRequest.public members( ): List,members( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
"<Method>org.apache.kafka.common.requests.LeaveGroupRequest.public static parse( ByteBuffer, short ): LeaveGroupRequest","static parse( ByteBuffer, short ): LeaveGroupRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.LeaveGroupRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.LeaveGroupRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaveGroupResponse,LeaveGroupResponse,low-medium,low,low-medium,medium-high,3,33,6,2,0,22,67,63,0,0,12,2,2,0,0.75,0,0,0.333,,,,,67,,,,,,22,,,,,,,
"<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public LeaveGroupResponse( List, Errors, int, short ): void","LeaveGroupResponse( List, Errors, int, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,4,3,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public LeaveGroupResponse( Struct ): void,LeaveGroupResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public LeaveGroupResponse( Struct, short ): void","LeaveGroupResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,4,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public memberResponses( ): List,memberResponses( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.LeaveGroupResponse.private static getError( Errors, List ): Errors","static getError( Errors, List ): Errors",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,2,1,0
"<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public static parse( ByteBuffer, short ): LeaveGroupResponse","static parse( ByteBuffer, short ): LeaveGroupResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public topLevelError( ): Errors,topLevelError( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
org.apache.kafka.common.requests.ListGroupsRequest,ListGroupsRequest,low-medium,low,low,low,4,23,5,2,0,5,32,16,0,0,3,1,0,0,0.583,0,0,0,,,,,32,,,,,,5,,,,,,,
org.apache.kafka.common.requests.ListGroupsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.ListGroupsRequest.public ListGroupsRequest( Struct, short ): void","ListGroupsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.ListGroupsRequest.public getErrorResponse( int, Throwable ): ListGroupsResponse","getErrorResponse( int, Throwable ): ListGroupsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,4,0
"<Method>org.apache.kafka.common.requests.ListGroupsRequest.public static parse( ByteBuffer, short ): ListGroupsRequest","static parse( ByteBuffer, short ): ListGroupsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ListGroupsRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.ListGroupsResponse,ListGroupsResponse,low-medium,low,low,low,4,21,4,2,0,6,22,16,0,0,5,1,2,0,0.5,0,0,0.8,,,,,22,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.ListGroupsResponse.public ListGroupsResponse( Struct, short ): void","ListGroupsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ListGroupsResponse.public static parse( ByteBuffer, short ): ListGroupsResponse","static parse( ByteBuffer, short ): ListGroupsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.ListGroupsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.ListOffsetRequest,ListOffsetRequest,low-medium,medium-high,low-medium,medium-high,17,80,33,2,0,18,200,80,4,22,8,2,0,0.962,0.75,0.786,0,0,,,,,200,,,,,,18,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.Builder,Builder,low,low,low,low,2,11,5,2,0,9,36,32,3,0,4,2,0,0.333,0.583,0.7,0,0,,,,,36,,,,,,9,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.PartitionData,PartitionData,low,low,low,low,0,10,6,1,0,4,22,17,3,0,4,0,0,0,0.312,1,0,0,,,,,22,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.ListOffsetRequest.public ListOffsetRequest( Struct, short ): void","ListOffsetRequest( Struct, short ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,22,2,13,12
"<Method>org.apache.kafka.common.requests.ListOffsetRequest.private ListOffsetRequest( int, Map, IsolationLevel, short ): void","ListOffsetRequest( int, Map, IsolationLevel, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,1,4
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public duplicatePartitions( ): Set,duplicatePartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.ListOffsetRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,2,7,1
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public isolationLevel( ): IsolationLevel,isolationLevel( ): IsolationLevel,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public partitionTimestamps( ): Map,partitionTimestamps( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.ListOffsetRequest.public static parse( ByteBuffer, short ): ListOffsetRequest","static parse( ByteBuffer, short ): ListOffsetRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,6
<Method>org.apache.kafka.common.requests.ListOffsetRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,25,0,25,11
<Field>org.apache.kafka.common.requests.ListOffsetRequest->duplicatePartitions,final duplicatePartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->isolationLevel,final isolationLevel : IsolationLevel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->partitionTimestamps,final partitionTimestamps : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->DEBUGGING_REPLICA_ID,static final DEBUGGING_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->EARLIEST_TIMESTAMP,static final EARLIEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->ISOLATION_LEVEL,static final ISOLATION_LEVEL : Int8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LATEST_TIMESTAMP,static final LATEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V0,static final LIST_OFFSET_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V1,static final LIST_OFFSET_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V2,static final LIST_OFFSET_REQUEST_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V3,static final LIST_OFFSET_REQUEST_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V4,static final LIST_OFFSET_REQUEST_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LIST_OFFSET_REQUEST_V5,static final LIST_OFFSET_REQUEST_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->MAX_NUM_OFFSETS,static final MAX_NUM_OFFSETS : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->PARTITIONS,static final PARTITIONS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->PARTITIONS_V0,static final PARTITIONS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->PARTITIONS_V1,static final PARTITIONS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->PARTITIONS_V4,static final PARTITIONS_V4 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->REPLICA_ID,static final REPLICA_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->TIMESTAMP,static final TIMESTAMP : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->TOPICS,static final TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->TOPICS_V0,static final TOPICS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->TOPICS_V1,static final TOPICS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->TOPICS_V4,static final TOPICS_V4 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse,ListOffsetResponse,low-medium,medium-high,low-medium,medium-high,12,83,35,2,0,19,168,81,2,19,9,2,2,0.964,0.712,0.689,0,0.444,,,,,168,,,,,,19,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse.PartitionData,PartitionData,low,low,low,low,2,14,7,1,0,4,36,29,5,0,3,0,0,0,0.467,0,0,0,,,,,36,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public ListOffsetResponse( Map ): void,ListOffsetResponse( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public ListOffsetResponse( Struct ): void,ListOffsetResponse( Struct ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,23,1,14,10
"<Method>org.apache.kafka.common.requests.ListOffsetResponse.public ListOffsetResponse( int, Map ): void","ListOffsetResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public responseData( ): Map,responseData( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ListOffsetResponse.public static parse( ByteBuffer, short ): ListOffsetResponse","static parse( ByteBuffer, short ): ListOffsetResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,6
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.ListOffsetResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,7,2
<Method>org.apache.kafka.common.requests.ListOffsetResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,26,1,26,9
<Field>org.apache.kafka.common.requests.ListOffsetResponse->responseData,final responseData : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V0,static final LIST_OFFSET_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V1,static final LIST_OFFSET_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V2,static final LIST_OFFSET_RESPONSE_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V3,static final LIST_OFFSET_RESPONSE_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V4,static final LIST_OFFSET_RESPONSE_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->LIST_OFFSET_RESPONSE_V5,static final LIST_OFFSET_RESPONSE_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->OFFSET,static final OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->OFFSETS,static final OFFSETS : Array,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->PARTITIONS,static final PARTITIONS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->PARTITIONS_V0,static final PARTITIONS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->PARTITIONS_V1,static final PARTITIONS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->PARTITIONS_V4,static final PARTITIONS_V4 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->TIMESTAMP,static final TIMESTAMP : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->TOPICS,static final TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->TOPICS_V0,static final TOPICS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->TOPICS_V1,static final TOPICS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->TOPICS_V4,static final TOPICS_V4 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_OFFSET,static final UNKNOWN_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetResponse->UNKNOWN_TIMESTAMP,static final UNKNOWN_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListPartitionReassignmentsRequest,ListPartitionReassignmentsRequest,low-medium,low-medium,low,low,6,30,7,2,0,6,49,29,1,0,3,1,0,0,0.583,1,0,0,,,,,49,,,,,,6,,,,,,,
org.apache.kafka.common.requests.ListPartitionReassignmentsRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsRequest. ListPartitionReassignmentsRequest( Struct, short ): void"," ListPartitionReassignmentsRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,18,2,6,0
"<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsRequest.public static parse( ByteBuffer, short ): ListPartitionReassignmentsRequest","static parse( ByteBuffer, short ): ListPartitionReassignmentsRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsRequest.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.ListPartitionReassignmentsRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListPartitionReassignmentsResponse,ListPartitionReassignmentsResponse,low-medium,low,low,low,4,22,5,2,0,7,27,21,0,0,6,1,2,0,0.5,0,0,0.667,,,,,27,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse. ListPartitionReassignmentsResponse( Struct, short ): void"," ListPartitionReassignmentsResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.public ListPartitionReassignmentsResponse( Struct ): void,ListPartitionReassignmentsResponse( Struct ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,2,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.public static parse( ByteBuffer, short ): ListPartitionReassignmentsResponse","static parse( ByteBuffer, short ): ListPartitionReassignmentsResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.ListPartitionReassignmentsResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.MetadataRequest,MetadataRequest,low-medium,low,low-medium,medium-high,5,30,10,2,0,11,90,39,1,0,6,2,0,0,0.732,0.952,0,0,,,,,90,,,,,,11,,,,,,,
org.apache.kafka.common.requests.MetadataRequest.Builder,Builder,low,low,low,low,2,13,4,2,0,13,42,35,0,0,8,1,0,0,0.5,0,0,0,,,,,42,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.requests.MetadataRequest.public MetadataRequest( Struct, short ): void","MetadataRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
<Method>org.apache.kafka.common.requests.MetadataRequest.public allowAutoTopicCreation( ): boolean,allowAutoTopicCreation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.MetadataRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,2,5,0
<Method>org.apache.kafka.common.requests.MetadataRequest.public isAllTopics( ): boolean,isAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.MetadataRequest.public static convertToMetadataRequestTopic( Collection ): List,static convertToMetadataRequestTopic( Collection ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
"<Method>org.apache.kafka.common.requests.MetadataRequest.public static parse( ByteBuffer, short ): MetadataRequest","static parse( ByteBuffer, short ): MetadataRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.MetadataRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.MetadataRequest.public topics( ): List,topics( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,0,2,0
<Field>org.apache.kafka.common.requests.MetadataRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.MetadataResponse,MetadataResponse,low-medium,low-medium,low-medium,medium-high,7,50,26,2,0,35,271,115,2,2,16,5,2,1.083,0.795,1,0,0.25,,,,,271,,,,,,35,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.Holder,Holder,low,low,low,low,1,4,3,1,0,3,42,9,3,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,3,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.PartitionMetadata,PartitionMetadata,low,low,low,low,3,19,2,1,0,11,48,40,7,0,10,0,0,0.762,0.75,0.6,0,0,,,,,48,,,,,,11,,,,,,,
org.apache.kafka.common.requests.MetadataResponse.TopicMetadata,TopicMetadata,low,low,low,low,1,14,3,1,0,14,55,49,5,0,11,0,0,0.533,0.714,0.436,0,0,,,,,55,,,,,,14,,,,,,,
"<Method>org.apache.kafka.common.requests.MetadataResponse.public MetadataResponse( Struct, short ): void","MetadataResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public brokers( ): Collection,brokers( ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public cluster( ): Cluster,cluster( ): Cluster,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,11,0,8,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public clusterAuthorizedOperations( ): int,clusterAuthorizedOperations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public clusterId( ): String,clusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public controller( ): Node,controller( ): Node,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public errors( ): Map,errors( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,3,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public hasReliableLeaderEpochs( ): boolean,hasReliableLeaderEpochs( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.MetadataResponse.private holder( ): Holder,holder( ): Holder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,0,4
<Method>org.apache.kafka.common.requests.MetadataResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.MetadataResponse.public static parse( ByteBuffer, short ): MetadataResponse","static parse( ByteBuffer, short ): MetadataResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.requests.MetadataResponse.public static partitionMetaToInfo( String, PartitionMetadata ): PartitionInfo","static partitionMetaToInfo( String, PartitionMetadata ): PartitionInfo",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,8,0
"<Method>org.apache.kafka.common.requests.MetadataResponse.public static prepareResponse( Collection, String, int, List ): MetadataResponse","static prepareResponse( Collection, String, int, List ): MetadataResponse",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,1
"<Method>org.apache.kafka.common.requests.MetadataResponse.public static prepareResponse( int, Collection, String, int, List ): MetadataResponse","static prepareResponse( int, Collection, String, int, List ): MetadataResponse",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,5,1,1
"<Method>org.apache.kafka.common.requests.MetadataResponse.public static prepareResponse( int, Collection, String, int, List, int ): MetadataResponse","static prepareResponse( int, Collection, String, int, List, int ): MetadataResponse",low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,34,6,2,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.MetadataResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public topicAuthorizedOperations( String ): Optional,topicAuthorizedOperations( String ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public topicMetadata( ): Collection,topicMetadata( ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.MetadataResponse.public topicsByError( Errors ): Set,topicsByError( Errors ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,0
<Field>org.apache.kafka.common.requests.MetadataResponse->hasReliableLeaderEpochs,final hasReliableLeaderEpochs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->AUTHORIZED_OPERATIONS_OMITTED,static final AUTHORIZED_OPERATIONS_OMITTED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->NO_CONTROLLER_ID,static final NO_CONTROLLER_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.MetadataResponse->holder,volatile holder : Holder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest,OffsetCommitRequest,low-medium,low,low-medium,medium-high,5,25,6,2,0,10,67,39,1,4,4,2,0,1.6,0.708,1,0,0,,,,,67,,,,,,10,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest.Builder,Builder,low,low,low,low,1,2,0,2,0,4,14,9,0,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public OffsetCommitRequest( Struct, short ): void","OffsetCommitRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public getErrorResponse( int, Throwable ): OffsetCommitResponse","getErrorResponse( int, Throwable ): OffsetCommitResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,2,0
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public offsets( ): Map,offsets( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,0
"<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public static getErrorResponseTopics( List, Errors ): List","static getErrorResponseTopics( List, Errors ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,3,0
"<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public static parse( ByteBuffer, short ): OffsetCommitRequest","static parse( ByteBuffer, short ): OffsetCommitRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_GENERATION_ID,static final DEFAULT_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_MEMBER_ID,static final DEFAULT_MEMBER_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_RETENTION_TIME,static final DEFAULT_RETENTION_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_TIMESTAMP,static final DEFAULT_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitResponse,OffsetCommitResponse,low-medium,low,low,low-medium,4,37,13,2,0,13,49,43,0,0,9,1,2,0,0.667,0,0,0.444,,,,,49,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public OffsetCommitResponse( Map ): void,OffsetCommitResponse( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public OffsetCommitResponse( Struct ): void,OffsetCommitResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public OffsetCommitResponse( Struct, short ): void","OffsetCommitResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public OffsetCommitResponse( int, Map ): void","OffsetCommitResponse( int, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,2,9,0
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,0
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public static parse( ByteBuffer, short ): OffsetCommitResponse","static parse( ByteBuffer, short ): OffsetCommitResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.OffsetCommitResponse.public toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.OffsetDeleteRequest,OffsetDeleteRequest,low-medium,low,low,low-medium,5,23,5,2,0,5,34,18,0,0,4,1,0,0,0.629,0,0,0,,,,,34,,,,,,5,,,,,,,
org.apache.kafka.common.requests.OffsetDeleteRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.OffsetDeleteRequest.public OffsetDeleteRequest( Struct, short ): void","OffsetDeleteRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.OffsetDeleteRequest.public getErrorResponse( int, Errors ): AbstractResponse","getErrorResponse( int, Errors ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,1,0
"<Method>org.apache.kafka.common.requests.OffsetDeleteRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.common.requests.OffsetDeleteRequest.public static parse( ByteBuffer, short ): OffsetDeleteRequest","static parse( ByteBuffer, short ): OffsetDeleteRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.common.requests.OffsetDeleteRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.OffsetDeleteResponse,OffsetDeleteResponse,low-medium,low,low,low,3,24,4,2,0,9,29,25,0,0,6,1,2,0,0.5,0,0,0.667,,,,,29,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public OffsetDeleteResponse( Struct ): void,OffsetDeleteResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public OffsetDeleteResponse( Struct, short ): void","OffsetDeleteResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,5,0
<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public static parse( ByteBuffer, short ): OffsetDeleteResponse","static parse( ByteBuffer, short ): OffsetDeleteResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.OffsetDeleteResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.OffsetFetchRequest,OffsetFetchRequest,low-medium,low-medium,low-medium,medium-high,7,29,8,2,0,16,79,41,0,1,8,1,0,0,0.714,1,0,0,,,,,79,,,,,,16,,,,,,,
org.apache.kafka.common.requests.OffsetFetchRequest.Builder,Builder,low,low,low,low,3,10,6,2,0,9,32,30,0,0,4,1,0,0,0.55,0,0,0,,,,,32,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public OffsetFetchRequest( Struct, short ): void","OffsetFetchRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public getErrorResponse( Errors ): OffsetFetchResponse,getErrorResponse( Errors ): OffsetFetchResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public getErrorResponse( int, Errors ): OffsetFetchResponse","getErrorResponse( int, Errors ): OffsetFetchResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,2,4,0
"<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public getErrorResponse( int, Throwable ): OffsetFetchResponse","getErrorResponse( int, Throwable ): OffsetFetchResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public groupId( ): String,groupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public isAllPartitions( ): boolean,isAllPartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public partitions( ): List,partitions( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,0,2,0
"<Method>org.apache.kafka.common.requests.OffsetFetchRequest.public static parse( ByteBuffer, short ): OffsetFetchRequest","static parse( ByteBuffer, short ): OffsetFetchRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetFetchRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.common.requests.OffsetFetchRequest->ALL_TOPIC_PARTITIONS,static final ALL_TOPIC_PARTITIONS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse,OffsetFetchResponse,low-medium,low-medium,low-medium,medium-high,6,42,15,2,0,19,112,62,1,5,10,1,2,1,0.714,0.778,0,0.4,,,,,112,,,,,,19,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse.PartitionData,PartitionData,low,low,low,low,2,11,6,1,0,6,35,30,4,0,5,0,0,0.188,0.667,0,0,0,,,,,35,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public OffsetFetchResponse( Errors, Map ): void","OffsetFetchResponse( Errors, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
"<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public OffsetFetchResponse( Struct, short ): void","OffsetFetchResponse( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,10,2,3,2
"<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public OffsetFetchResponse( int, Errors, Map ): void","OffsetFetchResponse( int, Errors, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,21,3,12,2
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public responseData( ): Map,responseData( ): Map,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,0,3,0
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public static parse( ByteBuffer, short ): OffsetFetchResponse","static parse( ByteBuffer, short ): OffsetFetchResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.OffsetFetchResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->error,final error : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->NO_METADATA,static final NO_METADATA : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->PARTITION_ERRORS,static final PARTITION_ERRORS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->UNAUTHORIZED_PARTITION,static final UNAUTHORIZED_PARTITION : PartitionData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->UNKNOWN_PARTITION,static final UNKNOWN_PARTITION : PartitionData,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest,OffsetsForLeaderEpochRequest,low-medium,medium-high,low-medium,low-medium,14,68,23,2,0,14,131,58,2,14,6,3,0,0.938,0.698,0.714,0,0,,,,,131,,,,,,14,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.Builder,Builder,low,low,low,low,2,23,7,2,0,8,26,23,2,0,3,3,0,0.25,0.467,0.9,0,0,,,,,26,,,,,,8,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.PartitionData,PartitionData,low,low,low,low,0,6,4,1,0,2,13,10,2,0,2,0,0,0,0.333,0,0,0,,,,,13,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public OffsetsForLeaderEpochRequest( Map, int, short ): void","OffsetsForLeaderEpochRequest( Map, int, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,2
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public OffsetsForLeaderEpochRequest( Struct, short ): void","OffsetsForLeaderEpochRequest( Struct, short ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,2,8,8
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public epochsByTopicPartition( ): Map,epochsByTopicPartition( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,3,1
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public static parse( ByteBuffer, short ): OffsetsForLeaderEpochRequest","static parse( ByteBuffer, short ): OffsetsForLeaderEpochRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,4
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.public static supportsTopicPermission( short ): boolean,static supportsTopicPermission( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,21,0,22,8
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->epochsByPartition,final epochsByPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->DEBUGGING_REPLICA_ID,static final DEBUGGING_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->LEADER_EPOCH,static final LEADER_EPOCH : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->OFFSET_FOR_LEADER_EPOCH_REQUEST_V0,static final OFFSET_FOR_LEADER_EPOCH_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->OFFSET_FOR_LEADER_EPOCH_REQUEST_V1,static final OFFSET_FOR_LEADER_EPOCH_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->OFFSET_FOR_LEADER_EPOCH_REQUEST_V2,static final OFFSET_FOR_LEADER_EPOCH_REQUEST_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->OFFSET_FOR_LEADER_EPOCH_REQUEST_V3,static final OFFSET_FOR_LEADER_EPOCH_REQUEST_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->PARTITIONS,static final PARTITIONS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->PARTITIONS_V0,static final PARTITIONS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->PARTITIONS_V2,static final PARTITIONS_V2 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->REPLICA_ID,static final REPLICA_ID : Int32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->TOPICS,static final TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->TOPICS_V0,static final TOPICS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest->TOPICS_V2,static final TOPICS_V2 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse,OffsetsForLeaderEpochResponse,low-medium,medium-high,low-medium,medium-high,12,78,34,2,0,15,95,64,2,11,8,2,1,0.923,0.717,0.611,0,0.25,,,,,95,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public OffsetsForLeaderEpochResponse( Map ): void,OffsetsForLeaderEpochResponse( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public OffsetsForLeaderEpochResponse( Struct ): void,OffsetsForLeaderEpochResponse( Struct ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,1,10,7
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public OffsetsForLeaderEpochResponse( int, Map ): void","OffsetsForLeaderEpochResponse( int, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,1
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public responses( ): Map,responses( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public static parse( ByteBuffer, short ): OffsetsForLeaderEpochResponse","static parse( ByteBuffer, short ): OffsetsForLeaderEpochResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,4
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,7,2
<Method>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,22,1,29,7
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->epochEndOffsetsByPartition,final epochEndOffsetsByPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->END_OFFSET,static final END_OFFSET : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->OFFSET_FOR_LEADER_EPOCH_RESPONSE_V0,static final OFFSET_FOR_LEADER_EPOCH_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->OFFSET_FOR_LEADER_EPOCH_RESPONSE_V1,static final OFFSET_FOR_LEADER_EPOCH_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->OFFSET_FOR_LEADER_EPOCH_RESPONSE_V2,static final OFFSET_FOR_LEADER_EPOCH_RESPONSE_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->OFFSET_FOR_LEADER_EPOCH_RESPONSE_V3,static final OFFSET_FOR_LEADER_EPOCH_RESPONSE_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->PARTITIONS,static final PARTITIONS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->PARTITIONS_V0,static final PARTITIONS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->PARTITIONS_V1,static final PARTITIONS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->TOPICS,static final TOPICS : ComplexArray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->TOPICS_V0,static final TOPICS_V0 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse->TOPICS_V1,static final TOPICS_V1 : Field,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceRequest,ProduceRequest,low-medium,medium-high,low-medium,high,16,94,45,2,0,45,234,142,7,15,15,5,1,0.922,0.815,0.85,0,0.133,,,,,234,,,,,,45,,,,,,,
org.apache.kafka.common.requests.ProduceRequest.Builder,Builder,low,low,low,low,3,20,9,2,0,11,54,49,4,0,5,2,0,0,0.531,0.933,0,0,,,,,54,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.requests.ProduceRequest.public ProduceRequest( Struct, short ): void","ProduceRequest( Struct, short ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,11,12
"<Method>org.apache.kafka.common.requests.ProduceRequest.private ProduceRequest( short, short, int, Map, String ): void","ProduceRequest( short, short, int, Map, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,5,3,5
<Method>org.apache.kafka.common.requests.ProduceRequest.public acks( ): short,acks( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public clearPartitionRecords( ): void,clearPartitionRecords( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public errorCounts( Throwable ): Map,errorCounts( Throwable ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
"<Method>org.apache.kafka.common.requests.ProduceRequest.public getErrorResponse( int, Throwable ): ProduceResponse","getErrorResponse( int, Throwable ): ProduceResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,2,3,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public hasIdempotentRecords( ): boolean,hasIdempotentRecords( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public hasTransactionalRecords( ): boolean,hasTransactionalRecords( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public partitionRecordsOrFail( ): Map,partitionRecordsOrFail( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.private partitions( ): Collection,partitions( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.requests.ProduceRequest.private setFlags( MemoryRecords ): void,setFlags( MemoryRecords ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,4
<Method>org.apache.kafka.common.requests.ProduceRequest.private static createPartitionSizes( Map ): Map,static createPartitionSizes( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,6,0
"<Method>org.apache.kafka.common.requests.ProduceRequest.public static parse( ByteBuffer, short ): ProduceRequest","static parse( ByteBuffer, short ): ProduceRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public static requiredMagicForVersion( short ): byte,static requiredMagicForVersion( short ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,2,17,1,0,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,9
"<Method>org.apache.kafka.common.requests.ProduceRequest.public static validateRecords( short, MemoryRecords ): void","static validateRecords( short, MemoryRecords ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,16,2,7,0
<Method>org.apache.kafka.common.requests.ProduceRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public toString( boolean ): String,toString( boolean ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,1,12,4
<Method>org.apache.kafka.common.requests.ProduceRequest.public toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,24,0,25,10
<Method>org.apache.kafka.common.requests.ProduceRequest.public transactionalId( ): String,transactionalId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceRequest->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->partitionSizes,final partitionSizes : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->transactionalId,final transactionalId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->hasIdempotentRecords,hasIdempotentRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->hasTransactionalRecords,hasTransactionalRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->ACKS_KEY_NAME,static final ACKS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PARTITION_DATA_KEY_NAME,static final PARTITION_DATA_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V0,static final PRODUCE_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V1,static final PRODUCE_REQUEST_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V2,static final PRODUCE_REQUEST_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V3,static final PRODUCE_REQUEST_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V4,static final PRODUCE_REQUEST_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V5,static final PRODUCE_REQUEST_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V6,static final PRODUCE_REQUEST_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V7,static final PRODUCE_REQUEST_V7 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->PRODUCE_REQUEST_V8,static final PRODUCE_REQUEST_V8 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->RECORD_SET_KEY_NAME,static final RECORD_SET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->TIMEOUT_KEY_NAME,static final TIMEOUT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->TOPIC_DATA_KEY_NAME,static final TOPIC_DATA_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->TOPIC_PRODUCE_DATA_V0,static final TOPIC_PRODUCE_DATA_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->partitionRecords,volatile partitionRecords : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceResponse,ProduceResponse,low-medium,low-medium,low-medium,low-medium,9,73,35,2,0,22,219,87,2,22,8,2,2,0.923,0.7,0.75,0,0.5,,,,,219,,,,,,22,,,,,,,
org.apache.kafka.common.requests.ProduceResponse.PartitionResponse,PartitionResponse,low,low,low,low,2,11,6,1,0,6,41,34,6,0,5,0,0,0,0.4,0.9,0,0,,,,,41,,,,,,6,,,,,,,
org.apache.kafka.common.requests.ProduceResponse.RecordError,RecordError,low,low,low,low,0,2,0,1,0,2,9,6,2,0,2,0,0,0,0.167,0,0,0,,,,,9,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceResponse.public ProduceResponse( Map ): void,ProduceResponse( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.common.requests.ProduceResponse.public ProduceResponse( Map, int ): void","ProduceResponse( Map, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.requests.ProduceResponse.public ProduceResponse( Struct ): void,ProduceResponse( Struct ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,6,27,1,18,15
<Method>org.apache.kafka.common.requests.ProduceResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,2,1
<Method>org.apache.kafka.common.requests.ProduceResponse.public responses( ): Map,responses( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.ProduceResponse.public static parse( ByteBuffer, short ): ProduceResponse","static parse( ByteBuffer, short ): ProduceResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.ProduceResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,9
<Method>org.apache.kafka.common.requests.ProduceResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.ProduceResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,36,1,36,14
<Field>org.apache.kafka.common.requests.ProduceResponse->responses,final responses : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->throttleTimeMs,final throttleTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->BASE_OFFSET_KEY_NAME,static final BASE_OFFSET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->BATCH_INDEX_ERROR_MESSAGE_FIELD,static final BATCH_INDEX_ERROR_MESSAGE_FIELD : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->BATCH_INDEX_ERROR_MESSAGE_KEY_NAME,static final BATCH_INDEX_ERROR_MESSAGE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->BATCH_INDEX_KEY_NAME,static final BATCH_INDEX_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->ERROR_MESSAGE_FIELD,static final ERROR_MESSAGE_FIELD : NullableStr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->ERROR_MESSAGE_KEY_NAME,static final ERROR_MESSAGE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->LOG_APPEND_TIME_KEY_NAME,static final LOG_APPEND_TIME_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->LOG_START_OFFSET_FIELD,static final LOG_START_OFFSET_FIELD : Int64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->LOG_START_OFFSET_KEY_NAME,static final LOG_START_OFFSET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PARTITION_RESPONSES_KEY_NAME,static final PARTITION_RESPONSES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V0,static final PRODUCE_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V1,static final PRODUCE_RESPONSE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V2,static final PRODUCE_RESPONSE_V2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V3,static final PRODUCE_RESPONSE_V3 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V4,static final PRODUCE_RESPONSE_V4 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V5,static final PRODUCE_RESPONSE_V5 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V6,static final PRODUCE_RESPONSE_V6 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V7,static final PRODUCE_RESPONSE_V7 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->PRODUCE_RESPONSE_V8,static final PRODUCE_RESPONSE_V8 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->RECORD_ERRORS_KEY_NAME,static final RECORD_ERRORS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->RESPONSES_KEY_NAME,static final RESPONSES_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RenewDelegationTokenRequest,RenewDelegationTokenRequest,low-medium,low,low,low,5,22,4,2,0,4,32,14,0,0,3,1,0,0,0.583,0,0,0,,,,,32,,,,,,4,,,,,,,
org.apache.kafka.common.requests.RenewDelegationTokenRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.RenewDelegationTokenRequest.public RenewDelegationTokenRequest( Struct, short ): void","RenewDelegationTokenRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.RenewDelegationTokenRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,0
"<Method>org.apache.kafka.common.requests.RenewDelegationTokenRequest.public static parse( ByteBuffer, short ): RenewDelegationTokenRequest","static parse( ByteBuffer, short ): RenewDelegationTokenRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.RenewDelegationTokenResponse,RenewDelegationTokenResponse,low-medium,low,low,low,4,24,5,2,0,9,26,22,0,0,8,1,2,0,0.583,0,0,0.5,,,,,26,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public RenewDelegationTokenResponse( Struct, short ): void","RenewDelegationTokenResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public expiryTimestamp( ): long,expiryTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public hasError( ): boolean,hasError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public static parse( ByteBuffer, short ): RenewDelegationTokenResponse","static parse( ByteBuffer, short ): RenewDelegationTokenResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.RenewDelegationTokenResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.RequestAndSize,RequestAndSize,low,low,low,low,1,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.requests.RequestAndSize.public RequestAndSize( AbstractRequest, int ): void","RequestAndSize( AbstractRequest, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.common.requests.RequestAndSize->request,final request : AbstractRequest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestAndSize->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestContext,RequestContext,low-medium,medium-high,low-medium,high,14,54,13,1,0,16,72,64,7,0,13,0,0,0.81,0.831,0.485,0,0,,,,,72,,,,,,16,,,,,,,
"<Method>org.apache.kafka.common.requests.RequestContext.public RequestContext( RequestHeader, String, InetAddress, KafkaPrincipal, ListenerName, SecurityProtocol, ClientInformation ): void","RequestContext( RequestHeader, String, InetAddress, KafkaPrincipal, ListenerName, SecurityProtocol, ClientInformation ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,0,7
<Method>org.apache.kafka.common.requests.RequestContext.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,1
<Method>org.apache.kafka.common.requests.RequestContext.public buildResponse( AbstractResponse ): Send,buildResponse( AbstractResponse ): Send,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.common.requests.RequestContext.public clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.RequestContext.public clientId( ): String,clientId( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.RequestContext.public correlationId( ): int,correlationId( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.RequestContext.private isUnsupportedApiVersionsRequest( ): boolean,isUnsupportedApiVersionsRequest( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,2
<Method>org.apache.kafka.common.requests.RequestContext.public listenerName( ): String,listenerName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.RequestContext.public parseRequest( ByteBuffer ): RequestAndSize,parseRequest( ByteBuffer ): RequestAndSize,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,17,1,8,7
<Method>org.apache.kafka.common.requests.RequestContext.public principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.requests.RequestContext.public requestType( ): int,requestType( ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.RequestContext.public requestVersion( ): int,requestVersion( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.RequestContext.public securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.RequestContext->clientAddress,final clientAddress : InetAddress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->clientInformation,final clientInformation : ClientInformation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->connectionId,final connectionId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->header,final header : RequestHeader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->listenerName,final listenerName : ListenerName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->principal,final principal : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestContext->securityProtocol,final securityProtocol : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestHeader,RequestHeader,low,low-medium,low-medium,medium-high,6,21,10,1,0,18,62,54,1,0,12,1,0,0,0.798,0.987,0,0,,,,,62,,,,,,18,,,,,,,
"<Method>org.apache.kafka.common.requests.RequestHeader.public RequestHeader( ApiKeys, short, String, int ): void","RequestHeader( ApiKeys, short, String, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,0
"<Method>org.apache.kafka.common.requests.RequestHeader.public RequestHeader( Struct, short ): void","RequestHeader( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.RequestHeader.public apiKey( ): ApiKeys,apiKey( ): ApiKeys,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.RequestHeader.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.RequestHeader.public clientId( ): String,clientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.RequestHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.RequestHeader.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,2,0
<Method>org.apache.kafka.common.requests.RequestHeader.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.RequestHeader.public headerVersion( ): short,headerVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public static parse( ByteBuffer ): RequestHeader,static parse( ByteBuffer ): RequestHeader,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,5,0
<Method>org.apache.kafka.common.requests.RequestHeader.public toResponseHeader( ): ResponseHeader,toResponseHeader( ): ResponseHeader,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,0
<Method>org.apache.kafka.common.requests.RequestHeader.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,4,0
<Method>org.apache.kafka.common.requests.RequestHeader.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.RequestHeader->headerVersion,final headerVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestUtils,RequestUtils,low-medium,medium-high,low-medium,medium-high,12,79,38,1,0,15,63,62,0,0,1,12,0,0,0.726,0,0,0,,,,,63,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.requests.RequestUtils.private RequestUtils( ): void,RequestUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.requests.RequestUtils.static aceFilterFromStructFields( Struct ): AccessControlEntryFilter,static aceFilterFromStructFields( Struct ): AccessControlEntryFilter,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static aceFilterSetStructFields( AccessControlEntryFilter, Struct ): void","static aceFilterSetStructFields( AccessControlEntryFilter, Struct ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,10,0
<Method>org.apache.kafka.common.requests.RequestUtils.static aceFromStructFields( Struct ): AccessControlEntry,static aceFromStructFields( Struct ): AccessControlEntry,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static aceSetStructFields( AccessControlEntry, Struct ): void","static aceSetStructFields( AccessControlEntry, Struct ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,10,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static getLeaderEpoch( Struct, Int32 ): Optional","static getLeaderEpoch( Struct, Int32 ): Optional",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,3,0
<Method>org.apache.kafka.common.requests.RequestUtils.static getLeaderEpoch( int ): Optional,static getLeaderEpoch( int ): Optional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,0
<Method>org.apache.kafka.common.requests.RequestUtils.static resourcePatternFilterFromStructFields( Struct ): ResourcePatternFilter,static resourcePatternFilterFromStructFields( Struct ): ResourcePatternFilter,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static resourcePatternFilterSetStructFields( ResourcePatternFilter, Struct ): void","static resourcePatternFilterSetStructFields( ResourcePatternFilter, Struct ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,8,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static resourcePatternSetStructFields( ResourcePattern, Struct ): void","static resourcePatternSetStructFields( ResourcePattern, Struct ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,8,0
<Method>org.apache.kafka.common.requests.RequestUtils.static resourcePatternromStructFields( Struct ): ResourcePattern,static resourcePatternromStructFields( Struct ): ResourcePattern,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,0
"<Method>org.apache.kafka.common.requests.RequestUtils.public static serialize( Struct, Struct ): ByteBuffer","static serialize( Struct, Struct ): ByteBuffer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,6,0
"<Method>org.apache.kafka.common.requests.RequestUtils.static setLeaderEpochIfExists( Struct, Int32, Optional ): void","static setLeaderEpochIfExists( Struct, Int32, Optional ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
org.apache.kafka.common.requests.ResponseHeader,ResponseHeader,low,low,low,low-medium,2,18,2,1,0,7,24,16,1,0,6,1,0,0,0.629,0.952,0,0,,,,,24,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.requests.ResponseHeader.public ResponseHeader( Struct, short ): void","ResponseHeader( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.ResponseHeader.public ResponseHeader( int, short ): void","ResponseHeader( int, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.ResponseHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.ResponseHeader.public headerVersion( ): short,headerVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ResponseHeader.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
"<Method>org.apache.kafka.common.requests.ResponseHeader.public static parse( ByteBuffer, short ): ResponseHeader","static parse( ByteBuffer, short ): ResponseHeader",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
<Method>org.apache.kafka.common.requests.ResponseHeader.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ResponseHeader->headerVersion,final headerVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateRequest,SaslAuthenticateRequest,low-medium,low-medium,low,low,6,27,5,2,0,4,39,15,1,0,3,1,0,0,0.583,1,0,0,,,,,39,,,,,,4,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateRequest.Builder,Builder,low,low,low,low,0,4,2,2,0,2,13,8,0,0,2,0,0,0,0.25,0,0,0,,,,,13,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.SaslAuthenticateRequest.public SaslAuthenticateRequest( Struct, short ): void","SaslAuthenticateRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.SaslAuthenticateRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,0
"<Method>org.apache.kafka.common.requests.SaslAuthenticateRequest.public static parse( ByteBuffer, short ): SaslAuthenticateRequest","static parse( ByteBuffer, short ): SaslAuthenticateRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.SaslAuthenticateRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SaslAuthenticateResponse,SaslAuthenticateResponse,low-medium,low,low,low,3,24,3,2,0,8,22,18,0,0,7,1,0,0,0.594,0,0,0,,,,,22,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public SaslAuthenticateResponse( Struct, short ): void","SaslAuthenticateResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public errorMessage( ): String,errorMessage( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public saslAuthBytes( ): byte,saslAuthBytes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public sessionLifetimeMs( ): long,sessionLifetimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public static parse( ByteBuffer, short ): SaslAuthenticateResponse","static parse( ByteBuffer, short ): SaslAuthenticateResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SaslAuthenticateResponse.public toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.SaslHandshakeRequest,SaslHandshakeRequest,low-medium,low-medium,low,low,6,27,4,2,0,4,36,14,1,0,3,1,0,0,0.583,1,0,0,,,,,36,,,,,,4,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.requests.SaslHandshakeRequest.public SaslHandshakeRequest( Struct, short ): void","SaslHandshakeRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.common.requests.SaslHandshakeRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.common.requests.SaslHandshakeRequest.public static parse( ByteBuffer, short ): SaslHandshakeRequest","static parse( ByteBuffer, short ): SaslHandshakeRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SaslHandshakeRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.requests.SaslHandshakeRequest->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SaslHandshakeResponse,SaslHandshakeResponse,low-medium,low,low,low,3,22,3,2,0,6,18,14,0,0,5,1,0,0,0.542,0,0,0,,,,,18,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public SaslHandshakeResponse( Struct, short ): void","SaslHandshakeResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public enabledMechanisms( ): List,enabledMechanisms( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public static parse( ByteBuffer, short ): SaslHandshakeResponse","static parse( ByteBuffer, short ): SaslHandshakeResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SaslHandshakeResponse.public toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.StopReplicaRequest,StopReplicaRequest,low-medium,low-medium,low-medium,medium-high,6,30,8,3,0,11,86,38,0,0,8,1,0,0,0.722,0,0,0,,,,,86,,,,,,11,,,,,,,
org.apache.kafka.common.requests.StopReplicaRequest.Builder,Builder,low,low,low,low,3,25,13,3,0,4,41,38,2,0,3,0,0,0,0.5,0,0,0,,,,,41,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.StopReplicaRequest.public StopReplicaRequest( Struct, short ): void","StopReplicaRequest( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public brokerEpoch( ): long,brokerEpoch( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public deletePartitions( ): boolean,deletePartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.StopReplicaRequest.public getErrorResponse( int, Throwable ): StopReplicaResponse","getErrorResponse( int, Throwable ): StopReplicaResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,7,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public partitions( ): Iterable,partitions( ): Iterable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,1,0
"<Method>org.apache.kafka.common.requests.StopReplicaRequest.public static parse( ByteBuffer, short ): StopReplicaRequest","static parse( ByteBuffer, short ): StopReplicaRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.StopReplicaRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.StopReplicaResponse,StopReplicaResponse,low-medium,low,low,low,3,25,6,2,0,8,23,19,0,0,6,1,0,0,0.571,0,0,0,,,,,23,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.requests.StopReplicaResponse.public StopReplicaResponse( Struct, short ): void","StopReplicaResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,4,0
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public partitionErrors( ): List,partitionErrors( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.requests.StopReplicaResponse.public static parse( ByteBuffer, short ): StopReplicaResponse","static parse( ByteBuffer, short ): StopReplicaResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.StopReplicaResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.SyncGroupRequest,SyncGroupRequest,low-medium,low,low,low-medium,5,25,6,2,0,6,38,19,0,0,4,1,0,0,0.633,0,0,0,,,,,38,,,,,,6,,,,,,,
org.apache.kafka.common.requests.SyncGroupRequest.Builder,Builder,low,low,low,low,1,2,0,2,0,4,14,9,0,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.requests.SyncGroupRequest.public SyncGroupRequest( Struct, short ): void","SyncGroupRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.SyncGroupRequest.public getErrorResponse( int, Throwable ): AbstractResponse","getErrorResponse( int, Throwable ): AbstractResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,0
<Method>org.apache.kafka.common.requests.SyncGroupRequest.public groupAssignments( ): Map,groupAssignments( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,0
"<Method>org.apache.kafka.common.requests.SyncGroupRequest.public static parse( ByteBuffer, short ): SyncGroupRequest","static parse( ByteBuffer, short ): SyncGroupRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SyncGroupRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.SyncGroupResponse,SyncGroupResponse,low-medium,low,low,low,3,24,3,2,0,8,25,21,0,0,7,1,2,0,0.531,0,0,0.571,,,,,25,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public SyncGroupResponse( Struct ): void,SyncGroupResponse( Struct ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.SyncGroupResponse.public SyncGroupResponse( Struct, short ): void","SyncGroupResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.SyncGroupResponse.public static parse( ByteBuffer, short ): SyncGroupResponse","static parse( ByteBuffer, short ): SyncGroupResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.SyncGroupResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.TransactionResult,TransactionResult,low-medium,low,low,low,0,2,0,2,0,3,9,6,1,2,1,1,0,1,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.TransactionResult.private TransactionResult( boolean ): void,TransactionResult( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.TransactionResult.public static forId( boolean ): TransactionResult,static forId( boolean ): TransactionResult,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,2
<Field>org.apache.kafka.common.requests.TransactionResult->id,final id : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.TransactionResult->ABORT,static final ABORT : TransactionResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.TransactionResult->COMMIT,static final COMMIT : TransactionResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest,TxnOffsetCommitRequest,low-medium,low-medium,low-medium,medium-high,7,41,19,2,0,12,100,59,0,0,4,3,0,0,0.746,0,0,0,,,,,100,,,,,,12,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest.Builder,Builder,low,low,low,low,0,2,0,2,0,2,11,6,0,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
org.apache.kafka.common.requests.TxnOffsetCommitRequest.CommittedOffset,CommittedOffset,low,low,low,low,0,7,3,1,0,5,25,21,3,0,4,0,0,0,0.6,0,0,0,,,,,25,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public TxnOffsetCommitRequest( Struct, short ): void","TxnOffsetCommitRequest( Struct, short ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public getErrorResponse( int, Throwable ): TxnOffsetCommitResponse","getErrorResponse( int, Throwable ): TxnOffsetCommitResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,2,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public offsets( ): Map,offsets( ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,0,2,0
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.static getErrorResponseTopics( List, Errors ): List","static getErrorResponseTopics( List, Errors ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,2,3,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public static getTopics( Map ): List,static getTopics( Map ): List,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,1,15,0
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.public static parse( ByteBuffer, short ): TxnOffsetCommitRequest","static parse( ByteBuffer, short ): TxnOffsetCommitRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.TxnOffsetCommitResponse,TxnOffsetCommitResponse,low-medium,low,low,low-medium,4,35,13,2,0,12,45,41,0,0,8,1,2,0,0.685,0,0,0.5,,,,,45,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public TxnOffsetCommitResponse( Struct, short ): void","TxnOffsetCommitResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public TxnOffsetCommitResponse( int, Map ): void","TxnOffsetCommitResponse( int, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,2,9,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public errors( ): Map,errors( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,2,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public shouldClientThrottle( short ): boolean,shouldClientThrottle( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public static parse( ByteBuffer, short ): TxnOffsetCommitResponse","static parse( ByteBuffer, short ): TxnOffsetCommitResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public throttleTimeMs( ): int,throttleTimeMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.TxnOffsetCommitResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.UpdateMetadataRequest,UpdateMetadataRequest,low-medium,low-medium,low-medium,medium-high,7,31,7,3,0,20,111,46,0,0,9,1,0,0,0.733,0,0,0,,,,,111,,,,,,20,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.Builder,Builder,low,low,low,low,3,11,8,3,0,13,54,51,2,0,3,1,0,0,0.5,0,0,0,,,,,54,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public UpdateMetadataRequest( Struct, short ): void","UpdateMetadataRequest( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public brokerEpoch( ): long,brokerEpoch( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public getErrorResponse( int, Throwable ): UpdateMetadataResponse","getErrorResponse( int, Throwable ): UpdateMetadataResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public liveBrokers( ): List,liveBrokers( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.private normalize( ): void,normalize( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,18,0,6,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public partitionStates( ): Iterable,partitionStates( ): Iterable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,0
"<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public static parse( ByteBuffer, short ): UpdateMetadataRequest","static parse( ByteBuffer, short ): UpdateMetadataRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.common.requests.UpdateMetadataResponse,UpdateMetadataResponse,low-medium,low,low,low,3,22,4,2,0,5,16,12,0,0,4,1,0,0,0.5,0,0,0,,,,,16,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public UpdateMetadataResponse( Struct, short ): void","UpdateMetadataResponse( Struct, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public error( ): Errors,error( ): Errors,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public static parse( ByteBuffer, short ): UpdateMetadataResponse","static parse( ByteBuffer, short ): UpdateMetadataResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.requests.WriteTxnMarkersRequest,WriteTxnMarkersRequest,low-medium,low-medium,low-medium,medium-high,9,64,26,2,0,19,148,70,1,9,7,2,0,0.829,0.75,0.524,0,0,,,,,148,,,,,,19,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersRequest.Builder,Builder,low,low,low,low,1,2,0,2,0,2,8,6,1,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,2,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersRequest.TxnMarkerEntry,TxnMarkerEntry,low,low,low,low,1,12,3,1,0,12,48,42,5,0,9,0,0,0.5,0.762,0.278,0,0,,,,,48,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public WriteTxnMarkersRequest( Struct, short ): void","WriteTxnMarkersRequest( Struct, short ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,19,2,11,8
"<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.private WriteTxnMarkersRequest( short, List ): void","WriteTxnMarkersRequest( short, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,3,2
"<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public getErrorResponse( int, Throwable ): WriteTxnMarkersResponse","getErrorResponse( int, Throwable ): WriteTxnMarkersResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,5,2
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public markers( ): List,markers( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public static parse( ByteBuffer, short ): WriteTxnMarkersRequest","static parse( ByteBuffer, short ): WriteTxnMarkersRequest",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersRequest.protected toStruct( ): Struct,toStruct( ): Struct,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,23,0,19,11
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->markers,final markers : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->COORDINATOR_EPOCH_KEY_NAME,static final COORDINATOR_EPOCH_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->PRODUCER_EPOCH_KEY_NAME,static final PRODUCER_EPOCH_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->PRODUCER_ID_KEY_NAME,static final PRODUCER_ID_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->TRANSACTION_RESULT_KEY_NAME,static final TRANSACTION_RESULT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->TXN_MARKERS_KEY_NAME,static final TXN_MARKERS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->WRITE_TXN_MARKERS_ENTRY_V0,static final WRITE_TXN_MARKERS_ENTRY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersRequest->WRITE_TXN_MARKERS_REQUEST_V0,static final WRITE_TXN_MARKERS_REQUEST_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.WriteTxnMarkersResponse,WriteTxnMarkersResponse,low-medium,low-medium,low-medium,low-medium,7,59,23,2,0,15,80,62,1,7,5,2,0,0.85,0.69,0.6,0,0,,,,,80,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public WriteTxnMarkersResponse( Map ): void,WriteTxnMarkersResponse( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public WriteTxnMarkersResponse( Struct ): void,WriteTxnMarkersResponse( Struct ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,18,1,10,5
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public errorCounts( ): Map,errorCounts( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,3,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public errors( long ): Map,errors( long ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public static parse( ByteBuffer, short ): WriteTxnMarkersResponse","static parse( ByteBuffer, short ): WriteTxnMarkersResponse",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.public static schemaVersions( ): Schema,static schemaVersions( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.WriteTxnMarkersResponse.protected toStruct( short ): Struct,toStruct( short ): Struct,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,29,1,25,9
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->errors,final errors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->PARTITIONS_KEY_NAME,static final PARTITIONS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->PRODUCER_ID_KEY_NAME,static final PRODUCER_ID_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->TOPICS_KEY_NAME,static final TOPICS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->TXN_MARKERS_KEY_NAME,static final TXN_MARKERS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->WRITE_TXN_MARKERS_ENTRY_V0,static final WRITE_TXN_MARKERS_ENTRY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->WRITE_TXN_MARKERS_PARTITION_ERROR_RESPONSE_V0,static final WRITE_TXN_MARKERS_PARTITION_ERROR_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.WriteTxnMarkersResponse->WRITE_TXN_MARKERS_RESPONSE_V0,static final WRITE_TXN_MARKERS_RESPONSE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.resource,org.apache.kafka.common.resource,low,low,low-medium,low,,,,,,86,236,,,,,,,,,,,,,6,6,0,236,11,0,0,0,1,86,,,,,,,
org.apache.kafka.common.resource.PatternType,PatternType,low-medium,low,low,low,0,7,1,2,0,6,30,12,1,7,4,2,0,0.95,0.5,0.4,0,0,,,,,30,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.resource.PatternType.private PatternType( byte ): void,PatternType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.resource.PatternType.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.PatternType.public isSpecific( ): boolean,isSpecific( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,3
<Method>org.apache.kafka.common.resource.PatternType.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.PatternType.public static fromCode( byte ): PatternType,static fromCode( byte ): PatternType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.common.resource.PatternType.public static fromString( String ): PatternType,static fromString( String ): PatternType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Field>org.apache.kafka.common.resource.PatternType->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->ANY,static final ANY : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->CODE_TO_VALUE,static final CODE_TO_VALUE : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->LITERAL,static final LITERAL : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->MATCH,static final MATCH : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->NAME_TO_VALUE,static final NAME_TO_VALUE : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->PREFIXED,static final PREFIXED : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.PatternType->UNKNOWN,static final UNKNOWN : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.Resource,Resource,low,low,low,low-medium,2,13,5,1,0,10,31,25,2,2,8,0,0,0.679,0.656,0.071,1,0,,,,,31,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.resource.Resource.public Resource( ResourceType, String ): void","Resource( ResourceType, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.common.resource.Resource.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,4
<Method>org.apache.kafka.common.resource.Resource.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.resource.Resource.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.resource.Resource.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.Resource.public resourceType( ): ResourceType,resourceType( ): ResourceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.Resource.public toFilter( ): ResourceFilter,toFilter( ): ResourceFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.resource.Resource.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,3
<Field>org.apache.kafka.common.resource.Resource->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.Resource->resourceType,final resourceType : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.Resource->CLUSTER,static final CLUSTER : Resource,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.Resource->CLUSTER_NAME,static final CLUSTER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourceFilter,ResourceFilter,low,low,low,medium-high,2,18,9,1,0,17,41,36,2,1,10,0,0,0.417,0.72,0.244,1,0,,,,,41,,,,,,17,,,,,,,
"<Method>org.apache.kafka.common.resource.ResourceFilter.public ResourceFilter( ResourceType, String ): void","ResourceFilter( ResourceType, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,2
<Method>org.apache.kafka.common.resource.ResourceFilter.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,4
<Method>org.apache.kafka.common.resource.ResourceFilter.public findIndefiniteField( ): String,findIndefiniteField( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,0,0,4
<Method>org.apache.kafka.common.resource.ResourceFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.common.resource.ResourceFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.resource.ResourceFilter.public matches( Resource ): boolean,matches( Resource ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,4,5
<Method>org.apache.kafka.common.resource.ResourceFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.resource.ResourceFilter.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceFilter.public resourceType( ): ResourceType,resourceType( ): ResourceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceFilter.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,3
<Field>org.apache.kafka.common.resource.ResourceFilter->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceFilter->resourceType,final resourceType : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceFilter->ANY,static final ANY : ResourceFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourcePattern,ResourcePattern,low,low,low,medium-high,3,15,6,1,0,16,40,34,3,1,9,0,0,0.5,0.711,0.111,2,0,,,,,40,,,,,,16,,,,,,,
"<Method>org.apache.kafka.common.resource.ResourcePattern.public ResourcePattern( ResourceType, String, PatternType ): void","ResourcePattern( ResourceType, String, PatternType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,3,3,3
<Method>org.apache.kafka.common.resource.ResourcePattern.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,3,6
<Method>org.apache.kafka.common.resource.ResourcePattern.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.resource.ResourcePattern.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.resource.ResourcePattern.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePattern.public patternType( ): PatternType,patternType( ): PatternType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePattern.public resourceType( ): ResourceType,resourceType( ): ResourceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePattern.public toFilter( ): ResourcePatternFilter,toFilter( ): ResourcePatternFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,3
<Method>org.apache.kafka.common.resource.ResourcePattern.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,4
<Field>org.apache.kafka.common.resource.ResourcePattern->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePattern->patternType,final patternType : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePattern->resourceType,final resourceType : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePattern->WILDCARD_RESOURCE,static final WILDCARD_RESOURCE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourcePatternFilter,ResourcePatternFilter,low-medium,low,low-medium,medium-high,3,23,13,1,0,30,64,58,3,1,11,0,0,0.417,0.758,0.255,2,0,,,,,64,,,,,,30,,,,,,,
"<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public ResourcePatternFilter( ResourceType, String, PatternType ): void","ResourcePatternFilter( ResourceType, String, PatternType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,3
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,3,6
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public findIndefiniteField( ): String,findIndefiniteField( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,12,0,0,6
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public matches( ResourcePattern ): boolean,matches( ResourcePattern ): boolean,low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,2,16,1,20,14
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public matchesAtMostOne( ): boolean,matchesAtMostOne( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public patternType( ): PatternType,patternType( ): PatternType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public resourceType( ): ResourceType,resourceType( ): ResourceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourcePatternFilter.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,4
<Field>org.apache.kafka.common.resource.ResourcePatternFilter->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePatternFilter->patternType,final patternType : PatternType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePatternFilter->resourceType,final resourceType : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourcePatternFilter->ANY,static final ANY : ResourcePatternFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.resource.ResourceType,ResourceType,low-medium,low,low,low,0,7,2,2,0,7,30,16,1,8,3,2,0,1.083,0.467,0.5,0,0,,,,,30,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.resource.ResourceType.private ResourceType( byte ): void,ResourceType( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public code( ): byte,code( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public isUnknown( ): boolean,isUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.resource.ResourceType.public static fromCode( byte ): ResourceType,static fromCode( byte ): ResourceType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,2
<Method>org.apache.kafka.common.resource.ResourceType.public static fromString( String ): ResourceType,static fromString( String ): ResourceType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Field>org.apache.kafka.common.resource.ResourceType->code,final code : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->ANY,static final ANY : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->CLUSTER,static final CLUSTER : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->CODE_TO_VALUE,static final CODE_TO_VALUE : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->DELEGATION_TOKEN,static final DELEGATION_TOKEN : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->GROUP,static final GROUP : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->TOPIC,static final TOPIC : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->TRANSACTIONAL_ID,static final TRANSACTIONAL_ID : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.resource.ResourceType->UNKNOWN,static final UNKNOWN : ResourceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security,org.apache.kafka.common.security,low,low,low,low,,,,,,58,188,,,,,,,,,,,,,4,4,0,188,6,3,0,0.333,0.667,58,,,,,,,
org.apache.kafka.common.security.JaasConfig,JaasConfig,low-medium,low,low-medium,low,1,14,12,2,0,20,60,57,2,0,4,0,0,0,0.333,0,0,0,,,,,60,,,,,,20,,,,,,,
"<Method>org.apache.kafka.common.security.JaasConfig.public JaasConfig( String, String ): void","JaasConfig( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,2,9,4
<Method>org.apache.kafka.common.security.JaasConfig.public getAppConfigurationEntry( String ): AppConfigurationEntry,getAppConfigurationEntry( String ): AppConfigurationEntry,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,2
<Method>org.apache.kafka.common.security.JaasConfig.private loginModuleControlFlag( String ): LoginModuleControlFlag,loginModuleControlFlag( String ): LoginModuleControlFlag,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,20,1,1,0
<Method>org.apache.kafka.common.security.JaasConfig.private parseAppConfigurationEntry( StreamTokenizer ): AppConfigurationEntry,parseAppConfigurationEntry( StreamTokenizer ): AppConfigurationEntry,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,15,1,6,0
<Field>org.apache.kafka.common.security.JaasConfig->configEntries,final configEntries : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasConfig->loginContextName,final loginContextName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.JaasContext,JaasContext,low-medium,low-medium,low-medium,medium-high,6,27,17,1,0,32,90,80,5,3,6,5,0,0.906,0.705,0.861,0,0,,,,,90,,,,,,32,,,,,,,
org.apache.kafka.common.security.JaasContext.Type,Type,low,low,low,low,0,0,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.security.JaasContext.public JaasContext( String, Type, Configuration, Password ): void","JaasContext( String, Type, Configuration, Password ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,4,3,5
<Method>org.apache.kafka.common.security.JaasContext.public configuration( ): Configuration,configuration( ): Configuration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.JaasContext.public configurationEntries( ): List,configurationEntries( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.JaasContext.public dynamicJaasConfig( ): Password,dynamicJaasConfig( ): Password,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.JaasContext.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.JaasContext.public static configEntryOption( List, String, String ): String","static configEntryOption( List, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,8,3,4,0
"<Method>org.apache.kafka.common.security.JaasContext.private static defaultContext( Type, String, String ): JaasContext","static defaultContext( Type, String, String ): JaasContext",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,26,3,6,2
"<Method>org.apache.kafka.common.security.JaasContext.static load( Type, String, String, Password ): JaasContext","static load( Type, String, String, Password ): JaasContext",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,4,3,0
<Method>org.apache.kafka.common.security.JaasContext.public static loadClientContext( Map ): JaasContext,static loadClientContext( Map ): JaasContext,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.common.security.JaasContext.public static loadServerContext( ListenerName, String, Map ): JaasContext","static loadServerContext( ListenerName, String, Map ): JaasContext",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,3,7,3
<Method>org.apache.kafka.common.security.JaasContext.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.JaasContext->configuration,final configuration : Configuration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->configurationEntries,final configurationEntries : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->dynamicJaasConfig,final dynamicJaasConfig : Password,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->GLOBAL_CONTEXT_NAME_CLIENT,static final GLOBAL_CONTEXT_NAME_CLIENT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->GLOBAL_CONTEXT_NAME_SERVER,static final GLOBAL_CONTEXT_NAME_SERVER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasContext->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.JaasUtils,JaasUtils,low,low,low,low,2,10,8,1,0,6,38,30,0,7,1,2,0,0.571,0,0,0,0,,,,,38,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.security.JaasUtils.private JaasUtils( ): void,JaasUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.JaasUtils.public static isZkSecurityEnabled( ): boolean,static isZkSecurityEnabled( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,0,10,7
<Method>org.apache.kafka.common.security.JaasUtils.public static zkSecuritySysConfigString( ): String,static zkSecuritySysConfigString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,3,8
<Field>org.apache.kafka.common.security.JaasUtils->DEFAULT_ZK_LOGIN_CONTEXT_NAME,static final DEFAULT_ZK_LOGIN_CONTEXT_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->DEFAULT_ZK_SASL_CLIENT,static final DEFAULT_ZK_SASL_CLIENT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->JAVA_LOGIN_CONFIG_PARAM,static final JAVA_LOGIN_CONFIG_PARAM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->SERVICE_NAME,static final SERVICE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->ZK_LOGIN_CONTEXT_NAME_KEY,static final ZK_LOGIN_CONTEXT_NAME_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.JaasUtils->ZK_SASL_CLIENT,static final ZK_SASL_CLIENT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.auth,org.apache.kafka.common.security.auth,low,low,medium-high,low,,,,,,62,177,,,,,,,,,,,,,14,8,6,177,44,4,0.429,0.083,0.488,62,,,,,,,
org.apache.kafka.common.security.auth.AuthenticateCallbackHandler,AuthenticateCallbackHandler,low,low,low,low,0,2,0,1,9,2,3,2,0,0,2,0,0,0,0.375,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.auth.AuthenticateCallbackHandler.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.security.auth.AuthenticateCallbackHandler.public abstract configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.security.auth.AuthenticationContext,AuthenticationContext,low,low,low,low,1,3,0,1,3,3,4,3,0,0,3,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.auth.AuthenticationContext.public abstract clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.AuthenticationContext.public abstract listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.AuthenticationContext.public abstract securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.DefaultPrincipalBuilder,DefaultPrincipalBuilder,low,low,low,low,3,4,1,1,0,4,9,7,0,0,3,0,0,0,0.5,0,0,0,,,,,9,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public buildPrincipal( TransportLayer, Authenticator ): Principal","buildPrincipal( TransportLayer, Authenticator ): Principal",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,1,0
<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.security.auth.KafkaPrincipal,KafkaPrincipal,low,low,low,low-medium,1,16,5,1,0,14,36,30,3,2,8,1,0,0.8,0.639,0.583,0,0,,,,,36,,,,,,14,,,,,,,
"<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public KafkaPrincipal( String, String ): void","KafkaPrincipal( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public getName( ): String,getName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public getPrincipalType( ): String,getPrincipalType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,2,4
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public static fromString( String ): KafkaPrincipal,static fromString( String ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public tokenAuthenticated( ): boolean,tokenAuthenticated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public tokenAuthenticated( boolean ): void,tokenAuthenticated( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->principalType,final principalType : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->ANONYMOUS,static final ANONYMOUS : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->USER_TYPE,static final USER_TYPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->tokenAuthenticated,volatile tokenAuthenticated : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.KafkaPrincipalBuilder,KafkaPrincipalBuilder,low,low,low,low,2,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.KafkaPrincipalBuilder.public abstract build( AuthenticationContext ): KafkaPrincipal,build( AuthenticationContext ): KafkaPrincipal,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.security.auth.Login,Login,low,low,low,low-medium,1,5,0,1,2,5,7,5,0,0,5,0,0,0,0.64,0,0,0,,,,,7,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.auth.Login.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.security.auth.Login.public abstract configure( Map, String, Configuration, AuthenticateCallbackHandler ): void","configure( Map, String, Configuration, AuthenticateCallbackHandler ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
<Method>org.apache.kafka.common.security.auth.Login.public abstract login( ): LoginContext,login( ): LoginContext,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.Login.public abstract serviceName( ): String,serviceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.Login.public abstract subject( ): Subject,subject( ): Subject,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.PlaintextAuthenticationContext,PlaintextAuthenticationContext,low,low,low,low,1,4,0,1,0,4,15,12,2,0,4,0,0,0.5,0.5,0.667,0,0,,,,,15,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext.public PlaintextAuthenticationContext( InetAddress, String ): void","PlaintextAuthenticationContext( InetAddress, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext.public clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext.public listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext.public securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext->clientAddress,final clientAddress : InetAddress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.PlaintextAuthenticationContext->listenerName,final listenerName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.PrincipalBuilder,PrincipalBuilder,low,low,low,low,2,3,0,1,1,3,6,3,0,0,3,0,0,0,0.5,0,0,0,,,,,6,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract buildPrincipal( TransportLayer, Authenticator ): Principal","buildPrincipal( TransportLayer, Authenticator ): Principal",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.security.auth.SaslAuthenticationContext,SaslAuthenticationContext,low,low,low,low-medium,1,5,0,1,0,5,21,16,4,0,5,0,0,0.75,0.64,0.6,0,0,,,,,21,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.security.auth.SaslAuthenticationContext.public SaslAuthenticationContext( SaslServer, SecurityProtocol, InetAddress, String ): void","SaslAuthenticationContext( SaslServer, SecurityProtocol, InetAddress, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.common.security.auth.SaslAuthenticationContext.public clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.SaslAuthenticationContext.public listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.SaslAuthenticationContext.public securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.SaslAuthenticationContext.public server( ): SaslServer,server( ): SaslServer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.auth.SaslAuthenticationContext->clientAddress,final clientAddress : InetAddress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SaslAuthenticationContext->listenerName,final listenerName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SaslAuthenticationContext->securityProtocol,final securityProtocol : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SaslAuthenticationContext->server,final server : SaslServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.SaslExtensions,SaslExtensions,low,low,low,low,0,9,4,1,1,8,18,15,1,1,5,0,0,0.625,0.533,0,0,0,,,,,18,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.security.auth.SaslExtensions.public SaslExtensions( Map ): void,SaslExtensions( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.auth.SaslExtensions.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,1,3,2
<Method>org.apache.kafka.common.security.auth.SaslExtensions.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.auth.SaslExtensions.public map( ): Map,map( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.auth.SaslExtensions.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.security.auth.SaslExtensions->extensionsMap,final extensionsMap : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SaslExtensions->NO_SASL_EXTENSIONS,static final NO_SASL_EXTENSIONS : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.SaslExtensionsCallback,SaslExtensionsCallback,low,low,low,low,1,3,1,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.auth.SaslExtensionsCallback.public extensions( ): SaslExtensions,extensions( ): SaslExtensions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.auth.SaslExtensionsCallback.public extensions( SaslExtensions ): void,extensions( SaslExtensions ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Field>org.apache.kafka.common.security.auth.SaslExtensionsCallback->extensions,extensions : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.SecurityProtocol,SecurityProtocol,low-medium,low,low,low,0,6,2,2,0,4,27,9,2,6,1,3,0,1.25,0.5,1,0,0,,,,,27,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.security.auth.SecurityProtocol.private SecurityProtocol( int, String ): void","SecurityProtocol( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.security.auth.SecurityProtocol.public static forId( short ): SecurityProtocol,static forId( short ): SecurityProtocol,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.auth.SecurityProtocol.public static forName( String ): SecurityProtocol,static forName( String ): SecurityProtocol,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.security.auth.SecurityProtocol.public static names( ): List,static names( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->CODE_TO_SECURITY_PROTOCOL,static final CODE_TO_SECURITY_PROTOCOL : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->NAMES,static final NAMES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->PLAINTEXT,static final PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SASL_PLAINTEXT,static final SASL_PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SASL_SSL,static final SASL_SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SecurityProtocol->SSL,static final SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.SecurityProviderCreator,SecurityProviderCreator,low,low,low,low,0,2,0,1,0,2,4,2,0,0,2,0,0,0,0.25,0,0,0,,,,,4,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.auth.SecurityProviderCreator.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.security.auth.SecurityProviderCreator.public abstract getProvider( ): Provider,getProvider( ): Provider,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.SslAuthenticationContext,SslAuthenticationContext,low,low,low,low,1,5,0,1,0,5,19,15,3,0,5,0,0,0.667,0.6,0.7,0,0,,,,,19,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.security.auth.SslAuthenticationContext.public SslAuthenticationContext( SSLSession, InetAddress, String ): void","SslAuthenticationContext( SSLSession, InetAddress, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.common.security.auth.SslAuthenticationContext.public clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.SslAuthenticationContext.public listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.auth.SslAuthenticationContext.public securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.auth.SslAuthenticationContext.public session( ): SSLSession,session( ): SSLSession,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.auth.SslAuthenticationContext->clientAddress,final clientAddress : InetAddress,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SslAuthenticationContext->listenerName,final listenerName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.auth.SslAuthenticationContext->session,final session : SSLSession,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.authenticator,org.apache.kafka.common.security.authenticator,low-medium,low-medium,medium-high,low,,,,,,324,1169,,,,,,,,,,,,,17,17,0,1169,8,7,0.059,0.467,0.474,324,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin,AbstractLogin,low,low,low,low-medium,2,8,3,1,2,5,45,19,4,1,5,0,0,0.7,0.64,0.333,0,0,,,,,45,,,,,,5,,,,,,,
org.apache.kafka.common.security.authenticator.AbstractLogin.DefaultLoginCallbackHandler,DefaultLoginCallbackHandler,low,low,low,low,0,7,4,1,0,7,20,19,0,0,3,0,0,0,0.533,0,0,0,,,,,20,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.AbstractLogin.protected configuration( ): Configuration,configuration( ): Configuration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.authenticator.AbstractLogin.public configure( Map, String, Configuration, AuthenticateCallbackHandler ): void","configure( Map, String, Configuration, AuthenticateCallbackHandler ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,3
<Method>org.apache.kafka.common.security.authenticator.AbstractLogin.protected contextName( ): String,contextName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.authenticator.AbstractLogin.public login( ): LoginContext,login( ): LoginContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,2,7
<Method>org.apache.kafka.common.security.authenticator.AbstractLogin.public subject( ): Subject,subject( ): Subject,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.common.security.authenticator.AbstractLogin->configuration,configuration : Configuration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.AbstractLogin->contextName,contextName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.AbstractLogin->loginCallbackHandler,loginCallbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.AbstractLogin->loginContext,loginContext : LoginContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.AbstractLogin->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.CredentialCache,CredentialCache,low,low,low,low,0,5,3,1,0,5,30,14,1,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,5,,,,,,,
org.apache.kafka.common.security.authenticator.CredentialCache.Cache<C>,Cache,low,low,low,low,0,8,3,1,0,5,14,11,2,0,5,0,0,0.5,0.5,0.3,0,0,,,,,14,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.security.authenticator.CredentialCache.public cache( String, Class ): Cache","cache( String, Class ): Cache",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,1
"<Method>org.apache.kafka.common.security.authenticator.CredentialCache.public createCache( String, Class ): Cache","createCache( String, Class ): Cache",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,1
<Field>org.apache.kafka.common.security.authenticator.CredentialCache->cacheMap,final cacheMap : ConcurrentHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder,DefaultKafkaPrincipalBuilder,low-medium,medium-high,low-medium,low-medium,12,52,17,1,0,20,76,69,5,0,7,1,0,0.7,0.681,0.833,0,0,,,,,76,,,,,,20,,,,,,,
"<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.private DefaultKafkaPrincipalBuilder( Authenticator, TransportLayer, PrincipalBuilder, KerberosShortNamer, SslPrincipalMapper ): void","DefaultKafkaPrincipalBuilder( Authenticator, TransportLayer, PrincipalBuilder, KerberosShortNamer, SslPrincipalMapper ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,5
"<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.public DefaultKafkaPrincipalBuilder( KerberosShortNamer, SslPrincipalMapper ): void","DefaultKafkaPrincipalBuilder( KerberosShortNamer, SslPrincipalMapper ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.private applyKerberosShortNamer( String ): KafkaPrincipal,applyKerberosShortNamer( String ): KafkaPrincipal,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,2,1
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.private applySslPrincipalMapper( Principal ): KafkaPrincipal,applySslPrincipalMapper( Principal ): KafkaPrincipal,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,4,1
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.public build( AuthenticationContext ): KafkaPrincipal,build( AuthenticationContext ): KafkaPrincipal,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,1,14,8
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,2
<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.private convertToKafkaPrincipal( Principal ): KafkaPrincipal,convertToKafkaPrincipal( Principal ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder.public static fromOldPrincipalBuilder( Authenticator, TransportLayer, PrincipalBuilder, KerberosShortNamer ): DefaultKafkaPrincipalBuilder","static fromOldPrincipalBuilder( Authenticator, TransportLayer, PrincipalBuilder, KerberosShortNamer ): DefaultKafkaPrincipalBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,3,0
<Field>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder->authenticator,final authenticator : Authenticator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder->kerberosShortNamer,final kerberosShortNamer : KerberosShortNamer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder->oldPrincipalBuilder,final oldPrincipalBuilder : PrincipalBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder->sslPrincipalMapper,final sslPrincipalMapper : SslPrincipalMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder->transportLayer,final transportLayer : TransportLayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.DefaultLogin,DefaultLogin,low-medium,low,low,low,0,2,0,2,0,2,6,5,0,0,2,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.DefaultLogin.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.authenticator.DefaultLogin.public serviceName( ): String,serviceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.security.authenticator.LoginManager,LoginManager,low-medium,medium-high,low-medium,low-medium,12,46,27,1,0,23,112,84,4,3,7,3,0,0.75,0.633,0.4,0,0,,,,,112,,,,,,23,,,,,,,
org.apache.kafka.common.security.authenticator.LoginManager.LoginMetadata<T>,LoginMetadata,low,low,low,low,1,6,3,1,0,6,20,16,3,0,3,0,0,0,0.5,0,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.LoginManager. cacheKey( ): Object, cacheKey( ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.authenticator.LoginManager.private LoginManager( JaasContext, String, Map, LoginMetadata ): void","LoginManager( JaasContext, String, Map, LoginMetadata ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,8,7
<Method>org.apache.kafka.common.security.authenticator.LoginManager.private acquire( ): LoginManager,acquire( ): LoginManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public release( ): void,release( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,0,5,11
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public serviceName( ): String,serviceName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.security.authenticator.LoginManager.public static acquireLoginManager( JaasContext, String, Class, Map ): LoginManager","static acquireLoginManager( JaasContext, String, Class, Map ): LoginManager",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,27,4,11,4
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public static closeAll( ): void,static closeAll( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,6,6
"<Method>org.apache.kafka.common.security.authenticator.LoginManager.private static configuredClassOrDefault( Map, JaasContext, String, String, Class ): Class","static configuredClassOrDefault( Map, JaasContext, String, String, Class ): Class",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,15,5,5,0
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public subject( ): Subject,subject( ): Subject,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.authenticator.LoginManager.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,1
<Field>org.apache.kafka.common.security.authenticator.LoginManager->login,final login : Login,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->loginCallbackHandler,final loginCallbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->loginMetadata,final loginMetadata : LoginMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->refCount,refCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->DYNAMIC_INSTANCES,static final DYNAMIC_INSTANCES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->LOGGER,static final LOGGER : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.LoginManager->STATIC_INSTANCES,static final STATIC_INSTANCES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator,SaslClientAuthenticator,high,very-high,medium-high,high,31,185,78,1,0,88,386,303,19,3,25,1,0,0.909,0.887,0.578,0,0,,,,,386,,,,,,88,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.ReauthInfo,ReauthInfo,low,low,low,low,2,16,11,1,0,12,46,38,7,0,7,0,0,0.886,0.524,0.667,0,0,,,,,46,,,,,,12,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,2,0,0,14,0,0,13,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public SaslClientAuthenticator( Map, AuthenticateCallbackHandler, String, Subject, String, String, String, boolean, TransportLayer, Time ): void","SaslClientAuthenticator( Map, AuthenticateCallbackHandler, String, Subject, String, String, String, boolean, TransportLayer, Time ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,31,10,4,16
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public authenticate( ): void,authenticate( ): void,high,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,3,68,0,33,10
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public clientSessionReauthenticationTimeNanos( ): Long,clientSessionReauthenticationTimeNanos( ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private createSaslClient( ): SaslClient,createSaslClient( ): SaslClient,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,2,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.protected createSaslHandshakeRequest( short ): SaslHandshakeRequest,createSaslHandshakeRequest( short ): SaslHandshakeRequest,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private createSaslToken( byte, boolean ): byte","createSaslToken( byte, boolean ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,23,2,5,2
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,3,4
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,4,4
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public getAndClearResponsesReceivedDuringReauthentication( ): List,getAndClearResponsesReceivedDuringReauthentication( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private handleSaslHandshakeResponse( SaslHandshakeResponse ): void,handleSaslHandshakeResponse( SaslHandshakeResponse ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,16,1,9,3
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private nextRequestHeader( ApiKeys, short ): RequestHeader","nextRequestHeader( ApiKeys, short ): RequestHeader",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,2,4
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public reauthenticate( ReauthenticationContext ): void,reauthenticate( ReauthenticationContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,1,9,3
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public reauthenticationLatencyMs( ): Long,reauthenticationLatencyMs( ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveKafkaResponse( ): AbstractResponse,receiveKafkaResponse( ): AbstractResponse,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,20,0,9,9
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveResponseOrToken( ): byte,receiveResponseOrToken( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,8,10
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private receiveToken( ): byte,receiveToken( ): byte,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,17,0,10,3
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.protected saslAuthenticateVersion( ApiVersionsResponse ): void,saslAuthenticateVersion( ApiVersionsResponse ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private send( Send ): void,send( Send ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendHandshakeRequest( ApiVersionsResponse ): void,sendHandshakeRequest( ApiVersionsResponse ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,5,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendInitialToken( ): void,sendInitialToken( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendSaslClientToken( byte, boolean ): boolean","sendSaslClientToken( byte, boolean ): boolean",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,2,8,6
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,7,11
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public static final firstPrincipal( Subject ): String,static final firstPrincipal( Subject ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,0
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->correlationId,correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->currentRequestHeader,currentRequestHeader : RequestHeader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->callbackHandler,final callbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->clientPrincipalName,final clientPrincipalName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->mechanism,final mechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->node,final node : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->reauthInfo,final reauthInfo : ReauthInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslClient,final saslClient : SaslClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->servicePrincipal,final servicePrincipal : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->subject,final subject : Subject,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->transportLayer,final transportLayer : TransportLayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->netInBuffer,netInBuffer : NetworkReceive,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->netOutBuffer,netOutBuffer : Send,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslAuthenticateVersion,saslAuthenticateVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->DISABLE_KAFKA_SASL_AUTHENTICATE_HEADER,static final DISABLE_KAFKA_SASL_AUTHENTICATE_HEADER : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->RNG,static final RNG : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler,SaslClientCallbackHandler,low-medium,low,low,low,5,27,22,1,0,21,47,45,1,0,3,0,0,0,0.533,0.667,0,0,,,,,47,,,,,,21,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler.public handle( Callback ): void,handle( Callback ): void,medium-high,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,4,40,1,39,2
<Field>org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler->mechanism,mechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslInternalConfigs,SaslInternalConfigs,low,low,low,low,0,1,0,1,0,1,3,1,0,1,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslInternalConfigs.private SaslInternalConfigs( ): void,SaslInternalConfigs( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.security.authenticator.SaslInternalConfigs->CREDENTIAL_LIFETIME_MS_SASL_NEGOTIATED_PROPERTY_KEY,static final CREDENTIAL_LIFETIME_MS_SASL_NEGOTIATED_PROPERTY_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator,SaslServerAuthenticator,high,very-high,medium-high,very-high,45,182,93,1,0,99,437,322,22,2,28,0,0,0.895,0.905,0.511,0,0,,,,,437,,,,,,99,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.ReauthInfo,ReauthInfo,low,low,low,low,6,29,19,1,0,21,81,73,7,0,8,0,0,0.886,0.562,0.667,1,0,,,,,81,,,,,,21,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,2,0,0,9,0,0,8,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public SaslServerAuthenticator( Map, Map, String, Map, KerberosShortNamer, ListenerName, SecurityProtocol, TransportLayer, Map, ChannelMetadataRegistry, Time ): void","SaslServerAuthenticator( Map, Map, String, Map, KerberosShortNamer, ListenerName, SecurityProtocol, TransportLayer, Map, ChannelMetadataRegistry, Time ): void",low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,36,11,7,17
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.protected apiVersionsResponse( ): ApiVersionsResponse,apiVersionsResponse( ): ApiVersionsResponse,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public authenticate( ): void,authenticate( ): void,medium-high,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,3,42,0,20,21
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private buildResponseOnAuthenticateFailure( RequestContext, AbstractResponse ): void","buildResponseOnAuthenticateFailure( RequestContext, AbstractResponse ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,2,4
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public connectedClientSupportsReauthentication( ): boolean,connectedClientSupportsReauthentication( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private createSaslKerberosServer( AuthenticateCallbackHandler, Map, Subject ): SaslServer","createSaslKerberosServer( AuthenticateCallbackHandler, Map, Subject ): SaslServer",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,3,7,2
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private createSaslServer( String ): void,createSaslServer( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,6,6
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.protected enableKafkaSaslAuthenticateHeaders( boolean ): void,enableKafkaSaslAuthenticateHeaders( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,3,4
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,4,5
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleApiVersionsRequest( RequestContext, ApiVersionsRequest ): void","handleApiVersionsRequest( RequestContext, ApiVersionsRequest ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,2,12,3
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public handleAuthenticationFailure( ): void,handleAuthenticationFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleHandshakeRequest( RequestContext, SaslHandshakeRequest ): String","handleHandshakeRequest( RequestContext, SaslHandshakeRequest ): String",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,2,9,5
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleKafkaRequest( byte ): boolean,handleKafkaRequest( byte ): boolean,low-medium,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,41,1,21,13
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private handleSaslToken( byte ): void,handleSaslToken( byte ): void,low-medium,very-high,medium-high,low,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,4,60,1,35,21
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,7,6
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public reauthenticate( ReauthenticationContext ): void,reauthenticate( ReauthenticationContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,1,11,5
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public reauthenticationLatencyMs( ): Long,reauthenticationLatencyMs( ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private sendAuthenticationFailureResponse( ): void,sendAuthenticationFailureResponse( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,3
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private sendKafkaResponse( RequestContext, AbstractResponse ): void","sendKafkaResponse( RequestContext, AbstractResponse ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private sendKafkaResponse( Send ): void,sendKafkaResponse( Send ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private serverAddress( ): InetAddress,serverAddress( ): InetAddress,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public serverSessionExpirationTimeNanos( ): Long,serverSessionExpirationTimeNanos( ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private setSaslState( SaslState ): void,setSaslState( SaslState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private setSaslState( SaslState, AuthenticationException ): void","setSaslState( SaslState, AuthenticationException ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,3,9
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->authenticationFailureSend,authenticationFailureSend : Send,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->enableKafkaSaslAuthenticateHeaders,enableKafkaSaslAuthenticateHeaders : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->callbackHandlers,final callbackHandlers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->connectionId,final connectionId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->connectionsMaxReauthMsByMechanism,final connectionsMaxReauthMsByMechanism : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->enabledMechanisms,final enabledMechanisms : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->listenerName,final listenerName : ListenerName,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->metadataRegistry,final metadataRegistry : ChannelMetadataRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->principalBuilder,final principalBuilder : KafkaPrincipalBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->reauthInfo,final reauthInfo : ReauthInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->securityProtocol,final securityProtocol : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->subjects,final subjects : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->transportLayer,final transportLayer : TransportLayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->netInBuffer,netInBuffer : NetworkReceive,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->netOutBuffer,netOutBuffer : Send,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->pendingException,pendingException : AuthenticationException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->pendingSaslState,pendingSaslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->saslMechanism,saslMechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->saslServer,saslServer : SaslServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator->MAX_RECEIVE_SIZE,static final MAX_RECEIVE_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler,SaslServerCallbackHandler,low,low,low,low-medium,2,14,11,1,0,9,27,24,1,1,5,0,0,0.667,0.686,0.667,0,0,,,,,27,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,9,1,3,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.private handleAuthorizeCallback( AuthorizeCallback ): void,handleAuthorizeCallback( AuthorizeCallback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,5,1
<Method>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler.private handleRealmCallback( RealmCallback ): void,handleRealmCallback( RealmCallback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,1
<Field>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler->mechanism,mechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.kerberos,org.apache.kafka.common.security.kerberos,low,low,low-medium,low,,,,,,133,499,,,,,,,,,,,,,8,8,0,499,5,3,0,0.375,0.625,133,,,,,,,
org.apache.kafka.common.security.kerberos.BadFormatString,BadFormatString,medium-high,low,low,low,0,2,0,4,0,2,5,4,0,0,2,0,0,0,0.167,0,0,0,,,,,5,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.BadFormatString. BadFormatString( String ): void, BadFormatString( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.security.kerberos.BadFormatString. BadFormatString( String, Throwable ): void"," BadFormatString( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.common.security.kerberos.KerberosClientCallbackHandler,KerberosClientCallbackHandler,low,low,low,low,1,13,10,1,0,10,33,32,0,0,3,0,0,0,0.533,0,0,0,,,,,33,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosClientCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.kerberos.KerberosClientCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,3,1,0
<Method>org.apache.kafka.common.security.kerberos.KerberosClientCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,26,1,10,0
org.apache.kafka.common.security.kerberos.KerberosError,KerberosError,low-medium,low,low,low,1,9,6,2,0,10,42,23,2,7,2,2,0,1.074,0.5,1,0,0,,,,,42,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.security.kerberos.KerberosError.private KerberosError( int, boolean ): void","KerberosError( int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.security.kerberos.KerberosError.public retriable( ): boolean,retriable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosError.private static fromErrorCode( int ): KerberosError,static fromErrorCode( int ): KerberosError,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosError.public static fromException( Exception ): KerberosError,static fromException( Exception ): KerberosError,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,6,3
<Field>org.apache.kafka.common.security.kerberos.KerberosError->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->retriable,final retriable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->CLIENT_NOT_YET_VALID,static final CLIENT_NOT_YET_VALID : KerberosError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->KRB_EXCEPTION_CLASS,static final KRB_EXCEPTION_CLASS : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->KRB_EXCEPTION_RETURN_CODE_METHOD,static final KRB_EXCEPTION_RETURN_CODE_METHOD : Method,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->REPLAY,static final REPLAY : KerberosError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->SERVER_NOT_FOUND,static final SERVER_NOT_FOUND : KerberosError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->TICKET_NOT_YET_VALID,static final TICKET_NOT_YET_VALID : KerberosError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosError->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosLogin,KerberosLogin,medium-high,low-medium,low-medium,medium-high,7,53,41,2,0,52,222,206,13,2,11,1,1,0.853,0.722,0.7,0,0.182,,,,,222,,,,,,52,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,6,6
"<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public configure( Map, String, Configuration, AuthenticateCallbackHandler ): void","configure( Map, String, Configuration, AuthenticateCallbackHandler ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,6,5
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentElapsedTime( ): long,currentElapsedTime( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private currentWallTime( ): long,currentWallTime( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private getRefreshTime( KerberosTicket ): long,getRefreshTime( KerberosTicket ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,1,10,7
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private getTGT( ): KerberosTicket,getTGT( ): KerberosTicket,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,11,2
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private hasSufficientTimeElapsed( ): boolean,hasSufficientTimeElapsed( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,2,5
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public login( ): LoginContext,login( ): LoginContext,very-high,low,high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,8,124,0,22,23
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private reLogin( ): void,reLogin( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,8,11
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public serviceName( ): String,serviceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.private static getServiceName( Map, String, Configuration ): String","static getServiceName( Map, String, Configuration ): String",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,13,3,6,0
<Method>org.apache.kafka.common.security.kerberos.KerberosLogin.public subject( ): Subject,subject( ): Subject,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isKrbTicket,isKrbTicket : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->isUsingTicketCache,isUsingTicketCache : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->kinitCmd,kinitCmd : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->lastLogin,lastLogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->loginContext,loginContext : LoginContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->minTimeBeforeRelogin,minTimeBeforeRelogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->principal,principal : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->serviceName,serviceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->RNG,static final RNG : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->t,t : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewJitter,ticketRenewJitter : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->ticketRenewWindowFactor,ticketRenewWindowFactor : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosLogin->subject,volatile subject : Subject,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosName,KerberosName,low,low,low,low,0,13,7,1,0,11,37,32,3,1,5,1,0,0.7,0.333,0.533,0,0,,,,,37,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.security.kerberos.KerberosName.public KerberosName( String, String, String ): void","KerberosName( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,0,3
<Method>org.apache.kafka.common.security.kerberos.KerberosName.public hostName( ): String,hostName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosName.public realm( ): String,realm( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosName.public serviceName( ): String,serviceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosName.public static parse( String ): KerberosName,static parse( String ): KerberosName,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,6,1
<Method>org.apache.kafka.common.security.kerberos.KerberosName.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,6,5
<Field>org.apache.kafka.common.security.kerberos.KerberosName->hostName,final hostName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosName->realm,final realm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosName->serviceName,final serviceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosName->NAME_PARSER,static final NAME_PARSER : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosRule,KerberosRule,low-medium,low,low-medium,low,2,25,21,1,0,33,112,99,10,2,4,2,0,0.396,0.5,0,0,0,,,,,112,,,,,,33,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosRule. KerberosRule( String ): void, KerberosRule( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,0,10
"<Method>org.apache.kafka.common.security.kerberos.KerberosRule. KerberosRule( String, int, String, String, String, String, boolean, boolean, boolean ): void"," KerberosRule( String, int, String, String, String, String, boolean, boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,13,9,2,10
<Method>org.apache.kafka.common.security.kerberos.KerberosRule. apply( String ): String, apply( String ): String,low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,19,1,9,13
"<Method>org.apache.kafka.common.security.kerberos.KerberosRule.static replaceParameters( String, String ): String","static replaceParameters( String, String ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,21,2,10,1
"<Method>org.apache.kafka.common.security.kerberos.KerberosRule.static replaceSubstitution( String, Pattern, String, boolean ): String","static replaceSubstitution( String, Pattern, String, boolean ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,3,0
<Method>org.apache.kafka.common.security.kerberos.KerberosRule.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,28,0,18,11
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->defaultRealm,final defaultRealm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->format,final format : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->fromPattern,final fromPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->isDefault,final isDefault : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->match,final match : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->numOfComponents,final numOfComponents : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->repeat,final repeat : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->toLowerCase,final toLowerCase : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->toPattern,final toPattern : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->toUpperCase,final toUpperCase : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->NON_SIMPLE_PATTERN,static final NON_SIMPLE_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->PARAMETER_PATTERN,static final PARAMETER_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosShortNamer,KerberosShortNamer,low,low,low,low,3,30,15,1,0,14,45,42,1,1,3,2,0,0.667,0.45,0.5,0,0,,,,,45,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.KerberosShortNamer.public KerberosShortNamer( List ): void,KerberosShortNamer( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.kerberos.KerberosShortNamer.public shortName( KerberosName ): String,shortName( KerberosName ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,9,2
"<Method>org.apache.kafka.common.security.kerberos.KerberosShortNamer.public static fromUnparsedRules( String, List ): KerberosShortNamer","static fromUnparsedRules( String, List ): KerberosShortNamer",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,0
"<Method>org.apache.kafka.common.security.kerberos.KerberosShortNamer.private static parseRules( String, List ): List","static parseRules( String, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,2,21,1
<Method>org.apache.kafka.common.security.kerberos.KerberosShortNamer.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.security.kerberos.KerberosShortNamer->principalToLocalRules,final principalToLocalRules : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosShortNamer->RULE_PARSER,static final RULE_PARSER : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.NoMatchingRule,NoMatchingRule,medium-high,low,low,low,0,1,0,4,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.NoMatchingRule. NoMatchingRule( String ): void, NoMatchingRule( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Package>org.apache.kafka.common.security.oauthbearer,org.apache.kafka.common.security.oauthbearer,low,low,low-medium,low,,,,,,62,227,,,,,,,,,,,,,6,5,1,227,11,2,0.167,0.154,0.679,62,,,,,,,
org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback,OAuthBearerExtensionsValidatorCallback,low,low,low,low-medium,3,22,9,1,0,10,26,21,4,0,8,0,0,0.714,0.625,0.571,0,0,,,,,26,,,,,,10,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public OAuthBearerExtensionsValidatorCallback( OAuthBearerToken, SaslExtensions ): void","OAuthBearerExtensionsValidatorCallback( OAuthBearerToken, SaslExtensions ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
"<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public error( String, String ): void","error( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,3,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public ignoredExtensions( ): Map,ignoredExtensions( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,4,3
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public inputExtensions( ): SaslExtensions,inputExtensions( ): SaslExtensions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public invalidExtensions( ): Map,invalidExtensions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public token( ): OAuthBearerToken,token( ): OAuthBearerToken,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public valid( String ): void,valid( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,6,3
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback.public validatedExtensions( ): Map,validatedExtensions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback->inputExtensions,final inputExtensions : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback->invalidExtensions,final invalidExtensions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback->token,final token : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerExtensionsValidatorCallback->validatedExtensions,final validatedExtensions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule,OAuthBearerLoginModule,low-medium,low-medium,low-medium,low-medium,6,36,31,1,0,30,135,117,7,3,8,0,0,0.714,0.656,0.2,0,0,,,,,135,,,,,,30,,,,,,,
org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.LoginState,LoginState,low,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,2,6
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,10,18
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.private committedTokenCount( ): int,committedTokenCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.private identifyExtensions( ): void,identifyExtensions( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,7,9
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.private identifyToken( ): void,identifyToken( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,0,10,4
"<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.public initialize( Subject, CallbackHandler, Map, Map ): void","initialize( Subject, CallbackHandler, Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,5,2
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,24,0,9,8
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,28,0,16,17
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->callbackHandler,callbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->extensionsRequiringCommit,extensionsRequiringCommit : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->loginState,loginState : LoginState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->myCommittedExtensions,myCommittedExtensions : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->myCommittedToken,myCommittedToken : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->EMPTY_EXTENSIONS,static final EMPTY_EXTENSIONS : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->OAUTHBEARER_MECHANISM,static final OAUTHBEARER_MECHANISM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->subject,subject : Subject,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule->tokenRequiringCommit,tokenRequiringCommit : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.OAuthBearerToken,OAuthBearerToken,low,low,low,low,0,5,0,1,1,5,7,5,0,0,5,0,0,0,0,0,0,0,,,,,7,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerToken.public abstract lifetimeMs( ): long,lifetimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerToken.public abstract principalName( ): String,principalName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerToken.public abstract scope( ): Set,scope( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerToken.public abstract startTimeMs( ): Long,startTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerToken.public abstract value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback,OAuthBearerTokenCallback,low,low,low,low,1,8,2,1,0,7,26,20,4,0,6,0,0,0.6,0.556,0.4,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public error( String, String, String ): void","error( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,2,4
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public errorCode( ): String,errorCode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public errorDescription( ): String,errorDescription( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public errorUri( ): String,errorUri( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public token( ): OAuthBearerToken,token( ): OAuthBearerToken,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback.public token( OAuthBearerToken ): void,token( OAuthBearerToken ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,4
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback->errorCode,errorCode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback->errorDescription,errorDescription : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback->errorUri,errorUri : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerTokenCallback->token,token : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback,OAuthBearerValidatorCallback,low,low,low,low,1,10,2,1,0,10,33,26,5,0,8,0,0,0.743,0.542,0.643,0,0,,,,,33,,,,,,10,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public OAuthBearerValidatorCallback( String ): void,OAuthBearerValidatorCallback( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,1
"<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public error( String, String, String ): void","error( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,2,4
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public errorOpenIDConfiguration( ): String,errorOpenIDConfiguration( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public errorScope( ): String,errorScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public errorStatus( ): String,errorStatus( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public token( ): OAuthBearerToken,token( ): OAuthBearerToken,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public token( OAuthBearerToken ): void,token( OAuthBearerToken ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,4
<Method>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback.public tokenValue( ): String,tokenValue( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback->errorOpenIDConfiguration,errorOpenIDConfiguration : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback->errorScope,errorScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback->errorStatus,errorStatus : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback->tokenValue,final tokenValue : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallback->token,token : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.oauthbearer.internals,org.apache.kafka.common.security.oauthbearer.internals,low,low-medium,low-medium,low,,,,,,126,418,,,,,,,,,,,,,10,10,0,418,1,7,0,0.875,0.125,126,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse,OAuthBearerClientInitialResponse,low-medium,low,low-medium,low,2,33,20,1,0,23,74,59,3,10,8,1,0,0.912,0.583,0.571,0,0,,,,,74,,,,,,23,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public OAuthBearerClientInitialResponse( String, SaslExtensions ): void","OAuthBearerClientInitialResponse( String, SaslExtensions ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public OAuthBearerClientInitialResponse( String, String, SaslExtensions ): void","OAuthBearerClientInitialResponse( String, String, SaslExtensions ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,3,2,3
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public OAuthBearerClientInitialResponse( byte ): void,OAuthBearerClientInitialResponse( byte ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,24,1,15,8
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public authorizationId( ): String,authorizationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public extensions( ): SaslExtensions,extensions( ): SaslExtensions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.private extensionsMessage( ): String,extensionsMessage( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public static validateExtensions( SaslExtensions ): void,static validateExtensions( SaslExtensions ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,12,1,10,4
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public toBytes( ): byte,toBytes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,5,7
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse.public tokenValue( ): String,tokenValue( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->authorizationId,final authorizationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->tokenValue,final tokenValue : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->saslExtensions,saslExtensions : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->AUTH_KEY,static final AUTH_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->AUTH_PATTERN,static final AUTH_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->CLIENT_INITIAL_RESPONSE_PATTERN,static final CLIENT_INITIAL_RESPONSE_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->EXTENSION_KEY_PATTERN,static final EXTENSION_KEY_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->EXTENSION_VALUE_PATTERN,static final EXTENSION_VALUE_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->KEY,static final KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->KVPAIRS,static final KVPAIRS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->SASLNAME,static final SASLNAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->SEPARATOR,static final SEPARATOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerClientInitialResponse->VALUE,static final VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin,OAuthBearerRefreshingLogin,low,low,low,low-medium,3,36,4,1,0,9,49,46,1,1,5,0,0,0.625,0.64,0,0,0,,,,,49,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin$4409;,Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin$4409;,low,low,low,low,0,0,0,2,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin$5229;,Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin$5229;,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,2
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin.public configure( Map, String, Configuration, AuthenticateCallbackHandler ): void","configure( Map, String, Configuration, AuthenticateCallbackHandler ): void",low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,31,4,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin.public serviceName( ): String,serviceName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin.public subject( ): Subject,subject( ): Subject,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin.public synchronized login( ): LoginContext,synchronized login( ): LoginContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin->expiringCredentialRefreshingLogin,expiringCredentialRefreshingLogin : ExpiringCredentialRefreshingLogin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient,OAuthBearerSaslClient,low-medium,low-medium,low-medium,medium-high,9,37,16,1,0,27,101,77,2,2,12,0,0,0.75,0.722,0.956,0,0,,,,,101,,,,,,27,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.OAuthBearerSaslClientFactory,OAuthBearerSaslClientFactory,low,low,low,low,1,9,6,1,0,6,17,16,0,0,2,0,0,0,0.25,0,0,0,,,,,17,,,,,,6,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.State,State,low,low,low,low,0,0,0,2,0,0,2,0,0,5,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public OAuthBearerSaslClient( AuthenticateCallbackHandler ): void,OAuthBearerSaslClient( AuthenticateCallbackHandler ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public callbackHandler( ): CallbackHandler,callbackHandler( ): CallbackHandler,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public evaluateChallenge( byte ): byte,evaluateChallenge( byte ): byte,low-medium,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,33,1,20,7
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public getMechanismName( ): String,getMechanismName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public getNegotiatedProperty( String ): Object,getNegotiatedProperty( String ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public hasInitialResponse( ): boolean,hasInitialResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.private retrieveCustomExtensions( ): SaslExtensions,retrieveCustomExtensions( ): SaslExtensions,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,5,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.private setState( State ): void,setState( State ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient->callbackHandler,final callbackHandler : CallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient->BYTE_CONTROL_A,static final BYTE_CONTROL_A : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClient->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler,OAuthBearerSaslClientCallbackHandler,low,low-medium,low-medium,medium-high,6,27,23,1,0,17,52,49,1,1,5,1,0,0.75,0.729,0.833,0,0,,,,,52,,,,,,17,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler$5708;,Lorg.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler$5708;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.public configured( ): boolean,configured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,1,5,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.private handleCallback( OAuthBearerTokenCallback ): void,handleCallback( OAuthBearerTokenCallback ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,25,1,19,1
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler.private static handleCallback( SaslExtensionsCallback, Subject ): void","static handleCallback( SaslExtensionsCallback, Subject ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,6,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler->configured,configured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientCallbackHandler->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientProvider,OAuthBearerSaslClientProvider,medium-high,low,low,low,1,5,3,5,0,2,8,6,0,1,1,1,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientProvider.protected OAuthBearerSaslClientProvider( ): void,OAuthBearerSaslClientProvider( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslClientProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer,OAuthBearerSaslServer,low-medium,medium-high,low-medium,medium-high,12,51,34,1,0,36,126,105,5,3,12,2,0,0.788,0.778,0.667,0,0,,,,,126,,,,,,36,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.OAuthBearerSaslServerFactory,OAuthBearerSaslServerFactory,low,low,low,low,0,6,3,1,0,4,12,11,0,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public OAuthBearerSaslServer( CallbackHandler ): void,OAuthBearerSaslServer( CallbackHandler ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,3
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,7,5
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public getAuthorizationID( ): String,getAuthorizationID( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public getMechanismName( ): String,getMechanismName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public getNegotiatedProperty( String ): Object,getNegotiatedProperty( String ): Object,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,5,5
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.private handleCallbackError( Exception ): void,handleCallbackError( Exception ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.private process( String, String, SaslExtensions ): byte","process( String, String, SaslExtensions ): byte",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,22,3,17,9
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.private processExtensions( OAuthBearerToken, SaslExtensions ): Map","processExtensions( OAuthBearerToken, SaslExtensions ): Map",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,2,11,2
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.private static jsonErrorResponse( String, String, String ): String","static jsonErrorResponse( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,3,4,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public static mechanismNamesCompatibleWithPolicy( Map ): String,static mechanismNamesCompatibleWithPolicy( Map ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,3,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,1
"<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->complete,complete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->errorMessage,errorMessage : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->extensions,extensions : SaslExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->callbackHandler,final callbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->INTERNAL_ERROR_ON_SERVER,static final INTERNAL_ERROR_ON_SERVER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->NEGOTIATED_PROPERTY_KEY_TOKEN,static final NEGOTIATED_PROPERTY_KEY_TOKEN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServer->tokenForNegotiatedProperty,tokenForNegotiatedProperty : OAuthBearerToken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServerProvider,OAuthBearerSaslServerProvider,medium-high,low,low,low,1,5,3,5,0,2,8,6,0,1,1,1,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServerProvider.protected OAuthBearerSaslServerProvider( ): void,OAuthBearerSaslServerProvider( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.oauthbearer.internals.expiring,org.apache.kafka.common.security.oauthbearer.internals.expiring,low,low,low-medium,low,,,,,,62,276,,,,,,,,,,,,,6,5,1,276,1,2,0.333,0.667,0,62,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredential,ExpiringCredential,low,low,low,low,0,4,0,1,1,4,5,4,0,0,4,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredential.public abstract absoluteLastRefreshTimeMs( ): Long,absoluteLastRefreshTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredential.public abstract expireTimeMs( ): long,expireTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredential.public abstract principalName( ): String,principalName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredential.public abstract startTimeMs( ): Long,startTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig,ExpiringCredentialRefreshConfig,low,low,low,low,1,8,2,1,0,6,23,17,5,0,6,0,0,0.8,0.556,0.667,0,0,,,,,23,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public ExpiringCredentialRefreshConfig( Map, boolean ): void","ExpiringCredentialRefreshConfig( Map, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,5,5
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public loginRefreshBufferSeconds( ): short,loginRefreshBufferSeconds( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public loginRefreshMinPeriodSeconds( ): short,loginRefreshMinPeriodSeconds( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public loginRefreshReloginAllowedBeforeLogout( ): boolean,loginRefreshReloginAllowedBeforeLogout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public loginRefreshWindowFactor( ): double,loginRefreshWindowFactor( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig.public loginRefreshWindowJitter( ): double,loginRefreshWindowJitter( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig->loginRefreshBufferSeconds,final loginRefreshBufferSeconds : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig->loginRefreshMinPeriodSeconds,final loginRefreshMinPeriodSeconds : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig->loginRefreshReloginAllowedBeforeLogout,final loginRefreshReloginAllowedBeforeLogout : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig->loginRefreshWindowFactor,final loginRefreshWindowFactor : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshConfig->loginRefreshWindowJitter,final loginRefreshWindowJitter : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin,ExpiringCredentialRefreshingLogin,low-medium,low-medium,low-medium,medium-high,6,53,42,1,1,39,248,177,13,3,15,0,0,0.881,0.793,0.867,0,0,,,,,248,,,,,,39,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.ExitRefresherThreadDueToIllegalStateException,ExitRefresherThreadDueToIllegalStateException,low,low,low,low,0,1,0,3,0,1,4,2,0,1,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.LoginContextFactory,LoginContextFactory,low,low,low,low,0,7,4,1,0,3,8,7,0,0,3,0,0,0,0.333,0,0,0,,,,,8,,,,,,3,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.Refresher,Refresher,low,low,low,low,4,49,20,1,0,9,42,41,0,0,1,0,0,0,0,0,0,0,,,,,42,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public ExpiringCredentialRefreshingLogin( String, Configuration, ExpiringCredentialRefreshConfig, AuthenticateCallbackHandler, Class ): void","ExpiringCredentialRefreshingLogin( String, Configuration, ExpiringCredentialRefreshConfig, AuthenticateCallbackHandler, Class ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,5,0,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public ExpiringCredentialRefreshingLogin( String, Configuration, ExpiringCredentialRefreshConfig, AuthenticateCallbackHandler, Class, LoginContextFactory, Time ): void","ExpiringCredentialRefreshingLogin( String, Configuration, ExpiringCredentialRefreshConfig, AuthenticateCallbackHandler, Class, LoginContextFactory, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,7,5,7
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public abstract expiringCredential( ): ExpiringCredential,abstract expiringCredential( ): ExpiringCredential,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public callbackHandler( ): AuthenticateCallbackHandler,callbackHandler( ): AuthenticateCallbackHandler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,7,5
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public configuration( ): Configuration,configuration( ): Configuration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public contextName( ): String,contextName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.private currentMs( ): long,currentMs( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.private isLogoutRequiredBeforeLoggingBackIn( ): boolean,isLogoutRequiredBeforeLoggingBackIn( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public login( ): LoginContext,login( ): LoginContext,low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,31,0,18,25
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.private principalLogText( ): String,principalLogText( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,4
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.private reLogin( ): void,reLogin( ): void,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,41,0,19,29
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.private refreshMs( long ): Long,refreshMs( long ): Long,low,low,medium-high,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,61,1,28,21
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public serviceName( ): String,serviceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin.public subject( ): Subject,subject( ): Subject,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->expiringCredential,expiringCredential : ExpiringCredential,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->callbackHandler,final callbackHandler : AuthenticateCallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->configuration,final configuration : Configuration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->contextName,final contextName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->expiringCredentialRefreshConfig,final expiringCredentialRefreshConfig : ExpiringCredentialRefreshConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->loginContextFactory,final loginContextFactory : LoginContextFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->mandatoryClassToSynchronizeOnPriorToRefresh,final mandatoryClassToSynchronizeOnPriorToRefresh : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->hasExpiringCredential,hasExpiringCredential : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->loginContext,loginContext : LoginContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->principalName,principalName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->refresherThread,refresherThread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->DELAY_SECONDS_BEFORE_NEXT_RETRY_WHEN_RELOGIN_FAILS,static final DELAY_SECONDS_BEFORE_NEXT_RETRY_WHEN_RELOGIN_FAILS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->RNG,static final RNG : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin->subject,volatile subject : Subject,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.oauthbearer.internals.unsecured,org.apache.kafka.common.security.oauthbearer.internals.unsecured,low-medium,low-medium,low-medium,low,,,,,,205,575,,,,,,,,,,,,,8,8,0,575,1,6,0,0.857,0.143,205,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerConfigException,OAuthBearerConfigException,medium-high,low,low,low,0,2,0,5,0,2,6,4,0,1,2,0,0,0,0.167,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerConfigException.public OAuthBearerConfigException( String ): void,OAuthBearerConfigException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerConfigException.public OAuthBearerConfigException( String, Throwable ): void","OAuthBearerConfigException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerConfigException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerIllegalTokenException,OAuthBearerIllegalTokenException,medium-high,low,low,low,1,5,3,5,0,3,10,7,1,1,2,0,0,1,0.25,0,0,0,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerIllegalTokenException.public OAuthBearerIllegalTokenException( OAuthBearerValidationResult ): void,OAuthBearerIllegalTokenException( OAuthBearerValidationResult ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerIllegalTokenException.public reason( ): OAuthBearerValidationResult,reason( ): OAuthBearerValidationResult,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerIllegalTokenException->reason,final reason : OAuthBearerValidationResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerIllegalTokenException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerScopeUtils,OAuthBearerScopeUtils,low,low,low,low,1,11,9,1,0,6,13,11,0,1,1,2,0,0,0.167,1,0,0,,,,,13,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerScopeUtils.private OAuthBearerScopeUtils( ): void,OAuthBearerScopeUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerScopeUtils.public static isValidScopeItem( String ): boolean,static isValidScopeItem( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerScopeUtils.public static parseScope( String ): List,static parseScope( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,1,7,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerScopeUtils->INDIVIDUAL_SCOPE_ITEM_PATTERN,static final INDIVIDUAL_SCOPE_ITEM_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws,OAuthBearerUnsecuredJws,medium-high,low,low-medium,medium-high,5,64,54,1,0,54,154,143,10,0,20,3,0,0.9,0.722,0.935,0,0,,,,,154,,,,,,54,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public OAuthBearerUnsecuredJws( String, String, String ): void","OAuthBearerUnsecuredJws( String, String, String ): void",low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,1,36,3,33,16
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.private calculateScope( ): Set,calculateScope( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,20,0,17,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.private calculateStartTimeMs( ): Long,calculateStartTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public claim( String, Class ): T","claim( String, Class ): T",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,8,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public claims( ): Map,claims( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public expirationTime( ): Number,expirationTime( ): Number,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.private extractCompactSerializationSplits( ): List,extractCompactSerializationSplits( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,7,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public header( ): Map,header( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public isClaimType( String, Class ): boolean","isClaimType( String, Class ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,10,2,2,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public issuedAt( ): Number,issuedAt( ): Number,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public lifetimeMs( ): long,lifetimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public principalClaimName( ): String,principalClaimName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public principalName( ): String,principalName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public rawClaim( String ): Object,rawClaim( String ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public scope( ): Set,scope( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public scopeClaimName( ): String,scopeClaimName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public splits( ): List,splits( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public startTimeMs( ): Long,startTimeMs( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.private static convert( JsonNode ): Object,static convert( JsonNode ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,6,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.private static convertClaimTimeInSecondsToMs( Number ): long,static convertClaimTimeInSecondsToMs( Number ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public static toMap( String ): Map,static toMap( String ): Map,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,1,14,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public subject( ): String,subject( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->claims,final claims : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->compactSerialization,final compactSerialization : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->header,final header : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->lifetime,final lifetime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->principalClaimName,final principalClaimName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->principalName,final principalName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->scope,final scope : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->scopeClaimName,final scopeClaimName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->splits,final splits : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws->startTimeMs,final startTimeMs : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler,OAuthBearerUnsecuredLoginCallbackHandler,medium-high,medium-high,low-medium,medium-high,12,72,64,1,0,66,177,156,4,15,18,0,0,0.961,0.8,0.833,0,0,,,,,177,,,,,,66,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler. time( Time ): void, time( Time ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private claimOrHeaderJsonArrayText( String, String ): String","claimOrHeaderJsonArrayText( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,2,4,2
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private claimOrHeaderJsonText( String, Number ): String","claimOrHeaderJsonText( String, Number ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,2
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private claimOrHeaderJsonText( String, String ): String","claimOrHeaderJsonText( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,4
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private commaPrependedStringNumberAndListClaimsJsonText( ): String,commaPrependedStringNumberAndListClaimsJsonText( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,17,0,34,10
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,3,10,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.public configured( ): boolean,configured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private confirmNotReservedClaimName( String ): String,confirmNotReservedClaimName( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private escape( String ): String,escape( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,6,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private expClaimText( long ): String,expClaimText( long ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,17,1,5,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private handleExtensionsCallback( SaslExtensionsCallback ): void,handleExtensionsCallback( SaslExtensionsCallback ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,10,3
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private handleTokenCallback( OAuthBearerTokenCallback ): void,handleTokenCallback( OAuthBearerTokenCallback ): void,low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,2,37,1,35,11
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private listJsonText( String ): String,listJsonText( String ): String,low-medium,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,2,29,1,17,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private option( String ): String,option( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private optionValue( String ): String,optionValue( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler.private optionValue( String, String ): String","optionValue( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,1,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->configured,configured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->moduleOptions,moduleOptions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->BACKSLASH,static final BACKSLASH : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->DEFAULT_LIFETIME_SECONDS_ONE_HOUR,static final DEFAULT_LIFETIME_SECONDS_ONE_HOUR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->DEFAULT_PRINCIPAL_CLAIM_NAME,static final DEFAULT_PRINCIPAL_CLAIM_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->DEFAULT_SCOPE_CLAIM_NAME,static final DEFAULT_SCOPE_CLAIM_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->DOUBLEQUOTE,static final DOUBLEQUOTE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->EXTENSION_PREFIX,static final EXTENSION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->LIFETIME_SECONDS_OPTION,static final LIFETIME_SECONDS_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->LIST_CLAIM_PREFIX,static final LIST_CLAIM_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->NUMBER_CLAIM_PREFIX,static final NUMBER_CLAIM_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->OPTION_PREFIX,static final OPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->PRINCIPAL_CLAIM_NAME_OPTION,static final PRINCIPAL_CLAIM_NAME_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->QUOTE,static final QUOTE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->RESERVED_CLAIMS,static final RESERVED_CLAIMS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->SCOPE_CLAIM_NAME_OPTION,static final SCOPE_CLAIM_NAME_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->STRING_CLAIM_PREFIX,static final STRING_CLAIM_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler->time,time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler,OAuthBearerUnsecuredValidatorCallbackHandler,low-medium,medium-high,low-medium,medium-high,12,69,40,1,0,32,105,95,3,6,11,0,0,0.958,0.766,0.833,0,0,,,,,105,,,,,,32,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler. time( Time ): void, time( Time ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private allowableClockSkewMs( ): int,allowableClockSkewMs( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,0,7,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,13,3,10,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.public configured( ): boolean,configured( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,19,1,9,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private handleCallback( OAuthBearerValidatorCallback ): void,handleCallback( OAuthBearerValidatorCallback ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,23,1,20,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private option( String ): String,option( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,2
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private principalClaimName( ): String,principalClaimName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,4,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private requiredScope( ): List,requiredScope( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,6,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler.private scopeClaimName( ): String,scopeClaimName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,4,1
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->configured,configured : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->moduleOptions,moduleOptions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->ALLOWABLE_CLOCK_SKEW_MILLIS_OPTION,static final ALLOWABLE_CLOCK_SKEW_MILLIS_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->OPTION_PREFIX,static final OPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->PRINCIPAL_CLAIM_NAME_OPTION,static final PRINCIPAL_CLAIM_NAME_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->REQUIRED_SCOPE_OPTION,static final REQUIRED_SCOPE_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->SCOPE_CLAIM_NAME_OPTION,static final SCOPE_CLAIM_NAME_OPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredValidatorCallbackHandler->time,time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult,OAuthBearerValidationResult,low,low,low,low,1,9,2,1,0,13,32,26,4,1,6,3,0,0.85,0.519,1,0,0,,,,,32,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.private OAuthBearerValidationResult( boolean, String, String, String ): void","OAuthBearerValidationResult( boolean, String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,4,0,4
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public failureDescription( ): String,failureDescription( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public failureOpenIdConfig( ): String,failureOpenIdConfig( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public failureScope( ): String,failureScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public static newFailure( String ): OAuthBearerValidationResult,static newFailure( String ): OAuthBearerValidationResult,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public static newFailure( String, String, String ): OAuthBearerValidationResult","static newFailure( String, String, String ): OAuthBearerValidationResult",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public static newSuccess( ): OAuthBearerValidationResult,static newSuccess( ): OAuthBearerValidationResult,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public success( ): boolean,success( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult.public throwExceptionIfFailed( ): void,throwExceptionIfFailed( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult->failureDescription,final failureDescription : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult->failureOpenIdConfig,final failureOpenIdConfig : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult->failureScope,final failureScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult->success,final success : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationResult->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils,OAuthBearerValidationUtils,low-medium,low,low-medium,low-medium,5,29,19,1,0,29,78,77,0,0,1,7,0,0,0.653,0,0,0,,,,,78,,,,,,29,,,,,,,
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.private OAuthBearerValidationUtils( ): void,OAuthBearerValidationUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.private static confirmNonNegative( int ): int,static confirmNonNegative( int ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.private static doesNotExistResult( boolean, String ): OAuthBearerValidationResult","static doesNotExistResult( boolean, String ): OAuthBearerValidationResult",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,3,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.public static validateClaimForExistenceAndType( OAuthBearerUnsecuredJws, boolean, String, Class ): OAuthBearerValidationResult","static validateClaimForExistenceAndType( OAuthBearerUnsecuredJws, boolean, String, Class ): OAuthBearerValidationResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,12,4,13,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.public static validateExpirationTime( OAuthBearerUnsecuredJws, long, int ): OAuthBearerValidationResult","static validateExpirationTime( OAuthBearerUnsecuredJws, long, int ): OAuthBearerValidationResult",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,3,9,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.public static validateIssuedAt( OAuthBearerUnsecuredJws, boolean, long, int ): OAuthBearerValidationResult","static validateIssuedAt( OAuthBearerUnsecuredJws, boolean, long, int ): OAuthBearerValidationResult",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,4,9,0
"<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.public static validateScope( OAuthBearerToken, List ): OAuthBearerValidationResult","static validateScope( OAuthBearerToken, List ): OAuthBearerValidationResult",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,2,8,0
<Method>org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerValidationUtils.public static validateTimeConsistency( OAuthBearerUnsecuredJws ): OAuthBearerValidationResult,static validateTimeConsistency( OAuthBearerUnsecuredJws ): OAuthBearerValidationResult,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,11,0
<Package>org.apache.kafka.common.security.plain,org.apache.kafka.common.security.plain,low,low,low,low,,,,,,11,36,,,,,,,,,,,,,2,2,0,36,2,0,0,0,1,11,,,,,,,
org.apache.kafka.common.security.plain.PlainAuthenticateCallback,PlainAuthenticateCallback,low,low,low,low,0,4,0,1,0,4,11,8,2,0,4,0,0,0.667,0.5,0.667,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainAuthenticateCallback.public PlainAuthenticateCallback( char ): void,PlainAuthenticateCallback( char ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.plain.PlainAuthenticateCallback.public authenticated( ): boolean,authenticated( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.plain.PlainAuthenticateCallback.public authenticated( boolean ): void,authenticated( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.plain.PlainAuthenticateCallback.public password( ): char,password( ): char,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.plain.PlainAuthenticateCallback->authenticated,authenticated : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.PlainAuthenticateCallback->password,final password : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.plain.PlainLoginModule,PlainLoginModule,low,low,low,low,0,9,4,1,0,7,25,20,0,2,5,0,0,0,0.6,1,0,0,,,,,25,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public initialize( Subject, CallbackHandler, Map, Map ): void","initialize( Subject, CallbackHandler, Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,4,6,2
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.plain.PlainLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.security.plain.PlainLoginModule->PASSWORD_CONFIG,static final PASSWORD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.PlainLoginModule->USERNAME_CONFIG,static final USERNAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.plain.internals,org.apache.kafka.common.security.plain.internals,low,low,low,low,,,,,,38,124,,,,,,,,,,,,,4,4,0,124,1,2,0,0.667,0.333,38,,,,,,,
org.apache.kafka.common.security.plain.internals.PlainSaslServer,PlainSaslServer,low-medium,low,low-medium,low-medium,2,22,13,1,0,23,88,68,3,1,10,0,0,0.75,0.64,0.556,0,0,,,,,88,,,,,,23,,,,,,,
org.apache.kafka.common.security.plain.internals.PlainSaslServer.PlainSaslServerFactory,PlainSaslServerFactory,low,low,low,low,0,5,3,1,0,5,15,14,0,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public PlainSaslServer( CallbackHandler ): void,PlainSaslServer( CallbackHandler ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,24,1,11,3
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.private extractTokens( String ): List,extractTokens( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,7,0
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public getAuthorizationID( ): String,getAuthorizationID( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,2
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public getMechanismName( ): String,getMechanismName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public getNegotiatedProperty( String ): Object,getNegotiatedProperty( String ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,1
"<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,1,1
<Field>org.apache.kafka.common.security.plain.internals.PlainSaslServer->authorizationId,authorizationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.internals.PlainSaslServer->complete,complete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.internals.PlainSaslServer->callbackHandler,final callbackHandler : CallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.internals.PlainSaslServer->PLAIN_MECHANISM,static final PLAIN_MECHANISM : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.plain.internals.PlainSaslServerProvider,PlainSaslServerProvider,medium-high,low,low,low,1,5,3,5,0,2,8,6,0,1,1,1,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServerProvider.protected PlainSaslServerProvider( ): void,PlainSaslServerProvider( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.common.security.plain.internals.PlainSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Field>org.apache.kafka.common.security.plain.internals.PlainSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler,PlainServerCallbackHandler,low,low,low,low,2,15,8,1,0,8,28,25,1,1,4,0,0,0.5,0.583,1,0,0,,,,,28,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler.protected authenticate( String, char ): boolean","authenticate( String, char ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,4,2
<Method>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Method>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,1,4,0
<Field>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler->jaasConfigEntries,jaasConfigEntries : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.plain.internals.PlainServerCallbackHandler->JAAS_USER_PREFIX,static final JAAS_USER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.scram,org.apache.kafka.common.security.scram,low,low,low,low,,,,,,17,61,,,,,,,,,,,,,4,4,0,61,10,0,0,0,1,17,,,,,,,
org.apache.kafka.common.security.scram.ScramCredential,ScramCredential,low,low,low,low,0,5,0,1,0,5,18,13,4,0,5,0,0,0.75,0.533,0.6,0,0,,,,,18,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.security.scram.ScramCredential.public ScramCredential( byte, byte, byte, int ): void","ScramCredential( byte, byte, byte, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
<Method>org.apache.kafka.common.security.scram.ScramCredential.public iterations( ): int,iterations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public salt( ): byte,salt( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public serverKey( ): byte,serverKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredential.public storedKey( ): byte,storedKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.scram.ScramCredential->iterations,final iterations : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->salt,final salt : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->serverKey,final serverKey : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramCredential->storedKey,final storedKey : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramCredentialCallback,ScramCredentialCallback,low,low,low,low,1,2,0,1,1,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramCredentialCallback.public scramCredential( ): ScramCredential,scramCredential( ): ScramCredential,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramCredentialCallback.public scramCredential( ScramCredential ): void,scramCredential( ScramCredential ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.security.scram.ScramCredentialCallback->scramCredential,scramCredential : ScramCredential,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramExtensionsCallback,ScramExtensionsCallback,low,low,low,low,0,2,0,1,0,2,6,4,1,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramExtensionsCallback.public extensions( ): Map,extensions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.ScramExtensionsCallback.public extensions( Map ): void,extensions( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.security.scram.ScramExtensionsCallback->extensions,extensions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.ScramLoginModule,ScramLoginModule,low,low,low,low,0,11,6,1,0,8,31,24,0,3,5,0,0,0,0.6,1,0,0,,,,,31,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public initialize( Subject, CallbackHandler, Map, Map ): void","initialize( Subject, CallbackHandler, Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,4,11,4
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.ScramLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.security.scram.ScramLoginModule->PASSWORD_CONFIG,static final PASSWORD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramLoginModule->TOKEN_AUTH_CONFIG,static final TOKEN_AUTH_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.ScramLoginModule->USERNAME_CONFIG,static final USERNAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.scram.internals,org.apache.kafka.common.security.scram.internals,low,low-medium,medium-high,low,,,,,,184,684,,,,,,,,,,,,,19,19,0,684,4,7,0,0.636,0.364,184,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramCredentialUtils,ScramCredentialUtils,low,low,low,low,3,28,22,1,0,14,39,34,0,4,1,4,0,0,0.6,0.667,0,0,,,,,39,,,,,,14,,,,,,,
<Method>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils.private ScramCredentialUtils( ): void,ScramCredentialUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils.public static createCache( CredentialCache, Collection ): void","static createCache( CredentialCache, Collection ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,3,0
<Method>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils.public static credentialFromString( String ): ScramCredential,static credentialFromString( String ): ScramCredential,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,10,1,17,8
<Method>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils.public static credentialToString( ScramCredential ): String,static credentialToString( ScramCredential ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,11,4
<Method>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils.private static toProps( String ): Properties,static toProps( String ): Properties,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,5,0
<Field>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils->ITERATIONS,static final ITERATIONS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils->SALT,static final SALT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils->SERVER_KEY,static final SERVER_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramCredentialUtils->STORED_KEY,static final STORED_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramExtensions,ScramExtensions,low-medium,low,low,low,2,13,5,2,0,4,9,8,0,0,4,0,0,0,0.5,0,0,0,,,,,9,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.scram.internals.ScramExtensions.public ScramExtensions( ): void,ScramExtensions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.security.scram.internals.ScramExtensions.public ScramExtensions( Map ): void,ScramExtensions( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.security.scram.internals.ScramExtensions.public ScramExtensions( String ): void,ScramExtensions( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.security.scram.internals.ScramExtensions.public tokenAuthenticated( ): boolean,tokenAuthenticated( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,0
org.apache.kafka.common.security.scram.internals.ScramFormatter,ScramFormatter,low-medium,low-medium,low-medium,low-medium,6,52,32,1,0,27,88,80,3,4,22,0,0,0.905,0.676,0.976,0,0,,,,,88,,,,,,27,,,,,,,
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public ScramFormatter( ScramMechanism ): void,ScramFormatter( ScramMechanism ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,3
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.private authMessage( ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte","authMessage( ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,5,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public authMessage( String, String, String ): String","authMessage( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public clientKey( byte ): byte,clientKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public clientProof( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte","clientProof( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,5,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public clientSignature( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte","clientSignature( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,2,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public generateCredential( String, int ): ScramCredential","generateCredential( String, int ): ScramCredential",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,5,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public hash( byte ): byte,hash( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public hi( byte, byte, int ): byte","hi( byte, byte, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,3,6,4
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public hmac( byte, byte ): byte","hmac( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,3
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public normalize( String ): byte,normalize( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public saltedPassword( String, byte, int ): byte","saltedPassword( String, byte, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public saslName( String ): String,saslName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,6,2
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public secureRandomBytes( ): byte,secureRandomBytes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public secureRandomString( ): String,secureRandomString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public serverKey( byte ): byte,serverKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public serverSignature( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte","serverSignature( byte, ClientFirstMessage, ServerFirstMessage, ClientFinalMessage ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,2,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public storedKey( byte ): byte,storedKey( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public storedKey( byte, byte ): byte","storedKey( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public toBytes( String ): byte,toBytes( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public username( String ): String,username( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,10,3
"<Method>org.apache.kafka.common.security.scram.internals.ScramFormatter.public xor( byte, byte ): byte","xor( byte, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,2,0,0
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->mac,final mac : Mac,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->messageDigest,final messageDigest : MessageDigest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->random,final random : SecureRandom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->COMMA,static final COMMA : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->EQUAL,static final EQUAL : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->EQUAL_THREE_D,static final EQUAL_THREE_D : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramFormatter->EQUAL_TWO_C,static final EQUAL_TWO_C : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMechanism,ScramMechanism,low-medium,low,low,low,0,11,3,2,0,8,32,19,4,3,5,3,0,0.918,0.5,0.857,0,0,,,,,32,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.private ScramMechanism( String, String, int ): void","ScramMechanism( String, String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,4
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public final mechanismName( ): String,final mechanismName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public hashAlgorithm( ): String,hashAlgorithm( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public macAlgorithm( ): String,macAlgorithm( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public minIterations( ): int,minIterations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public static forMechanismName( String ): ScramMechanism,static forMechanismName( String ): ScramMechanism,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public static isScram( String ): boolean,static isScram( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramMechanism.public static mechanismNames( ): Collection,static mechanismNames( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->hashAlgorithm,final hashAlgorithm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->macAlgorithm,final macAlgorithm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->mechanismName,final mechanismName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->minIterations,final minIterations : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->MECHANISMS_MAP,static final MECHANISMS_MAP : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->SCRAM_SHA_256,static final SCRAM_SHA_256 : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramMechanism->SCRAM_SHA_512,static final SCRAM_SHA_512 : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages,ScramMessages,low,low,low-medium,low,0,0,0,1,0,0,170,0,0,0,0,0,0,0,0,0,0,0,,,,,170,,,,,,0,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages.AbstractScramMessage,AbstractScramMessage,low,low,low,low,0,4,2,1,4,3,15,5,0,9,3,0,0,0,0.333,0,0,0,,,,,15,,,,,,3,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFinalMessage,ClientFinalMessage,low,low,low,low,0,17,10,2,0,9,37,27,3,1,8,0,0,0.679,0.5,0.429,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFirstMessage,ClientFirstMessage,low,low,low,low,2,25,12,2,0,13,46,34,4,1,9,0,0,0.657,0.667,0.393,0,0,,,,,46,,,,,,13,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages.ServerFinalMessage,ServerFinalMessage,low,low,low,low,0,13,8,2,0,9,35,27,2,1,5,0,0,0.5,0.467,0.167,0,0,,,,,35,,,,,,9,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramMessages.ServerFirstMessage,ServerFirstMessage,low,low,low,low,0,16,10,2,0,9,36,26,3,1,6,0,0,0.55,0.583,0.3,0,0,,,,,36,,,,,,9,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslClient,ScramSaslClient,low-medium,low-medium,low-medium,medium-high,9,70,30,1,0,30,144,103,9,1,12,0,0,0.733,0.76,0.889,0,0,,,,,144,,,,,,30,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslClient.ScramSaslClientFactory,ScramSaslClientFactory,low,low,low,low,1,10,6,1,0,6,24,23,0,0,2,0,0,0,0.25,0,0,0,,,,,24,,,,,,6,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslClient.State,State,low,low,low,low,0,0,0,2,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public ScramSaslClient( ScramMechanism, CallbackHandler ): void","ScramSaslClient( ScramMechanism, CallbackHandler ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,3
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public evaluateChallenge( byte ): byte,evaluateChallenge( byte ): byte,low-medium,medium-high,medium-high,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,5,51,1,26,24
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public getMechanismName( ): String,getMechanismName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public getNegotiatedProperty( String ): Object,getNegotiatedProperty( String ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.private handleServerFinalMessage( byte ): void,handleServerFinalMessage( byte ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,3,6
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.private handleServerFirstMessage( char ): ClientFinalMessage,handleServerFirstMessage( char ): ClientFinalMessage,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,8,10
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public hasInitialResponse( ): boolean,hasInitialResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.private setState( State ): void,setState( State ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClient.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->clientFinalMessage,clientFinalMessage : ClientFinalMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->clientFirstMessage,clientFirstMessage : ClientFirstMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->clientNonce,clientNonce : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->callbackHandler,final callbackHandler : CallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->formatter,final formatter : ScramFormatter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->mechanism,final mechanism : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->saltedPassword,saltedPassword : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->serverFirstMessage,serverFirstMessage : ServerFirstMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClient->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider,ScramSaslClientProvider,medium-high,low,low,low,1,6,4,5,0,3,9,7,0,1,1,1,0,0,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider.protected ScramSaslClientProvider( ): void,ScramSaslClientProvider( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslServer,ScramSaslServer,low-medium,medium-high,low-medium,medium-high,14,75,36,1,0,33,153,119,11,2,12,0,0,0.817,0.787,0.833,0,0,,,,,153,,,,,,33,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslServer.ScramSaslServerFactory,ScramSaslServerFactory,low,low,low,low,1,11,6,1,0,4,15,14,0,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,4,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslServer.State,State,low,low,low,low,0,0,0,2,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public ScramSaslServer( ScramMechanism, Map, CallbackHandler ): void","ScramSaslServer( ScramMechanism, Map, CallbackHandler ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,3
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.private clearCredentials( ): void,clearCredentials( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public dispose( ): void,dispose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public evaluateResponse( byte ): byte,evaluateResponse( byte ): byte,low-medium,very-high,medium-high,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,65,1,37,42
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public getAuthorizationID( ): String,getAuthorizationID( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public getMechanismName( ): String,getMechanismName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public getNegotiatedProperty( String ): Object,getNegotiatedProperty( String ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,5,3
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public isComplete( ): boolean,isComplete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.private setState( State ): void,setState( State ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public unwrap( byte, int, int ): byte","unwrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.private verifyClientProof( ClientFinalMessage ): void,verifyClientProof( ClientFinalMessage ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,5,5
"<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServer.public wrap( byte, int, int ): byte","wrap( byte, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,0
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->authorizationId,authorizationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->clientFirstMessage,clientFirstMessage : ClientFirstMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->callbackHandler,final callbackHandler : CallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->formatter,final formatter : ScramFormatter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->mechanism,final mechanism : ScramMechanism,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->scramCredential,scramCredential : ScramCredential,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->scramExtensions,scramExtensions : ScramExtensions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->serverFirstMessage,serverFirstMessage : ServerFirstMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->SUPPORTED_EXTENSIONS,static final SUPPORTED_EXTENSIONS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->tokenExpiryTimestamp,tokenExpiryTimestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServer->username,username : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramSaslServerProvider,ScramSaslServerProvider,medium-high,low,low,low,1,6,4,5,0,3,9,7,0,1,1,1,0,0,0,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServerProvider.protected ScramSaslServerProvider( ): void,ScramSaslServerProvider( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,3,0
<Method>org.apache.kafka.common.security.scram.internals.ScramSaslServerProvider.public static initialize( ): void,static initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Field>org.apache.kafka.common.security.scram.internals.ScramSaslServerProvider->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler,ScramServerCallbackHandler,low,low,low,low-medium,5,19,9,1,0,9,31,27,3,0,4,0,0,0.5,0.643,0.667,0,0,,,,,31,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler.public ScramServerCallbackHandler( Cache, DelegationTokenCache ): void","ScramServerCallbackHandler( Cache, DelegationTokenCache ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler.public configure( Map, String, List ): void","configure( Map, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Method>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler.public handle( Callback ): void,handle( Callback ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,18,1,10,5
<Field>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler->credentialCache,final credentialCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler->tokenCache,final tokenCache : DelegationTokenCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.scram.internals.ScramServerCallbackHandler->saslMechanism,saslMechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.ssl,org.apache.kafka.common.security.ssl,low,low,low-medium,low,,,,,,165,512,,,,,,,,,,,,,8,8,0,512,4,3,0,0.429,0.571,165,,,,,,,
org.apache.kafka.common.security.ssl.SslEngineBuilder,SslEngineBuilder,low-medium,low-medium,low-medium,low-medium,8,74,47,1,0,48,179,130,12,1,8,4,0,0.817,0.681,0.7,0,0,,,,,179,,,,,,48,,,,,,,
org.apache.kafka.common.security.ssl.SslEngineBuilder.SecurityStore,SecurityStore,low,low,low,low,3,16,12,1,0,9,35,29,5,0,5,0,0,0.533,0.467,0,0,0,,,,,35,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder. SslEngineBuilder( Map ): void, SslEngineBuilder( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,30,1,28,15
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder. configs( ): Map, configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.private createSSLContext( ): SSLContext,createSSLContext( ): SSLContext,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,29,0,19,21
"<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.public createSslEngine( Mode, String, int, String ): SSLEngine","createSslEngine( Mode, String, int, String ): SSLEngine",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,22,4,11,6
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.public keystore( ): SecurityStore,keystore( ): SecurityStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.public shouldBeRebuilt( Map ): boolean,shouldBeRebuilt( Map ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,8,1,3,5
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.public sslContext( ): SSLContext,sslContext( ): SSLContext,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.private static createKeystore( String, String, Password, Password ): SecurityStore","static createKeystore( String, String, Password, Password ): SecurityStore",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,9,4,0,0
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.private static createSecureRandom( String ): SecureRandom,static createSecureRandom( String ): SecureRandom,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,1,0
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.private static createSslClientAuth( String ): SslClientAuth,static createSslClientAuth( String ): SslClientAuth,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,7,1
"<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.private static createTruststore( String, String, Password ): SecurityStore","static createTruststore( String, String, Password ): SecurityStore",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,3,0,0
<Method>org.apache.kafka.common.security.ssl.SslEngineBuilder.public truststore( ): SecurityStore,truststore( ): SecurityStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->cipherSuites,final cipherSuites : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->enabledProtocols,final enabledProtocols : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->keystore,final keystore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->kmfAlgorithm,final kmfAlgorithm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->protocol,final protocol : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->provider,final provider : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->secureRandomImplementation,final secureRandomImplementation : SecureRandom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->sslClientAuth,final sslClientAuth : SslClientAuth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->sslContext,final sslContext : SSLContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->tmfAlgorithm,final tmfAlgorithm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->truststore,final truststore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslEngineBuilder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory,SslFactory,low-medium,low-medium,low-medium,medium-high,8,80,18,1,0,33,219,91,5,1,10,2,0,0.639,0.729,0.639,0,0,,,,,219,,,,,,33,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory.CertificateEntries,CertificateEntries,low,low,low,low,0,15,10,1,0,9,30,27,2,0,4,1,0,0,0.6,0,0,0,,,,,30,,,,,,9,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory.SslEngineValidator,SslEngineValidator,low,low,low,low,3,38,25,1,0,28,91,85,4,1,5,3,0,0.7,0.65,0,0,0,,,,,91,,,,,,28,,,,,,,
<Method>org.apache.kafka.common.security.ssl.SslFactory.public SslFactory( Mode ): void,SslFactory( Mode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.security.ssl.SslFactory.public SslFactory( Mode, String, boolean ): void","SslFactory( Mode, String, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.common.security.ssl.SslFactory.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,1,6,6
<Method>org.apache.kafka.common.security.ssl.SslFactory.private createNewSslEngineBuilder( Map ): SslEngineBuilder,createNewSslEngineBuilder( Map ): SslEngineBuilder,low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,4,32,1,20,14
"<Method>org.apache.kafka.common.security.ssl.SslFactory.public createSslEngine( String, int ): SSLEngine","createSslEngine( String, int ): SSLEngine",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,4
<Method>org.apache.kafka.common.security.ssl.SslFactory.public reconfigurableConfigs( ): Set,reconfigurableConfigs( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.security.ssl.SslFactory.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,4
<Method>org.apache.kafka.common.security.ssl.SslFactory.public sslContext( ): SSLContext,sslContext( ): SSLContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.security.ssl.SslFactory.public sslEngineBuilder( ): SslEngineBuilder,sslEngineBuilder( ): SslEngineBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.security.ssl.SslFactory.private static copyMapEntries( Map, Map, Set ): void","static copyMapEntries( Map, Map, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,1,0
"<Method>org.apache.kafka.common.security.ssl.SslFactory.private static copyMapEntry( Map, Map, K ): void","static copyMapEntry( Map, Map, K ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,3,0
<Method>org.apache.kafka.common.security.ssl.SslFactory.public validateReconfiguration( Map ): void,validateReconfiguration( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.common.security.ssl.SslFactory->endpointIdentification,endpointIdentification : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->clientAuthConfigOverride,final clientAuthConfigOverride : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->keystoreVerifiableUsingTruststore,final keystoreVerifiableUsingTruststore : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->mode,final mode : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->sslEngineBuilder,sslEngineBuilder : SslEngineBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.ssl.SslPrincipalMapper,SslPrincipalMapper,low,low,low-medium,low,1,30,13,1,0,15,114,37,1,3,3,3,0,0.938,0.389,0.5,0,0,,,,,114,,,,,,15,,,,,,,
org.apache.kafka.common.security.ssl.SslPrincipalMapper.NoMatchingRule,NoMatchingRule,low,low,low,low,0,1,0,4,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.security.ssl.SslPrincipalMapper.Rule,Rule,low,low,low,low,0,24,20,1,0,22,69,62,5,1,5,0,0,0.375,0.5,0,0,0,,,,,69,,,,,,22,,,,,,,
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.public SslPrincipalMapper( String ): void,SslPrincipalMapper( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.public getName( String ): String,getName( String ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,1,2
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.public static fromRules( String ): SslPrincipalMapper,static fromRules( String ): SslPrincipalMapper,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.private static parseRules( List ): List,static parseRules( List ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,1,16,1
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.private static splitRules( String ): List,static splitRules( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,5,1
<Method>org.apache.kafka.common.security.ssl.SslPrincipalMapper.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.security.ssl.SslPrincipalMapper->rules,final rules : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslPrincipalMapper->RULE_PARSER,static final RULE_PARSER : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslPrincipalMapper->RULE_PATTERN,static final RULE_PATTERN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslPrincipalMapper->RULE_SPLITTER,static final RULE_SPLITTER : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.token.delegation,org.apache.kafka.common.security.token.delegation,low,low,low,low,,,,,,32,101,,,,,,,,,,,,,2,2,0,101,2,1,0,0.333,0.667,32,,,,,,,
org.apache.kafka.common.security.token.delegation.DelegationToken,DelegationToken,low,low,low,low-medium,1,18,7,1,0,11,32,28,2,0,7,0,0,0.333,0.643,0.19,0,0,,,,,32,,,,,,11,,,,,,,
"<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public DelegationToken( TokenInformation, byte ): void","DelegationToken( TokenInformation, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,4,4
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,3
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public hmac( ): byte,hmac( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public hmacAsBase64String( ): String,hmacAsBase64String( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.DelegationToken.public tokenInfo( ): TokenInformation,tokenInfo( ): TokenInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.token.delegation.DelegationToken->hmac,hmac : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.DelegationToken->tokenInformation,tokenInformation : TokenInformation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.token.delegation.TokenInformation,TokenInformation,low-medium,low,low-medium,medium-high,1,25,10,1,0,21,69,61,6,0,14,0,0,0.654,0.75,0.462,0,0,,,,,69,,,,,,21,,,,,,,
"<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public TokenInformation( String, KafkaPrincipal, Collection, long, long, long ): void","TokenInformation( String, KafkaPrincipal, Collection, long, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,0,6
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,1,5,10
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public expiryTimestamp( ): long,expiryTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,0,5,8
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public issueTimestamp( ): long,issueTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public maxTimestamp( ): long,maxTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public owner( ): KafkaPrincipal,owner( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public ownerAsString( ): String,ownerAsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public ownerOrRenewer( KafkaPrincipal ): boolean,ownerOrRenewer( KafkaPrincipal ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public renewers( ): Collection,renewers( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public renewersAsString( ): Collection,renewersAsString( ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public setExpiryTimestamp( long ): void,setExpiryTimestamp( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,6
<Method>org.apache.kafka.common.security.token.delegation.TokenInformation.public tokenId( ): String,tokenId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->expiryTimestamp,expiryTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->issueTimestamp,issueTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->maxTimestamp,maxTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->owner,owner : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->renewers,renewers : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.TokenInformation->tokenId,tokenId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security.token.delegation.internals,org.apache.kafka.common.security.token.delegation.internals,low,low,low,low,,,,,,25,62,,,,,,,,,,,,,2,2,0,62,4,2,0,0.333,0.667,25,,,,,,,
org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache,DelegationTokenCache,low-medium,low-medium,low-medium,low-medium,8,38,18,1,0,21,51,46,4,0,13,0,0,0.727,0.641,0.652,1,0,,,,,51,,,,,,21,,,,,,,
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public DelegationTokenCache( Collection ): void,DelegationTokenCache( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public addToken( String, TokenInformation ): TokenInformation","addToken( String, TokenInformation ): TokenInformation",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public credential( String, String ): ScramCredential","credential( String, String ): ScramCredential",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public credentialCache( String ): Cache,credentialCache( String ): Cache,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public owner( String ): String,owner( String ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,3,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public removeCache( String ): void,removeCache( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public removeToken( String ): void,removeToken( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,4,3
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public token( String ): TokenInformation,token( String ): TokenInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public tokenForHmac( String ): TokenInformation,tokenForHmac( String ): TokenInformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,2
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public tokenIdForHmac( String ): String,tokenIdForHmac( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public tokens( ): Collection,tokens( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.public updateCache( DelegationToken, Map ): void","updateCache( DelegationToken, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,8,2
"<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache.private updateCredentials( String, Map ): void","updateCredentials( String, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,2,5,1
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache->credentialCache,credentialCache : CredentialCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache->hmacTokenIdCache,hmacTokenIdCache : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache->tokenCache,tokenCache : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCache->tokenIdHmacCache,tokenIdHmacCache : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback,DelegationTokenCredentialCallback,low-medium,low,low,low,0,4,0,2,0,4,11,8,2,0,4,0,0,0.667,0.5,0.667,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback.public tokenExpiryTimestamp( ): Long,tokenExpiryTimestamp( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback.public tokenExpiryTimestamp( Long ): void,tokenExpiryTimestamp( Long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback.public tokenOwner( ): String,tokenOwner( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback.public tokenOwner( String ): void,tokenOwner( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback->tokenExpiryTimestamp,tokenExpiryTimestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.token.delegation.internals.DelegationTokenCredentialCallback->tokenOwner,tokenOwner : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.serialization,org.apache.kafka.common.serialization,low,medium-high,very-high,low,,,,,,147,409,,,,,,,,,,,,,42,37,5,409,121,15,0.119,0.11,0.771,147,,,,,,,
org.apache.kafka.common.serialization.ByteArrayDeserializer,ByteArrayDeserializer,low,low,low,low,0,1,0,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.serialization.ByteArrayDeserializer.public deserialize( String, byte ): byte","deserialize( String, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
org.apache.kafka.common.serialization.ByteArraySerializer,ByteArraySerializer,low,low,low,low,0,1,0,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.serialization.ByteArraySerializer.public serialize( String, byte ): byte","serialize( String, byte ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
org.apache.kafka.common.serialization.ByteBufferDeserializer,ByteBufferDeserializer,low,low,low,low,0,2,1,1,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.ByteBufferDeserializer.public deserialize( String, byte ): ByteBuffer","deserialize( String, byte ): ByteBuffer",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,1,0
org.apache.kafka.common.serialization.ByteBufferSerializer,ByteBufferSerializer,low,low,low,low,0,7,6,1,0,5,13,12,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.serialization.ByteBufferSerializer.public serialize( String, ByteBuffer ): byte","serialize( String, ByteBuffer ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,2,8,0
org.apache.kafka.common.serialization.BytesDeserializer,BytesDeserializer,low,low,low,low,1,1,0,1,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.BytesDeserializer.public deserialize( String, byte ): Bytes","deserialize( String, byte ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,0,0
org.apache.kafka.common.serialization.BytesSerializer,BytesSerializer,low,low,low,low,1,2,1,1,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.BytesSerializer.public serialize( String, Bytes ): byte","serialize( String, Bytes ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,1,0
org.apache.kafka.common.serialization.Deserializer<T>,Deserializer,low,low,low,low,1,4,1,1,20,4,7,4,0,0,4,0,0,0,0.542,0,0,0,,,,,7,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.serialization.Deserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.serialization.Deserializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.serialization.Deserializer<T>.public deserialize( String, Headers, byte ): T","deserialize( String, Headers, byte ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,1,0
"<Method>org.apache.kafka.common.serialization.Deserializer<T>.public abstract deserialize( String, byte ): T","deserialize( String, byte ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.common.serialization.DoubleDeserializer,DoubleDeserializer,low,low,low,low,1,2,1,1,0,4,12,11,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.serialization.DoubleDeserializer.public deserialize( String, byte ): Double","deserialize( String, byte ): Double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,1,0
org.apache.kafka.common.serialization.DoubleSerializer,DoubleSerializer,low,low,low,low,0,2,1,1,0,2,16,15,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.DoubleSerializer.public serialize( String, Double ): byte","serialize( String, Double ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,2,1,0
org.apache.kafka.common.serialization.ExtendedDeserializer<T>,ExtendedDeserializer,low,low,low,low,1,1,0,1,1,1,21,1,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.ExtendedDeserializer.Wrapper<T>,Wrapper,low,low,low,low,2,9,4,1,0,8,18,16,1,0,5,1,0,0,0.643,0.6,0,0,,,,,18,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.serialization.ExtendedDeserializer<T>.public abstract deserialize( String, Headers, byte ): T","deserialize( String, Headers, byte ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.serialization.ExtendedSerializer<T>,ExtendedSerializer,low,low,low,low,1,1,0,1,1,1,21,1,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.ExtendedSerializer.Wrapper<T>,Wrapper,low,low,low,low,2,9,4,1,0,8,18,16,1,0,5,1,0,0,0.643,0.6,0,0,,,,,18,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.serialization.ExtendedSerializer<T>.public abstract serialize( String, Headers, T ): byte","serialize( String, Headers, T ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.common.serialization.FloatDeserializer,FloatDeserializer,low,low,low,low,1,2,1,1,0,4,12,11,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.serialization.FloatDeserializer.public deserialize( String, byte ): Float","deserialize( String, byte ): Float",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,1,0
org.apache.kafka.common.serialization.FloatSerializer,FloatSerializer,low,low,low,low,0,2,1,1,0,2,12,11,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.FloatSerializer.public serialize( String, Float ): byte","serialize( String, Float ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,2,1,0
org.apache.kafka.common.serialization.IntegerDeserializer,IntegerDeserializer,low,low,low,low,1,1,0,1,0,4,11,10,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.serialization.IntegerDeserializer.public deserialize( String, byte ): Integer","deserialize( String, byte ): Integer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,2,0,0
org.apache.kafka.common.serialization.IntegerSerializer,IntegerSerializer,low,low,low,low,0,2,1,1,0,2,10,9,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.IntegerSerializer.public serialize( String, Integer ): byte","serialize( String, Integer ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,2,1,0
org.apache.kafka.common.serialization.LongDeserializer,LongDeserializer,low,low,low,low,1,1,0,1,0,4,11,10,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.serialization.LongDeserializer.public deserialize( String, byte ): Long","deserialize( String, byte ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,2,0,0
org.apache.kafka.common.serialization.LongSerializer,LongSerializer,low,low,low,low,0,2,1,1,0,2,14,13,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.LongSerializer.public serialize( String, Long ): byte","serialize( String, Long ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,13,2,1,0
org.apache.kafka.common.serialization.Serde<T>,Serde,low,low,low,low,2,4,0,1,5,4,6,4,0,0,4,0,0,0,0.5,0,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.serialization.Serde<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.serialization.Serde<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.common.serialization.Serde<T>.public abstract deserializer( ): Deserializer,deserializer( ): Deserializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.serialization.Serde<T>.public abstract serializer( ): Serializer,serializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serdes,Serdes,low-medium,low,low-medium,low-medium,3,14,11,1,0,25,106,52,0,0,0,13,0,0,0.692,0,0,0,,,,,106,,,,,,25,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteArraySerde,ByteArraySerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.ByteBufferSerde,ByteBufferSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.BytesSerde,BytesSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.DoubleSerde,DoubleSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.FloatSerde,FloatSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.IntegerSerde,IntegerSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.LongSerde,LongSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.ShortSerde,ShortSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.StringSerde,StringSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.UUIDSerde,UUIDSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.VoidSerde,VoidSerde,low,low,low,low,2,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.serialization.Serdes.WrapperSerde<T>,WrapperSerde,low,low,low,low,2,9,4,1,14,5,20,17,2,0,5,0,0,0.25,0.64,0.1,0,0,,,,,20,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.serialization.Serdes.public static ByteArray( ): Serde,static ByteArray( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static ByteBuffer( ): Serde,static ByteBuffer( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Bytes( ): Serde,static Bytes( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Double( ): Serde,static Double( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Float( ): Serde,static Float( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Integer( ): Serde,static Integer( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Long( ): Serde,static Long( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Short( ): Serde,static Short( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static String( ): Serde,static String( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static UUID( ): Serde,static UUID( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static Void( ): Serde,static Void( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.serialization.Serdes.public static serdeFrom( Class ): Serde,static serdeFrom( Class ): Serde,low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,2,24,1,20,0
"<Method>org.apache.kafka.common.serialization.Serdes.public static serdeFrom( Serializer, Deserializer ): Serde","static serdeFrom( Serializer, Deserializer ): Serde",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
org.apache.kafka.common.serialization.Serializer<T>,Serializer,low,low,low,low,1,4,1,1,19,4,7,4,0,0,4,0,0,0,0.542,0,0,0,,,,,7,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.serialization.Serializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.serialization.Serializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.serialization.Serializer<T>.public serialize( String, Headers, T ): byte","serialize( String, Headers, T ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,1,0
"<Method>org.apache.kafka.common.serialization.Serializer<T>.public abstract serialize( String, T ): byte","serialize( String, T ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.common.serialization.ShortDeserializer,ShortDeserializer,low,low,low,low,1,1,0,1,0,4,11,10,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.serialization.ShortDeserializer.public deserialize( String, byte ): Short","deserialize( String, byte ): Short",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,2,0,0
org.apache.kafka.common.serialization.ShortSerializer,ShortSerializer,low,low,low,low,0,2,1,1,0,2,8,7,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.ShortSerializer.public serialize( String, Short ): byte","serialize( String, Short ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,2,1,0
org.apache.kafka.common.serialization.StringDeserializer,StringDeserializer,low,low,low,low,1,3,1,1,0,7,19,17,1,0,2,0,0,0,0.4,0,0,0,,,,,19,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.serialization.StringDeserializer.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,2,2,1
"<Method>org.apache.kafka.common.serialization.StringDeserializer.public deserialize( String, byte ): String","deserialize( String, byte ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,0,2
<Field>org.apache.kafka.common.serialization.StringDeserializer->encoding,encoding : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.serialization.StringSerializer,StringSerializer,low,low,low,low,1,4,2,1,0,7,19,17,1,0,2,0,0,0,0.375,0,0,0,,,,,19,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.serialization.StringSerializer.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,2,2,1
"<Method>org.apache.kafka.common.serialization.StringSerializer.public serialize( String, String ): byte","serialize( String, String ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,1,2
<Field>org.apache.kafka.common.serialization.StringSerializer->encoding,encoding : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.serialization.UUIDDeserializer,UUIDDeserializer,low,low,low,low,1,4,2,1,0,9,21,19,1,0,2,0,0,0,0.4,0,0,0,,,,,21,,,,,,9,,,,,,,
"<Method>org.apache.kafka.common.serialization.UUIDDeserializer.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,2,2,1
"<Method>org.apache.kafka.common.serialization.UUIDDeserializer.public deserialize( String, byte ): UUID","deserialize( String, byte ): UUID",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,1,2
<Field>org.apache.kafka.common.serialization.UUIDDeserializer->encoding,encoding : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.serialization.UUIDSerializer,UUIDSerializer,low,low,low,low,1,5,3,1,0,7,19,17,1,0,2,0,0,0,0.4,0,0,0,,,,,19,,,,,,7,,,,,,,
"<Method>org.apache.kafka.common.serialization.UUIDSerializer.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,2,2,1
"<Method>org.apache.kafka.common.serialization.UUIDSerializer.public serialize( String, UUID ): byte","serialize( String, UUID ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,2,2
<Field>org.apache.kafka.common.serialization.UUIDSerializer->encoding,encoding : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.serialization.VoidDeserializer,VoidDeserializer,low,low,low,low,0,1,0,1,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.serialization.VoidDeserializer.public deserialize( String, byte ): Void","deserialize( String, byte ): Void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,0,0
org.apache.kafka.common.serialization.VoidSerializer,VoidSerializer,low,low,low,low,0,1,0,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.serialization.VoidSerializer.public serialize( String, Void ): byte","serialize( String, Void ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Package>org.apache.kafka.common.utils,org.apache.kafka.common.utils,medium-high,medium-high,very-high,low,,,,,,799,3224,,,,,,,,,,,,,60,52,8,3224,282,12,0.167,0.041,0.792,799,,,,,,,
org.apache.kafka.common.utils.AbstractIterator<T>,AbstractIterator,low,low,low,low,1,7,3,1,10,14,43,38,2,0,7,0,0,0.375,0,0.667,0,0,,,,,43,,,,,,14,,,,,,,
org.apache.kafka.common.utils.AbstractIterator.State,State,low,low,low,low,0,0,0,2,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected abstract makeNext( ): T,abstract makeNext( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected allDone( ): T,allDone( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,0,1,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.private maybeComputeNext( ): Boolean,maybeComputeNext( ): Boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,1,4
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public next( ): T,next( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,1,3
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->next,next : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.AppInfoParser,AppInfoParser,low,low,low-medium,low,4,37,15,1,0,12,73,33,0,4,0,7,0,1,0.514,0.833,1,0,,,,,73,,,,,,12,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfo,AppInfo,low,low,low,low,1,7,3,1,0,4,16,14,1,0,4,0,0,0,0.375,0.833,1,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfoMBean,AppInfoMBean,low,low,low,low,0,3,0,1,1,3,4,3,0,0,3,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.ImmutableValue<T>,ImmutableValue,low,low,low,low,2,2,0,1,0,2,7,5,1,0,2,0,0,0,0.375,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.utils.AppInfoParser.public static getCommitId( ): String,static getCommitId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.AppInfoParser.public static getVersion( ): String,static getVersion( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.utils.AppInfoParser.private static metricName( Metrics, String ): MetricName","static metricName( Metrics, String ): MetricName",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.AppInfoParser.private static registerMetrics( Metrics, AppInfo ): void","static registerMetrics( Metrics, AppInfo ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,9,0
"<Method>org.apache.kafka.common.utils.AppInfoParser.public static synchronized registerAppInfo( String, String, Metrics, long ): void","static synchronized registerAppInfo( String, String, Metrics, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,4,5,1
"<Method>org.apache.kafka.common.utils.AppInfoParser.public static synchronized unregisterAppInfo( String, String, Metrics ): void","static synchronized unregisterAppInfo( String, String, Metrics ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,3,6,1
<Method>org.apache.kafka.common.utils.AppInfoParser.private static unregisterMetrics( Metrics ): void,static unregisterMetrics( Metrics ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,6,0
<Field>org.apache.kafka.common.utils.AppInfoParser->COMMIT_ID,static final COMMIT_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AppInfoParser->DEFAULT_VALUE,static final DEFAULT_VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AppInfoParser->VERSION,static final VERSION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AppInfoParser->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteBufferInputStream,ByteBufferInputStream,low-medium,low,low,low,0,8,5,2,0,5,14,12,1,0,3,0,1,0,0.5,0,0,0.667,,,,,14,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.ByteBufferInputStream.public ByteBufferInputStream( ByteBuffer ): void,ByteBufferInputStream( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.ByteBufferInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,2
"<Method>org.apache.kafka.common.utils.ByteBufferInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,4,3
<Field>org.apache.kafka.common.utils.ByteBufferInputStream->buffer,final buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteBufferOutputStream,ByteBufferOutputStream,low-medium,low,low,low-medium,0,27,16,2,0,16,47,42,3,1,14,0,1,0.727,0.643,0.41,0,0.143,,,,,47,,,,,,16,,,,,,,
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ByteBufferOutputStream( ByteBuffer ): void,ByteBufferOutputStream( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,3
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ByteBufferOutputStream( int ): void,ByteBufferOutputStream( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ByteBufferOutputStream( int, boolean ): void","ByteBufferOutputStream( int, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,2,0
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public buffer( ): ByteBuffer,buffer( ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public ensureRemaining( int ): void,ensureRemaining( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.private expandBuffer( int ): void,expandBuffer( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,9,9
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public limit( ): int,limit( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public position( ): int,position( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public position( int ): void,position( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public remaining( ): int,remaining( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public write( ByteBuffer ): void,write( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
"<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,1
<Method>org.apache.kafka.common.utils.ByteBufferOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->buffer,buffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->initialCapacity,final initialCapacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->initialPosition,final initialPosition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferOutputStream->REALLOCATION_FACTOR,static final REALLOCATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteBufferUnmapper,ByteBufferUnmapper,low,low,low-medium,low-medium,1,28,24,1,0,11,59,43,0,2,1,5,0,0,0.633,0,0,0,,,,,59,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.private ByteBufferUnmapper( ): void,ByteBufferUnmapper( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.private static lookupUnmapMethodHandle( ): MethodHandle,static lookupUnmapMethodHandle( ): MethodHandle,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,3,0
<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.private static nonNull( Object ): boolean,static nonNull( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.public static unmap( String, ByteBuffer ): void","static unmap( String, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,2,3
<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.private static unmapJava7Or8( Lookup ): MethodHandle,static unmapJava7Or8( Lookup ): MethodHandle,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,1,20,0
<Method>org.apache.kafka.common.utils.ByteBufferUnmapper.private static unmapJava9( Lookup ): MethodHandle,static unmapJava9( Lookup ): MethodHandle,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,7,0
<Field>org.apache.kafka.common.utils.ByteBufferUnmapper->UNMAP,static final UNMAP : MethodHandle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ByteBufferUnmapper->UNMAP_NOT_SUPPORTED_EXCEPTION,static final UNMAP_NOT_SUPPORTED_EXCEPTION : RuntimeException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ByteUtils,ByteUtils,low-medium,low,low-medium,medium-high,0,38,19,1,0,40,131,129,0,1,1,25,0,0,0.726,1,0,0,,,,,131,,,,,,40,,,,,,,
<Method>org.apache.kafka.common.utils.ByteUtils.private ByteUtils( ): void,ByteUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.ByteUtils.private static illegalVarintException( int ): IllegalArgumentException,static illegalVarintException( int ): IllegalArgumentException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.private static illegalVarlongException( long ): IllegalArgumentException,static illegalVarlongException( long ): IllegalArgumentException,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedInt( ByteBuffer ): long,static readUnsignedInt( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedInt( ByteBuffer, int ): long","static readUnsignedInt( ByteBuffer, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedIntLE( InputStream ): int,static readUnsignedIntLE( InputStream ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedIntLE( byte, int ): int","static readUnsignedIntLE( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedVarint( ByteBuffer ): int,static readUnsignedVarint( ByteBuffer ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,2,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readUnsignedVarint( DataInput ): int,static readUnsignedVarint( DataInput ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,2,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readVarint( ByteBuffer ): int,static readVarint( ByteBuffer ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readVarint( DataInput ): int,static readVarint( DataInput ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readVarlong( ByteBuffer ): long,static readVarlong( ByteBuffer ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,2,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static readVarlong( DataInput ): long,static readVarlong( DataInput ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,2,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static sizeOfUnsignedVarint( int ): int,static sizeOfUnsignedVarint( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static sizeOfVarint( int ): int,static sizeOfVarint( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.utils.ByteUtils.public static sizeOfVarlong( long ): int,static sizeOfVarlong( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedInt( ByteBuffer, int, long ): void","static writeUnsignedInt( ByteBuffer, int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedInt( ByteBuffer, long ): void","static writeUnsignedInt( ByteBuffer, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedIntLE( OutputStream, int ): void","static writeUnsignedIntLE( OutputStream, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedIntLE( byte, int, int ): void","static writeUnsignedIntLE( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedVarint( int, ByteBuffer ): void","static writeUnsignedVarint( int, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeUnsignedVarint( int, DataOutput ): void","static writeUnsignedVarint( int, DataOutput ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeVarint( int, ByteBuffer ): void","static writeVarint( int, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeVarint( int, DataOutput ): void","static writeVarint( int, DataOutput ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeVarlong( long, ByteBuffer ): void","static writeVarlong( long, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,2,0
"<Method>org.apache.kafka.common.utils.ByteUtils.public static writeVarlong( long, DataOutput ): void","static writeVarlong( long, DataOutput ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
<Field>org.apache.kafka.common.utils.ByteUtils->EMPTY_BUF,static final EMPTY_BUF : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Bytes,Bytes,low-medium,low,low-medium,low-medium,0,16,11,1,0,26,89,62,2,3,6,3,0,0.833,0.644,0.464,0,0,,,,,89,,,,,,26,,,,,,,
org.apache.kafka.common.utils.Bytes.ByteArrayComparator,ByteArrayComparator,low,low,low,low,0,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Bytes.LexicographicByteArrayComparator,LexicographicByteArrayComparator,low,low,low,low,0,2,1,1,0,8,18,17,0,0,2,0,0,0,0.167,0,0,0,,,,,18,,,,,,8,,,,,,,
<Method>org.apache.kafka.common.utils.Bytes.public Bytes( byte ): void,Bytes( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.common.utils.Bytes.public compareTo( Bytes ): int,compareTo( Bytes ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.utils.Bytes.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,1,4,1
<Method>org.apache.kafka.common.utils.Bytes.public get( ): byte,get( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Bytes.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,4
<Method>org.apache.kafka.common.utils.Bytes.public static increment( Bytes ): Bytes,static increment( Bytes ): Bytes,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,14,1,2,0
"<Method>org.apache.kafka.common.utils.Bytes.private static toString( byte, int, int ): String","static toString( byte, int, int ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,17,3,7,2
<Method>org.apache.kafka.common.utils.Bytes.public static wrap( byte ): Bytes,static wrap( byte ): Bytes,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Method>org.apache.kafka.common.utils.Bytes.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Field>org.apache.kafka.common.utils.Bytes->bytes,final bytes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->hashCode,hashCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->BYTES_LEXICO_COMPARATOR,static final BYTES_LEXICO_COMPARATOR : ByteArrayComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->EMPTY,static final EMPTY : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Bytes->HEX_CHARS_UPPER,static final HEX_CHARS_UPPER : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Checksums,Checksums,low,low,low,low,0,12,8,1,0,7,25,24,0,0,1,4,0,0,0.4,0,0,0,,,,,25,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.utils.Checksums.private Checksums( ): void,Checksums( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.utils.Checksums.public static update( Checksum, ByteBuffer, int ): void","static update( Checksum, ByteBuffer, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.common.utils.Checksums.public static update( Checksum, ByteBuffer, int, int ): void","static update( Checksum, ByteBuffer, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,4,8,0
"<Method>org.apache.kafka.common.utils.Checksums.public static updateInt( Checksum, int ): void","static updateInt( Checksum, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.common.utils.Checksums.public static updateLong( Checksum, long ): void","static updateLong( Checksum, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,8,0
org.apache.kafka.common.utils.CircularIterator<T>,CircularIterator,low,low,low,low,0,8,3,1,0,6,20,17,2,0,5,0,0,0.25,0.4,0.7,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public CircularIterator( List ): void,CircularIterator( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public next( ): T,next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,5
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.CircularIterator<T>->i, i : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.CircularIterator<T>->list,list : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.CloseableIterator<T>,CloseableIterator,low,low,low,low,0,2,0,1,4,2,16,2,0,0,1,1,0,0,0.25,0,0,0,,,,,16,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.CloseableIterator$1350;,Lorg.apache.kafka.common.utils.CloseableIterator$1350;,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.CloseableIterator<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.CloseableIterator<T>.public static wrap( Iterator ): CloseableIterator,static wrap( Iterator ): CloseableIterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.utils.CollectionUtils,CollectionUtils,low,low,low,low,1,16,12,1,0,6,21,20,0,0,1,3,0,0,0.417,0,0,0,,,,,21,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.utils.CollectionUtils.private CollectionUtils( ): void,CollectionUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.CollectionUtils.public static groupPartitionDataByTopic( Map ): Map,static groupPartitionDataByTopic( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,8,0
<Method>org.apache.kafka.common.utils.CollectionUtils.public static groupPartitionsByTopic( Collection ): Map,static groupPartitionsByTopic( Collection ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,0
"<Method>org.apache.kafka.common.utils.CollectionUtils.public static subtractMap( Map, Map ): Map","static subtractMap( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,5,0
"org.apache.kafka.common.utils.CopyOnWriteMap<K,V>",CopyOnWriteMap,low-medium,low,low-medium,low-medium,0,32,18,1,0,24,76,74,1,0,18,0,0,0,0.633,0.405,0,0,,,,,76,,,,,,24,,,,,,,
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public CopyOnWriteMap( ): void",CopyOnWriteMap( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public CopyOnWriteMap( Map ): void",CopyOnWriteMap( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public containsKey( Object ): boolean",containsKey( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public containsValue( Object ): boolean",containsValue( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public entrySet( ): Set",entrySet( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public get( Object ): V",get( Object ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public keySet( ): Set",keySet( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized put( K, V ): V","synchronized put( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,2
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized putAll( Map ): void",synchronized putAll( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,3,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized remove( Object ): V",synchronized remove( Object ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,2,2
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized remove( Object, Object ): boolean","synchronized remove( Object, Object ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,4,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V ): V","synchronized replace( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V, V ): boolean","synchronized replace( K, V, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,4,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public values( ): Collection",values( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>->map",volatile map : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Crc32,Crc32,low,low,low-medium,low,1,16,5,1,0,19,300,57,1,9,5,3,0,0.833,0.5,0.786,0,0,,,,,300,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32.public Crc32( ): void,Crc32( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Crc32.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.Crc32.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.utils.Crc32.public static crc32( ByteBuffer, int, int ): long","static crc32( ByteBuffer, int, int ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte ): long,static crc32( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte, int, int ): long","static crc32( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
"<Method>org.apache.kafka.common.utils.Crc32.public update( byte, int, int ): void","update( byte, int, int ): void",low-medium,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,36,3,0,32
<Field>org.apache.kafka.common.utils.Crc32->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Crc32C,Crc32C,low,low,low,low,1,14,5,1,0,4,38,11,0,1,1,3,0,0,0.5,1,0,0,,,,,38,,,,,,4,,,,,,,
org.apache.kafka.common.utils.Crc32C.ChecksumFactory,ChecksumFactory,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Crc32C.Java9ChecksumFactory,Java9ChecksumFactory,low,low,low,low,0,2,1,1,0,2,14,6,0,1,1,0,0,0,0,0,0,0,,,,,14,,,,,,2,,,,,,,
org.apache.kafka.common.utils.Crc32C.PureJavaChecksumFactory,PureJavaChecksumFactory,low,low,low,low,1,1,0,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32C.private Crc32C( ): void,Crc32C( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.utils.Crc32C.public static compute( ByteBuffer, int, int ): long","static compute( ByteBuffer, int, int ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,3,0
"<Method>org.apache.kafka.common.utils.Crc32C.public static compute( byte, int, int ): long","static compute( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,3,0
<Method>org.apache.kafka.common.utils.Crc32C.public static create( ): Checksum,static create( ): Checksum,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.utils.Crc32C->CHECKSUM_FACTORY,static final CHECKSUM_FACTORY : ChecksumFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Exit,Exit,low,low,low,low,0,9,3,1,0,8,31,16,0,4,0,8,0,0.8,0.5,0.786,0,0,,,,,31,,,,,,8,,,,,,,
org.apache.kafka.common.utils.Exit.Procedure,Procedure,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.Exit.public static exit( int ): void,static exit( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Exit.public static exit( int, String ): void","static exit( int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.common.utils.Exit.public static halt( int ): void,static halt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Exit.public static halt( int, String ): void","static halt( int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.common.utils.Exit.public static resetExitProcedure( ): void,static resetExitProcedure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Exit.public static resetHaltProcedure( ): void,static resetHaltProcedure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Exit.public static setExitProcedure( Procedure ): void,static setExitProcedure( Procedure ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Exit.public static setHaltProcedure( Procedure ): void,static setHaltProcedure( Procedure ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.utils.Exit->DEFAULT_EXIT_PROCEDURE,static final DEFAULT_EXIT_PROCEDURE : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->DEFAULT_HALT_PROCEDURE,static final DEFAULT_HALT_PROCEDURE : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->exitProcedure,static volatile exitProcedure : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Exit->haltProcedure,static volatile haltProcedure : Procedure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.common.utils.FixedOrderMap<K,V>",FixedOrderMap,medium-high,low,low,low,0,5,0,4,0,5,21,19,0,1,5,0,4,0,0.467,0,0,3.2,,,,,21,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.utils.FixedOrderMap<K,V>.public clear( ): void",clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"<Method>org.apache.kafka.common.utils.FixedOrderMap<K,V>.public clone( ): FixedOrderMap",clone( ): FixedOrderMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.FixedOrderMap<K,V>.public remove( Object ): V",remove( Object ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Method>org.apache.kafka.common.utils.FixedOrderMap<K,V>.public remove( Object, Object ): boolean","remove( Object, Object ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.common.utils.FixedOrderMap<K,V>.protected removeEldestEntry( Entry ): boolean",removeEldestEntry( Entry ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Field>org.apache.kafka.common.utils.FixedOrderMap<K,V>->serialVersionUID",static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.common.utils.FlattenedIterator<O,I>",FlattenedIterator,low-medium,low,low,low,0,6,4,2,0,5,15,11,3,0,2,0,0,0.333,0.333,0,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.common.utils.FlattenedIterator<O,I>.public FlattenedIterator( Iterator, Function ): void","FlattenedIterator( Iterator, Function ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.common.utils.FlattenedIterator<O,I>.public makeNext( ): I",makeNext( ): I,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,6,7
"<Field>org.apache.kafka.common.utils.FlattenedIterator<O,I>->innerIteratorFunction",final innerIteratorFunction : Function,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.common.utils.FlattenedIterator<O,I>->outerIterator",final outerIterator : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.common.utils.FlattenedIterator<O,I>->innerIterator",innerIterator : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>,ImplicitLinkedHashCollection,medium-high,low,low-medium,low-medium,0,42,30,2,1,59,288,176,3,4,25,4,3,0.786,0.69,0.892,0,0.24,,,,,288,,,,,,59,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection.Element,Element,low,low,low,low,0,4,0,1,1,4,5,4,0,0,4,0,0,0,0.25,0,0,0,,,,,5,,,,,,4,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection.HeadElement,HeadElement,low,low,low,low,0,4,0,1,0,4,16,12,2,1,4,0,0,0.889,0.25,0.667,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection.ImplicitLinkedHashCollectionIterator,ImplicitLinkedHashCollectionIterator,low,low,low,low,1,20,4,1,0,15,55,51,3,0,10,0,0,0.429,0.567,0.417,0,0,,,,,55,,,,,,15,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection.ImplicitLinkedHashCollectionListView,ImplicitLinkedHashCollectionListView,low,low,low,low,0,3,1,4,0,4,9,8,0,0,2,0,0,0,0.25,0,0,0,,,,,9,,,,,,4,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashCollection.ImplicitLinkedHashCollectionSetView,ImplicitLinkedHashCollectionSetView,low,low,low,low,0,35,5,3,0,6,19,18,0,0,6,0,3,0,0.5,0,0,1.5,,,,,19,,,,,,6,,,,,,,
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>. addInternal( Element, Element ): int"," addInternal( Element, Element ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,1,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>. findElementToRemove( Object ): int, findElementToRemove( Object ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public ImplicitLinkedHashCollection( ): void,ImplicitLinkedHashCollection( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public ImplicitLinkedHashCollection( Iterator ): void,ImplicitLinkedHashCollection( Iterator ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,4,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public ImplicitLinkedHashCollection( int ): void,ImplicitLinkedHashCollection( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private changeCapacity( int ): void,changeCapacity( int ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,6,4
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,1,3,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final add( E ): boolean,final add( E ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,14,1,6,9
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final clear( ): void,final clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final clear( int ): void,final clear( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,1,7
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final contains( Object ): boolean,final contains( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final find( E ): E,final find( E ): E,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,1,2
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private final findIndexOfEqualElement( Object ): int,final findIndexOfEqualElement( Object ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,12,1,2,8
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final iterator( ): Iterator,final iterator( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final mustAdd( E ): void,final mustAdd( E ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.final numSlots( ): int,final numSlots( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final remove( Object ): boolean,final remove( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public final size( ): int,final size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.final slot( Element, Object ): int","final slot( Element, Object ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private listIterator( int ): ListIterator,listIterator( int ): ListIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private removeElementAtSlot( int ): boolean,removeElementAtSlot( int ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,2,8
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private reseat( int ): void,reseat( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,1,7,11
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private static addToListTail( Element, Element, int ): void","static addToListTail( Element, Element, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,7,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private static calculateCapacity( int ): int,static calculateCapacity( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,2
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private static indexToElement( Element, Element, int ): Element","static indexToElement( Element, Element, int ): Element",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,3,0,1
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.private static removeFromList( Element, Element, int ): void","static removeFromList( Element, Element, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,9,2
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public valuesList( ): List,valuesList( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>.public valuesSet( ): Set,valuesSet( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->elements, elements : Element,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->head,head : Element,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->size,size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->EMPTY_ELEMENTS,static final EMPTY_ELEMENTS : Element,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->HEAD_INDEX,static final HEAD_INDEX : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->INVALID_INDEX,static final INVALID_INDEX : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ImplicitLinkedHashCollection<E>->MIN_NONEMPTY_CAPACITY,static final MIN_NONEMPTY_CAPACITY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>,ImplicitLinkedHashMultiCollection,low-medium,low,low-medium,low-medium,1,13,6,3,0,20,51,49,0,0,6,0,2,0,0.694,0,0,1,,,,,51,,,,,,20,,,,,,,
"<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>. addInternal( Element, Element ): int"," addInternal( Element, Element ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,2,1,1
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>. findElementToRemove( Object ): int, findElementToRemove( Object ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,16,1,3,7
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>.public ImplicitLinkedHashMultiCollection( ): void,ImplicitLinkedHashMultiCollection( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>.public ImplicitLinkedHashMultiCollection( Iterator ): void,ImplicitLinkedHashMultiCollection( Iterator ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>.public ImplicitLinkedHashMultiCollection( int ): void,ImplicitLinkedHashMultiCollection( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection<E>.public final findAll( E ): List,final findAll( E ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,15,1,5,5
org.apache.kafka.common.utils.Java,Java,low,low,low,low,0,8,5,1,0,4,30,12,0,3,1,2,0,0,0.333,0,0,0,,,,,30,,,,,,4,,,,,,,
org.apache.kafka.common.utils.Java.Version,Version,low,low,low,low,0,4,0,1,0,4,14,11,2,0,4,0,0,0.333,0.375,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.Java.private Java( ): void,Java( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Java.public static isIbmJdk( ): boolean,static isIbmJdk( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.utils.Java.static parseVersion( String ): Version,static parseVersion( String ): Version,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,1,5,0
<Field>org.apache.kafka.common.utils.Java->IS_JAVA11_COMPATIBLE,static final IS_JAVA11_COMPATIBLE : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Java->IS_JAVA9_COMPATIBLE,static final IS_JAVA9_COMPATIBLE : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Java->VERSION,static final VERSION : Version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.KafkaThread,KafkaThread,low-medium,low,low,low,1,7,3,2,1,5,18,16,1,0,3,2,0,0,0.2,1,0,0,,,,,18,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.KafkaThread$1772;,Lorg.apache.kafka.common.utils.KafkaThread$1772;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.utils.KafkaThread.public KafkaThread( String, Runnable, boolean ): void","KafkaThread( String, Runnable, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
"<Method>org.apache.kafka.common.utils.KafkaThread.public KafkaThread( String, boolean ): void","KafkaThread( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.common.utils.KafkaThread.private configureThread( String, boolean ): void","configureThread( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,2,2,0
"<Method>org.apache.kafka.common.utils.KafkaThread.public static daemon( String, Runnable ): KafkaThread","static daemon( String, Runnable ): KafkaThread",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.utils.KafkaThread.public static nonDaemon( String, Runnable ): KafkaThread","static nonDaemon( String, Runnable ): KafkaThread",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Field>org.apache.kafka.common.utils.KafkaThread->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.LogContext,LogContext,low,low,medium-high,low,2,5,1,1,0,6,446,12,1,0,4,0,0,0,0.5,0.5,0,0,,,,,446,,,,,,6,,,,,,,
org.apache.kafka.common.utils.LogContext.AbstractKafkaLogger,AbstractKafkaLogger,low,low,low,low,0,2,0,1,2,2,6,4,1,0,2,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
org.apache.kafka.common.utils.LogContext.LocationAwareKafkaLogger,LocationAwareKafkaLogger,low,low,low,low,4,80,18,2,0,87,218,215,2,0,63,0,0,0.484,0.569,0.746,0,0,,,,,218,,,,,,87,,,,,,,
org.apache.kafka.common.utils.LogContext.LocationIgnorantKafkaLogger,LocationIgnorantKafkaLogger,low,low,low,low,2,124,62,2,0,82,208,206,1,0,62,0,0,0,0.505,0,0,0,,,,,208,,,,,,82,,,,,,,
<Method>org.apache.kafka.common.utils.LogContext.public LogContext( ): void,LogContext( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.utils.LogContext.public LogContext( String ): void,LogContext( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,1
<Method>org.apache.kafka.common.utils.LogContext.public logPrefix( ): String,logPrefix( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.LogContext.public logger( Class ): Logger,logger( Class ): Logger,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,2
<Field>org.apache.kafka.common.utils.LogContext->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.LoggingSignalHandler,LoggingSignalHandler,low,low,low,low,2,18,12,1,0,6,44,35,6,2,4,0,0,0.875,0.417,1,0,0,,,,,44,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.LoggingSignalHandler$3269;,Lorg.apache.kafka.common.utils.LoggingSignalHandler$3269;,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.LoggingSignalHandler.public LoggingSignalHandler( ): void,LoggingSignalHandler( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,6,13
<Method>org.apache.kafka.common.utils.LoggingSignalHandler.private createSignalHandler( Map ): Object,createSignalHandler( Map ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,17,1,2,1
<Method>org.apache.kafka.common.utils.LoggingSignalHandler.public register( ): void,register( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,3
"<Method>org.apache.kafka.common.utils.LoggingSignalHandler.private register( String, Map ): void","register( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,4,2
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalClass,final signalClass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalConstructor,final signalConstructor : Constructor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalGetNameMethod,final signalGetNameMethod : Method,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalHandleMethod,final signalHandleMethod : Method,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalHandlerClass,final signalHandlerClass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->signalHandlerHandleMethod,final signalHandlerHandleMethod : Method,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->SIGNALS,static final SIGNALS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.LoggingSignalHandler->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.common.utils.MappedIterator<F,T>",MappedIterator,low,low,low,low,0,6,3,1,0,3,12,9,2,0,3,0,0,0.25,0.444,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.utils.MappedIterator<F,T>.public MappedIterator( Iterator, Function ): void","MappedIterator( Iterator, Function ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.common.utils.MappedIterator<F,T>.public final hasNext( ): boolean",final hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.common.utils.MappedIterator<F,T>.public final next( ): T",final next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
"<Field>org.apache.kafka.common.utils.MappedIterator<F,T>->mapper",final mapper : Function,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.common.utils.MappedIterator<F,T>->underlyingIterator",final underlyingIterator : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.OperatingSystem,OperatingSystem,low,low,low,low,0,1,0,1,0,1,7,1,0,2,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.OperatingSystem.private OperatingSystem( ): void,OperatingSystem( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.utils.OperatingSystem->IS_WINDOWS,static final IS_WINDOWS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.OperatingSystem->NAME,static final NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.PrimitiveRef,PrimitiveRef,low,low,low,low,0,1,0,1,0,1,7,2,0,0,0,1,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
org.apache.kafka.common.utils.PrimitiveRef.IntRef,IntRef,low,low,low,low,0,1,0,1,0,1,4,2,1,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.utils.PrimitiveRef.public static ofInt( int ): IntRef,static ofInt( int ): IntRef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.common.utils.ProducerIdAndEpoch,ProducerIdAndEpoch,low,low,low,low,1,3,0,1,0,3,12,8,2,1,3,0,0,0.667,0.444,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.common.utils.ProducerIdAndEpoch.public ProducerIdAndEpoch( long, short ): void","ProducerIdAndEpoch( long, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.utils.ProducerIdAndEpoch.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.ProducerIdAndEpoch.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.common.utils.ProducerIdAndEpoch->epoch,final epoch : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ProducerIdAndEpoch->producerId,final producerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.ProducerIdAndEpoch->NONE,static final NONE : ProducerIdAndEpoch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.PureJavaCrc32C,PureJavaCrc32C,low,low,medium-high,low,0,5,1,1,0,13,572,48,1,9,5,0,0,0.833,0.467,0.4,0,0,,,,,572,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public PureJavaCrc32C( ): void,PureJavaCrc32C( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.common.utils.PureJavaCrc32C.public update( byte, int, int ): void","update( byte, int, int ): void",low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,36,3,0,32
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.PureJavaCrc32C->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Sanitizer,Sanitizer,low,low,low,low,1,14,11,1,0,9,25,23,0,1,0,3,0,0,0,1,0,0,,,,,25,,,,,,9,,,,,,,
<Method>org.apache.kafka.common.utils.Sanitizer.public static desanitize( String ): String,static desanitize( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,0
<Method>org.apache.kafka.common.utils.Sanitizer.public static jmxSanitize( String ): String,static jmxSanitize( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,3,1
<Method>org.apache.kafka.common.utils.Sanitizer.public static sanitize( String ): String,static sanitize( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,1,8,0
<Field>org.apache.kafka.common.utils.Sanitizer->MBEAN_PATTERN,static final MBEAN_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Scheduler,Scheduler,low,low,low,low,1,2,0,1,1,2,5,2,0,1,2,0,0,0,0.375,1,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.common.utils.Scheduler.public abstract schedule( ScheduledExecutorService, Callable, long ): Future","schedule( ScheduledExecutorService, Callable, long ): Future",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.common.utils.Scheduler.public abstract time( ): Time,time( ): Time,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.utils.Scheduler->SYSTEM,static final SYSTEM : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SecurityUtils,SecurityUtils,low,low-medium,low-medium,low,6,23,18,1,0,19,55,42,0,3,0,5,0,1,0.333,1,0,0,,,,,55,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.utils.SecurityUtils.public static addConfiguredSecurityProviders( Map ): void,static addConfiguredSecurityProviders( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,17,1,12,3
<Method>org.apache.kafka.common.utils.SecurityUtils.public static operation( String ): AclOperation,static operation( String ): AclOperation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
<Method>org.apache.kafka.common.utils.SecurityUtils.public static parseKafkaPrincipal( String ): KafkaPrincipal,static parseKafkaPrincipal( String ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,2,0
<Method>org.apache.kafka.common.utils.SecurityUtils.public static resourceType( String ): ResourceType,static resourceType( String ): ResourceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
<Method>org.apache.kafka.common.utils.SecurityUtils.private static toPascalCase( String ): String,static toPascalCase( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,1,6,0
<Field>org.apache.kafka.common.utils.SecurityUtils->LOGGER,static final LOGGER : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.SecurityUtils->NAME_TO_OPERATIONS,static final NAME_TO_OPERATIONS : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.SecurityUtils->NAME_TO_RESOURCE_TYPES,static final NAME_TO_RESOURCE_TYPES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Shell,Shell,low,low,low-medium,low-medium,2,28,23,1,1,17,123,69,4,1,7,2,0,0.8,0.611,1,0,0,,,,,123,,,,,,17,,,,,,,
org.apache.kafka.common.utils.Shell.ExitCodeException,ExitCodeException,low,low,low,low,0,2,0,4,0,2,8,5,1,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Shell$3493;,Lorg.apache.kafka.common.utils.Shell$3493;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell.ShellCommandExecutor,ShellCommandExecutor,low,low,low,low,0,33,9,2,0,10,28,25,2,0,6,0,0,0.667,0.625,1,0,0,,,,,28,,,,,,10,,,,,,,
org.apache.kafka.common.utils.Shell.ShellTimeoutTimerTask,ShellTimeoutTimerTask,low,low,low,low,0,6,4,2,0,5,12,10,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.Shell.public Shell( long ): void,Shell( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Shell.protected abstract execString( ): String,abstract execString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.utils.Shell.protected abstract parseExecResult( BufferedReader ): void,abstract parseExecResult( BufferedReader ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.common.utils.Shell.public exitCode( ): int,exitCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Shell.public process( ): Process,process( ): Process,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Shell.protected run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.utils.Shell.private runCommand( ): void,runCommand( ): void,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,52,0,22,16
<Method>org.apache.kafka.common.utils.Shell.public static execCommand( String ): String,static execCommand( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Shell.public static execCommand( String, long ): String","static execCommand( String, long ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Field>org.apache.kafka.common.utils.Shell->exitCode,exitCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->timeout,final timeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->process,process : Process,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->completed,volatile completed : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SystemScheduler,SystemScheduler,low,low,low,low,1,4,1,1,0,3,9,8,0,0,3,0,0,0,0.5,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.utils.SystemScheduler. SystemScheduler( ): void, SystemScheduler( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.common.utils.SystemScheduler.public schedule( ScheduledExecutorService, Callable, long ): Future","schedule( ScheduledExecutorService, Callable, long ): Future",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
<Method>org.apache.kafka.common.utils.SystemScheduler.public time( ): Time,time( ): Time,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.utils.SystemTime,SystemTime,low,low,low,low,2,12,6,1,0,7,20,19,0,0,4,0,0,0,0.5,0,0,0,,,,,20,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.utils.SystemTime.public milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.utils.SystemTime.public nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.common.utils.SystemTime.public sleep( long ): void,sleep( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.common.utils.SystemTime.public waitObject( Object, Supplier, long ): void","waitObject( Object, Supplier, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,3,3,0
org.apache.kafka.common.utils.Time,Time,low,low,low,low-medium,1,9,4,1,1,7,12,7,0,1,7,0,0,0,0.629,1,0,0,,,,,12,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.utils.Time.public hiResClockMs( ): long,hiResClockMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,2,0
<Method>org.apache.kafka.common.utils.Time.public abstract milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.utils.Time.public timer( Duration ): Timer,timer( Duration ): Timer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,2,0
<Method>org.apache.kafka.common.utils.Time.public timer( long ): Timer,timer( long ): Timer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.utils.Time.public abstract waitObject( Object, Supplier, long ): void","waitObject( Object, Supplier, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Field>org.apache.kafka.common.utils.Time->SYSTEM,static final SYSTEM : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Timer,Timer,low,low,low,low,1,15,9,1,0,13,38,33,4,0,11,0,0,0.688,0.485,0.644,0,0,,,,,38,,,,,,13,,,,,,,
"<Method>org.apache.kafka.common.utils.Timer. Timer( Time, long ): void"," Timer( Time, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
<Method>org.apache.kafka.common.utils.Timer.public currentTimeMs( ): long,currentTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Timer.public elapsedMs( ): long,elapsedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Timer.public isExpired( ): boolean,isExpired( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.utils.Timer.public notExpired( ): boolean,notExpired( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Timer.public remainingMs( ): long,remainingMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.common.utils.Timer.public reset( long ): void,reset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,1,0,6
<Method>org.apache.kafka.common.utils.Timer.public sleep( long ): void,sleep( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,1
<Method>org.apache.kafka.common.utils.Timer.public update( ): void,update( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.common.utils.Timer.public update( long ): void,update( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.common.utils.Timer.public updateAndReset( long ): void,updateAndReset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Field>org.apache.kafka.common.utils.Timer->currentTimeMs,currentTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Timer->deadlineMs,deadlineMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Timer->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Timer->startMs,startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.Utils,Utils,very-high,low,medium-high,very-high,2,173,122,1,0,142,431,423,0,6,1,65,0,0.944,0.923,0.998,0,0,,,,,431,,,,,,142,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Utils$23364;,Lorg.apache.kafka.common.utils.Utils$23364;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Utils$25056;,Lorg.apache.kafka.common.utils.Utils$25056;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.Utils.private Utils( ): void,Utils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Utils.public static abs( int ): int,static abs( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static atomicMoveWithFallback( Path, Path ): void","static atomicMoveWithFallback( Path, Path ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,2,5,1
<Method>org.apache.kafka.common.utils.Utils.private static checkRange( byte ): byte,static checkRange( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static closeAll( Closeable ): void,static closeAll( Closeable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static closeQuietly( AutoCloseable, String ): void","static closeQuietly( AutoCloseable, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,3,1
"<Method>org.apache.kafka.common.utils.Utils.public static closeQuietly( AutoCloseable, String, AtomicReference ): void","static closeQuietly( AutoCloseable, String, AtomicReference ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,3,4,1
"<Method>org.apache.kafka.common.utils.Utils.public static concatLists( List, List, Function ): List","static concatLists( List, List, Function ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,6,0
"<Method>org.apache.kafka.common.utils.Utils.public static concatListsUnmodifiable( List, List ): List","static concatListsUnmodifiable( List, List ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.common.utils.Utils.public static copyArray( byte ): byte,static copyArray( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.utils.Utils.public static delete( File ): void,static delete( File ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static ensureCapacity( ByteBuffer, int ): ByteBuffer","static ensureCapacity( ByteBuffer, int ): ByteBuffer",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,0
"<Method>org.apache.kafka.common.utils.Utils.public static final readFully( InputStream, ByteBuffer ): void","static final readFully( InputStream, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,2,8,0
"<Method>org.apache.kafka.common.utils.Utils.public static formatAddress( String, Integer ): String","static formatAddress( String, Integer ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,1,0
<Method>org.apache.kafka.common.utils.Utils.public static formatBytes( long ): String,static formatBytes( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,7,2
<Method>org.apache.kafka.common.utils.Utils.public static from32BitField( int ): Set,static from32BitField( int ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,1,0
<Method>org.apache.kafka.common.utils.Utils.public static getContextOrKafkaClassLoader( ): ClassLoader,static getContextOrKafkaClassLoader( ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,0
<Method>org.apache.kafka.common.utils.Utils.public static getHost( String ): String,static getHost( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,3,1
<Method>org.apache.kafka.common.utils.Utils.public static getKafkaClassLoader( ): ClassLoader,static getKafkaClassLoader( ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Utils.public static getPort( String ): Integer,static getPort( String ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,4,1
"<Method>org.apache.kafka.common.utils.Utils.public static join( Collection, String ): String","static join( Collection, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,8,0
"<Method>org.apache.kafka.common.utils.Utils.public static join( T, String ): String","static join( T, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static loadClass( String, Class ): Class","static loadClass( String, Class ): Class",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
<Method>org.apache.kafka.common.utils.Utils.public static loadProps( String ): Properties,static loadProps( String ): Properties,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,8,1,4,0
"<Method>org.apache.kafka.common.utils.Utils.public static max( long, long ): long","static max( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( long, long ): long","static min( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( short, short ): short","static min( short, short ): short",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static mkEntry( K, V ): Entry","static mkEntry( K, V ): Entry",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static mkMap( Entry ): Map,static mkMap( Entry ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.common.utils.Utils.public static mkProperties( Map ): Properties,static mkProperties( Map ): Properties,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.common.utils.Utils.public static mkSet( T ): Set,static mkSet( T ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static mkString( Map, String, String, String, String ): String","static mkString( Map, String, String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,5,10,0
<Method>org.apache.kafka.common.utils.Utils.public static murmur2( byte ): int,static murmur2( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,28,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static newInstance( Class ): T,static newInstance( Class ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,0
"<Method>org.apache.kafka.common.utils.Utils.public static newInstance( String, Class ): T","static newInstance( String, Class ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static newParameterizedInstance( String, Object ): T","static newParameterizedInstance( String, Object ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,24,2,9,0
"<Method>org.apache.kafka.common.utils.Utils.public static parseMap( String, String, String ): Map","static parseMap( String, String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,3,4,0
<Method>org.apache.kafka.common.utils.Utils.public static propsToStringMap( Properties ): Map,static propsToStringMap( Properties ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,6,0
<Method>org.apache.kafka.common.utils.Utils.public static readBytes( ByteBuffer ): byte,static readBytes( ByteBuffer ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static readBytes( ByteBuffer, int, int ): byte","static readBytes( ByteBuffer, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,8,0
<Method>org.apache.kafka.common.utils.Utils.public static readFileAsString( String ): String,static readFileAsString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static readFully( FileChannel, ByteBuffer, long ): void","static readFully( FileChannel, ByteBuffer, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,3,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static readFullyOrFail( FileChannel, ByteBuffer, long, String ): void","static readFullyOrFail( FileChannel, ByteBuffer, long, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,4,5,0
<Method>org.apache.kafka.common.utils.Utils.public static safe( List ): List,static safe( List ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static sizeDelimited( ByteBuffer, int ): ByteBuffer","static sizeDelimited( ByteBuffer, int ): ByteBuffer",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,2,6,0
<Method>org.apache.kafka.common.utils.Utils.public static sleep( long ): void,static sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,0
<Method>org.apache.kafka.common.utils.Utils.public static sorted( Collection ): List,static sorted( Collection ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.common.utils.Utils.public static stackTrace( Throwable ): String,static stackTrace( Throwable ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.common.utils.Utils.public static to32BitField( Set ): int,static to32BitField( Set ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,0
<Method>org.apache.kafka.common.utils.Utils.public static toArray( ByteBuffer ): byte,static toArray( ByteBuffer ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static toArray( ByteBuffer, int ): byte","static toArray( ByteBuffer, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static toArray( ByteBuffer, int, int ): byte","static toArray( ByteBuffer, int, int ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,9,0
<Method>org.apache.kafka.common.utils.Utils.public static toList( Iterator ): List,static toList( Iterator ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,0
<Method>org.apache.kafka.common.utils.Utils.public static toNullableArray( ByteBuffer ): byte,static toNullableArray( ByteBuffer ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
<Method>org.apache.kafka.common.utils.Utils.public static toPositive( int ): int,static toPositive( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static transformMap( Map, Function, Function ): Map","static transformMap( Map, Function, Function ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,4,0
<Method>org.apache.kafka.common.utils.Utils.public static utf8( ByteBuffer ): String,static utf8( ByteBuffer ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static utf8( ByteBuffer, int ): String","static utf8( ByteBuffer, int ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static utf8( ByteBuffer, int, int ): String","static utf8( ByteBuffer, int, int ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,6,0
<Method>org.apache.kafka.common.utils.Utils.public static utf8( String ): byte,static utf8( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.common.utils.Utils.public static utf8( byte ): String,static utf8( byte ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static utf8Length( CharSequence ): int,static utf8Length( CharSequence ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,14,1,3,0
<Method>org.apache.kafka.common.utils.Utils.public static validHostPattern( String ): boolean,static validHostPattern( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.common.utils.Utils.public static wrapNullable( byte ): ByteBuffer,static wrapNullable( byte ): ByteBuffer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Utils.public static writeFully( FileChannel, ByteBuffer ): void","static writeFully( FileChannel, ByteBuffer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,2,0
"<Method>org.apache.kafka.common.utils.Utils.public static writeTo( DataOutput, ByteBuffer, int ): void","static writeTo( DataOutput, ByteBuffer, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,8,0
<Field>org.apache.kafka.common.utils.Utils->BYTE_SCALE_SUFFIXES,static final BYTE_SCALE_SUFFIXES : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Utils->HOST_PORT_PATTERN,static final HOST_PORT_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Utils->NL,static final NL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Utils->TWO_DIGIT_FORMAT,static final TWO_DIGIT_FORMAT : DecimalFormat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Utils->VALID_HOST_CHARACTERS,static final VALID_HOST_CHARACTERS : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Utils->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.cli,org.apache.kafka.connect.cli,low,low,low,low,,,,,,14,114,,,,,,,,,,,,,2,2,0,114,0,2,0,1,0,14,,,,,,,
org.apache.kafka.connect.cli.ConnectDistributed,ConnectDistributed,very-high,high,low-medium,low,21,258,30,1,0,7,57,53,2,1,1,1,0,0.667,0.333,0,1,0,,,,,57,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.cli.ConnectDistributed.public startConnect( Map ): Connect,startConnect( Map ): Connect,low,very-high,low-medium,low,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,37,1,21,9
<Method>org.apache.kafka.connect.cli.ConnectDistributed.public static main( String ): void,static main( String ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,16,1,13,2
<Field>org.apache.kafka.connect.cli.ConnectDistributed->initStart,final initStart : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.cli.ConnectDistributed->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.cli.ConnectDistributed->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.cli.ConnectStandalone,ConnectStandalone,very-high,medium-high,low-medium,low,18,248,28,1,0,7,57,55,0,1,0,1,0,0,0,0,0,0,,,,,57,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.cli.ConnectStandalone$5146;,Lorg.apache.kafka.connect.cli.ConnectStandalone$5146;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.cli.ConnectStandalone.public static main( String ): void,static main( String ): void,low,very-high,medium-high,low,18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,55,1,36,7
<Field>org.apache.kafka.connect.cli.ConnectStandalone->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.components,org.apache.kafka.connect.components,low,low,low,low,,,,,,1,2,,,,,,,,,,,,,1,0,1,2,4,0,1,0,0,1,,,,,,,
org.apache.kafka.connect.components.Versioned,Versioned,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.components.Versioned.public abstract version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.connector,org.apache.kafka.connect.connector,low,low,low,low,,,,,,41,114,,,,,,,,,,,,,4,2,2,114,19,2,1,0.095,0.095,41,,,,,,,
org.apache.kafka.connect.connector.ConnectRecord<R>,ConnectRecord,low-medium,low,low-medium,low-medium,3,21,6,1,2,26,85,76,8,0,15,0,0,0.636,0.638,0.638,0,0,,,,,85,,,,,,26,,,,,,,
"<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public ConnectRecord( String, Integer, Schema, Object, Schema, Object, Long ): void","ConnectRecord( String, Integer, Schema, Object, Schema, Object, Long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,7,0,0
"<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public ConnectRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): void","ConnectRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,8,0,9
"<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public abstract newRecord( String, Integer, Schema, Object, Schema, Object, Long ): R","abstract newRecord( String, Integer, Schema, Object, Schema, Object, Long ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,7,0,0
"<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public abstract newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): R","abstract newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,8,0,0
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,15,1,10,16
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,1,11,0,5,15
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public kafkaPartition( ): Integer,kafkaPartition( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public key( ): Object,key( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public timestamp( ): Long,timestamp( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,0,8
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public value( ): Object,value( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.ConnectRecord<R>.public valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->headers,final headers : Headers,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->kafkaPartition,final kafkaPartition : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->key,final key : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->keySchema,final keySchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->timestamp,final timestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->value,final value : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.ConnectRecord<R>->valueSchema,final valueSchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.connector.Connector,Connector,low-medium,low,low,low-medium,4,61,7,1,3,10,22,20,1,0,9,0,0,0,0.644,0.972,0,0,,,,,22,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.connector.Connector.public abstract config( ): ConfigDef,abstract config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.connector.Connector.public abstract start( Map ): void,abstract start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.connector.Connector.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.connector.Connector.public abstract taskClass( ): Class,abstract taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.connector.Connector.public abstract taskConfigs( int ): List,abstract taskConfigs( int ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.connector.Connector.public initialize( ConnectorContext ): void,initialize( ConnectorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.connect.connector.Connector.public initialize( ConnectorContext, List ): void","initialize( ConnectorContext, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.connect.connector.Connector.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.connector.Connector.public validate( Map ): Config,validate( Map ): Config,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,0
<Field>org.apache.kafka.connect.connector.Connector->context,context : ConnectorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.connector.ConnectorContext,ConnectorContext,low,low,low,low,0,2,0,1,2,2,3,2,0,0,2,0,0,0,0.25,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectorContext.public abstract raiseError( Exception ): void,raiseError( Exception ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.connector.ConnectorContext.public abstract requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.connector.Task,Task,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.333,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.Task.public abstract start( Map ): void,start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.connector.Task.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.connector.Task.public abstract version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.connector.policy,org.apache.kafka.connect.connector.policy,low,low-medium,low-medium,low,,,,,,23,86,,,,,,,,,,,,,7,6,1,86,7,6,0.286,0.462,0.252,23,,,,,,,
org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy,AbstractConnectorClientConfigOverridePolicy,low,low,low,low,2,17,13,1,3,7,18,17,0,0,6,0,0,0,0.583,0,0,0,,,,,18,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.protected abstract isAllowed( ConfigValue ): boolean,abstract isAllowed( ConfigValue ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.protected abstract policyName( ): String,abstract policyName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.protected configValue( Entry ): ConfigValue,configValue( Entry ): ConfigValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.public final validate( ConnectorClientConfigRequest ): List,final validate( ConnectorClientConfigRequest ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,6,0
<Method>org.apache.kafka.connect.connector.policy.AbstractConnectorClientConfigOverridePolicy.protected validate( ConfigValue ): void,validate( ConfigValue ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,4,0
org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy,AllConnectorClientConfigOverridePolicy,low-medium,low,low,low,2,4,1,2,0,3,11,9,0,1,3,0,0,0,0.444,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy.protected isAllowed( ConfigValue ): boolean,isAllowed( ConfigValue ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy.protected policyName( ): String,policyName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy,ConnectorClientConfigOverridePolicy,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy.public abstract validate( ConnectorClientConfigRequest ): List,validate( ConnectorClientConfigRequest ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest,ConnectorClientConfigRequest,low,low,low,low-medium,1,6,0,1,0,6,29,21,5,0,6,0,0,0.8,0.694,0.667,0,0,,,,,29,,,,,,6,,,,,,,
org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.ClientType,ClientType,low,low,low,low,0,0,0,2,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public ConnectorClientConfigRequest( String, ConnectorType, Class, Map, ClientType ): void","ConnectorClientConfigRequest( String, ConnectorType, Class, Map, ClientType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,5
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public clientProps( ): Map,clientProps( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public clientType( ): ClientType,clientType( ): ClientType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public connectorClass( ): Class,connectorClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public connectorName( ): String,connectorName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest.public connectorType( ): ConnectorType,connectorType( ): ConnectorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest->clientProps,clientProps : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest->clientType,clientType : ClientType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest->connectorClass,connectorClass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest->connectorName,connectorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.policy.ConnectorClientConfigRequest->connectorType,connectorType : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy,NoneConnectorClientConfigOverridePolicy,low-medium,low,low,low,2,4,1,2,0,3,11,9,0,1,3,0,0,0,0.444,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy.protected isAllowed( ConfigValue ): boolean,isAllowed( ConfigValue ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy.protected policyName( ): String,policyName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy,PrincipalConnectorClientConfigOverridePolicy,low-medium,low,low,low,2,6,3,2,0,3,15,10,0,2,3,0,0,1,0.444,0,0,0,,,,,15,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy.protected isAllowed( ConfigValue ): boolean,isAllowed( ConfigValue ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy.protected policyName( ): String,policyName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy->ALLOWED_CONFIG,static final ALLOWED_CONFIG : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.converters,org.apache.kafka.connect.converters,low,low-medium,low-medium,low,,,,,,34,101,,,,,,,,,,,,,8,8,0,101,0,8,0,1,0,34,,,,,,,
org.apache.kafka.connect.converters.ByteArrayConverter,ByteArrayConverter,low,low,low,low-medium,5,11,5,1,0,12,27,25,0,1,8,0,0,0,0.625,1,0,0,,,,,27,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public fromConnectData( String, Schema, Object ): byte","fromConnectData( String, Schema, Object ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,7,3,4,0
"<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
"<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public toConnectData( String, byte ): SchemaAndValue","toConnectData( String, byte ): SchemaAndValue",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.connect.converters.ByteArrayConverter.public toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Field>org.apache.kafka.connect.converters.ByteArrayConverter->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.converters.DoubleConverter,DoubleConverter,low-medium,low,low,low,3,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.converters.DoubleConverter.public DoubleConverter( ): void,DoubleConverter( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.converters.FloatConverter,FloatConverter,low-medium,low,low,low,3,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.converters.FloatConverter.public FloatConverter( ): void,FloatConverter( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.converters.IntegerConverter,IntegerConverter,low-medium,low,low,low,3,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.converters.IntegerConverter.public IntegerConverter( ): void,IntegerConverter( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.converters.LongConverter,LongConverter,low-medium,low,low,low,3,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.converters.LongConverter.public LongConverter( ): void,LongConverter( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.converters.NumberConverter<T>,NumberConverter,low,low-medium,low-medium,low-medium,10,28,13,1,5,15,53,48,4,0,10,0,0,0.417,0.689,0.893,1,0,,,,,53,,,,,,15,,,,,,,
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.protected NumberConverter( String, Schema, Serializer, Deserializer ): void","NumberConverter( String, Schema, Serializer, Deserializer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,0,8
<Method>org.apache.kafka.connect.converters.NumberConverter<T>.protected cast( Object ): T,cast( Object ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,2
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,0
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public fromConnectData( String, Schema, Object ): byte","fromConnectData( String, Schema, Object ): byte",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,3,3,3
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public toConnectData( String, byte ): SchemaAndValue","toConnectData( String, byte ): SchemaAndValue",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,3
"<Method>org.apache.kafka.connect.converters.NumberConverter<T>.public toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Field>org.apache.kafka.connect.converters.NumberConverter<T>->deserializer,final deserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.converters.NumberConverter<T>->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.converters.NumberConverter<T>->serializer,final serializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.converters.NumberConverter<T>->typeName,final typeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.converters.NumberConverterConfig,NumberConverterConfig,low-medium,low,low,low,1,2,0,3,0,2,6,4,0,1,1,1,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.converters.NumberConverterConfig.public NumberConverterConfig( Map ): void,NumberConverterConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.converters.NumberConverterConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.converters.NumberConverterConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.converters.ShortConverter,ShortConverter,low-medium,low,low,low,3,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.converters.ShortConverter.public ShortConverter( ): void,ShortConverter( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.connect.data,org.apache.kafka.connect.data,medium-high,low-medium,medium-high,low,,,,,,539,1387,,,,,,,,,,,,,15,14,1,1387,42,9,0.067,0.176,0.757,539,,,,,,,
org.apache.kafka.connect.data.ConnectSchema,ConnectSchema,medium-high,low-medium,low-medium,medium-high,4,48,24,1,0,52,188,152,12,3,19,4,0,0.846,0.796,0.762,0,0,,,,,188,,,,,,52,,,,,,,
<Method>org.apache.kafka.connect.data.ConnectSchema.public ConnectSchema( Type ): void,ConnectSchema( Type ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.data.ConnectSchema.public ConnectSchema( Type, boolean, Object, String, Integer, String ): void","ConnectSchema( Type, boolean, Object, String, Integer, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,6,0,0
"<Method>org.apache.kafka.connect.data.ConnectSchema.public ConnectSchema( Type, boolean, Object, String, Integer, String, Map, List, Schema, Schema ): void","ConnectSchema( Type, boolean, Object, String, Integer, String, Map, List, Schema, Schema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,10,4,17
<Method>org.apache.kafka.connect.data.ConnectSchema.public defaultValue( ): Object,defaultValue( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public doc( ): String,doc( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,15,1,12,20
<Method>org.apache.kafka.connect.data.ConnectSchema.public field( String ): Field,field( String ): Field,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,2
<Method>org.apache.kafka.connect.data.ConnectSchema.public fields( ): List,fields( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,2
<Method>org.apache.kafka.connect.data.ConnectSchema.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,13
<Method>org.apache.kafka.connect.data.ConnectSchema.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,2
<Method>org.apache.kafka.connect.data.ConnectSchema.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public parameters( ): Map,parameters( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public schema( ): ConnectSchema,schema( ): ConnectSchema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.data.ConnectSchema.private static expectedClassesFor( Schema ): List,static expectedClassesFor( Schema ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,2
<Method>org.apache.kafka.connect.data.ConnectSchema.public static schemaType( Class ): Type,static schemaType( Class ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,7,4
"<Method>org.apache.kafka.connect.data.ConnectSchema.public static validateValue( Schema, Object ): void","static validateValue( Schema, Object ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.ConnectSchema.public static validateValue( String, Schema, Object ): void","static validateValue( String, Schema, Object ): void",low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,38,3,20,0
<Method>org.apache.kafka.connect.data.ConnectSchema.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,4
<Method>org.apache.kafka.connect.data.ConnectSchema.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public validateValue( Object ): void,validateValue( Object ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.ConnectSchema.public valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,3
<Method>org.apache.kafka.connect.data.ConnectSchema.public version( ): Integer,version( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.data.ConnectSchema->defaultValue,final defaultValue : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->doc,final doc : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->fields,final fields : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->fieldsByName,final fieldsByName : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->keySchema,final keySchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->optional,final optional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->parameters,final parameters : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->valueSchema,final valueSchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->version,final version : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->hash,hash : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->JAVA_CLASS_SCHEMA_TYPES,static final JAVA_CLASS_SCHEMA_TYPES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->LOGICAL_TYPE_CLASSES,static final LOGICAL_TYPE_CLASSES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.ConnectSchema->SCHEMA_TYPE_CLASSES,static final SCHEMA_TYPE_CLASSES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Date,Date,low,low,low,low,3,13,9,1,0,9,23,18,0,4,0,3,0,0.75,0.417,0,0,0,,,,,23,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.data.Date.public static builder( ): SchemaBuilder,static builder( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.connect.data.Date.public static fromLogical( Schema, Date ): int","static fromLogical( Schema, Date ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,10,2,9,3
"<Method>org.apache.kafka.connect.data.Date.public static toLogical( Schema, int ): Date","static toLogical( Schema, int ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,2
<Field>org.apache.kafka.connect.data.Date->LOGICAL_NAME,static final LOGICAL_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Date->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Date->SCHEMA,static final SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Date->UTC,static final UTC : TimeZone,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Decimal,Decimal,low,low,low,low,3,23,14,1,0,8,24,21,0,2,0,5,0,0.5,0.52,1,0,0,,,,,24,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.data.Decimal.public static builder( int ): SchemaBuilder,static builder( int ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,2
"<Method>org.apache.kafka.connect.data.Decimal.public static fromLogical( Schema, BigDecimal ): byte","static fromLogical( Schema, BigDecimal ): byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,4,0
<Method>org.apache.kafka.connect.data.Decimal.private static scale( Schema ): int,static scale( Schema ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,3,1
<Method>org.apache.kafka.connect.data.Decimal.public static schema( int ): Schema,static schema( int ): Schema,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.connect.data.Decimal.public static toLogical( Schema, byte ): BigDecimal","static toLogical( Schema, byte ): BigDecimal",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Field>org.apache.kafka.connect.data.Decimal->LOGICAL_NAME,static final LOGICAL_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Decimal->SCALE_FIELD,static final SCALE_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Field,Field,low,low,low,low-medium,1,10,3,1,0,10,32,28,3,0,7,0,0,0.333,0.686,0.143,0,0,,,,,32,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.data.Field.public Field( String, int, Schema ): void","Field( String, int, Schema ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.connect.data.Field.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,1,5,6
<Method>org.apache.kafka.connect.data.Field.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.connect.data.Field.public index( ): int,index( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.data.Field.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.data.Field.public schema( ): Schema,schema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.data.Field.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.connect.data.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Field->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Field->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Schema,Schema,low,low,low-medium,low,1,12,0,1,2,12,62,12,0,18,12,0,0,0,0.458,1,0,0,,,,,62,,,,,,12,,,,,,,
org.apache.kafka.connect.data.Schema.Type,Type,low,low,low,low,0,5,2,2,0,12,31,17,1,12,3,0,0,1.077,0,1,0,0,,,,,31,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.data.Schema.public abstract defaultValue( ): Object,defaultValue( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract doc( ): String,doc( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract field( String ): Field,field( String ): Field,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract fields( ): List,fields( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract parameters( ): Map,parameters( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract schema( ): Schema,schema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract version( ): Integer,version( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.connect.data.Schema->BOOLEAN_SCHEMA,static final BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->BYTES_SCHEMA,static final BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT32_SCHEMA,static final FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT64_SCHEMA,static final FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT16_SCHEMA,static final INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT32_SCHEMA,static final INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT64_SCHEMA,static final INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT8_SCHEMA,static final INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BOOLEAN_SCHEMA,static final OPTIONAL_BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BYTES_SCHEMA,static final OPTIONAL_BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT32_SCHEMA,static final OPTIONAL_FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT64_SCHEMA,static final OPTIONAL_FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT16_SCHEMA,static final OPTIONAL_INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT32_SCHEMA,static final OPTIONAL_INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT64_SCHEMA,static final OPTIONAL_INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT8_SCHEMA,static final OPTIONAL_INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_STRING_SCHEMA,static final OPTIONAL_STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->STRING_SCHEMA,static final STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaAndValue,SchemaAndValue,low,low,low,low,1,9,3,1,0,9,27,23,2,1,6,0,0,0.533,0.5,0.067,0,0,,,,,27,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.data.SchemaAndValue.public SchemaAndValue( Schema, Object ): void","SchemaAndValue( Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.data.SchemaAndValue.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.data.SchemaAndValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.data.SchemaAndValue.public schema( ): Schema,schema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.data.SchemaAndValue.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.connect.data.SchemaAndValue.public value( ): Object,value( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.data.SchemaAndValue->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaAndValue->value,final value : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaAndValue->NULL,static final NULL : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaBuilder,SchemaBuilder,medium-high,low,low-medium,medium-high,5,68,15,1,0,61,163,146,10,6,23,15,0,0.921,0.793,0.922,0,0,,,,,163,,,,,,61,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaBuilder.public SchemaBuilder( Type ): void,SchemaBuilder( Type ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,0,2
<Method>org.apache.kafka.connect.data.SchemaBuilder.public build( ): Schema,build( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,4,11
<Method>org.apache.kafka.connect.data.SchemaBuilder.public defaultValue( ): Object,defaultValue( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public defaultValue( Object ): SchemaBuilder,defaultValue( Object ): SchemaBuilder,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,3,6
<Method>org.apache.kafka.connect.data.SchemaBuilder.public doc( ): String,doc( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public doc( String ): SchemaBuilder,doc( String ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.connect.data.SchemaBuilder.public field( String ): Field,field( String ): Field,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,2
"<Method>org.apache.kafka.connect.data.SchemaBuilder.public field( String, Schema ): SchemaBuilder","field( String, Schema ): SchemaBuilder",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,12,2,4,5
<Method>org.apache.kafka.connect.data.SchemaBuilder.public fields( ): List,fields( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,2
<Method>org.apache.kafka.connect.data.SchemaBuilder.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,2
<Method>org.apache.kafka.connect.data.SchemaBuilder.public keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public name( String ): SchemaBuilder,name( String ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.connect.data.SchemaBuilder.public optional( ): SchemaBuilder,optional( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,3
"<Method>org.apache.kafka.connect.data.SchemaBuilder.public parameter( String, String ): SchemaBuilder","parameter( String, String ): SchemaBuilder",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,3
<Method>org.apache.kafka.connect.data.SchemaBuilder.public parameters( ): Map,parameters( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.connect.data.SchemaBuilder.public parameters( Map ): SchemaBuilder,parameters( Map ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,2,3
<Method>org.apache.kafka.connect.data.SchemaBuilder.public required( ): SchemaBuilder,required( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,3
<Method>org.apache.kafka.connect.data.SchemaBuilder.public schema( ): Schema,schema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static array( Schema ): SchemaBuilder,static array( Schema ): SchemaBuilder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bool( ): SchemaBuilder,static bool( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bytes( ): SchemaBuilder,static bytes( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.data.SchemaBuilder.private static checkCanSet( String, Object, Object ): void","static checkCanSet( String, Object, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,3,0,0
"<Method>org.apache.kafka.connect.data.SchemaBuilder.private static checkNotNull( String, Object, String ): void","static checkNotNull( String, Object, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,3,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float32( ): SchemaBuilder,static float32( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float64( ): SchemaBuilder,static float64( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int16( ): SchemaBuilder,static int16( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int32( ): SchemaBuilder,static int32( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int64( ): SchemaBuilder,static int64( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int8( ): SchemaBuilder,static int8( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.data.SchemaBuilder.public static map( Schema, Schema ): SchemaBuilder","static map( Schema, Schema ): SchemaBuilder",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,2,0,2
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static string( ): SchemaBuilder,static string( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static struct( ): SchemaBuilder,static struct( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static type( Type ): SchemaBuilder,static type( Type ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public version( ): Integer,version( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.SchemaBuilder.public version( Integer ): SchemaBuilder,version( Integer ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Field>org.apache.kafka.connect.data.SchemaBuilder->defaultValue,defaultValue : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->doc,doc : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->fields,fields : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->type,final type : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->keySchema,keySchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->optional,optional : Boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->parameters,parameters : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->DEFAULT_FIELD,static final DEFAULT_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->DOC_FIELD,static final DOC_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->NAME_FIELD,static final NAME_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->OPTIONAL_FIELD,static final OPTIONAL_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->TYPE_FIELD,static final TYPE_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->VERSION_FIELD,static final VERSION_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->valueSchema,valueSchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.SchemaBuilder->version,version : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaProjector,SchemaProjector,low-medium,low,low-medium,low,5,47,35,1,0,44,114,107,0,1,0,8,0,0,0.45,0,0,0,,,,,114,,,,,,44,,,,,,,
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static checkMaybeCompatible( Schema, Schema ): void","static checkMaybeCompatible( Schema, Schema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,2,17,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static isPromotable( Type, Type ): boolean","static isPromotable( Type, Type ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.connect.data.SchemaProjector.public static project( Schema, Object, Schema ): Object","static project( Schema, Object, Schema ): Object",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,15,3,7,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static projectArray( Schema, Object, Schema ): Object","static projectArray( Schema, Object, Schema ): Object",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,4,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static projectMap( Schema, Object, Schema ): Object","static projectMap( Schema, Object, Schema ): Object",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,10,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static projectPrimitive( Schema, Object, Schema ): Object","static projectPrimitive( Schema, Object, Schema ): Object",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,30,3,14,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static projectRequiredSchema( Schema, Object, Schema ): Object","static projectRequiredSchema( Schema, Object, Schema ): Object",low-medium,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,2,19,3,5,0
"<Method>org.apache.kafka.connect.data.SchemaProjector.private static projectStruct( Schema, Struct, Schema ): Object","static projectStruct( Schema, Struct, Schema ): Object",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,18,3,16,0
<Field>org.apache.kafka.connect.data.SchemaProjector->promotable,static promotable : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Struct,Struct,low-medium,low,low-medium,low-medium,5,55,24,1,0,42,100,97,2,0,25,0,0,0.3,0.673,0.87,0,0,,,,,100,,,,,,42,,,,,,,
<Method>org.apache.kafka.connect.data.Struct.public Struct( Schema ): void,Struct( Schema ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,2
<Method>org.apache.kafka.connect.data.Struct.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.data.Struct.public get( Field ): Object,get( Field ): Object,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,5,1
<Method>org.apache.kafka.connect.data.Struct.public get( String ): Object,get( String ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.data.Struct.public getArray( String ): List,getArray( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getBoolean( String ): Boolean,getBoolean( String ): Boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getBytes( String ): byte,getBytes( String ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,0
"<Method>org.apache.kafka.connect.data.Struct.private getCheckType( String, Type ): Object","getCheckType( String, Type ): Object",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,1
<Method>org.apache.kafka.connect.data.Struct.public getFloat32( String ): Float,getFloat32( String ): Float,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getFloat64( String ): Double,getFloat64( String ): Double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getInt16( String ): Short,getInt16( String ): Short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getInt32( String ): Integer,getInt32( String ): Integer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getInt64( String ): Long,getInt64( String ): Long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getInt8( String ): Byte,getInt8( String ): Byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getMap( String ): Map,getMap( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getString( String ): String,getString( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getStruct( String ): Struct,getStruct( String ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.data.Struct.public getWithoutDefault( String ): Object,getWithoutDefault( String ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.data.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.connect.data.Struct.private lookupField( String ): Field,lookupField( String ): Field,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,1
"<Method>org.apache.kafka.connect.data.Struct.public put( Field, Object ): Struct","put( Field, Object ): Struct",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,4,1
"<Method>org.apache.kafka.connect.data.Struct.public put( String, Object ): Struct","put( String, Object ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.connect.data.Struct.public schema( ): Schema,schema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.data.Struct.public toString( ): String,toString( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,0,9,3
<Method>org.apache.kafka.connect.data.Struct.public validate( ): void,validate( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,0,7,2
<Field>org.apache.kafka.connect.data.Struct->schema,final schema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Struct->values,final values : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Time,Time,low,low,low,low,3,12,8,1,0,9,24,19,0,4,0,3,0,0.75,0.417,0,0,0,,,,,24,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.data.Time.public static builder( ): SchemaBuilder,static builder( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.connect.data.Time.public static fromLogical( Schema, Date ): int","static fromLogical( Schema, Date ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,5,3
"<Method>org.apache.kafka.connect.data.Time.public static toLogical( Schema, int ): Date","static toLogical( Schema, int ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,2,2,2
<Field>org.apache.kafka.connect.data.Time->LOGICAL_NAME,static final LOGICAL_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Time->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Time->SCHEMA,static final SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Time->UTC,static final UTC : TimeZone,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Timestamp,Timestamp,low,low,low,low,3,10,6,1,0,5,15,12,0,2,0,3,0,0.75,0.417,0,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.data.Timestamp.public static builder( ): SchemaBuilder,static builder( ): SchemaBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.connect.data.Timestamp.public static fromLogical( Schema, Date ): long","static fromLogical( Schema, Date ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,3,1
"<Method>org.apache.kafka.connect.data.Timestamp.public static toLogical( Schema, long ): Date","static toLogical( Schema, long ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,1
<Field>org.apache.kafka.connect.data.Timestamp->LOGICAL_NAME,static final LOGICAL_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Timestamp->SCHEMA,static final SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Values,Values,very-high,medium-high,medium-high,medium-high,13,154,92,1,0,226,615,491,0,27,0,28,0,0.977,0.786,1,0,0,,,,,615,,,,,,226,,,,,,,
org.apache.kafka.connect.data.Values.Parser,Parser,low,low,low,low,0,23,15,1,0,32,75,70,4,0,13,0,0,0.705,0.615,0.622,0,0,,,,,75,,,,,,32,,,,,,,
org.apache.kafka.connect.data.Values.SchemaDetector,SchemaDetector,low,low,low,low,3,22,5,1,0,8,21,18,2,0,3,0,0,0,0.333,0.667,0,0,,,,,21,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.data.Values.protected static alignListEntriesWithSchema( Schema, List ): List","static alignListEntriesWithSchema( Schema, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,0
"<Method>org.apache.kafka.connect.data.Values.protected static alignMapKeysAndValuesWithSchema( Schema, Map ): Map","static alignMapKeysAndValuesWithSchema( Schema, Map ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,2,8,0
"<Method>org.apache.kafka.connect.data.Values.protected static append( StringBuilder, Object, boolean ): void","static append( StringBuilder, Object, boolean ): void",low-medium,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,4,57,3,45,1
"<Method>org.apache.kafka.connect.data.Values.protected static appendIterable( StringBuilder, Iterator ): void","static appendIterable( StringBuilder, Iterator ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,7,0
"<Method>org.apache.kafka.connect.data.Values.protected static asDouble( Object, Schema, Throwable ): double","static asDouble( Object, Schema, Throwable ): double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,3,4,0
"<Method>org.apache.kafka.connect.data.Values.protected static asLong( Object, Schema, Throwable ): long","static asLong( Object, Schema, Throwable ): long",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,20,3,12,0
"<Method>org.apache.kafka.connect.data.Values.protected static commonSchemaFor( Schema, SchemaAndValue ): Schema","static commonSchemaFor( Schema, SchemaAndValue ): Schema",very-high,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,43,4,50,2,8,0
"<Method>org.apache.kafka.connect.data.Values.protected static convertTo( Schema, Schema, Object ): Object","static convertTo( Schema, Schema, Object ): Object",very-high,medium-high,high,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,58,6,133,3,75,3
"<Method>org.apache.kafka.connect.data.Values.public static convertToBoolean( Schema, Object ): Boolean","static convertToBoolean( Schema, Object ): Boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToByte( Schema, Object ): Byte","static convertToByte( Schema, Object ): Byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToDate( Schema, Object ): Date","static convertToDate( Schema, Object ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToDecimal( Schema, Object, int ): BigDecimal","static convertToDecimal( Schema, Object, int ): BigDecimal",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToDouble( Schema, Object ): Double","static convertToDouble( Schema, Object ): Double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToFloat( Schema, Object ): Float","static convertToFloat( Schema, Object ): Float",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToInteger( Schema, Object ): Integer","static convertToInteger( Schema, Object ): Integer",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToList( Schema, Object ): List","static convertToList( Schema, Object ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.connect.data.Values.public static convertToLong( Schema, Object ): Long","static convertToLong( Schema, Object ): Long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToMap( Schema, Object ): Map","static convertToMap( Schema, Object ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.connect.data.Values.public static convertToShort( Schema, Object ): Short","static convertToShort( Schema, Object ): Short",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToString( Schema, Object ): String","static convertToString( Schema, Object ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToStruct( Schema, Object ): Struct","static convertToStruct( Schema, Object ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.connect.data.Values.public static convertToTime( Schema, Object ): Date","static convertToTime( Schema, Object ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.data.Values.public static convertToTimestamp( Schema, Object ): Date","static convertToTimestamp( Schema, Object ): Date",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.connect.data.Values.public static dateFormatFor( Date ): DateFormat,static dateFormatFor( Date ): DateFormat,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,5
<Method>org.apache.kafka.connect.data.Values.protected static escape( String ): String,static escape( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
<Method>org.apache.kafka.connect.data.Values.public static inferSchema( Object ): Schema,static inferSchema( Object ): Schema,high,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,4,41,1,16,0
"<Method>org.apache.kafka.connect.data.Values.protected static parse( Parser, boolean ): SchemaAndValue","static parse( Parser, boolean ): SchemaAndValue",very-high,medium-high,high,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,44,6,108,2,71,25
<Method>org.apache.kafka.connect.data.Values.public static parseString( String ): SchemaAndValue,static parseString( String ): SchemaAndValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,1
<Field>org.apache.kafka.connect.data.Values->ARRAY_BEGIN_DELIMITER,static final ARRAY_BEGIN_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ARRAY_END_DELIMITER,static final ARRAY_END_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ARRAY_SELECTOR_SCHEMA,static final ARRAY_SELECTOR_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->COMMA_DELIMITER,static final COMMA_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->DOUBLEQOUTE,static final DOUBLEQOUTE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ENTRY_DELIMITER,static final ENTRY_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->FALSE_LITERAL,static final FALSE_LITERAL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->FALSE_SCHEMA_AND_VALUE,static final FALSE_SCHEMA_AND_VALUE : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_DATE_FORMAT_PATTERN,static final ISO_8601_DATE_FORMAT_PATTERN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_DATE_LENGTH,static final ISO_8601_DATE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_TIMESTAMP_FORMAT_PATTERN,static final ISO_8601_TIMESTAMP_FORMAT_PATTERN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_TIMESTAMP_LENGTH,static final ISO_8601_TIMESTAMP_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_TIME_FORMAT_PATTERN,static final ISO_8601_TIME_FORMAT_PATTERN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->ISO_8601_TIME_LENGTH,static final ISO_8601_TIME_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->MAP_BEGIN_DELIMITER,static final MAP_BEGIN_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->MAP_END_DELIMITER,static final MAP_END_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->MAP_SELECTOR_SCHEMA,static final MAP_SELECTOR_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->NULL_SCHEMA_AND_VALUE,static final NULL_SCHEMA_AND_VALUE : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->NULL_VALUE,static final NULL_VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->QUOTE_DELIMITER,static final QUOTE_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->STRUCT_SELECTOR_SCHEMA,static final STRUCT_SELECTOR_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->TRUE_LITERAL,static final TRUE_LITERAL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->TRUE_SCHEMA_AND_VALUE,static final TRUE_SCHEMA_AND_VALUE : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->TWO_BACKSLASHES,static final TWO_BACKSLASHES : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Values->UTC,static final UTC : TimeZone,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.errors,org.apache.kafka.connect.errors,low,low,low-medium,low,,,,,,24,56,,,,,,,,,,,,,8,8,0,56,57,1,0,0.017,0.983,24,,,,,,,
org.apache.kafka.connect.errors.AlreadyExistsException,AlreadyExistsException,medium-high,low,low,low,0,3,0,6,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.AlreadyExistsException.public AlreadyExistsException( String ): void,AlreadyExistsException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.AlreadyExistsException.public AlreadyExistsException( String, Throwable ): void","AlreadyExistsException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.AlreadyExistsException.public AlreadyExistsException( Throwable ): void,AlreadyExistsException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.ConnectException,ConnectException,medium-high,low,low,low,0,3,0,5,8,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.ConnectException.public ConnectException( String ): void,ConnectException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.ConnectException.public ConnectException( String, Throwable ): void","ConnectException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.ConnectException.public ConnectException( Throwable ): void,ConnectException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.DataException,DataException,medium-high,low,low,low,0,3,0,6,2,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.DataException.public DataException( String ): void,DataException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.DataException.public DataException( String, Throwable ): void","DataException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.DataException.public DataException( Throwable ): void,DataException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.IllegalWorkerStateException,IllegalWorkerStateException,medium-high,low,low,low,0,3,0,6,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.IllegalWorkerStateException.public IllegalWorkerStateException( String ): void,IllegalWorkerStateException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.IllegalWorkerStateException.public IllegalWorkerStateException( String, Throwable ): void","IllegalWorkerStateException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.IllegalWorkerStateException.public IllegalWorkerStateException( Throwable ): void,IllegalWorkerStateException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.NotFoundException,NotFoundException,medium-high,low,low,low,0,3,0,6,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.NotFoundException.public NotFoundException( String ): void,NotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.NotFoundException.public NotFoundException( String, Throwable ): void","NotFoundException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.NotFoundException.public NotFoundException( Throwable ): void,NotFoundException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.RetriableException,RetriableException,medium-high,low,low,low,0,3,0,6,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.RetriableException.public RetriableException( String ): void,RetriableException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.RetriableException.public RetriableException( String, Throwable ): void","RetriableException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.RetriableException.public RetriableException( Throwable ): void,RetriableException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.SchemaBuilderException,SchemaBuilderException,medium-high,low,low,low,0,3,0,7,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.SchemaBuilderException.public SchemaBuilderException( String ): void,SchemaBuilderException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.SchemaBuilderException.public SchemaBuilderException( String, Throwable ): void","SchemaBuilderException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.SchemaBuilderException.public SchemaBuilderException( Throwable ): void,SchemaBuilderException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.errors.SchemaProjectorException,SchemaProjectorException,medium-high,low,low,low,0,3,0,7,0,3,7,6,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.errors.SchemaProjectorException.public SchemaProjectorException( String ): void,SchemaProjectorException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.errors.SchemaProjectorException.public SchemaProjectorException( String, Throwable ): void","SchemaProjectorException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.errors.SchemaProjectorException.public SchemaProjectorException( Throwable ): void,SchemaProjectorException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Package>org.apache.kafka.connect.file,org.apache.kafka.connect.file,low,low,low,low,,,,,,71,244,,,,,,,,,,,,,4,4,0,244,0,4,0,1,0,71,,,,,,,
org.apache.kafka.connect.file.FileStreamSinkConnector,FileStreamSinkConnector,low-medium,low,low,low,3,15,4,3,0,8,29,24,1,2,6,0,0,0.5,0.556,0.867,1,0,,,,,29,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,2,3
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.file.FileStreamSinkConnector->filename,filename : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSinkConnector->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSinkConnector->FILE_CONFIG,static final FILE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.file.FileStreamSinkTask,FileStreamSinkTask,low-medium,low,low,low-medium,4,20,12,2,0,14,39,35,2,1,8,0,1,0.533,0.625,0.524,0,0.25,,,,,39,,,,,,14,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public FileStreamSinkTask( ): void,FileStreamSinkTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public FileStreamSinkTask( PrintStream ): void,FileStreamSinkTask( PrintStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public flush( Map ): void,flush( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.private logFilename( ): String,logFilename( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,2
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public put( Collection ): void,put( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,5,2
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public start( Map ): void,start( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,1,4,6
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,1,3
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.file.FileStreamSinkTask->filename,filename : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSinkTask->outputStream,outputStream : PrintStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSinkTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.file.FileStreamSourceConnector,FileStreamSourceConnector,low-medium,low,low,low,4,20,9,3,0,8,43,30,3,5,6,0,0,0.625,0.556,0.867,1,0,,,,,43,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public start( Map ): void,start( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,5,7
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,1,5,7
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->batchSize,batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->filename,filename : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->DEFAULT_TASK_BATCH_SIZE,static final DEFAULT_TASK_BATCH_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->FILE_CONFIG,static final FILE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->TASK_BATCH_SIZE_CONFIG,static final TASK_BATCH_SIZE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->TOPIC_CONFIG,static final TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceConnector->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.file.FileStreamSourceTask,FileStreamSourceTask,low-medium,low-medium,low-medium,low-medium,7,35,30,2,0,41,133,120,8,4,8,0,0,0.806,0.656,0.5,0,0,,,,,133,,,,,,41,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.private extractLine( ): String,extractLine( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,0,1,13
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.private logFilename( ): String,logFilename( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,2
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.private offsetKey( String ): Map,offsetKey( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.private offsetValue( Long ): Map,offsetValue( Long ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public poll( ): List,poll( ): List,high,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,7,69,0,30,39
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,5,9
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,5,6
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->batchSize,batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->buffer,buffer : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->filename,filename : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->offset,offset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->reader,reader : BufferedReader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->FILENAME_FIELD,static final FILENAME_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->POSITION_FIELD,static final POSITION_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->VALUE_SCHEMA,static final VALUE_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->stream,stream : InputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->streamOffset,streamOffset : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.header,org.apache.kafka.connect.header,low,low,low-medium,low,,,,,,182,392,,,,,,,,,,,,,6,3,3,392,6,4,0.5,0.4,0.1,182,,,,,,,
org.apache.kafka.connect.header.ConnectHeader,ConnectHeader,low,low,low,low-medium,3,19,12,1,0,15,45,41,2,1,9,0,0,0.583,0.667,0.286,0,0,,,,,45,,,,,,15,,,,,,,
"<Method>org.apache.kafka.connect.header.ConnectHeader.protected ConnectHeader( String, SchemaAndValue ): void","ConnectHeader( String, SchemaAndValue ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,1,4
<Method>org.apache.kafka.connect.header.ConnectHeader.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,8,1
<Method>org.apache.kafka.connect.header.ConnectHeader.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.header.ConnectHeader.public key( ): String,key( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.header.ConnectHeader.public rename( String ): Header,rename( String ): Header,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,2
<Method>org.apache.kafka.connect.header.ConnectHeader.public schema( ): Schema,schema( ): Schema,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,4,1
<Method>org.apache.kafka.connect.header.ConnectHeader.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.connect.header.ConnectHeader.public value( ): Object,value( ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.connect.header.ConnectHeader.public with( Schema, Object ): Header","with( Schema, Object ): Header",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Field>org.apache.kafka.connect.header.ConnectHeader->key,final key : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.header.ConnectHeader->schemaAndValue,final schemaAndValue : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.header.ConnectHeader->NULL_SCHEMA_AND_VALUE,static final NULL_SCHEMA_AND_VALUE : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.header.ConnectHeaders,ConnectHeaders,very-high,medium-high,medium-high,high,12,101,46,1,0,127,308,280,1,2,40,0,0,0.667,0.887,0.876,0,0,,,,,308,,,,,,127,,,,,,,
org.apache.kafka.connect.header.ConnectHeaders.FilterByKeyIterator,FilterByKeyIterator,low,low,low,low,1,7,5,2,0,4,14,11,2,0,2,0,0,0,0.333,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.header.ConnectHeaders. checkSchemaMatches( SchemaAndValue ): void, checkSchemaMatches( SchemaAndValue ): void,very-high,medium-high,medium-high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,39,4,70,1,13,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public ConnectHeaders( ): void,ConnectHeaders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public ConnectHeaders( Iterable ): void,ConnectHeaders( Iterable ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,1,2,4
<Method>org.apache.kafka.connect.header.ConnectHeaders.public add( Header ): Headers,add( Header ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,3
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public add( String, Object, Schema ): Headers","add( String, Object, Schema ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,3,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public add( String, SchemaAndValue ): Headers","add( String, SchemaAndValue ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addBoolean( String, boolean ): Headers","addBoolean( String, boolean ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addByte( String, byte ): Headers","addByte( String, byte ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addBytes( String, byte ): Headers","addBytes( String, byte ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addDate( String, Date ): Headers","addDate( String, Date ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addDecimal( String, BigDecimal ): Headers","addDecimal( String, BigDecimal ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,5,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addDouble( String, double ): Headers","addDouble( String, double ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addFloat( String, float ): Headers","addFloat( String, float ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addInt( String, int ): Headers","addInt( String, int ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addList( String, List, Schema ): Headers","addList( String, List, Schema ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,3,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addLong( String, long ): Headers","addLong( String, long ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addMap( String, Map, Schema ): Headers","addMap( String, Map, Schema ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,3,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addShort( String, short ): Headers","addShort( String, short ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addString( String, String ): Headers","addString( String, String ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addStruct( String, Struct ): Headers","addStruct( String, Struct ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,5,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addTime( String, Date ): Headers","addTime( String, Date ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public addTimestamp( String, Date ): Headers","addTimestamp( String, Date ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.protected addWithoutValidating( String, Object, Schema ): Headers","addWithoutValidating( String, Object, Schema ): Headers",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public allWithName( String ): Iterator,allWithName( String ): Iterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public apply( HeaderTransform ): Headers,apply( HeaderTransform ): Headers,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,7,1
"<Method>org.apache.kafka.connect.header.ConnectHeaders.public apply( String, HeaderTransform ): Headers","apply( String, HeaderTransform ): Headers",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,14,2,10,1
<Method>org.apache.kafka.connect.header.ConnectHeaders.private checkKey( String ): void,checkKey( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.header.ConnectHeaders.private checkSchemaType( Schema, Type ): void","checkSchemaType( Schema, Type ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,2,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public clear( ): Headers,clear( ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public duplicate( ): ConnectHeaders,duplicate( ): ConnectHeaders,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,1,9,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public iterator( ): Iterator,iterator( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,3
<Method>org.apache.kafka.connect.header.ConnectHeaders.public lastWithName( String ): Header,lastWithName( String ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,1,7,3
<Method>org.apache.kafka.connect.header.ConnectHeaders.public remove( String ): Headers,remove( String ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,1,8,0
<Method>org.apache.kafka.connect.header.ConnectHeaders.public retainLatest( ): Headers,retainLatest( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,8,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public retainLatest( String ): Headers,retainLatest( String ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,1,9,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
<Method>org.apache.kafka.connect.header.ConnectHeaders.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,2
<Field>org.apache.kafka.connect.header.ConnectHeaders->headers,headers : LinkedList,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.header.ConnectHeaders->EMPTY_HASH,static final EMPTY_HASH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.header.ConnectHeaders->EMPTY_ITERATOR,static final EMPTY_ITERATOR : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.header.Header,Header,low,low,low,low,1,5,0,1,1,5,6,5,0,0,5,0,0,0,0.6,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.header.Header.public abstract key( ): String,key( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Header.public abstract rename( String ): Header,rename( String ): Header,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.header.Header.public abstract schema( ): Schema,schema( ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Header.public abstract value( ): Object,value( ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.header.Header.public abstract with( Schema, Object ): Header","with( Schema, Object ): Header",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.connect.header.Headers,Headers,low-medium,low,low-medium,high,4,30,0,1,1,30,33,30,0,0,30,0,0,0,0.867,0,0,0,,,,,33,,,,,,30,,,,,,,
org.apache.kafka.connect.header.Headers.HeaderTransform,HeaderTransform,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.header.Headers.public abstract add( Header ): Headers,add( Header ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract add( String, Object, Schema ): Headers","add( String, Object, Schema ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract add( String, SchemaAndValue ): Headers","add( String, SchemaAndValue ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addBoolean( String, boolean ): Headers","addBoolean( String, boolean ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addByte( String, byte ): Headers","addByte( String, byte ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addBytes( String, byte ): Headers","addBytes( String, byte ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addDate( String, Date ): Headers","addDate( String, Date ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addDecimal( String, BigDecimal ): Headers","addDecimal( String, BigDecimal ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addDouble( String, double ): Headers","addDouble( String, double ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addFloat( String, float ): Headers","addFloat( String, float ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addInt( String, int ): Headers","addInt( String, int ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addList( String, List, Schema ): Headers","addList( String, List, Schema ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addLong( String, long ): Headers","addLong( String, long ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addMap( String, Map, Schema ): Headers","addMap( String, Map, Schema ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addShort( String, short ): Headers","addShort( String, short ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addString( String, String ): Headers","addString( String, String ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addStruct( String, Struct ): Headers","addStruct( String, Struct ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addTime( String, Date ): Headers","addTime( String, Date ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract addTimestamp( String, Date ): Headers","addTimestamp( String, Date ): Headers",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract allWithName( String ): Iterator,allWithName( String ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract apply( HeaderTransform ): Headers,apply( HeaderTransform ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.header.Headers.public abstract apply( String, HeaderTransform ): Headers","apply( String, HeaderTransform ): Headers",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract clear( ): Headers,clear( ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract duplicate( ): Headers,duplicate( ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract lastWithName( String ): Header,lastWithName( String ): Header,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract remove( String ): Headers,remove( String ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract retainLatest( ): Headers,retainLatest( ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract retainLatest( String ): Headers,retainLatest( String ): Headers,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.header.Headers.public abstract size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.health,org.apache.kafka.connect.health,low,low,low-medium,low,,,,,,43,133,,,,,,,,,,,,,7,5,2,133,8,0,0.429,0,0.571,43,,,,,,,
org.apache.kafka.connect.health.AbstractState,AbstractState,low,low,low,low,0,12,6,1,2,13,31,27,3,0,6,0,0,0.4,0.556,0.2,0,0,,,,,31,,,,,,13,,,,,,,
"<Method>org.apache.kafka.connect.health.AbstractState.public AbstractState( String, String, String ): void","AbstractState( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,8,3,4,3
<Method>org.apache.kafka.connect.health.AbstractState.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,5,6
<Method>org.apache.kafka.connect.health.AbstractState.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.connect.health.AbstractState.public state( ): String,state( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.AbstractState.public traceMessage( ): String,traceMessage( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.AbstractState.public workerId( ): String,workerId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.health.AbstractState->state,final state : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.AbstractState->traceMessage,final traceMessage : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.AbstractState->workerId,final workerId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.health.ConnectClusterDetails,ConnectClusterDetails,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.health.ConnectClusterDetails.public abstract kafkaClusterId( ): String,kafkaClusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.health.ConnectClusterState,ConnectClusterState,low,low,low,low,2,4,0,1,1,4,7,4,0,0,4,0,0,0,0.25,0,0,0,,,,,7,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.health.ConnectClusterState.public clusterDetails( ): ConnectClusterDetails,clusterDetails( ): ConnectClusterDetails,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.health.ConnectClusterState.public connectorConfig( String ): Map,connectorConfig( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.health.ConnectClusterState.public abstract connectorHealth( String ): ConnectorHealth,connectorHealth( String ): ConnectorHealth,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.health.ConnectClusterState.public abstract connectors( ): Collection,connectors( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.health.ConnectorHealth,ConnectorHealth,low,low,low,medium-high,2,17,8,1,0,13,48,43,4,0,8,0,0,0.429,0.729,0.214,0,0,,,,,48,,,,,,13,,,,,,,
"<Method>org.apache.kafka.connect.health.ConnectorHealth.public ConnectorHealth( String, ConnectorState, Map, ConnectorType ): void","ConnectorHealth( String, ConnectorState, Map, ConnectorType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,4,5,4
<Method>org.apache.kafka.connect.health.ConnectorHealth.public connectorState( ): ConnectorState,connectorState( ): ConnectorState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.ConnectorHealth.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,1,5,8
<Method>org.apache.kafka.connect.health.ConnectorHealth.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.connect.health.ConnectorHealth.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.ConnectorHealth.public tasksState( ): Map,tasksState( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.ConnectorHealth.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,4
<Method>org.apache.kafka.connect.health.ConnectorHealth.public type( ): ConnectorType,type( ): ConnectorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.health.ConnectorHealth->connectorState,final connectorState : ConnectorState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.ConnectorHealth->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.ConnectorHealth->tasks,final tasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.ConnectorHealth->type,final type : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.health.ConnectorState,ConnectorState,low-medium,low,low,low,0,5,3,2,0,2,10,9,0,0,2,0,0,0,0.25,0,0,0,,,,,10,,,,,,2,,,,,,,
"<Method>org.apache.kafka.connect.health.ConnectorState.public ConnectorState( String, String, String ): void","ConnectorState( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
<Method>org.apache.kafka.connect.health.ConnectorState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,3,0
org.apache.kafka.connect.health.ConnectorType,ConnectorType,low-medium,low,low,low,0,3,2,2,0,1,7,3,0,3,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.health.ConnectorType.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Field>org.apache.kafka.connect.health.ConnectorType->SINK,static final SINK : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.ConnectorType->SOURCE,static final SOURCE : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.health.ConnectorType->UNKNOWN,static final UNKNOWN : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.health.TaskState,TaskState,low-medium,low,low,low,0,14,7,2,0,9,28,26,1,0,5,0,0,0,0.6,0,0,0,,,,,28,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.health.TaskState.public TaskState( int, String, String, String ): void","TaskState( int, String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,0,1
<Method>org.apache.kafka.connect.health.TaskState.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,10,1,3,2
<Method>org.apache.kafka.connect.health.TaskState.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.connect.health.TaskState.public taskId( ): int,taskId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.health.TaskState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,3,1
<Field>org.apache.kafka.connect.health.TaskState->taskId,final taskId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.json,org.apache.kafka.connect.json,low,low,low-medium,low,,,,,,164,660,,,,,,,,,,,,,9,7,2,660,3,5,0.222,0.625,0.153,164,,,,,,,
org.apache.kafka.connect.json.DecimalFormat,DecimalFormat,low-medium,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.json.DecimalFormat->BASE64,static final BASE64 : DecimalFormat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.DecimalFormat->NUMERIC,static final NUMERIC : DecimalFormat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonConverter,JsonConverter,very-high,high,medium-high,low-medium,26,138,107,1,0,144,533,367,5,2,14,1,0,0.816,0.683,0.873,1,0,,,,,533,,,,,,144,,,,,,,
org.apache.kafka.connect.json.JsonConverter.JsonToConnectTypeConverter,JsonToConnectTypeConverter,low,low,low,low,2,1,0,1,12,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.json.JsonConverter.LogicalTypeConverter,LogicalTypeConverter,low,low,low,low,3,2,0,1,4,2,3,2,0,0,2,0,0,0,0.3,0,0,0,,,,,3,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11255;,Lorg.apache.kafka.connect.json.JsonConverter$11255;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12141;,Lorg.apache.kafka.connect.json.JsonConverter$12141;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$13032;,Lorg.apache.kafka.connect.json.JsonConverter$13032;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3077;,Lorg.apache.kafka.connect.json.JsonConverter$3077;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3324;,Lorg.apache.kafka.connect.json.JsonConverter$3324;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3575;,Lorg.apache.kafka.connect.json.JsonConverter$3575;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3827;,Lorg.apache.kafka.connect.json.JsonConverter$3827;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4071;,Lorg.apache.kafka.connect.json.JsonConverter$4071;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4318;,Lorg.apache.kafka.connect.json.JsonConverter$4318;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4566;,Lorg.apache.kafka.connect.json.JsonConverter$4566;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4813;,Lorg.apache.kafka.connect.json.JsonConverter$4813;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5218;,Lorg.apache.kafka.connect.json.JsonConverter$5218;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5463;,Lorg.apache.kafka.connect.json.JsonConverter$5463;,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5971;,Lorg.apache.kafka.connect.json.JsonConverter$5971;,low,low,low,low,0,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$8145;,Lorg.apache.kafka.connect.json.JsonConverter$8145;,low,low,low,low,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$9613;,Lorg.apache.kafka.connect.json.JsonConverter$9613;,low,low,low,low,0,0,0,1,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.json.JsonConverter.public JsonConverter( ): void,JsonConverter( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.connect.json.JsonConverter.public asConnectSchema( JsonNode ): Schema,asConnectSchema( JsonNode ): Schema,very-high,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,3,95,1,64,2
<Method>org.apache.kafka.connect.json.JsonConverter.public asJsonSchema( Schema ): ObjectNode,asJsonSchema( Schema ): ObjectNode,high,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22,3,71,1,59,2
<Method>org.apache.kafka.connect.json.JsonConverter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.json.JsonConverter.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.json.JsonConverter.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,9
"<Method>org.apache.kafka.connect.json.JsonConverter.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,0
"<Method>org.apache.kafka.connect.json.JsonConverter.private convertToJson( Schema, Object ): JsonNode","convertToJson( Schema, Object ): JsonNode",very-high,very-high,medium-high,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,39,7,93,2,60,2
"<Method>org.apache.kafka.connect.json.JsonConverter.private convertToJsonWithEnvelope( Schema, Object ): JsonNode","convertToJsonWithEnvelope( Schema, Object ): JsonNode",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
"<Method>org.apache.kafka.connect.json.JsonConverter.private convertToJsonWithoutEnvelope( Schema, Object ): JsonNode","convertToJsonWithoutEnvelope( Schema, Object ): JsonNode",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.json.JsonConverter.public fromConnectData( String, Schema, Object ): byte","fromConnectData( String, Schema, Object ): byte",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,9,3,4,2
"<Method>org.apache.kafka.connect.json.JsonConverter.public fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
"<Method>org.apache.kafka.connect.json.JsonConverter.private static convertToConnect( Schema, JsonNode ): Object","static convertToConnect( Schema, JsonNode ): Object",medium-high,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,3,46,2,14,2
"<Method>org.apache.kafka.connect.json.JsonConverter.public toConnectData( String, byte ): SchemaAndValue","toConnectData( String, byte ): SchemaAndValue",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,22,2,14,3
"<Method>org.apache.kafka.connect.json.JsonConverter.public toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Field>org.apache.kafka.connect.json.JsonConverter->config,config : JsonConverterConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->deserializer,final deserializer : JsonDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->serializer,final serializer : JsonSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->fromConnectSchemaCache,fromConnectSchemaCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->LOGICAL_CONVERTERS,static final LOGICAL_CONVERTERS : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->TO_CONNECT_CONVERTERS,static final TO_CONNECT_CONVERTERS : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->toConnectSchemaCache,toConnectSchemaCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonConverterConfig,JsonConverterConfig,low-medium,low-medium,low,low,3,14,4,3,0,5,48,13,3,13,4,1,0,1.078,0.4,0.6,0,0,,,,,48,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.json.JsonConverterConfig.public JsonConverterConfig( Map ): void,JsonConverterConfig( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,7
<Method>org.apache.kafka.connect.json.JsonConverterConfig.public decimalFormat( ): DecimalFormat,decimalFormat( ): DecimalFormat,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.json.JsonConverterConfig.public schemaCacheSize( ): int,schemaCacheSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.json.JsonConverterConfig.public schemasEnabled( ): boolean,schemasEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.json.JsonConverterConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.json.JsonConverterConfig->decimalFormat,final decimalFormat : DecimalFormat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->schemaCacheSize,final schemaCacheSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->schemasEnabled,final schemasEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->DECIMAL_FORMAT_CONFIG,static final DECIMAL_FORMAT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->DECIMAL_FORMAT_DEFAULT,static final DECIMAL_FORMAT_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->DECIMAL_FORMAT_DISPLAY,static final DECIMAL_FORMAT_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->DECIMAL_FORMAT_DOC,static final DECIMAL_FORMAT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_CACHE_SIZE_CONFIG,static final SCHEMAS_CACHE_SIZE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_CACHE_SIZE_DEFAULT,static final SCHEMAS_CACHE_SIZE_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_CACHE_SIZE_DISPLAY,static final SCHEMAS_CACHE_SIZE_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_CACHE_SIZE_DOC,static final SCHEMAS_CACHE_SIZE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_ENABLE_CONFIG,static final SCHEMAS_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_ENABLE_DEFAULT,static final SCHEMAS_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_ENABLE_DISPLAY,static final SCHEMAS_ENABLE_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverterConfig->SCHEMAS_ENABLE_DOC,static final SCHEMAS_ENABLE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonDeserializer,JsonDeserializer,low,low,low,low,3,6,3,1,0,5,16,14,1,0,3,0,0,0,0.5,1,0,0,,,,,16,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.json.JsonDeserializer. JsonDeserializer( Set ): void, JsonDeserializer( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.json.JsonDeserializer.public JsonDeserializer( ): void,JsonDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.connect.json.JsonDeserializer.public deserialize( String, byte ): JsonNode","deserialize( String, byte ): JsonNode",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,1,1
<Field>org.apache.kafka.connect.json.JsonDeserializer->objectMapper,objectMapper : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonSchema,JsonSchema,low,low,low,low,3,3,2,1,0,1,49,5,0,35,0,1,0,0,0,0,0,0,,,,,49,,,,,,1,,,,,,,
org.apache.kafka.connect.json.JsonSchema.Envelope,Envelope,low,low,low,low,2,5,1,1,0,2,8,5,2,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.connect.json.JsonSchema.public static envelope( JsonNode, JsonNode ): ObjectNode","static envelope( JsonNode, JsonNode ): ObjectNode",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,2
<Field>org.apache.kafka.connect.json.JsonSchema->ARRAY_ITEMS_FIELD_NAME,static final ARRAY_ITEMS_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->ARRAY_TYPE_NAME,static final ARRAY_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->BOOLEAN_SCHEMA,static final BOOLEAN_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->BOOLEAN_TYPE_NAME,static final BOOLEAN_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->BYTES_SCHEMA,static final BYTES_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->BYTES_TYPE_NAME,static final BYTES_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->DOUBLE_SCHEMA,static final DOUBLE_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->DOUBLE_TYPE_NAME,static final DOUBLE_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->ENVELOPE_PAYLOAD_FIELD_NAME,static final ENVELOPE_PAYLOAD_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->ENVELOPE_SCHEMA_FIELD_NAME,static final ENVELOPE_SCHEMA_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->FLOAT_SCHEMA,static final FLOAT_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->FLOAT_TYPE_NAME,static final FLOAT_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT16_SCHEMA,static final INT16_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT16_TYPE_NAME,static final INT16_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT32_SCHEMA,static final INT32_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT32_TYPE_NAME,static final INT32_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT64_SCHEMA,static final INT64_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT64_TYPE_NAME,static final INT64_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT8_SCHEMA,static final INT8_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->INT8_TYPE_NAME,static final INT8_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->MAP_KEY_FIELD_NAME,static final MAP_KEY_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->MAP_TYPE_NAME,static final MAP_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->MAP_VALUE_FIELD_NAME,static final MAP_VALUE_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_DEFAULT_FIELD_NAME,static final SCHEMA_DEFAULT_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_DOC_FIELD_NAME,static final SCHEMA_DOC_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_NAME_FIELD_NAME,static final SCHEMA_NAME_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_OPTIONAL_FIELD_NAME,static final SCHEMA_OPTIONAL_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_PARAMETERS_FIELD_NAME,static final SCHEMA_PARAMETERS_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_TYPE_FIELD_NAME,static final SCHEMA_TYPE_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->SCHEMA_VERSION_FIELD_NAME,static final SCHEMA_VERSION_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->STRING_SCHEMA,static final STRING_SCHEMA : ObjectNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->STRING_TYPE_NAME,static final STRING_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->STRUCT_FIELDS_FIELD_NAME,static final STRUCT_FIELDS_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->STRUCT_FIELD_NAME_FIELD_NAME,static final STRUCT_FIELD_NAME_FIELD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonSchema->STRUCT_TYPE_NAME,static final STRUCT_TYPE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonSerializer,JsonSerializer,low,low,low,low,3,3,1,1,0,4,11,9,1,0,2,0,0,0,0.333,1,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.json.JsonSerializer.public JsonSerializer( ): void,JsonSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.json.JsonSerializer.public serialize( String, JsonNode ): byte","serialize( String, JsonNode ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,1,1
<Field>org.apache.kafka.connect.json.JsonSerializer->objectMapper,final objectMapper : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.mirror,org.apache.kafka.connect.mirror,low-medium,high,high,low,,,,,,431,2350,,,,,,,,,,,,,37,32,5,2350,0,27,0.135,1,0.135,431,,,,,,,
org.apache.kafka.connect.mirror.Checkpoint,Checkpoint,low-medium,low,low-medium,high,5,54,26,1,0,19,109,85,5,11,16,3,0,0.875,0.816,0.583,0,0,,,,,109,,,,,,19,,,,,,,
<Method>org.apache.kafka.connect.mirror.Checkpoint. connectPartition( ): Map, connectPartition( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,6
<Method>org.apache.kafka.connect.mirror.Checkpoint. recordKey( ): byte, recordKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.connect.mirror.Checkpoint. recordValue( ): byte, recordValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.mirror.Checkpoint. serializeKey( ): ByteBuffer, serializeKey( ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
<Method>org.apache.kafka.connect.mirror.Checkpoint. serializeValue( short ): ByteBuffer, serializeValue( short ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,9,2
"<Method>org.apache.kafka.connect.mirror.Checkpoint.public Checkpoint( String, TopicPartition, long, long, String ): void","Checkpoint( String, TopicPartition, long, long, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,0,5
<Method>org.apache.kafka.connect.mirror.Checkpoint.public consumerGroupId( ): String,consumerGroupId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.public downstreamOffset( ): long,downstreamOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.private headerStruct( short ): Struct,headerStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.connect.mirror.Checkpoint.private keyStruct( ): Struct,keyStruct( ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,7
<Method>org.apache.kafka.connect.mirror.Checkpoint.public metadata( ): String,metadata( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.public offsetAndMetadata( ): OffsetAndMetadata,offsetAndMetadata( ): OffsetAndMetadata,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.connect.mirror.Checkpoint.public static deserializeRecord( ConsumerRecord ): Checkpoint,static deserializeRecord( ConsumerRecord ): Checkpoint,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,1,15,9
<Method>org.apache.kafka.connect.mirror.Checkpoint.static unwrapGroup( Map ): String,static unwrapGroup( Map ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.private static valueSchema( short ): Schema,static valueSchema( short ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,5
<Method>org.apache.kafka.connect.mirror.Checkpoint.public topicPartition( ): TopicPartition,topicPartition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.public upstreamOffset( ): long,upstreamOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Checkpoint.private valueStruct( Schema ): Struct,valueStruct( Schema ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,6
<Field>org.apache.kafka.connect.mirror.Checkpoint->consumerGroupId,consumerGroupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->downstreamOffset,downstreamOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->metadata,metadata : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->CONSUMER_GROUP_ID_KEY,static final CONSUMER_GROUP_ID_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->DOWNSTREAM_OFFSET_KEY,static final DOWNSTREAM_OFFSET_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->HEADER_SCHEMA,static final HEADER_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->KEY_SCHEMA,static final KEY_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->METADATA_KEY,static final METADATA_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->PARTITION_KEY,static final PARTITION_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->TOPIC_KEY,static final TOPIC_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->UPSTREAM_OFFSET_KEY,static final UPSTREAM_OFFSET_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->VALUE_SCHEMA_V0,static final VALUE_SCHEMA_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->VERSION,static final VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->VERSION_KEY,static final VERSION_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->topicPartition,topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Checkpoint->upstreamOffset,upstreamOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.ConfigPropertyFilter,ConfigPropertyFilter,low,low,low,low,0,3,0,1,1,3,5,3,0,0,3,0,0,0,0.444,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.ConfigPropertyFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.ConfigPropertyFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.mirror.ConfigPropertyFilter.public abstract shouldReplicateConfigProperty( String ): boolean,shouldReplicateConfigProperty( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter,DefaultConfigPropertyFilter,low,low,low,low,0,17,4,1,0,4,33,11,1,3,4,0,0,1.5,0.417,1,0,0,,,,,33,,,,,,4,,,,,,,
org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter.ConfigPropertyFilterConfig,ConfigPropertyFilterConfig,low,low,low,low,2,12,2,2,0,2,11,4,0,1,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter.private blacklisted( String ): boolean,blacklisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter.public shouldReplicateConfigProperty( String ): boolean,shouldReplicateConfigProperty( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter->blacklistPattern,blacklistPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter->CONFIG_PROPERTIES_BLACKLIST_CONFIG,static final CONFIG_PROPERTIES_BLACKLIST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter->CONFIG_PROPERTIES_BLACKLIST_DEFAULT,static final CONFIG_PROPERTIES_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultConfigPropertyFilter->CONFIG_PROPERTIES_BLACKLIST_DOC,static final CONFIG_PROPERTIES_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.DefaultGroupFilter,DefaultGroupFilter,low,low,low,low,0,19,6,1,0,5,41,14,2,6,5,0,0,1.25,0.4,1,0,0,,,,,41,,,,,,5,,,,,,,
org.apache.kafka.connect.mirror.DefaultGroupFilter.GroupFilterConfig,GroupFilterConfig,low,low,low,low,2,13,2,2,0,3,18,6,0,1,3,0,0,0,0.333,0,0,0,,,,,18,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.DefaultGroupFilter.private blacklisted( String ): boolean,blacklisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.connect.mirror.DefaultGroupFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.DefaultGroupFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
<Method>org.apache.kafka.connect.mirror.DefaultGroupFilter.public shouldReplicateGroup( String ): boolean,shouldReplicateGroup( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.mirror.DefaultGroupFilter.private whitelisted( String ): boolean,whitelisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->blacklistPattern,blacklistPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_BLACKLIST_CONFIG,static final GROUPS_BLACKLIST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_BLACKLIST_DEFAULT,static final GROUPS_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_BLACKLIST_DOC,static final GROUPS_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_WHITELIST_CONFIG,static final GROUPS_WHITELIST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_WHITELIST_DEFAULT,static final GROUPS_WHITELIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->GROUPS_WHITELIST_DOC,static final GROUPS_WHITELIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultGroupFilter->whitelistPattern,whitelistPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.DefaultReplicationPolicy,DefaultReplicationPolicy,low,low,low,low,1,12,9,1,0,7,29,23,2,3,4,0,0,0.867,0.333,0.333,0,0,,,,,29,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.mirror.DefaultReplicationPolicy.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,5,7
"<Method>org.apache.kafka.connect.mirror.DefaultReplicationPolicy.public formatRemoteTopic( String, String ): String","formatRemoteTopic( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.connect.mirror.DefaultReplicationPolicy.public topicSource( String ): String,topicSource( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,1,1
<Method>org.apache.kafka.connect.mirror.DefaultReplicationPolicy.public upstreamTopic( String ): String,upstreamTopic( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,1
<Field>org.apache.kafka.connect.mirror.DefaultReplicationPolicy->separator,separator : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultReplicationPolicy->separatorPattern,separatorPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultReplicationPolicy->SEPARATOR_CONFIG,static final SEPARATOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultReplicationPolicy->SEPARATOR_DEFAULT,static final SEPARATOR_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultReplicationPolicy->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.DefaultTopicFilter,DefaultTopicFilter,low,low,low,low,0,19,6,1,0,5,41,14,2,6,5,0,0,1.25,0.4,1,0,0,,,,,41,,,,,,5,,,,,,,
org.apache.kafka.connect.mirror.DefaultTopicFilter.TopicFilterConfig,TopicFilterConfig,low,low,low,low,2,13,2,2,0,3,18,6,0,1,3,0,0,0,0.333,0,0,0,,,,,18,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.DefaultTopicFilter.private blacklisted( String ): boolean,blacklisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.connect.mirror.DefaultTopicFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.DefaultTopicFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
<Method>org.apache.kafka.connect.mirror.DefaultTopicFilter.public shouldReplicateTopic( String ): boolean,shouldReplicateTopic( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.mirror.DefaultTopicFilter.private whitelisted( String ): boolean,whitelisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->blacklistPattern,blacklistPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_BLACKLIST_CONFIG,static final TOPICS_BLACKLIST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_BLACKLIST_DEFAULT,static final TOPICS_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_BLACKLIST_DOC,static final TOPICS_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_WHITELIST_CONFIG,static final TOPICS_WHITELIST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_WHITELIST_DEFAULT,static final TOPICS_WHITELIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->TOPICS_WHITELIST_DOC,static final TOPICS_WHITELIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.DefaultTopicFilter->whitelistPattern,whitelistPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.GroupFilter,GroupFilter,low,low,low,low,0,3,0,1,1,3,5,3,0,0,3,0,0,0,0.444,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.GroupFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.GroupFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.mirror.GroupFilter.public abstract shouldReplicateGroup( String ): boolean,shouldReplicateGroup( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.mirror.Heartbeat,Heartbeat,low,low,low-medium,medium-high,3,46,21,1,0,15,80,64,3,8,13,2,0,0.853,0.756,0.533,0,0,,,,,80,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.mirror.Heartbeat. connectPartition( ): Map, connectPartition( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,4
<Method>org.apache.kafka.connect.mirror.Heartbeat. recordKey( ): byte, recordKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.connect.mirror.Heartbeat. recordValue( ): byte, recordValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.mirror.Heartbeat. serializeKey( ): ByteBuffer, serializeKey( ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
<Method>org.apache.kafka.connect.mirror.Heartbeat. serializeValue( short ): ByteBuffer, serializeValue( short ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,9,2
"<Method>org.apache.kafka.connect.mirror.Heartbeat.public Heartbeat( String, String, long ): void","Heartbeat( String, String, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.connect.mirror.Heartbeat.private headerStruct( short ): Struct,headerStruct( short ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.connect.mirror.Heartbeat.private keyStruct( ): Struct,keyStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,5
<Method>org.apache.kafka.connect.mirror.Heartbeat.public sourceClusterAlias( ): String,sourceClusterAlias( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Heartbeat.public static deserializeRecord( ConsumerRecord ): Heartbeat,static deserializeRecord( ConsumerRecord ): Heartbeat,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,12,6
<Method>org.apache.kafka.connect.mirror.Heartbeat.private static valueSchema( short ): Schema,static valueSchema( short ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.mirror.Heartbeat.public targetClusterAlias( ): String,targetClusterAlias( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Heartbeat.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.Heartbeat.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,3
<Method>org.apache.kafka.connect.mirror.Heartbeat.private valueStruct( Schema ): Struct,valueStruct( Schema ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Field>org.apache.kafka.connect.mirror.Heartbeat->sourceClusterAlias,sourceClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->HEADER_SCHEMA,static final HEADER_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->KEY_SCHEMA,static final KEY_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->SOURCE_CLUSTER_ALIAS_KEY,static final SOURCE_CLUSTER_ALIAS_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->TARGET_CLUSTER_ALIAS_KEY,static final TARGET_CLUSTER_ALIAS_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->TIMESTAMP_KEY,static final TIMESTAMP_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->VALUE_SCHEMA_V0,static final VALUE_SCHEMA_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->VERSION,static final VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->VERSION_KEY,static final VERSION_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->targetClusterAlias,targetClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Heartbeat->timestamp,timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorCheckpointConnector,MirrorCheckpointConnector,very-high,medium-high,low-medium,low-medium,13,220,42,3,0,18,83,74,7,1,12,0,0,0.768,0.687,0.8,1,0,,,,,83,,,,,,18,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector. shouldReplicate( String ): boolean, shouldReplicate( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.private createInternalTopics( ): void,createInternalTopics( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,3
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.private findConsumerGroups( ): List,findConsumerGroups( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,7,0
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.private listConsumerGroups( ): Collection,listConsumerGroups( ): Collection,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.private loadInitialConsumerGroups( ): void,loadInitialConsumerGroups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.private refreshConsumerGroups( ): void,refreshConsumerGroups( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,0,14,8
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public start( Map ): void,start( Map ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,15,23
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,4,4
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,10,5
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointConnector.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->config,config : MirrorConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->connectorName,connectorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->groupFilter,groupFilter : GroupFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->knownConsumerGroups,knownConsumerGroups : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->scheduler,scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->sourceAdminClient,sourceAdminClient : AdminClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->sourceAndTarget,sourceAndTarget : SourceAndTarget,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointConnector->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorCheckpointTask,MirrorCheckpointTask,very-high,medium-high,low-medium,medium-high,16,736,56,2,0,22,111,96,13,1,14,0,2,0.821,0.8,0.762,0,0.286,,,,,111,,,,,,22,,,,,,,
"<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask. MirrorCheckpointTask( String, String, ReplicationPolicy, OffsetSyncStore ): void"," MirrorCheckpointTask( String, String, ReplicationPolicy, OffsetSyncStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
"<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask. checkpoint( String, TopicPartition, OffsetAndMetadata ): Checkpoint"," checkpoint( String, TopicPartition, OffsetAndMetadata ): Checkpoint",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,4,1
"<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask. checkpointRecord( Checkpoint, long ): SourceRecord"," checkpointRecord( Checkpoint, long ): SourceRecord",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,4,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask. renameTopicPartition( TopicPartition ): TopicPartition, renameTopicPartition( TopicPartition ): TopicPartition,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,9,5
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask. shouldCheckpointTopic( String ): boolean, shouldCheckpointTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public MirrorCheckpointTask( ): void,MirrorCheckpointTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.private checkpointsForGroup( String ): List,checkpointsForGroup( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,12,2
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public commitRecord( SourceRecord ): void,commitRecord( SourceRecord ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,7,1
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.private listConsumerGroupOffsets( String ): Map,listConsumerGroupOffsets( String ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,2
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public poll( ): List,poll( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,16,0,8,6
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public start( Map ): void,start( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,1,12,13
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,8,5
<Method>org.apache.kafka.connect.mirror.MirrorCheckpointTask.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->adminTimeout,adminTimeout : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->checkpointsTopic,checkpointsTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->consumerGroups,consumerGroups : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->interval,interval : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->metrics,metrics : MirrorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->offsetSyncStore,offsetSyncStore : OffsetSyncStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->pollTimeout,pollTimeout : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->replicationPolicy,replicationPolicy : ReplicationPolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->sourceAdminClient,sourceAdminClient : AdminClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->sourceClusterAlias,sourceClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->stopping,stopping : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->targetClusterAlias,targetClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorCheckpointTask->topicFilter,topicFilter : TopicFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorClient,MirrorClient,very-high,medium-high,low-medium,medium-high,15,786,47,1,0,31,113,108,3,1,18,1,0,0.694,0.795,0.945,0,0,,,,,113,,,,,,31,,,,,,,
"<Method>org.apache.kafka.connect.mirror.MirrorClient. MirrorClient( AdminClient, ReplicationPolicy, Map ): void"," MirrorClient( AdminClient, ReplicationPolicy, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,3
<Method>org.apache.kafka.connect.mirror.MirrorClient. allSources( String ): Set, allSources( String ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,3
"<Method>org.apache.kafka.connect.mirror.MirrorClient. countHopsForTopic( String, String ): int"," countHopsForTopic( String, String ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,2,3,2
<Method>org.apache.kafka.connect.mirror.MirrorClient. isCheckpointTopic( String ): boolean, isCheckpointTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.mirror.MirrorClient. isHeartbeatTopic( String ): boolean, isHeartbeatTopic( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.mirror.MirrorClient. isRemoteTopic( String ): boolean, isRemoteTopic( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.connect.mirror.MirrorClient. listTopics( ): Set, listTopics( ): Set,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,1
<Method>org.apache.kafka.connect.mirror.MirrorClient.public MirrorClient( Map ): void,MirrorClient( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public MirrorClient( MirrorClientConfig ): void,MirrorClient( MirrorClientConfig ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,3
<Method>org.apache.kafka.connect.mirror.MirrorClient.public checkpointTopics( ): Set,checkpointTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,5,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorClient.public heartbeatTopics( ): Set,heartbeatTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,5,0
"<Method>org.apache.kafka.connect.mirror.MirrorClient.public remoteConsumerOffsets( String, String, Duration ): Map","remoteConsumerOffsets( String, String, Duration ): Map",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,6,26,3,18,3
<Method>org.apache.kafka.connect.mirror.MirrorClient.public remoteTopics( ): Set,remoteTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,5,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public remoteTopics( String ): Set,remoteTopics( String ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,7,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public replicationHops( String ): int,replicationHops( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,7,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public replicationPolicy( ): ReplicationPolicy,replicationPolicy( ): ReplicationPolicy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.mirror.MirrorClient.private static endOfStream( Consumer, Collection ): boolean","static endOfStream( Consumer, Collection ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,3,0
<Method>org.apache.kafka.connect.mirror.MirrorClient.public upstreamClusters( ): Set,upstreamClusters( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,7,0
<Field>org.apache.kafka.connect.mirror.MirrorClient->adminClient,adminClient : AdminClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClient->consumerConfig,consumerConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClient->replicationPolicy,replicationPolicy : ReplicationPolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClient->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorClientConfig,MirrorClientConfig,low-medium,low,low-medium,low,2,66,9,2,0,6,67,16,0,13,6,0,0,1.108,0.556,1,0,0,,,,,67,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig. MirrorClientConfig( Map ): void, MirrorClientConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig.public adminConfig( ): Map,adminConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig.private clientConfig( String ): Map,clientConfig( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,7,1
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig.public consumerConfig( ): Map,consumerConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig.public producerConfig( ): Map,producerConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorClientConfig.public replicationPolicy( ): ReplicationPolicy,replicationPolicy( ): ReplicationPolicy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->ADMIN_CLIENT_PREFIX,static final ADMIN_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->CHECKPOINTS_TOPIC_SUFFIX,static final CHECKPOINTS_TOPIC_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->CLIENT_CONFIG_DEF,static final CLIENT_CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->CONSUMER_CLIENT_PREFIX,static final CONSUMER_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->HEARTBEATS_TOPIC,static final HEARTBEATS_TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->PRODUCER_CLIENT_PREFIX,static final PRODUCER_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_CLASS,static final REPLICATION_POLICY_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_CLASS_DEFAULT,static final REPLICATION_POLICY_CLASS_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_CLASS_DOC,static final REPLICATION_POLICY_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_SEPARATOR,static final REPLICATION_POLICY_SEPARATOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_SEPARATOR_DEFAULT,static final REPLICATION_POLICY_SEPARATOR_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorClientConfig->REPLICATION_POLICY_SEPARATOR_DOC,static final REPLICATION_POLICY_SEPARATOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorConnectorConfig,MirrorConnectorConfig,low-medium,low-medium,medium-high,medium-high,9,94,27,2,1,40,439,116,0,112,34,0,0,1.025,0.713,0,0,0,,,,,439,,,,,,40,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. adminTimeout( ): Duration, adminTimeout( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. checkpointsTopic( ): String, checkpointsTopic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. checkpointsTopicReplicationFactor( ): short, checkpointsTopicReplicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. configPropertyFilter( ): ConfigPropertyFilter, configPropertyFilter( ): ConfigPropertyFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. connectorName( ): String, connectorName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. consumerPollTimeout( ): Duration, consumerPollTimeout( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. emitCheckpointsInterval( ): Duration, emitCheckpointsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. emitHeartbeatsInterval( ): Duration, emitHeartbeatsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. enabled( ): boolean, enabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. groupFilter( ): GroupFilter, groupFilter( ): GroupFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. heartbeatsTopic( ): String, heartbeatsTopic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. heartbeatsTopicReplicationFactor( ): short, heartbeatsTopicReplicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. maxOffsetLag( ): long, maxOffsetLag( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. metricsReporters( ): List, metricsReporters( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. offsetSyncsTopic( ): String, offsetSyncsTopic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. offsetSyncsTopicReplicationFactor( ): short, offsetSyncsTopicReplicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. refreshGroupsInterval( ): Duration, refreshGroupsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. refreshTopicsInterval( ): Duration, refreshTopicsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. replicationFactor( ): int, replicationFactor( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. replicationPolicy( ): ReplicationPolicy, replicationPolicy( ): ReplicationPolicy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. sourceAdminConfig( ): Map, sourceAdminConfig( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,9,3
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. sourceClusterAlias( ): String, sourceClusterAlias( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. sourceConsumerConfig( ): Map, sourceConsumerConfig( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,9,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. sourceProducerConfig( ): Map, sourceProducerConfig( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,7,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. syncTopicAclsInterval( ): Duration, syncTopicAclsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. syncTopicConfigsInterval( ): Duration, syncTopicConfigsInterval( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,4,2
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. targetAdminConfig( ): Map, targetAdminConfig( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,9,3
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. targetClusterAlias( ): String, targetClusterAlias( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. targetHeartbeatsTopic( ): String, targetHeartbeatsTopic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,4,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. taskConfigForConsumerGroups( List ): Map, taskConfigForConsumerGroups( List ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. taskConfigForTopicPartitions( List ): Map, taskConfigForTopicPartitions( List ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,1
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig. topicFilter( ): TopicFilter, topicFilter( ): TopicFilter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig.protected MirrorConnectorConfig( ConfigDef, Map ): void","MirrorConnectorConfig( ConfigDef, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.mirror.MirrorConnectorConfig.public MirrorConnectorConfig( Map ): void,MirrorConnectorConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ADMIN_CLIENT_PREFIX,static final ADMIN_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ADMIN_TASK_TIMEOUT_MILLIS,static final ADMIN_TASK_TIMEOUT_MILLIS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ADMIN_TASK_TIMEOUT_MILLIS_DEFAULT,static final ADMIN_TASK_TIMEOUT_MILLIS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ADMIN_TASK_TIMEOUT_MILLIS_DOC,static final ADMIN_TASK_TIMEOUT_MILLIS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CHECKPOINTS_TOPIC_REPLICATION_FACTOR,static final CHECKPOINTS_TOPIC_REPLICATION_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CHECKPOINTS_TOPIC_REPLICATION_FACTOR_DEFAULT,static final CHECKPOINTS_TOPIC_REPLICATION_FACTOR_DEFAULT : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CHECKPOINTS_TOPIC_REPLICATION_FACTOR_DOC,static final CHECKPOINTS_TOPIC_REPLICATION_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTIES_BLACKLIST,static final CONFIG_PROPERTIES_BLACKLIST : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTIES_BLACKLIST_DEFAULT,static final CONFIG_PROPERTIES_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTIES_BLACKLIST_DOC,static final CONFIG_PROPERTIES_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTY_FILTER_CLASS,static final CONFIG_PROPERTY_FILTER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTY_FILTER_CLASS_DEFAULT,static final CONFIG_PROPERTY_FILTER_CLASS_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONFIG_PROPERTY_FILTER_CLASS_DOC,static final CONFIG_PROPERTY_FILTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONNECTOR_CONFIG_DEF,static final CONNECTOR_CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONSUMER_CLIENT_PREFIX,static final CONSUMER_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONSUMER_POLL_TIMEOUT_MILLIS,static final CONSUMER_POLL_TIMEOUT_MILLIS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONSUMER_POLL_TIMEOUT_MILLIS_DEFAULT,static final CONSUMER_POLL_TIMEOUT_MILLIS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->CONSUMER_POLL_TIMEOUT_MILLIS_DOC,static final CONSUMER_POLL_TIMEOUT_MILLIS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS,static final EMIT_CHECKPOINTS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_ENABLED,static final EMIT_CHECKPOINTS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_ENABLED_DEFAULT,static final EMIT_CHECKPOINTS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_ENABLED_DOC,static final EMIT_CHECKPOINTS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_INTERVAL_SECONDS,static final EMIT_CHECKPOINTS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_INTERVAL_SECONDS_DEFAULT,static final EMIT_CHECKPOINTS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_CHECKPOINTS_INTERVAL_SECONDS_DOC,static final EMIT_CHECKPOINTS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS,static final EMIT_HEARTBEATS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_ENABLED,static final EMIT_HEARTBEATS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_ENABLED_DEFAULT,static final EMIT_HEARTBEATS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_ENABLED_DOC,static final EMIT_HEARTBEATS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_INTERVAL_SECONDS,static final EMIT_HEARTBEATS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_INTERVAL_SECONDS_DEFAULT,static final EMIT_HEARTBEATS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->EMIT_HEARTBEATS_INTERVAL_SECONDS_DOC,static final EMIT_HEARTBEATS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ENABLED,static final ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ENABLED_DOC,static final ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->ENABLED_SUFFIX,static final ENABLED_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS,static final GROUPS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS_BLACKLIST,static final GROUPS_BLACKLIST : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS_BLACKLIST_DEFAULT,static final GROUPS_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS_BLACKLIST_DOC,static final GROUPS_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS_DEFAULT,static final GROUPS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUPS_DOC,static final GROUPS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUP_FILTER_CLASS,static final GROUP_FILTER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUP_FILTER_CLASS_DEFAULT,static final GROUP_FILTER_CLASS_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->GROUP_FILTER_CLASS_DOC,static final GROUP_FILTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->HEARTBEATS_TOPIC_REPLICATION_FACTOR,static final HEARTBEATS_TOPIC_REPLICATION_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->HEARTBEATS_TOPIC_REPLICATION_FACTOR_DEFAULT,static final HEARTBEATS_TOPIC_REPLICATION_FACTOR_DEFAULT : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->HEARTBEATS_TOPIC_REPLICATION_FACTOR_DOC,static final HEARTBEATS_TOPIC_REPLICATION_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->INTERVAL_SECONDS_SUFFIX,static final INTERVAL_SECONDS_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_LAG_MAX,static final OFFSET_LAG_MAX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_LAG_MAX_DEFAULT,static final OFFSET_LAG_MAX_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_LAG_MAX_DOC,static final OFFSET_LAG_MAX_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR,static final OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR_DEFAULT,static final OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR_DEFAULT : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR_DOC,static final OFFSET_SYNCS_TOPIC_REPLICATION_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->PRODUCER_CLIENT_PREFIX,static final PRODUCER_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS,static final REFRESH_GROUPS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_ENABLED,static final REFRESH_GROUPS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_ENABLED_DEFAULT,static final REFRESH_GROUPS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_ENABLED_DOC,static final REFRESH_GROUPS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_INTERVAL_SECONDS,static final REFRESH_GROUPS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_INTERVAL_SECONDS_DEFAULT,static final REFRESH_GROUPS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_GROUPS_INTERVAL_SECONDS_DOC,static final REFRESH_GROUPS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS,static final REFRESH_TOPICS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_ENABLED,static final REFRESH_TOPICS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_ENABLED_DEFAULT,static final REFRESH_TOPICS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_ENABLED_DOC,static final REFRESH_TOPICS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_INTERVAL_SECONDS,static final REFRESH_TOPICS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_INTERVAL_SECONDS_DEFAULT,static final REFRESH_TOPICS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REFRESH_TOPICS_INTERVAL_SECONDS_DOC,static final REFRESH_TOPICS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_FACTOR,static final REPLICATION_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_FACTOR_DEFAULT,static final REPLICATION_FACTOR_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_FACTOR_DOC,static final REPLICATION_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_CLASS,static final REPLICATION_POLICY_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_CLASS_DEFAULT,static final REPLICATION_POLICY_CLASS_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_CLASS_DOC,static final REPLICATION_POLICY_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_SEPARATOR,static final REPLICATION_POLICY_SEPARATOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_SEPARATOR_DEFAULT,static final REPLICATION_POLICY_SEPARATOR_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->REPLICATION_POLICY_SEPARATOR_DOC,static final REPLICATION_POLICY_SEPARATOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SOURCE_ADMIN_CLIENT_PREFIX,static final SOURCE_ADMIN_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SOURCE_CLUSTER_ALIAS,static final SOURCE_CLUSTER_ALIAS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SOURCE_CLUSTER_ALIAS_DOC,static final SOURCE_CLUSTER_ALIAS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SOURCE_CLUSTER_PREFIX,static final SOURCE_CLUSTER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS,static final SYNC_TOPIC_ACLS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_ENABLED,static final SYNC_TOPIC_ACLS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_ENABLED_DEFAULT,static final SYNC_TOPIC_ACLS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_ENABLED_DOC,static final SYNC_TOPIC_ACLS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_INTERVAL_SECONDS,static final SYNC_TOPIC_ACLS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_INTERVAL_SECONDS_DEFAULT,static final SYNC_TOPIC_ACLS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_ACLS_INTERVAL_SECONDS_DOC,static final SYNC_TOPIC_ACLS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS,static final SYNC_TOPIC_CONFIGS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_ENABLED,static final SYNC_TOPIC_CONFIGS_ENABLED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_ENABLED_DEFAULT,static final SYNC_TOPIC_CONFIGS_ENABLED_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_ENABLED_DOC,static final SYNC_TOPIC_CONFIGS_ENABLED_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS,static final SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS_DEFAULT,static final SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS_DOC,static final SYNC_TOPIC_CONFIGS_INTERVAL_SECONDS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TARGET_ADMIN_CLIENT_PREFIX,static final TARGET_ADMIN_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TARGET_CLUSTER_ALIAS,static final TARGET_CLUSTER_ALIAS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TARGET_CLUSTER_ALIAS_DEFAULT,static final TARGET_CLUSTER_ALIAS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TARGET_CLUSTER_ALIAS_DOC,static final TARGET_CLUSTER_ALIAS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TARGET_CLUSTER_PREFIX,static final TARGET_CLUSTER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TASK_CONSUMER_GROUPS,static final TASK_CONSUMER_GROUPS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TASK_TOPIC_PARTITIONS,static final TASK_TOPIC_PARTITIONS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS,static final TOPICS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS_BLACKLIST,static final TOPICS_BLACKLIST : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS_BLACKLIST_DEFAULT,static final TOPICS_BLACKLIST_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS_BLACKLIST_DOC,static final TOPICS_BLACKLIST_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS_DEFAULT,static final TOPICS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPICS_DOC,static final TOPICS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPIC_FILTER_CLASS,static final TOPIC_FILTER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPIC_FILTER_CLASS_DEFAULT,static final TOPIC_FILTER_CLASS_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorConnectorConfig->TOPIC_FILTER_CLASS_DOC,static final TOPIC_FILTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorHeartbeatConnector,MirrorHeartbeatConnector,low-medium,low,low,low,5,82,9,3,0,7,26,23,2,0,7,0,0,0.5,0.571,0.867,0,0,,,,,26,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.private createInternalTopics( ): void,createInternalTopics( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,3
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public start( Map ): void,start( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,4
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector->config,config : MirrorConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatConnector->scheduler,scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorHeartbeatTask,MirrorHeartbeatTask,low-medium,low,low,low,5,55,13,2,0,7,37,31,5,0,6,0,2,0.4,0.556,0.8,0,0.667,,,,,37,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public commitRecord( SourceRecord ): void,commitRecord( SourceRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public poll( ): List,poll( ): List,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,8,5
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,4,5
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorHeartbeatTask.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatTask->heartbeatsTopic,heartbeatsTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatTask->interval,interval : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatTask->sourceClusterAlias,sourceClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatTask->stopped,stopped : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorHeartbeatTask->targetClusterAlias,targetClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorMaker,MirrorMaker,very-high,high,low-medium,medium-high,27,272,62,1,0,25,153,124,10,4,11,1,0,0.857,0.719,0.643,1,0,,,,,153,,,,,,25,,,,,,,
org.apache.kafka.connect.mirror.MirrorMaker.ShutdownHook,ShutdownHook,low,low,low,low,1,9,3,2,0,3,10,9,0,0,1,0,1,0,0,0,0,2,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorMaker.public MirrorMaker( Map ): void,MirrorMaker( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.mirror.MirrorMaker.public MirrorMaker( Map, List ): void","MirrorMaker( Map, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.mirror.MirrorMaker.public MirrorMaker( Map, List, Time ): void","MirrorMaker( Map, List, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.connect.mirror.MirrorMaker.public MirrorMaker( MirrorMakerConfig, List, Time ): void","MirrorMaker( MirrorMakerConfig, List, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,3,11,12
<Method>org.apache.kafka.connect.mirror.MirrorMaker.private addHerder( SourceAndTarget ): void,addHerder( SourceAndTarget ): void,low,very-high,low,low,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,1,12,9
<Method>org.apache.kafka.connect.mirror.MirrorMaker.public awaitStop( ): void,awaitStop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,2
<Method>org.apache.kafka.connect.mirror.MirrorMaker.private checkHerder( SourceAndTarget ): void,checkHerder( SourceAndTarget ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,1
"<Method>org.apache.kafka.connect.mirror.MirrorMaker.private configureConnector( SourceAndTarget, Class ): void","configureConnector( SourceAndTarget, Class ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,5,2
<Method>org.apache.kafka.connect.mirror.MirrorMaker.private configureConnectors( SourceAndTarget ): void,configureConnectors( SourceAndTarget ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.mirror.MirrorMaker.public start( ): void,start( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,0,12,13
<Method>org.apache.kafka.connect.mirror.MirrorMaker.public static main( String ): void,static main( String ): void,low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,32,1,30,3
<Method>org.apache.kafka.connect.mirror.MirrorMaker.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,10,0,6,5
<Field>org.apache.kafka.connect.mirror.MirrorMaker->advertisedBaseUrl,final advertisedBaseUrl : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->clusters,final clusters : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->config,final config : MirrorMakerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->herderPairs,final herderPairs : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->herders,final herders : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->shutdown,final shutdown : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->shutdownHook,final shutdownHook : ShutdownHook,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->startLatch,startLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->CLIENT_CONFIG_OVERRIDE_POLICY,static final CLIENT_CONFIG_OVERRIDE_POLICY : ConnectorClientConfigOverridePolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->CONNECTOR_CLASSES,static final CONNECTOR_CLASSES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->SHUTDOWN_TIMEOUT_SECONDS,static final SHUTDOWN_TIMEOUT_SECONDS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMaker->stopLatch,stopLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorMakerConfig,MirrorMakerConfig,medium-high,low-medium,low-medium,low-medium,10,102,33,2,0,20,132,103,1,17,11,1,0,0.989,0.617,1,0,0,,,,,132,,,,,,20,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig. clusterProps( String ): Map, clusterProps( String ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,18,1,14,0
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig. configProviders( ): List, configProviders( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig. connectorBaseConfig( SourceAndTarget, Class ): Map"," connectorBaseConfig( SourceAndTarget, Class ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,2,28,7
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig. transform( Map ): Map, transform( Map ): Map,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,1,7,2
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig. workerConfig( SourceAndTarget ): Map, workerConfig( SourceAndTarget ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,1,33,8
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.public MirrorMakerConfig( Map ): void,MirrorMakerConfig( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.public clientConfig( String ): MirrorClientConfig,clientConfig( String ): MirrorClientConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,0
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.public clusterPairs( ): List,clusterPairs( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,0,3,0
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.public clusters( ): Set,clusters( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.static withPrefix( String, Map ): Map","static withPrefix( String, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,4,0
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.private stringsWithPrefix( String ): Map,stringsWithPrefix( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
<Method>org.apache.kafka.connect.mirror.MirrorMakerConfig.private stringsWithPrefixStripped( String ): Map,stringsWithPrefixStripped( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,6,0
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->plugins,final plugins : Plugins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->BYTE_ARRAY_CONVERTER_CLASS,static final BYTE_ARRAY_CONVERTER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CLUSTERS_CONFIG,static final CLUSTERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CLUSTERS_DOC,static final CLUSTERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CONFIG_PROVIDERS_CONFIG,static final CONFIG_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CONFIG_PROVIDERS_DOC,static final CONFIG_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->CONNECTOR_CLASS,static final CONNECTOR_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->GROUP_ID_CONFIG,static final GROUP_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->HEADER_CONVERTER_CLASS_CONFIG,static final HEADER_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->KEY_CONVERTER_CLASS_CONFIG,static final KEY_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->NAME,static final NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->REPLICATION_FACTOR,static final REPLICATION_FACTOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->SOURCE_CLUSTER_ALIAS,static final SOURCE_CLUSTER_ALIAS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->SOURCE_CLUSTER_PREFIX,static final SOURCE_CLUSTER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->TARGET_CLUSTER_ALIAS,static final TARGET_CLUSTER_ALIAS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->TARGET_CLUSTER_PREFIX,static final TARGET_CLUSTER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMakerConfig->VALUE_CONVERTER_CLASS_CONFIG,static final VALUE_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorMetrics,MirrorMetrics,low-medium,low-medium,low-medium,low,7,93,19,1,0,9,129,31,6,20,9,0,0,1.077,0.574,0,0,0,,,,,129,,,,,,9,,,,,,,
org.apache.kafka.connect.mirror.MirrorMetrics.GroupMetrics,GroupMetrics,low,low,low,low,7,40,7,1,0,1,14,12,1,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
org.apache.kafka.connect.mirror.MirrorMetrics.PartitionMetrics,PartitionMetrics,low,low,low,low,8,45,8,1,0,1,25,20,4,0,1,0,0,0,0,0,0,0,,,,,25,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorMetrics. MirrorMetrics( MirrorTaskConfig ): void, MirrorMetrics( MirrorTaskConfig ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,1,13,9
<Method>org.apache.kafka.connect.mirror.MirrorMetrics. addReporter( MetricsReporter ): void, addReporter( MetricsReporter ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.connect.mirror.MirrorMetrics. checkpointLatency( TopicPartition, String, long ): void"," checkpointLatency( TopicPartition, String, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,2,0
<Method>org.apache.kafka.connect.mirror.MirrorMetrics. countRecord( TopicPartition ): void, countRecord( TopicPartition ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.connect.mirror.MirrorMetrics. group( TopicPartition, String ): GroupMetrics"," group( TopicPartition, String ): GroupMetrics",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,1
"<Method>org.apache.kafka.connect.mirror.MirrorMetrics. recordAge( TopicPartition, long ): void"," recordAge( TopicPartition, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
"<Method>org.apache.kafka.connect.mirror.MirrorMetrics. recordBytes( TopicPartition, long ): void"," recordBytes( TopicPartition, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
"<Method>org.apache.kafka.connect.mirror.MirrorMetrics. replicationLatency( TopicPartition, long ): void"," replicationLatency( TopicPartition, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
<Method>org.apache.kafka.connect.mirror.MirrorMetrics.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->groupMetrics,final groupMetrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->groups,final groups : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->partitionMetrics,final partitionMetrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->source,final source : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->target,final target : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->BYTE_COUNT,static final BYTE_COUNT : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->BYTE_RATE,static final BYTE_RATE : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->CHECKPOINT_CONNECTOR_GROUP,static final CHECKPOINT_CONNECTOR_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->CHECKPOINT_LATENCY,static final CHECKPOINT_LATENCY : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->CHECKPOINT_LATENCY_AVG,static final CHECKPOINT_LATENCY_AVG : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->CHECKPOINT_LATENCY_MAX,static final CHECKPOINT_LATENCY_MAX : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->CHECKPOINT_LATENCY_MIN,static final CHECKPOINT_LATENCY_MIN : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->GROUP_TAGS,static final GROUP_TAGS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->PARTITION_TAGS,static final PARTITION_TAGS : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_AGE,static final RECORD_AGE : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_AGE_AVG,static final RECORD_AGE_AVG : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_AGE_MAX,static final RECORD_AGE_MAX : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_AGE_MIN,static final RECORD_AGE_MIN : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_COUNT,static final RECORD_COUNT : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->RECORD_RATE,static final RECORD_RATE : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->REPLICATION_LATENCY,static final REPLICATION_LATENCY : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->REPLICATION_LATENCY_AVG,static final REPLICATION_LATENCY_AVG : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->REPLICATION_LATENCY_MAX,static final REPLICATION_LATENCY_MAX : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->REPLICATION_LATENCY_MIN,static final REPLICATION_LATENCY_MIN : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorMetrics->SOURCE_CONNECTOR_GROUP,static final SOURCE_CONNECTOR_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorSourceConnector,MirrorSourceConnector,very-high,very-high,medium-high,high,35,303,104,3,0,49,241,224,12,3,32,2,0,0.873,0.899,0.857,1,0,,,,,241,,,,,,49,,,,,,,
"<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. MirrorSourceConnector( SourceAndTarget, ReplicationPolicy, TopicFilter, ConfigPropertyFilter ): void"," MirrorSourceConnector( SourceAndTarget, ReplicationPolicy, TopicFilter, ConfigPropertyFilter ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. formatRemoteTopic( String ): String, formatRemoteTopic( String ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. isCycle( String ): boolean, isCycle( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,5,3
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. isHeartbeatTopic( String ): boolean, isHeartbeatTopic( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. shouldReplicateAcl( AclBinding ): boolean, shouldReplicateAcl( AclBinding ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. shouldReplicateTopic( String ): boolean, shouldReplicateTopic( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. shouldReplicateTopicConfigurationProperty( String ): boolean, shouldReplicateTopicConfigurationProperty( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. targetAclBinding( AclBinding ): AclBinding, targetAclBinding( AclBinding ): AclBinding,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,10,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector. targetConfig( Config ): Config, targetConfig( Config ): Config,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,7,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public MirrorSourceConnector( ): void,MirrorSourceConnector( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private createOffsetSyncsTopic( ): void,createOffsetSyncsTopic( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,4,3
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private createTopicPartitions( ): void,createTopicPartitions( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,25,0,25,3
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private describeTopicConfigs( Set ): Map,describeTopicConfigs( Set ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,11,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private describeTopics( Collection ): Collection,describeTopics( Collection ): Collection,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private findExistingTargetTopics( ): Set,findExistingTargetTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private findTopicPartitions( ): List,findTopicPartitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,10,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private listTopicAclBindings( ): Collection,listTopicAclBindings( ): Collection,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private listTopics( AdminClient ): Set,listTopics( AdminClient ): Set,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private loadTopicPartitions( ): void,loadTopicPartitions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private refreshKnownTargetTopics( ): void,refreshKnownTargetTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private refreshTopicPartitions( ): void,refreshTopicPartitions( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,0,17,9
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public start( Map ): void,start( Map ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,26,1,28,36
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private static downgradeAllowAllACL( AccessControlEntry ): AccessControlEntry,static downgradeAllowAllACL( AccessControlEntry ): AccessControlEntry,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private static expandTopicDescription( TopicDescription ): Stream,static expandTopicDescription( TopicDescription ): Stream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,0,9,8
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private syncTopicAcls( ): void,syncTopicAcls( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,10,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private syncTopicConfigs( ): void,syncTopicConfigs( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,7,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,10,5
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private topicsBeingReplicated( ): Set,topicsBeingReplicated( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,6,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private updateTopicAcls( List ): void,updateTopicAcls( List ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,7,1,5,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.private updateTopicConfigs( Map ): void,updateTopicConfigs( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,1,9,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceConnector.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->config,config : MirrorConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->configPropertyFilter,configPropertyFilter : ConfigPropertyFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->connectorName,connectorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->knownTargetTopics,knownTargetTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->knownTopicPartitions,knownTopicPartitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->replicationFactor,replicationFactor : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->replicationPolicy,replicationPolicy : ReplicationPolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->scheduler,scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->sourceAdminClient,sourceAdminClient : AdminClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->sourceAndTarget,sourceAndTarget : SourceAndTarget,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->ANY_TOPIC,static final ANY_TOPIC : ResourcePatternFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->ANY_TOPIC_ACL,static final ANY_TOPIC_ACL : AclBindingFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->targetAdminClient,targetAdminClient : AdminClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceConnector->topicFilter,topicFilter : TopicFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorSourceTask,MirrorSourceTask,very-high,high,low-medium,high,23,863,85,2,0,32,180,143,12,2,15,1,2,0.802,0.818,0.714,0,0.267,,,,,180,,,,,,32,,,,,,,
org.apache.kafka.connect.mirror.MirrorSourceTask.PartitionState,PartitionState,low,low,low,low,0,2,0,1,0,6,22,16,5,0,2,0,0,0.8,0,0,0,0,,,,,22,,,,,,6,,,,,,,
"<Method>org.apache.kafka.connect.mirror.MirrorSourceTask. MirrorSourceTask( String, ReplicationPolicy, long ): void"," MirrorSourceTask( String, ReplicationPolicy, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask. convertRecord( ConsumerRecord ): SourceRecord, convertRecord( ConsumerRecord ): SourceRecord,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,12,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public MirrorSourceTask( ): void,MirrorSourceTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public commitRecord( SourceRecord, RecordMetadata ): void","commitRecord( SourceRecord, RecordMetadata ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,18,2,16,5
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private convertHeaders( ConsumerRecord ): Headers,convertHeaders( ConsumerRecord ): Headers,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private formatRemoteTopic( String ): String,formatRemoteTopic( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private loadOffset( TopicPartition ): Long,loadOffset( TopicPartition ): Long,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,2
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private loadOffsets( Set ): Map,loadOffsets( Set ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
"<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private maybeSyncOffsets( TopicPartition, long, long ): void","maybeSyncOffsets( TopicPartition, long, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,3,1
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public poll( ): List,poll( ): List,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,30,0,20,10
"<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private sendOffsetSync( TopicPartition, long, long ): void","sendOffsetSync( TopicPartition, long, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,3,4,3
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public start( Map ): void,start( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,1,26,18
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.private static byteSize( byte ): int,static byteSize( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public stop( ): void,stop( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,11,8
<Method>org.apache.kafka.connect.mirror.MirrorSourceTask.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->consumer,consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->consumerAccess,consumerAccess : Semaphore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->maxOffsetLag,maxOffsetLag : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->metrics,metrics : MirrorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->offsetProducer,offsetProducer : KafkaProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->offsetSyncsTopic,offsetSyncsTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->outstandingOffsetSyncs,outstandingOffsetSyncs : Semaphore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->partitionStates,partitionStates : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->pollTimeout,pollTimeout : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->replicationPolicy,replicationPolicy : ReplicationPolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->sourceClusterAlias,sourceClusterAlias : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->MAX_OUTSTANDING_OFFSET_SYNCS,static final MAX_OUTSTANDING_OFFSET_SYNCS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorSourceTask->stopping,stopping : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorTaskConfig,MirrorTaskConfig,low-medium,low,low,low,3,43,9,3,0,8,34,18,0,3,4,0,0,1.333,0.375,0,0,0,,,,,34,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorTaskConfig. metrics( ): MirrorMetrics, metrics( ): MirrorMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.connect.mirror.MirrorTaskConfig. taskConsumerGroups( ): Set, taskConsumerGroups( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,3,1
<Method>org.apache.kafka.connect.mirror.MirrorTaskConfig. taskTopicPartitions( ): Set, taskTopicPartitions( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,7,1
<Method>org.apache.kafka.connect.mirror.MirrorTaskConfig.public MirrorTaskConfig( Map ): void,MirrorTaskConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.connect.mirror.MirrorTaskConfig->TASK_CONFIG_DEF,static final TASK_CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorTaskConfig->TASK_CONSUMER_GROUPS_DOC,static final TASK_CONSUMER_GROUPS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.MirrorTaskConfig->TASK_TOPIC_PARTITIONS_DOC,static final TASK_TOPIC_PARTITIONS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.MirrorUtils,MirrorUtils,low-medium,low-medium,low,low-medium,8,66,23,1,0,16,48,47,0,0,1,12,0,0,0.67,0,0,0,,,,,48,,,,,,16,,,,,,,
<Method>org.apache.kafka.connect.mirror.MirrorUtils.private MirrorUtils( ): void,MirrorUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static compilePatternList( List ): Pattern,static compilePatternList( List ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static compilePatternList( String ): Pattern,static compilePatternList( String ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
"<Method>org.apache.kafka.connect.mirror.MirrorUtils.static createCompactedTopic( String, short, short, Map ): void","static createCompactedTopic( String, short, short, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,4,6,0
"<Method>org.apache.kafka.connect.mirror.MirrorUtils.static createSinglePartitionCompactedTopic( String, short, Map ): void","static createSinglePartitionCompactedTopic( String, short, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static decodeTopicPartition( String ): TopicPartition,static decodeTopicPartition( String ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static encodeTopicPartition( TopicPartition ): String,static encodeTopicPartition( TopicPartition ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static newConsumer( Map ): KafkaConsumer,static newConsumer( Map ): KafkaConsumer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static newProducer( Map ): KafkaProducer,static newProducer( Map ): KafkaProducer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static unwrapOffset( Map ): Long,static unwrapOffset( Map ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,2,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static unwrapPartition( Map ): TopicPartition,static unwrapPartition( Map ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.connect.mirror.MirrorUtils.static wrapOffset( long ): Map,static wrapOffset( long ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.mirror.MirrorUtils.static wrapPartition( TopicPartition, String ): Map","static wrapPartition( TopicPartition, String ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,5,0
org.apache.kafka.connect.mirror.OffsetSync,OffsetSync,low,low,low-medium,low-medium,4,44,20,1,0,12,62,48,3,6,11,1,0,0.79,0.687,0.3,0,0,,,,,62,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.mirror.OffsetSync. recordKey( ): byte, recordKey( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.connect.mirror.OffsetSync. recordValue( ): byte, recordValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.connect.mirror.OffsetSync. serializeKey( ): ByteBuffer, serializeKey( ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
<Method>org.apache.kafka.connect.mirror.OffsetSync. serializeValue( ): ByteBuffer, serializeValue( ): ByteBuffer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
"<Method>org.apache.kafka.connect.mirror.OffsetSync.public OffsetSync( TopicPartition, long, long ): void","OffsetSync( TopicPartition, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.connect.mirror.OffsetSync.public downstreamOffset( ): long,downstreamOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.OffsetSync.private keyStruct( ): Struct,keyStruct( ): Struct,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,4,5
<Method>org.apache.kafka.connect.mirror.OffsetSync.static deserializeRecord( ConsumerRecord ): OffsetSync,static deserializeRecord( ConsumerRecord ): OffsetSync,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,10,6
<Method>org.apache.kafka.connect.mirror.OffsetSync.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,3
<Method>org.apache.kafka.connect.mirror.OffsetSync.public topicPartition( ): TopicPartition,topicPartition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.OffsetSync.public upstreamOffset( ): long,upstreamOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.OffsetSync.private valueStruct( ): Struct,valueStruct( ): Struct,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,5
<Field>org.apache.kafka.connect.mirror.OffsetSync->downstreamOffset,downstreamOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->DOWNSTREAM_OFFSET_KEY,static final DOWNSTREAM_OFFSET_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->KEY_SCHEMA,static final KEY_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->PARTITION_KEY,static final PARTITION_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->TOPIC_KEY,static final TOPIC_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->UPSTREAM_OFFSET_KEY,static final UPSTREAM_OFFSET_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->VALUE_SCHEMA,static final VALUE_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->topicPartition,topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSync->upstreamOffset,upstreamOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.OffsetSyncStore,OffsetSyncStore,very-high,low-medium,low,low-medium,9,622,15,1,0,9,32,28,3,0,7,0,0,0.667,0.694,0,0,0,,,,,32,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.mirror.OffsetSyncStore. OffsetSyncStore( KafkaConsumer, TopicPartition ): void"," OffsetSyncStore( KafkaConsumer, TopicPartition ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.mirror.OffsetSyncStore. OffsetSyncStore( MirrorConnectorConfig ): void, OffsetSyncStore( MirrorConnectorConfig ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,4
"<Method>org.apache.kafka.connect.mirror.OffsetSyncStore. translateDownstream( TopicPartition, long ): long"," translateDownstream( TopicPartition, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,0
<Method>org.apache.kafka.connect.mirror.OffsetSyncStore.protected handleRecord( ConsumerRecord ): void,handleRecord( ConsumerRecord ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
<Method>org.apache.kafka.connect.mirror.OffsetSyncStore.private latestOffsetSync( TopicPartition ): OffsetSync,latestOffsetSync( TopicPartition ): OffsetSync,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.mirror.OffsetSyncStore.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.connect.mirror.OffsetSyncStore.synchronized update( Duration ): void,synchronized update( Duration ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,2,1
<Field>org.apache.kafka.connect.mirror.OffsetSyncStore->consumer,consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSyncStore->offsetSyncTopicPartition,offsetSyncTopicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.OffsetSyncStore->offsetSyncs,offsetSyncs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.RemoteClusterUtils,RemoteClusterUtils,very-high,low,low,low,2,668,5,1,0,6,24,22,0,1,1,5,0,0,0.417,1,0,0,,,,,24,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.private RemoteClusterUtils( ): void,RemoteClusterUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.public static checkpointTopics( Map ): Set,static checkpointTopics( Map ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,1,0
<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.public static heartbeatTopics( Map ): Set,static heartbeatTopics( Map ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,1,0
"<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.public static replicationHops( Map, String ): int","static replicationHops( Map, String ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,2,1,0
"<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.public static translateOffsets( Map, String, String, Duration ): Map","static translateOffsets( Map, String, String, Duration ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,4,1,0
<Method>org.apache.kafka.connect.mirror.RemoteClusterUtils.public static upstreamClusters( Map ): Set,static upstreamClusters( Map ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,1,0
<Field>org.apache.kafka.connect.mirror.RemoteClusterUtils->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.ReplicationPolicy,ReplicationPolicy,low,low,low,low,0,7,4,1,1,5,14,5,0,0,5,0,0,0,0,0,0,0,,,,,14,,,,,,5,,,,,,,
"<Method>org.apache.kafka.connect.mirror.ReplicationPolicy.public abstract formatRemoteTopic( String, String ): String","formatRemoteTopic( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.mirror.ReplicationPolicy.public isInternalTopic( String ): boolean,isInternalTopic( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,4,0
<Method>org.apache.kafka.connect.mirror.ReplicationPolicy.public originalTopic( String ): String,originalTopic( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,2,0
<Method>org.apache.kafka.connect.mirror.ReplicationPolicy.public abstract topicSource( String ): String,topicSource( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.mirror.ReplicationPolicy.public abstract upstreamTopic( String ): String,upstreamTopic( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.mirror.Scheduler,Scheduler,low,low,low-medium,low,1,26,19,1,0,19,58,50,4,1,8,0,0,0.533,0.4,0,0,0,,,,,58,,,,,,19,,,,,,,
org.apache.kafka.connect.mirror.Scheduler.Task,Task,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.mirror.Scheduler. Scheduler( Class, Duration ): void"," Scheduler( Class, Duration ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.mirror.Scheduler. Scheduler( String, Duration ): void"," Scheduler( String, Duration ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.connect.mirror.Scheduler. execute( Task, String ): void"," execute( Task, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,6,8
"<Method>org.apache.kafka.connect.mirror.Scheduler. scheduleRepeating( Task, Duration, String ): void"," scheduleRepeating( Task, Duration, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,3,3,1
"<Method>org.apache.kafka.connect.mirror.Scheduler. scheduleRepeatingDelayed( Task, Duration, String ): void"," scheduleRepeatingDelayed( Task, Duration, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,4,1
<Method>org.apache.kafka.connect.mirror.Scheduler.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,5,8
"<Method>org.apache.kafka.connect.mirror.Scheduler.private executeThread( Task, String ): void","executeThread( Task, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,3
"<Method>org.apache.kafka.connect.mirror.Scheduler.private run( Task, String ): void","run( Task, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,2,8,8
<Field>org.apache.kafka.connect.mirror.Scheduler->closed,closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Scheduler->executor,final executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Scheduler->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Scheduler->timeout,final timeout : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.Scheduler->log,static log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.SourceAndTarget,SourceAndTarget,low,low,low,low,0,9,4,1,0,6,19,16,2,0,6,0,0,0.333,0.556,0.667,0,0,,,,,19,,,,,,6,,,,,,,
"<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public SourceAndTarget( String, String ): void","SourceAndTarget( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public source( ): String,source( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public target( ): String,target( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.mirror.SourceAndTarget.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.connect.mirror.SourceAndTarget->source,source : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.mirror.SourceAndTarget->target,target : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.mirror.TopicFilter,TopicFilter,low,low,low,low,0,3,0,1,1,3,5,3,0,0,3,0,0,0,0.444,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.mirror.TopicFilter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.mirror.TopicFilter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.mirror.TopicFilter.public abstract shouldReplicateTopic( String ): boolean,shouldReplicateTopic( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.connect.rest,org.apache.kafka.connect.rest,low,low,low,low,,,,,,3,5,,,,,,,,,,,,,2,0,2,5,3,2,1,0.4,0.4,3,,,,,,,
org.apache.kafka.connect.rest.ConnectRestExtension,ConnectRestExtension,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.rest.ConnectRestExtension.public abstract register( ConnectRestExtensionContext ): void,register( ConnectRestExtensionContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.rest.ConnectRestExtensionContext,ConnectRestExtensionContext,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.rest.ConnectRestExtensionContext.public abstract clusterState( ): ConnectClusterState,clusterState( ): ConnectClusterState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.rest.ConnectRestExtensionContext.public abstract configurable( ): Configurable,configurable( ): Configurable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.rest.basic.auth.extension,org.apache.kafka.connect.rest.basic.auth.extension,low,low,low,low,,,,,,29,107,,,,,,,,,,,,,4,4,0,107,0,2,0,1,0,29,,,,,,,
org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension,BasicAuthSecurityRestExtension,low,low,low,low,2,7,3,1,0,4,11,10,0,0,4,0,0,0,0.5,0,1,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension.public register( ConnectRestExtensionContext ): void,register( ConnectRestExtensionContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter,JaasBasicAuthFilter,low,low,low,low,0,13,12,1,0,4,46,13,0,3,1,0,0,0,0,0,0,0,,,,,46,,,,,,4,,,,,,,
org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter.BasicAuthCallBackHandler,BasicAuthCallBackHandler,low,low,low,low,0,11,9,1,0,9,29,23,2,3,2,0,0,0.6,0.333,0,0,0,,,,,29,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter.public filter( ContainerRequestContext ): void,filter( ContainerRequestContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,12,3
<Field>org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter->AUTHORIZATION,static final AUTHORIZATION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter->CONNECT_LOGIN_MODULE,static final CONNECT_LOGIN_MODULE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.JaasBasicAuthFilter->TASK_REQUEST_PATTERN,static final TASK_REQUEST_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule,PropertyFileLoginModule,low,low,low,low-medium,2,22,17,1,0,12,50,43,3,3,6,0,0,0.667,0.625,0.8,0,0,,,,,50,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.public abort( ): boolean,abort( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.public commit( ): boolean,commit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.private configureCallbacks( ): Callback,configureCallbacks( ): Callback,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
"<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.public initialize( Subject, CallbackHandler, Map, Map ): void","initialize( Subject, CallbackHandler, Map, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,4,9,11
<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.public login( ): boolean,login( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,0,9,5
<Method>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule.public logout( ): boolean,logout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->authenticated,authenticated : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->callbackHandler,callbackHandler : CallbackHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->fileName,fileName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->credentialPropertiesMap,static credentialPropertiesMap : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->FILE_OPTIONS,static final FILE_OPTIONS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.rest.basic.auth.extension.PropertyFileLoginModule->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime,org.apache.kafka.connect.runtime,medium-high,high,very-high,low,,,,,,783,3912,,,,,,,,,,,,,51,46,5,3912,31,24,0.137,0.436,0.427,783,,,,,,,
org.apache.kafka.connect.runtime.AbstractHerder,AbstractHerder,very-high,very-high,medium-high,high,41,344,105,1,2,83,373,365,7,0,30,8,0,0.764,0.894,0.62,1,0,,,,,373,,,,,,83,,,,,,,
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.public AbstractHerder( Worker, String, String, StatusBackingStore, ConfigBackingStore, ConnectorClientConfigOverridePolicy ): void","AbstractHerder( Worker, String, String, StatusBackingStore, ConfigBackingStore, ConnectorClientConfigOverridePolicy ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,6,0,7
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected abstract config( String ): Map,abstract config( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected abstract generation( ): int,abstract generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public connectorInfo( String ): ConnectorInfo,connectorInfo( String ): ConnectorInfo,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,12,1,6,1
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public connectorStatus( String ): ConnectorStateInfo,connectorStatus( String ): ConnectorStateInfo,low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,1,17,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public connectorTypeForClass( String ): ConnectorType,connectorTypeForClass( String ): ConnectorType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public connectors( ): Collection,connectors( ): Collection,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected final maybeAddConfigErrors( ConfigInfos, Callback ): boolean","final maybeAddConfigErrors( ConfigInfos, Callback ): boolean",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,21,2,12,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected getConnector( String ): Connector,getConnector( String ): Connector,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,5,3
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public kafkaClusterId( ): String,kafkaClusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onDeletion( String ): void,onDeletion( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,6,5
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onFailure( ConnectorTaskId, Throwable ): void","onFailure( ConnectorTaskId, Throwable ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,2
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onFailure( String, Throwable ): void","onFailure( String, Throwable ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onPause( ConnectorTaskId ): void,onPause( ConnectorTaskId ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onPause( String ): void,onPause( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onResume( ConnectorTaskId ): void,onResume( ConnectorTaskId ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onResume( String ): void,onResume( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onShutdown( ConnectorTaskId ): void,onShutdown( ConnectorTaskId ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onShutdown( String ): void,onShutdown( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onStartup( ConnectorTaskId ): void,onStartup( ConnectorTaskId ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public onStartup( String ): void,onStartup( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public pauseConnector( String ): void,pauseConnector( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public plugins( ): Plugins,plugins( ): Plugins,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public resumeConnector( String ): void,resumeConnector( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,2,2
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected startServices( ): void,startServices( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
<Method>org.apache.kafka.connect.runtime.AbstractHerder.private static convertConfigKey( ConfigKey ): ConfigKeyInfo,static convertConfigKey( ConfigKey ): ConfigKeyInfo,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.private static convertConfigKey( ConfigKey, String ): ConfigKeyInfo","static convertConfigKey( ConfigKey, String ): ConfigKeyInfo",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,2,5,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.private static convertConfigValue( ConfigValue, Type ): ConfigValueInfo","static convertConfigValue( ConfigValue, Type ): ConfigValueInfo",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,2,11,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.public static generateResult( String, Map, List, List ): ConfigInfos","static generateResult( String, Map, List, List ): ConfigInfos",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,4,17,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.static keysWithVariableValues( Map, Pattern ): Set","static keysWithVariableValues( Map, Pattern ): Set",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,8,2,7,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.private static mergeConfigInfos( String, ConfigInfos ): ConfigInfos","static mergeConfigInfos( String, ConfigInfos ): ConfigInfos",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,2,5,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.public static reverseTransform( String, ClusterConfigState, List ): List","static reverseTransform( String, ClusterConfigState, List ): List",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,3,6,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.private static validateClientOverrides( String, String, AbstractConfig, ConfigDef, Class, ConnectorType, ClientType, ConnectorClientConfigOverridePolicy ): ConfigInfos","static validateClientOverrides( String, String, AbstractConfig, ConfigDef, Class, ConnectorType, ClientType, ConnectorClientConfigOverridePolicy ): ConfigInfos",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,39,8,23,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected stopServices( ): void,stopServices( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public taskStatus( ConnectorTaskId ): TaskState,taskStatus( ConnectorTaskId ): TaskState,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,6,1
<Method>org.apache.kafka.connect.runtime.AbstractHerder.private trace( Throwable ): String,trace( Throwable ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,0
"<Method>org.apache.kafka.connect.runtime.AbstractHerder.protected validateBasicConnectorConfig( Connector, ConfigDef, Map ): Map","validateBasicConnectorConfig( Connector, ConfigDef, Map ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
<Method>org.apache.kafka.connect.runtime.AbstractHerder.public validateConnectorConfig( Map ): ConfigInfos,validateConnectorConfig( Map ): ConfigInfos,low,very-high,medium-high,low,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,85,1,47,5
<Field>org.apache.kafka.connect.runtime.AbstractHerder->configBackingStore,final configBackingStore : ConfigBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->connectorClientConfigOverridePolicy,final connectorClientConfigOverridePolicy : ConnectorClientConfigOverridePolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->kafkaClusterId,final kafkaClusterId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->statusBackingStore,final statusBackingStore : StatusBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->worker,final worker : Worker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->workerId,final workerId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractHerder->tempConnectors,tempConnectors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.AbstractStatus<T>,AbstractStatus,low,low,low-medium,medium-high,1,14,5,1,2,16,58,46,5,0,9,0,0,0.525,0.741,0.306,0,0,,,,,58,,,,,,16,,,,,,,
org.apache.kafka.connect.runtime.AbstractStatus.State,State,low,low,low,low,0,0,0,2,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public AbstractStatus( T, State, String, int, String ): void","AbstractStatus( T, State, String, int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,5,10
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,0,4,9
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public id( ): T,id( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,4
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public trace( ): String,trace( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.AbstractStatus<T>.public workerId( ): String,workerId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->generation,final generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->id,final id : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->state,final state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->trace,final trace : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.AbstractStatus<T>->workerId,final workerId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.Connect,Connect,medium-high,low,low,low,3,117,14,1,0,8,49,33,6,1,6,0,0,0.686,0.556,0.133,0,0,,,,,49,,,,,,8,,,,,,,
org.apache.kafka.connect.runtime.Connect.ShutdownHook,ShutdownHook,low,low,low,low,1,14,3,2,0,2,8,7,0,0,1,0,1,0,0,0,0,2,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.connect.runtime.Connect.public Connect( Herder, RestServer ): void","Connect( Herder, RestServer ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,4
<Method>org.apache.kafka.connect.runtime.Connect.public adminUrl( ): URI,adminUrl( ): URI,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.Connect.public awaitStop( ): void,awaitStop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,2
<Method>org.apache.kafka.connect.runtime.Connect.public restUrl( ): URI,restUrl( ): URI,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.Connect.public start( ): void,start( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,7,7
<Method>org.apache.kafka.connect.runtime.Connect.public stop( ): void,stop( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,0,6,6
<Field>org.apache.kafka.connect.runtime.Connect->herder,final herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->rest,final rest : RestServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->shutdown,final shutdown : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->shutdownHook,final shutdownHook : ShutdownHook,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->startLatch,final startLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->stopLatch,final stopLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Connect->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics,ConnectMetrics,medium-high,low-medium,low-medium,medium-high,10,113,22,1,0,15,149,50,5,2,9,2,0,0.837,0.701,0.778,0,0,,,,,149,,,,,,15,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.LiteralSupplier<T>,LiteralSupplier,low,low,low,low,0,1,0,1,6,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.MetricGroup,MetricGroup,low,low,low,low,8,68,20,1,0,20,54,50,3,0,14,0,0,0.611,0.73,0.927,0,0,,,,,54,,,,,,20,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetrics.MetricGroupId,MetricGroupId,low,low,low,low,1,20,13,1,0,10,35,30,4,0,7,0,0,0.667,0.686,0.476,0,0,,,,,35,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public ConnectMetrics( String, Time, int, long, String, List ): void","ConnectMetrics( String, Time, int, long, String, List ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,6,8,7
"<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public ConnectMetrics( String, WorkerConfig, Time ): void","ConnectMetrics( String, WorkerConfig, Time ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,4,0
"<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public group( String, String ): MetricGroup","group( String, String ): MetricGroup",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,2
"<Method>org.apache.kafka.connect.runtime.ConnectMetrics.protected groupId( String, String ): MetricGroupId","groupId( String, String ): MetricGroupId",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public metrics( ): Metrics,metrics( ): Metrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public registry( ): ConnectMetricsRegistry,registry( ): ConnectMetricsRegistry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public static main( String ): void,static main( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.static tags( String ): Map,static tags( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,1,0
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public stop( ): void,stop( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,6
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public time( ): Time,time( ): Time,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetrics.public workerId( ): String,workerId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->groupsByName,final groupsByName : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->registry,final registry : ConnectMetricsRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->workerId,final workerId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->JMX_PREFIX,static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetrics->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectMetricsRegistry,ConnectMetricsRegistry,low,low,medium-high,low,2,18,6,1,0,13,332,248,74,9,13,0,0,0.989,0.59,0.864,0,0,,,,,332,,,,,,13,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public ConnectMetricsRegistry( ): void,ConnectMetricsRegistry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public ConnectMetricsRegistry( Set ): void,ConnectMetricsRegistry( Set ): void,low,low,very-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,222,1,88,167
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public connectorGroupName( ): String,connectorGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public connectorTagName( ): String,connectorTagName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.private createTemplate( String, String, String, Set ): MetricNameTemplate","createTemplate( String, String, String, Set ): MetricNameTemplate",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,1,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public getAllTemplates( ): List,getAllTemplates( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public sinkTaskGroupName( ): String,sinkTaskGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public sourceTaskGroupName( ): String,sourceTaskGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public taskErrorHandlingGroupName( ): String,taskErrorHandlingGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public taskGroupName( ): String,taskGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public taskTagName( ): String,taskTagName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public workerGroupName( ): String,workerGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.ConnectMetricsRegistry.public workerRebalanceGroupName( ): String,workerRebalanceGroupName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStatusMetrics,connectorStatusMetrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->allTemplates,final allTemplates : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectProtocol,final connectProtocol : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorClass,final connectorClass : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorCount,final connectorCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorDestroyedTaskCount,final connectorDestroyedTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorFailedTaskCount,final connectorFailedTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorPausedTaskCount,final connectorPausedTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorRunningTaskCount,final connectorRunningTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStartupAttemptsTotal,final connectorStartupAttemptsTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStartupFailurePercentage,final connectorStartupFailurePercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStartupFailureTotal,final connectorStartupFailureTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStartupSuccessPercentage,final connectorStartupSuccessPercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStartupSuccessTotal,final connectorStartupSuccessTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorStatus,final connectorStatus : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorTotalTaskCount,final connectorTotalTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorType,final connectorType : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorUnassignedTaskCount,final connectorUnassignedTaskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->connectorVersion,final connectorVersion : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->dlqProduceFailures,final dlqProduceFailures : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->dlqProduceRequests,final dlqProduceRequests : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->epoch,final epoch : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->errorsLogged,final errorsLogged : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->lastErrorTimestamp,final lastErrorTimestamp : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->leaderName,final leaderName : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->rebalanceCompletedTotal,final rebalanceCompletedTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->rebalanceMode,final rebalanceMode : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->rebalanceTimeAvg,final rebalanceTimeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->rebalanceTimeMax,final rebalanceTimeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->rebalanceTimeSinceLast,final rebalanceTimeSinceLast : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->recordProcessingErrors,final recordProcessingErrors : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->recordProcessingFailures,final recordProcessingFailures : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->recordsSkipped,final recordsSkipped : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->retries,final retries : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordActiveCount,final sinkRecordActiveCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordActiveCountAvg,final sinkRecordActiveCountAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordActiveCountMax,final sinkRecordActiveCountMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordLagMax,final sinkRecordLagMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordOffsetCommitCompletionRate,final sinkRecordOffsetCommitCompletionRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordOffsetCommitCompletionTotal,final sinkRecordOffsetCommitCompletionTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordOffsetCommitSeqNum,final sinkRecordOffsetCommitSeqNum : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordOffsetCommitSkipRate,final sinkRecordOffsetCommitSkipRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordOffsetCommitSkipTotal,final sinkRecordOffsetCommitSkipTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordPartitionCount,final sinkRecordPartitionCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordPutBatchTimeAvg,final sinkRecordPutBatchTimeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordPutBatchTimeMax,final sinkRecordPutBatchTimeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordReadRate,final sinkRecordReadRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordReadTotal,final sinkRecordReadTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordSendRate,final sinkRecordSendRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sinkRecordSendTotal,final sinkRecordSendTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordActiveCount,final sourceRecordActiveCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordActiveCountAvg,final sourceRecordActiveCountAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordActiveCountMax,final sourceRecordActiveCountMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordPollBatchTimeAvg,final sourceRecordPollBatchTimeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordPollBatchTimeMax,final sourceRecordPollBatchTimeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordPollRate,final sourceRecordPollRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordPollTotal,final sourceRecordPollTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordWriteRate,final sourceRecordWriteRate : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->sourceRecordWriteTotal,final sourceRecordWriteTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskBatchSizeAvg,final taskBatchSizeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskBatchSizeMax,final taskBatchSizeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskCommitFailurePercentage,final taskCommitFailurePercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskCommitSuccessPercentage,final taskCommitSuccessPercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskCommitTimeAvg,final taskCommitTimeAvg : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskCommitTimeMax,final taskCommitTimeMax : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskCount,final taskCount : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskPauseRatio,final taskPauseRatio : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskRunningRatio,final taskRunningRatio : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStartupAttemptsTotal,final taskStartupAttemptsTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStartupFailurePercentage,final taskStartupFailurePercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStartupFailureTotal,final taskStartupFailureTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStartupSuccessPercentage,final taskStartupSuccessPercentage : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStartupSuccessTotal,final taskStartupSuccessTotal : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->taskStatus,final taskStatus : MetricNameTemplate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->CONNECTOR_GROUP_NAME,static final CONNECTOR_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->CONNECTOR_TAG_NAME,static final CONNECTOR_TAG_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->SINK_TASK_GROUP_NAME,static final SINK_TASK_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->SOURCE_TASK_GROUP_NAME,static final SOURCE_TASK_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->TASK_ERROR_HANDLING_GROUP_NAME,static final TASK_ERROR_HANDLING_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->TASK_GROUP_NAME,static final TASK_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->TASK_TAG_NAME,static final TASK_TAG_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->WORKER_GROUP_NAME,static final WORKER_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectMetricsRegistry->WORKER_REBALANCE_GROUP_NAME,static final WORKER_REBALANCE_GROUP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig,ConnectorConfig,low-medium,medium-high,low-medium,medium-high,15,87,38,2,2,26,220,128,1,55,10,3,1,0.986,0.714,0.864,0,0.2,,,,,220,,,,,,26,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig.EnrichedConnectorConfig,EnrichedConnectorConfig,low,low,low,low,1,7,1,2,0,2,6,5,0,0,2,0,0,0,0.375,0,0,0,,,,,6,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.ConnectorConfig$11123;,Lorg.apache.kafka.connect.runtime.ConnectorConfig$11123;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.ConnectorConfig$17327;,Lorg.apache.kafka.connect.runtime.ConnectorConfig$17327;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig.TransformationClassRecommender,TransformationClassRecommender,low,low,low,low,2,8,4,1,0,4,13,11,1,0,3,0,0,0,0.333,1,0,0,,,,,13,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public ConnectorConfig( Plugins ): void,ConnectorConfig( Plugins ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public ConnectorConfig( Plugins, ConfigDef, Map ): void","ConnectorConfig( Plugins, ConfigDef, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
"<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public ConnectorConfig( Plugins, Map ): void","ConnectorConfig( Plugins, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public enableErrorLog( ): boolean,enableErrorLog( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public errorMaxDelayInMillis( ): long,errorMaxDelayInMillis( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public errorRetryTimeout( ): long,errorRetryTimeout( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public errorToleranceType( ): ToleranceType,errorToleranceType( ): ToleranceType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,3,2
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public get( String ): Object,get( String ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public includeRecordDetailsInErrorLog( ): boolean,includeRecordDetailsInErrorLog( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,35,0,22,63
"<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public static enrich( Plugins, ConfigDef, Map, boolean ): ConfigDef","static enrich( Plugins, ConfigDef, Map, boolean ): ConfigDef",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,35,4,8,5
"<Method>org.apache.kafka.connect.runtime.ConnectorConfig.static getConfigDefFromTransformation( String, Class ): ConfigDef","static getConfigDefFromTransformation( String, Class ): ConfigDef",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,17,2,9,0
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public transformations( ): List,transformations( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,9,2
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->enrichedConfig,final enrichedConfig : EnrichedConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->COMMON_GROUP,static final COMMON_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONFIG_RELOAD_ACTION_CONFIG,static final CONFIG_RELOAD_ACTION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONFIG_RELOAD_ACTION_DISPLAY,static final CONFIG_RELOAD_ACTION_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONFIG_RELOAD_ACTION_DOC,static final CONFIG_RELOAD_ACTION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONFIG_RELOAD_ACTION_NONE,static final CONFIG_RELOAD_ACTION_NONE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONFIG_RELOAD_ACTION_RESTART,static final CONFIG_RELOAD_ACTION_RESTART : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLASS_CONFIG,static final CONNECTOR_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLASS_DISPLAY,static final CONNECTOR_CLASS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLASS_DOC,static final CONNECTOR_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLIENT_ADMIN_OVERRIDES_PREFIX,static final CONNECTOR_CLIENT_ADMIN_OVERRIDES_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX,static final CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX,static final CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_ENABLE_CONFIG,static final ERRORS_LOG_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_ENABLE_DEFAULT,static final ERRORS_LOG_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_ENABLE_DISPLAY,static final ERRORS_LOG_ENABLE_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_ENABLE_DOC,static final ERRORS_LOG_ENABLE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_INCLUDE_MESSAGES_CONFIG,static final ERRORS_LOG_INCLUDE_MESSAGES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_INCLUDE_MESSAGES_DEFAULT,static final ERRORS_LOG_INCLUDE_MESSAGES_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_INCLUDE_MESSAGES_DISPLAY,static final ERRORS_LOG_INCLUDE_MESSAGES_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_LOG_INCLUDE_MESSAGES_DOC,static final ERRORS_LOG_INCLUDE_MESSAGES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_MAX_DELAY_CONFIG,static final ERRORS_RETRY_MAX_DELAY_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_MAX_DELAY_DEFAULT,static final ERRORS_RETRY_MAX_DELAY_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_MAX_DELAY_DISPLAY,static final ERRORS_RETRY_MAX_DELAY_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_MAX_DELAY_DOC,static final ERRORS_RETRY_MAX_DELAY_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_TIMEOUT_CONFIG,static final ERRORS_RETRY_TIMEOUT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_TIMEOUT_DEFAULT,static final ERRORS_RETRY_TIMEOUT_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_TIMEOUT_DISPLAY,static final ERRORS_RETRY_TIMEOUT_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_RETRY_TIMEOUT_DOC,static final ERRORS_RETRY_TIMEOUT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_TOLERANCE_CONFIG,static final ERRORS_TOLERANCE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_TOLERANCE_DEFAULT,static final ERRORS_TOLERANCE_DEFAULT : ToleranceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_TOLERANCE_DISPLAY,static final ERRORS_TOLERANCE_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERRORS_TOLERANCE_DOC,static final ERRORS_TOLERANCE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->ERROR_GROUP,static final ERROR_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->HEADER_CONVERTER_CLASS_CONFIG,static final HEADER_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->HEADER_CONVERTER_CLASS_DEFAULT,static final HEADER_CONVERTER_CLASS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->HEADER_CONVERTER_CLASS_DISPLAY,static final HEADER_CONVERTER_CLASS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->HEADER_CONVERTER_CLASS_DOC,static final HEADER_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->KEY_CONVERTER_CLASS_CONFIG,static final KEY_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->KEY_CONVERTER_CLASS_DISPLAY,static final KEY_CONVERTER_CLASS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->KEY_CONVERTER_CLASS_DOC,static final KEY_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->NAME_CONFIG,static final NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->NAME_DISPLAY,static final NAME_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->NAME_DOC,static final NAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_CONFIG,static final TASKS_MAX_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_DEFAULT,static final TASKS_MAX_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_DOC,static final TASKS_MAX_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MIN_CONFIG,static final TASKS_MIN_CONFIG : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASK_MAX_DISPLAY,static final TASK_MAX_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TRANSFORMS_CONFIG,static final TRANSFORMS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TRANSFORMS_DISPLAY,static final TRANSFORMS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TRANSFORMS_DOC,static final TRANSFORMS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TRANSFORMS_GROUP,static final TRANSFORMS_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->VALUE_CONVERTER_CLASS_CONFIG,static final VALUE_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->VALUE_CONVERTER_CLASS_DISPLAY,static final VALUE_CONVERTER_CLASS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->VALUE_CONVERTER_CLASS_DOC,static final VALUE_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus,ConnectorStatus,low-medium,low,low,low,1,2,0,2,0,2,12,4,0,0,2,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.ConnectorStatus.Listener,Listener,low,low,low,low,0,6,0,1,2,6,7,6,0,0,6,0,0,0,0.278,0,0,0,,,,,7,,,,,,6,,,,,,,
"<Method>org.apache.kafka.connect.runtime.ConnectorStatus.public ConnectorStatus( String, State, String, String, int ): void","ConnectorStatus( String, State, String, String, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
"<Method>org.apache.kafka.connect.runtime.ConnectorStatus.public ConnectorStatus( String, State, String, int ): void","ConnectorStatus( String, State, String, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
org.apache.kafka.connect.runtime.Herder,Herder,low-medium,low-medium,low-medium,medium-high,9,22,0,1,1,22,46,22,0,0,22,0,0,0,0.732,0,0,0,,,,,46,,,,,,22,,,,,,,
org.apache.kafka.connect.runtime.Herder.ConfigReloadAction,ConfigReloadAction,low,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.Herder.Created<T>,Created,low,low,low,low,1,8,3,1,0,8,20,17,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,20,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectorConfig( String, Callback ): void","connectorConfig( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectorInfo( String ): ConnectorInfo,connectorInfo( String ): ConnectorInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectorInfo( String, Callback ): void","connectorInfo( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectorStatus( String ): ConnectorStateInfo,connectorStatus( String ): ConnectorStateInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectors( ): Collection,connectors( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract connectors( Callback ): void,connectors( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract deleteConnectorConfig( String, Callback ): void","deleteConnectorConfig( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract kafkaClusterId( ): String,kafkaClusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract pauseConnector( String ): void,pauseConnector( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract plugins( ): Plugins,plugins( ): Plugins,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract putConnectorConfig( String, Map, boolean, Callback ): void","putConnectorConfig( String, Map, boolean, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract putTaskConfigs( String, List, Callback, InternalRequestSignature ): void","putTaskConfigs( String, List, Callback, InternalRequestSignature ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract requestTaskReconfiguration( String ): void,requestTaskReconfiguration( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract restartConnector( String, Callback ): void","restartConnector( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract restartConnector( long, String, Callback ): HerderRequest","restartConnector( long, String, Callback ): HerderRequest",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract restartTask( ConnectorTaskId, Callback ): void","restartTask( ConnectorTaskId, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract resumeConnector( String ): void,resumeConnector( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.runtime.Herder.public abstract taskConfigs( String, Callback ): void","taskConfigs( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract taskStatus( ConnectorTaskId ): TaskState,taskStatus( ConnectorTaskId ): TaskState,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract validateConnectorConfig( Map ): ConfigInfos,validateConnectorConfig( Map ): ConfigInfos,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.runtime.HerderConnectorContext,HerderConnectorContext,low,low,low,low,1,11,2,1,0,3,12,9,2,0,3,0,0,0,0.5,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public HerderConnectorContext( AbstractHerder, String ): void","HerderConnectorContext( AbstractHerder, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public raiseError( Exception ): void,raiseError( Exception ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Field>org.apache.kafka.connect.runtime.HerderConnectorContext->connectorName,final connectorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.HerderConnectorContext->herder,final herder : AbstractHerder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.HerderRequest,HerderRequest,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.HerderRequest.public abstract cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.runtime.SessionKey,SessionKey,low,low,low,low,0,8,3,1,0,8,22,19,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,22,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.runtime.SessionKey.public SessionKey( SecretKey, long ): void","SessionKey( SecretKey, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,2
<Method>org.apache.kafka.connect.runtime.SessionKey.public creationTimestamp( ): long,creationTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.SessionKey.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,2,4
<Method>org.apache.kafka.connect.runtime.SessionKey.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.SessionKey.public key( ): SecretKey,key( ): SecretKey,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.SessionKey->creationTimestamp,final creationTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SessionKey->key,final key : SecretKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.SinkConnectorConfig,SinkConnectorConfig,low-medium,low,low-medium,low,4,49,10,3,0,13,61,27,0,22,4,5,0,1.068,0.583,0.861,0,0,,,,,61,,,,,,13,,,,,,,
"<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public SinkConnectorConfig( Plugins, Map ): void","SinkConnectorConfig( Plugins, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public dlqTopicName( ): String,dlqTopicName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public dlqTopicReplicationFactor( ): short,dlqTopicReplicationFactor( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public isDlqContextHeadersEnabled( ): boolean,isDlqContextHeadersEnabled( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public static hasTopicsConfig( Map ): boolean,static hasTopicsConfig( Map ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public static hasTopicsRegexConfig( Map ): boolean,static hasTopicsRegexConfig( Map ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.runtime.SinkConnectorConfig.public static validate( Map ): void,static validate( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,9,1,2,4
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->config,static config : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_CONTEXT_HEADERS_ENABLE_CONFIG,static final DLQ_CONTEXT_HEADERS_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_CONTEXT_HEADERS_ENABLE_DEFAULT,static final DLQ_CONTEXT_HEADERS_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_CONTEXT_HEADERS_ENABLE_DISPLAY,static final DLQ_CONTEXT_HEADERS_ENABLE_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_CONTEXT_HEADERS_ENABLE_DOC,static final DLQ_CONTEXT_HEADERS_ENABLE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_PREFIX,static final DLQ_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_DEFAULT,static final DLQ_TOPIC_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_DISPLAY,static final DLQ_TOPIC_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_NAME_CONFIG,static final DLQ_TOPIC_NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_NAME_DOC,static final DLQ_TOPIC_NAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_REPLICATION_FACTOR_CONFIG,static final DLQ_TOPIC_REPLICATION_FACTOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DEFAULT,static final DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DEFAULT : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DISPLAY,static final DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DOC,static final DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_CONFIG,static final TOPICS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_DEFAULT,static final TOPICS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_DISPLAY,static final TOPICS_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_DOC,static final TOPICS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_REGEX_CONFIG,static final TOPICS_REGEX_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_REGEX_DEFAULT,static final TOPICS_REGEX_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_REGEX_DISPLAY,static final TOPICS_REGEX_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SinkConnectorConfig->TOPICS_REGEX_DOC,static final TOPICS_REGEX_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.SourceConnectorConfig,SourceConnectorConfig,low-medium,low,low,low,2,35,2,3,0,3,8,6,0,1,1,2,0,0,0.5,0,0,0,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.runtime.SourceConnectorConfig.public SourceConnectorConfig( Plugins, Map ): void","SourceConnectorConfig( Plugins, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
<Method>org.apache.kafka.connect.runtime.SourceConnectorConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.SourceConnectorConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Field>org.apache.kafka.connect.runtime.SourceConnectorConfig->config,static config : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter,SourceTaskOffsetCommitter,low-medium,low-medium,low,low-medium,6,95,17,1,0,14,49,44,3,1,6,0,0,0.563,0.643,0.5,0,0,,,,,49,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3558;,Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3558;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter. SourceTaskOffsetCommitter( WorkerConfig, ScheduledExecutorService, ConcurrentMap ): void"," SourceTaskOffsetCommitter( WorkerConfig, ScheduledExecutorService, ConcurrentMap ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public SourceTaskOffsetCommitter( WorkerConfig ): void,SourceTaskOffsetCommitter( WorkerConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public close( long ): void,close( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,3,3
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.private commit( WorkerSourceTask ): void,commit( WorkerSourceTask ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,4,3
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public remove( ConnectorTaskId ): void,remove( ConnectorTaskId ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,6,2
"<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public schedule( ConnectorTaskId, WorkerSourceTask ): void","schedule( ConnectorTaskId, WorkerSourceTask ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,9,2,3,3
<Field>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter->commitExecutorService,final commitExecutorService : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter->committers,final committers : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter->config,final config : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.StateTracker,StateTracker,low,low,low-medium,low,1,7,4,1,0,3,79,6,1,0,3,0,0,0,0.222,0,0,0,,,,,79,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.StateTracker.StateChange,StateChange,low,low,low,low,1,4,0,1,0,19,71,63,7,0,4,0,0,0,0.167,0,0,0,,,,,71,,,,,,19,,,,,,,
<Method>org.apache.kafka.connect.runtime.StateTracker.public currentState( ): State,currentState( ): State,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.StateTracker.public durationRatio( State, long ): double","durationRatio( State, long ): double",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,1
"<Method>org.apache.kafka.connect.runtime.StateTracker.public synchronized changeState( State, long ): void","synchronized changeState( State, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,2
<Field>org.apache.kafka.connect.runtime.StateTracker->lastState,final lastState : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.TargetState,TargetState,low-medium,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->PAUSED,static final PAUSED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TargetState->STARTED,static final STARTED : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.TaskConfig,TaskConfig,low-medium,low,low,low,1,2,0,2,0,2,12,4,0,3,2,0,0,0,0.25,1,0,0,,,,,12,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.TaskConfig.public TaskConfig( ): void,TaskConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.TaskConfig.public TaskConfig( Map ): void,TaskConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.connect.runtime.TaskConfig->config,static config : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TaskConfig->TASK_CLASS_CONFIG,static final TASK_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TaskConfig->TASK_CLASS_DOC,static final TASK_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.TaskStatus,TaskStatus,low-medium,low,low,low,2,2,0,2,0,2,11,4,0,0,2,0,0,0,0,0,0,0,,,,,11,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.TaskStatus.Listener,Listener,low,low,low,low,1,5,0,1,2,5,6,5,0,0,5,0,0,0,0.267,0,0,0,,,,,6,,,,,,5,,,,,,,
"<Method>org.apache.kafka.connect.runtime.TaskStatus.public TaskStatus( ConnectorTaskId, State, String, int ): void","TaskStatus( ConnectorTaskId, State, String, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
"<Method>org.apache.kafka.connect.runtime.TaskStatus.public TaskStatus( ConnectorTaskId, State, String, int, String ): void","TaskStatus( ConnectorTaskId, State, String, int, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,5,0,0
org.apache.kafka.connect.runtime.TransformationChain<R>,TransformationChain,low-medium,low,low,low-medium,4,70,10,1,0,14,33,29,2,1,6,0,0,0.6,0.667,0,0,0,,,,,33,,,,,,14,,,,,,,
"<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public TransformationChain( List, RetryWithToleranceOperator ): void","TransformationChain( List, RetryWithToleranceOperator ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public apply( R ): R,apply( R ): R,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,1
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,6,1,3,2
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.TransformationChain<R>.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,1
<Field>org.apache.kafka.connect.runtime.TransformationChain<R>->retryWithToleranceOperator,final retryWithToleranceOperator : RetryWithToleranceOperator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TransformationChain<R>->transformations,final transformations : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.TransformationChain<R>->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.Worker,Worker,very-high,very-high,medium-high,high,51,423,130,1,0,76,592,471,17,1,36,4,0,0.861,0.893,0.724,1,0,,,,,592,,,,,,76,,,,,,,
org.apache.kafka.connect.runtime.Worker.ConnectorStatusMetricsGroup,ConnectorStatusMetricsGroup,low,low,low,low,7,74,20,1,0,11,45,39,5,0,7,0,0,0.7,0.673,0,0,0,,,,,45,,,,,,11,,,,,,,
org.apache.kafka.connect.runtime.Worker.WorkerMetricsGroup,WorkerMetricsGroup,low,low,low,low,7,101,11,1,0,7,57,47,9,0,7,0,0,0.741,0.429,0,0,0,,,,,57,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.runtime.Worker. Worker( String, Time, Plugins, WorkerConfig, OffsetBackingStore, ExecutorService, ConnectorClientConfigOverridePolicy ): void"," Worker( String, Time, Plugins, WorkerConfig, OffsetBackingStore, ExecutorService, ConnectorClientConfigOverridePolicy ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,31,7,4,14
<Method>org.apache.kafka.connect.runtime.Worker. connectorStatusMetricsGroup( ): ConnectorStatusMetricsGroup, connectorStatusMetricsGroup( ): ConnectorStatusMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker. errorHandlingMetrics( ConnectorTaskId ): ErrorHandlingMetrics, errorHandlingMetrics( ConnectorTaskId ): ErrorHandlingMetrics,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.Worker. workerMetricsGroup( ): WorkerMetricsGroup, workerMetricsGroup( ): WorkerMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.Worker.public Worker( String, Time, Plugins, WorkerConfig, OffsetBackingStore, ConnectorClientConfigOverridePolicy ): void","Worker( String, Time, Plugins, WorkerConfig, OffsetBackingStore, ConnectorClientConfigOverridePolicy ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,1,0
"<Method>org.apache.kafka.connect.runtime.Worker.private awaitStopTask( ConnectorTaskId, long ): void","awaitStopTask( ConnectorTaskId, long ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,2,10,5
<Method>org.apache.kafka.connect.runtime.Worker.private awaitStopTasks( Collection ): void,awaitStopTasks( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,5,3
"<Method>org.apache.kafka.connect.runtime.Worker.private buildWorkerTask( ClusterConfigState, ConnectorConfig, ConnectorTaskId, Task, Listener, TargetState, Converter, Converter, HeaderConverter, ClassLoader ): WorkerTask","buildWorkerTask( ClusterConfigState, ConnectorConfig, ConnectorTaskId, Task, Listener, TargetState, Converter, Converter, HeaderConverter, ClassLoader ): WorkerTask",low,very-high,low-medium,low,24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,43,10,21,21
<Method>org.apache.kafka.connect.runtime.Worker.public configTransformer( ): WorkerConfigTransformer,configTransformer( ): WorkerConfigTransformer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.public connectorNames( ): Set,connectorNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.Worker.public connectorTaskConfigs( String, ConnectorConfig ): List","connectorTaskConfigs( String, ConnectorConfig ): List",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,25,2,20,4
<Method>org.apache.kafka.connect.runtime.Worker.public getInternalKeyConverter( ): Converter,getInternalKeyConverter( ): Converter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.public getInternalValueConverter( ): Converter,getInternalValueConverter( ): Converter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.public getPlugins( ): Plugins,getPlugins( ): Plugins,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.protected herder( ): Herder,herder( ): Herder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.Worker.private initConfigTransformer( ): WorkerConfigTransformer,initConfigTransformer( ): WorkerConfigTransformer,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,0,3,3
<Method>org.apache.kafka.connect.runtime.Worker.public isRunning( String ): boolean,isRunning( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.runtime.Worker.public isSinkConnector( String ): boolean,isSinkConnector( String ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,6,3
<Method>org.apache.kafka.connect.runtime.Worker.public metrics( ): ConnectMetrics,metrics( ): ConnectMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.Worker.public setTargetState( String, TargetState ): void","setTargetState( String, TargetState ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,13,4
"<Method>org.apache.kafka.connect.runtime.Worker.private sinkTaskReporters( ConnectorTaskId, SinkConnectorConfig, ErrorHandlingMetrics, Class ): List","sinkTaskReporters( ConnectorTaskId, SinkConnectorConfig, ErrorHandlingMetrics, Class ): List",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,4,7,4
"<Method>org.apache.kafka.connect.runtime.Worker.private sourceTaskReporters( ConnectorTaskId, ConnectorConfig, ErrorHandlingMetrics ): List","sourceTaskReporters( ConnectorTaskId, ConnectorConfig, ErrorHandlingMetrics ): List",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,0
<Method>org.apache.kafka.connect.runtime.Worker.public start( ): void,start( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,9
"<Method>org.apache.kafka.connect.runtime.Worker.public startConnector( String, Map, ConnectorContext, Listener, TargetState ): boolean","startConnector( String, Map, ConnectorContext, Listener, TargetState ): boolean",low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,35,5,20,13
"<Method>org.apache.kafka.connect.runtime.Worker.public startTask( ConnectorTaskId, ClusterConfigState, Map, Map, Listener, TargetState ): boolean","startTask( ConnectorTaskId, ClusterConfigState, Map, Map, Listener, TargetState ): boolean",low,very-high,medium-high,low,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,64,6,39,30
"<Method>org.apache.kafka.connect.runtime.Worker.static adminConfigs( ConnectorTaskId, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map","static adminConfigs( ConnectorTaskId, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,5,14,0
"<Method>org.apache.kafka.connect.runtime.Worker.private static connectorClientConfigOverrides( ConnectorTaskId, ConnectorConfig, Class, String, ConnectorType, ClientType, ConnectorClientConfigOverridePolicy ): Map","static connectorClientConfigOverrides( ConnectorTaskId, ConnectorConfig, Class, String, ConnectorType, ClientType, ConnectorClientConfigOverridePolicy ): Map",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,21,7,8,0
"<Method>org.apache.kafka.connect.runtime.Worker.static consumerConfigs( ConnectorTaskId, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map","static consumerConfigs( ConnectorTaskId, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,5,15,0
"<Method>org.apache.kafka.connect.runtime.Worker.static producerConfigs( ConnectorTaskId, String, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map","static producerConfigs( ConnectorTaskId, String, WorkerConfig, ConnectorConfig, Class, ConnectorClientConfigOverridePolicy ): Map",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,6,18,0
<Method>org.apache.kafka.connect.runtime.Worker.public stop( ): void,stop( ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,17,0,18,16
<Method>org.apache.kafka.connect.runtime.Worker.public stopAndAwaitTask( ConnectorTaskId ): void,stopAndAwaitTask( ConnectorTaskId ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.connect.runtime.Worker.public stopAndAwaitTasks( ): void,stopAndAwaitTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.runtime.Worker.public stopAndAwaitTasks( Collection ): void,stopAndAwaitTasks( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.connect.runtime.Worker.public stopConnector( String ): boolean,stopConnector( String ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,15,1,10,6
<Method>org.apache.kafka.connect.runtime.Worker.private stopConnectors( ): void,stopConnectors( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,1
<Method>org.apache.kafka.connect.runtime.Worker.private stopTask( ConnectorTaskId ): void,stopTask( ConnectorTaskId ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,1,12,5
<Method>org.apache.kafka.connect.runtime.Worker.private stopTasks( Collection ): void,stopTasks( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,0
<Method>org.apache.kafka.connect.runtime.Worker.public taskIds( ): Set,taskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.Worker.private transitionTo( Object, TargetState, ClassLoader ): void","transitionTo( Object, TargetState, ClassLoader ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,3,6,1
<Method>org.apache.kafka.connect.runtime.Worker.public workerId( ): String,workerId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.Worker->connectorClientConfigOverridePolicy,connectorClientConfigOverridePolicy : ConnectorClientConfigOverridePolicy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->connectorStatusMetricsGroup,connectorStatusMetricsGroup : ConnectorStatusMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->config,final config : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->connectors,final connectors : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->executor,final executor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->internalKeyConverter,final internalKeyConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->internalValueConverter,final internalValueConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->metrics,final metrics : ConnectMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->offsetBackingStore,final offsetBackingStore : OffsetBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->plugins,final plugins : Plugins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->tasks,final tasks : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->workerId,final workerId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->workerMetricsGroup,final workerMetricsGroup : WorkerMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->herder,herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->sourceTaskOffsetCommitter,sourceTaskOffsetCommitter : SourceTaskOffsetCommitter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.Worker->workerConfigTransformer,workerConfigTransformer : WorkerConfigTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConfig,WorkerConfig,low-medium,medium-high,low-medium,low,11,52,29,2,2,17,291,127,0,64,5,2,1,0.99,0.536,1,0,0.4,,,,,291,,,,,,17,,,,,,,
org.apache.kafka.connect.runtime.WorkerConfig.AdminListenersValidator,AdminListenersValidator,low,low,low,low,1,4,3,1,0,7,15,14,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.runtime.WorkerConfig.public WorkerConfig( ConfigDef, Map ): void","WorkerConfig( ConfigDef, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.connect.runtime.WorkerConfig.public getRebalanceTimeout( ): Integer,getRebalanceTimeout( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.runtime.WorkerConfig.private logDeprecatedProperty( String, String, String, String ): void","logDeprecatedProperty( String, String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,27,4,4,3
<Method>org.apache.kafka.connect.runtime.WorkerConfig.private logInternalConverterDeprecationWarnings( Map ): void,logInternalConverterDeprecationWarnings( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,15,1,13,4
<Method>org.apache.kafka.connect.runtime.WorkerConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.runtime.WorkerConfig.protected static baseConfigDef( ): ConfigDef,static baseConfigDef( ): ConfigDef,low,medium-high,medium-high,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,72,0,40,61
<Method>org.apache.kafka.connect.runtime.WorkerConfig.public static pluginLocations( Map ): List,static pluginLocations( Map ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,4,2
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_METHODS_CONFIG,static final ACCESS_CONTROL_ALLOW_METHODS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_METHODS_DEFAULT,static final ACCESS_CONTROL_ALLOW_METHODS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_METHODS_DOC,static final ACCESS_CONTROL_ALLOW_METHODS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_ORIGIN_CONFIG,static final ACCESS_CONTROL_ALLOW_ORIGIN_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_ORIGIN_DEFAULT,static final ACCESS_CONTROL_ALLOW_ORIGIN_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ACCESS_CONTROL_ALLOW_ORIGIN_DOC,static final ACCESS_CONTROL_ALLOW_ORIGIN_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ADMIN_LISTENERS_CONFIG,static final ADMIN_LISTENERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ADMIN_LISTENERS_DEFAULT,static final ADMIN_LISTENERS_DEFAULT : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ADMIN_LISTENERS_DOC,static final ADMIN_LISTENERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->ADMIN_LISTENERS_HTTPS_CONFIGS_PREFIX,static final ADMIN_LISTENERS_HTTPS_CONFIGS_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->BOOTSTRAP_SERVERS_DEFAULT,static final BOOTSTRAP_SERVERS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->BOOTSTRAP_SERVERS_DOC,static final BOOTSTRAP_SERVERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CLIENT_DNS_LOOKUP_CONFIG,static final CLIENT_DNS_LOOKUP_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CLIENT_DNS_LOOKUP_DOC,static final CLIENT_DNS_LOOKUP_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->COMMA_WITH_WHITESPACE,static final COMMA_WITH_WHITESPACE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CONFIG_PROVIDERS_CONFIG,static final CONFIG_PROVIDERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CONFIG_PROVIDERS_DOC,static final CONFIG_PROVIDERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CONNECTOR_CLIENT_POLICY_CLASS_CONFIG,static final CONNECTOR_CLIENT_POLICY_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CONNECTOR_CLIENT_POLICY_CLASS_DEFAULT,static final CONNECTOR_CLIENT_POLICY_CLASS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->CONNECTOR_CLIENT_POLICY_CLASS_DOC,static final CONNECTOR_CLIENT_POLICY_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->HEADER_CONVERTER_CLASS_CONFIG,static final HEADER_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->HEADER_CONVERTER_CLASS_DEFAULT,static final HEADER_CONVERTER_CLASS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->HEADER_CONVERTER_CLASS_DOC,static final HEADER_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->INTERNAL_CONVERTER_DEFAULT,static final INTERNAL_CONVERTER_DEFAULT : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->INTERNAL_KEY_CONVERTER_CLASS_CONFIG,static final INTERNAL_KEY_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->INTERNAL_KEY_CONVERTER_CLASS_DOC,static final INTERNAL_KEY_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->INTERNAL_VALUE_CONVERTER_CLASS_CONFIG,static final INTERNAL_VALUE_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->INTERNAL_VALUE_CONVERTER_CLASS_DOC,static final INTERNAL_VALUE_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->KEY_CONVERTER_CLASS_CONFIG,static final KEY_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->KEY_CONVERTER_CLASS_DOC,static final KEY_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->LISTENERS_CONFIG,static final LISTENERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->LISTENERS_DOC,static final LISTENERS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_CONFIG,static final OFFSET_COMMIT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_DEFAULT,static final OFFSET_COMMIT_INTERVAL_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_DOC,static final OFFSET_COMMIT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_CONFIG,static final OFFSET_COMMIT_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_DEFAULT,static final OFFSET_COMMIT_TIMEOUT_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_DOC,static final OFFSET_COMMIT_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->PLUGIN_PATH_CONFIG,static final PLUGIN_PATH_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->PLUGIN_PATH_DOC,static final PLUGIN_PATH_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_HOST_NAME_CONFIG,static final REST_ADVERTISED_HOST_NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_HOST_NAME_DOC,static final REST_ADVERTISED_HOST_NAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_LISTENER_CONFIG,static final REST_ADVERTISED_LISTENER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_LISTENER_DOC,static final REST_ADVERTISED_LISTENER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_PORT_CONFIG,static final REST_ADVERTISED_PORT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_ADVERTISED_PORT_DOC,static final REST_ADVERTISED_PORT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_EXTENSION_CLASSES_CONFIG,static final REST_EXTENSION_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_EXTENSION_CLASSES_DOC,static final REST_EXTENSION_CLASSES_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_HOST_NAME_CONFIG,static final REST_HOST_NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_HOST_NAME_DOC,static final REST_HOST_NAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_CONFIG,static final REST_PORT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_DEFAULT,static final REST_PORT_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_DOC,static final REST_PORT_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_CONFIG,static final TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_DEFAULT,static final TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_DOC,static final TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->VALUE_CONVERTER_CLASS_CONFIG,static final VALUE_CONVERTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->VALUE_CONVERTER_CLASS_DOC,static final VALUE_CONVERTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConfigTransformer,WorkerConfigTransformer,low-medium,medium-high,low,low,11,59,19,1,0,12,43,38,3,1,5,0,0,0.75,0.44,0.667,0,0,,,,,43,,,,,,12,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerConfigTransformer$4000;,Lorg.apache.kafka.connect.runtime.WorkerConfigTransformer$4000;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.runtime.WorkerConfigTransformer.public WorkerConfigTransformer( Worker, Map ): void","WorkerConfigTransformer( Worker, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.connect.runtime.WorkerConfigTransformer.private scheduleReload( String, Map ): void","scheduleReload( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,4,0
"<Method>org.apache.kafka.connect.runtime.WorkerConfigTransformer.private scheduleReload( String, String, long ): void","scheduleReload( String, String, long ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,18,3,8,4
<Method>org.apache.kafka.connect.runtime.WorkerConfigTransformer.public transform( Map ): Map,transform( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.WorkerConfigTransformer.public transform( String, Map ): Map","transform( String, Map ): Map",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,2,7,1
<Field>org.apache.kafka.connect.runtime.WorkerConfigTransformer->configTransformer,final configTransformer : ConfigTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfigTransformer->requests,final requests : ConcurrentMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfigTransformer->worker,final worker : Worker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfigTransformer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector,WorkerConnector,low-medium,low-medium,low-medium,high,9,70,24,1,0,36,189,120,7,1,16,0,0,0.714,0.833,0.333,0,0,,,,,189,,,,,,36,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector.ConnectorMetricsGroup,ConnectorMetricsGroup,low,low,low,low,5,85,18,1,0,13,55,51,3,0,13,0,0,0.5,0.705,0.214,0,0,,,,,55,,,,,,13,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerConnector$3816;,Lorg.apache.kafka.connect.runtime.WorkerConnector$3816;,low,low,low,low,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerConnector.State,State,low,low,low,low,0,0,0,2,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerConnector. metrics( ): ConnectorMetricsGroup, metrics( ): ConnectorMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerConnector.public WorkerConnector( String, Connector, ConnectorContext, ConnectMetrics, Listener ): void","WorkerConnector( String, Connector, ConnectorContext, ConnectMetrics, Listener ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,7
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public connector( ): Connector,connector( ): Connector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.protected connectorType( ): String,connectorType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,2,0
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private doStart( ): boolean,doStart( ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,0,3,6
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public initialize( ConnectorConfig ): void,initialize( ConnectorConfig ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,19,1,7,7
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isSinkConnector( ): boolean,isSinkConnector( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public isSourceConnector( ): boolean,isSourceConnector( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private onFailure( Throwable ): void,onFailure( Throwable ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private pause( ): void,pause( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,18,0,4,10
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private resume( ): void,resume( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public shutdown( ): void,shutdown( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,0,5,10
<Method>org.apache.kafka.connect.runtime.WorkerConnector.private start( ): void,start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerConnector.public transitionTo( TargetState ): void,transitionTo( TargetState ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,14,1,5,4
<Field>org.apache.kafka.connect.runtime.WorkerConnector->config,config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->connName,final connName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->connector,final connector : Connector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->ctx,final ctx : ConnectorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->metrics,final metrics : ConnectorMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->statusListener,final statusListener : Listener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConnector->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerInfo,WorkerInfo,low,low,low,low,2,35,28,1,0,7,45,37,1,3,4,1,0,0.75,0.4,0,0,0,,,,,45,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerInfo.public WorkerInfo( ): void,WorkerInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerInfo.protected addRuntimeInfo( ): void,addRuntimeInfo( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,12,9
<Method>org.apache.kafka.connect.runtime.WorkerInfo.protected addSystemInfo( ): void,addSystemInfo( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,8,6
<Method>org.apache.kafka.connect.runtime.WorkerInfo.public logAll( ): void,logAll( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,16,2
<Method>org.apache.kafka.connect.runtime.WorkerInfo.private static format( Object ): Object,static format( Object ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
<Field>org.apache.kafka.connect.runtime.WorkerInfo->values,final values : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerInfo->OS,static final OS : OperatingSystemMXBean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerInfo->RUNTIME,static final RUNTIME : RuntimeMXBean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerInfo->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask,WorkerSinkTask,very-high,very-high,medium-high,very-high,34,787,130,2,0,81,507,357,23,1,33,0,0,0.878,0.91,0.667,1,0,,,,,507,,,,,,81,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.HandleRebalance,HandleRebalance,low,low,low,low,7,340,17,1,0,9,33,32,0,0,2,0,0,0,0,0,0,0,,,,,33,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSinkTask$14065;,Lorg.apache.kafka.connect.runtime.WorkerSinkTask$14065;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup,SinkTaskMetricsGroup,low,low,low,low,12,107,22,1,0,17,92,77,14,0,15,0,0,0.908,0.722,0,0,0,,,,,92,,,,,,17,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask. getNextCommit( ): long, getNextCommit( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask. isCommitting( ): boolean, isCommitting( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask. sinkTaskMetricsGroup( ): SinkTaskMetricsGroup, sinkTaskMetricsGroup( ): SinkTaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public WorkerSinkTask( ConnectorTaskId, SinkTask, Listener, TargetState, WorkerConfig, ClusterConfigState, ConnectMetrics, Converter, Converter, HeaderConverter, TransformationChain, KafkaConsumer, ClassLoader, Time, RetryWithToleranceOperator ): void","WorkerSinkTask( ConnectorTaskId, SinkTask, Listener, TargetState, WorkerConfig, ClusterConfigState, ConnectMetrics, Converter, Converter, HeaderConverter, TransformationChain, KafkaConsumer, ClassLoader, Time, RetryWithToleranceOperator ): void",low,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,38,15,3,22
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected close( ): void,close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,0,6,7
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private closePartitions( ): void,closePartitions( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public commitFailures( ): int,commitFailures( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private commitOffsets( long, boolean ): void","commitOffsets( long, boolean ): void",low-medium,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,51,2,38,34
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private convertAndTransformRecord( ConsumerRecord ): SinkRecord,convertAndTransformRecord( ConsumerRecord ): SinkRecord,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,1,21,9
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private convertHeadersFor( ConsumerRecord ): Headers,convertHeadersFor( ConsumerRecord ): Headers,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,7,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private convertMessages( ConsumerRecords ): void,convertMessages( ConsumerRecords ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,1,18,8
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private deliverMessages( ): void,deliverMessages( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,0,15,16
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private doCommit( Map, boolean, int ): void","doCommit( Map, boolean, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,2,0
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private doCommitAsync( Map, int ): void","doCommitAsync( Map, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,2,2,2
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private doCommitSync( Map, int ): void","doCommitSync( Map, int ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,5,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public execute( ): void,execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,4,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public initialize( TaskConfig ): void,initialize( TaskConfig ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,3,5
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected initializeAndStart( ): void,initializeAndStart( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,0,15,13
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected iteration( ): void,iteration( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,26,0,17,17
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private onCommitCompleted( Throwable, long, Map ): void","onCommitCompleted( Throwable, long, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,22,3,9,14
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private openPartitions( Collection ): void,openPartitions( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private pauseAll( ): void,pauseAll( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected poll( long ): void,poll( long ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,12,5
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private pollConsumer( long ): ConsumerRecords,pollConsumer( long ): ConsumerRecords,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,5
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected recordBatch( int ): void,recordBatch( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected recordCommitFailure( long, Throwable ): void","recordCommitFailure( long, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected recordCommitSuccess( long ): void,recordCommitSuccess( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.protected releaseResources( ): void,releaseResources( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private resumeAll( ): void,resumeAll( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,5,3
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private rewind( ): void,rewind( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,11,7
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public transitionTo( TargetState ): void,transitionTo( TargetState ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitFailures,commitFailures : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitSeqno,commitSeqno : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->commitStarted,commitStarted : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->committing,committing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->consumer,consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->context,context : WorkerSinkTaskContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->currentOffsets,currentOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->configState,final configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->headerConverter,final headerConverter : HeaderConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->keyConverter,final keyConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->messageBatch,final messageBatch : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->origOffsets,final origOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->sinkTaskMetricsGroup,final sinkTaskMetricsGroup : SinkTaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->task,final task : SinkTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->transformationChain,final transformationChain : TransformationChain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->valueConverter,final valueConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->workerConfig,final workerConfig : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->lastCommittedOffsets,lastCommittedOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->nextCommit,nextCommit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->pausedForRedelivery,pausedForRedelivery : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->rebalanceException,rebalanceException : RuntimeException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->taskConfig,taskConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTaskContext,WorkerSinkTaskContext,medium-high,low-medium,low-medium,medium-high,7,106,15,1,0,23,85,76,8,0,16,0,0,0.8,0.777,0.625,0,0,,,,,85,,,,,,23,,,,,,,
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public WorkerSinkTaskContext( KafkaConsumer, WorkerSinkTask, ClusterConfigState ): void","WorkerSinkTaskContext( KafkaConsumer, WorkerSinkTask, ClusterConfigState ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,0,6
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public assignment( ): Set,assignment( ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearCommitRequest( ): void,clearCommitRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearOffsets( ): void,clearOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public configs( ): Map,configs( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public isCommitRequested( ): boolean,isCommitRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public offset( Map ): void,offset( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public offset( TopicPartition, long ): void","offset( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public offsets( ): Map,offsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public pause( TopicPartition ): void,pause( TopicPartition ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,6,6
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public pausedPartitions( ): Set,pausedPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public requestCommit( ): void,requestCommit( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public resume( TopicPartition ): void,resume( TopicPartition ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,7,6
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( ): long,timeout( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( long ): void,timeout( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->consumer,consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->configState,final configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->pausedPartitions,final pausedPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->sinkTask,final sinkTask : WorkerSinkTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->offsets,offsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->timeoutMs,timeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask,WorkerSourceTask,very-high,high,medium-high,very-high,29,430,90,2,0,68,393,304,23,2,22,0,0,0.89,0.909,0.571,0,0,,,,,393,,,,,,68,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$14662;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$14662;,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$21394;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$21394;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask.SourceRecordWriteCounter,SourceRecordWriteCounter,low,low,low,low,1,25,2,1,0,10,23,18,4,0,5,0,0,0.583,0.533,0.5,0,0,,,,,23,,,,,,10,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask.SourceTaskMetricsGroup,SourceTaskMetricsGroup,low,low,low,low,10,91,14,1,0,5,40,33,6,0,5,0,0,0.667,0.6,0,0,0,,,,,40,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask. sourceTaskMetricsGroup( ): SourceTaskMetricsGroup, sourceTaskMetricsGroup( ): SourceTaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public WorkerSourceTask( ConnectorTaskId, SourceTask, Listener, TargetState, Converter, Converter, HeaderConverter, TransformationChain, KafkaProducer, CloseableOffsetStorageReader, OffsetStorageWriter, WorkerConfig, ClusterConfigState, ConnectMetrics, ClassLoader, Time, RetryWithToleranceOperator ): void","WorkerSourceTask( ConnectorTaskId, SourceTask, Listener, TargetState, Converter, Converter, HeaderConverter, TransformationChain, KafkaProducer, CloseableOffsetStorageReader, OffsetStorageWriter, WorkerConfig, ClusterConfigState, ConnectMetrics, ClassLoader, Time, RetryWithToleranceOperator ): void",low,very-high,low-medium,low,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,37,17,0,19
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public cancel( ): void,cancel( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected close( ): void,close( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,0,7,5
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public commitOffsets( ): boolean,commitOffsets( ): boolean,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,67,0,47,27
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private commitSourceTask( ): void,commitSourceTask( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,2
"<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private commitTaskRecord( SourceRecord, RecordMetadata ): void","commitTaskRecord( SourceRecord, RecordMetadata ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private convertHeaderFor( SourceRecord ): RecordHeaders,convertHeaderFor( SourceRecord ): RecordHeaders,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,7,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private convertTransformedRecord( SourceRecord ): ProducerRecord,convertTransformedRecord( SourceRecord ): ProducerRecord,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,8,7
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public execute( ): void,execute( ): void,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,32,0,21,20
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public initialize( TaskConfig ): void,initialize( TaskConfig ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private maybeThrowProducerSendException( ): void,maybeThrowProducerSendException( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected poll( ): List,poll( ): List,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,2
"<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected recordPollReturned( int, long ): void","recordPollReturned( int, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.protected releaseResources( ): void,releaseResources( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private sendRecords( ): boolean,sendRecords( ): boolean,low,very-high,medium-high,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,54,0,25,22
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,3,3
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishFailedFlush( ): void,synchronized finishFailedFlush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,5
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishSuccessfulFlush( ): void,synchronized finishSuccessfulFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,5
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized recordSent( ProducerRecord ): void,synchronized recordSent( ProducerRecord ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,8,1,5,6
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized tryStop( ): void,synchronized tryStop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,2,4
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->configState,final configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->headerConverter,final headerConverter : HeaderConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->keyConverter,final keyConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->offsetReader,final offsetReader : CloseableOffsetStorageReader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->offsetWriter,final offsetWriter : OffsetStorageWriter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->producerSendException,final producerSendException : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->sourceTaskMetricsGroup,final sourceTaskMetricsGroup : SourceTaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->task,final task : SourceTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->transformationChain,final transformationChain : TransformationChain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->valueConverter,final valueConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->workerConfig,final workerConfig : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->finishedStart,finishedStart : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->flushing,flushing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->lastSendFailed,lastSendFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->outstandingMessages,outstandingMessages : IdentityHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->outstandingMessagesBacklog,outstandingMessagesBacklog : IdentityHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->producer,producer : KafkaProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->startedShutdownBeforeStartCompleted,startedShutdownBeforeStartCompleted : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->SEND_FAILED_BACKOFF_MS,static final SEND_FAILED_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->stopRequestedLatch,stopRequestedLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->stopped,stopped : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->taskConfig,taskConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->toSend,toSend : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTaskContext,WorkerSourceTaskContext,low-medium,low,low,low,3,63,2,1,0,3,16,12,3,0,3,0,0,0.5,0.5,0.333,0,0,,,,,16,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.runtime.WorkerSourceTaskContext.public WorkerSourceTaskContext( OffsetStorageReader, WorkerSourceTask, ClusterConfigState ): void","WorkerSourceTaskContext( OffsetStorageReader, WorkerSourceTask, ClusterConfigState ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.connect.runtime.WorkerSourceTaskContext.public configs( ): Map,configs( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTaskContext.public offsetStorageReader( ): OffsetStorageReader,offsetStorageReader( ): OffsetStorageReader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSourceTaskContext->configState,final configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTaskContext->reader,final reader : OffsetStorageReader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTaskContext->task,final task : WorkerSourceTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask,WorkerTask,medium-high,low-medium,low-medium,high,9,108,32,1,2,39,220,121,9,2,26,0,0,0.85,0.86,0.778,0,0,,,,,220,,,,,,39,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask.TaskMetricsGroup,TaskMetricsGroup,low,low,low,low,15,125,29,1,0,17,87,79,7,0,13,0,0,0.714,0.797,0,0,0,,,,,87,,,,,,17,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerTask. taskMetricsGroup( ): TaskMetricsGroup, taskMetricsGroup( ): TaskMetricsGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.WorkerTask.public WorkerTask( ConnectorTaskId, Listener, TargetState, ClassLoader, ConnectMetrics, RetryWithToleranceOperator ): void","WorkerTask( ConnectorTaskId, Listener, TargetState, ClassLoader, ConnectMetrics, RetryWithToleranceOperator ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,6,1,12
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract close( ): void,abstract close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public abstract initialize( TaskConfig ): void,abstract initialize( TaskConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected abstract releaseResources( ): void,abstract releaseResources( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected awaitUnpause( ): boolean,awaitUnpause( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerTask.public cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doClose( ): void,doClose( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.private doRun( ): void,doRun( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,0,7,6
<Method>org.apache.kafka.connect.runtime.WorkerTask.public id( ): ConnectorTaskId,id( ): ConnectorTaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected isStopping( ): boolean,isStopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public loader( ): ClassLoader,loader( ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected onFailure( Throwable ): void,onFailure( Throwable ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,3
<Method>org.apache.kafka.connect.runtime.WorkerTask.private onShutdown( ): void,onShutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,3
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected recordBatch( int ): void,recordBatch( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.connect.runtime.WorkerTask.protected recordCommitFailure( long, Throwable ): void","recordCommitFailure( long, Throwable ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected recordCommitSuccess( long ): void,recordCommitSuccess( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public run( ): void,run( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,5,24,0,17,5
<Method>org.apache.kafka.connect.runtime.WorkerTask.public shouldPause( ): boolean,shouldPause( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onPause( ): void,synchronized onPause( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerTask.protected synchronized onResume( ): void,synchronized onResume( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerTask.public transitionTo( TargetState ): void,transitionTo( TargetState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,2
<Method>org.apache.kafka.connect.runtime.WorkerTask.private triggerStop( ): void,triggerStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,1,1
<Field>org.apache.kafka.connect.runtime.WorkerTask->id,final id : ConnectorTaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->loader,final loader : ClassLoader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->retryWithToleranceOperator,final retryWithToleranceOperator : RetryWithToleranceOperator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->shutdownLatch,final shutdownLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->statusListener,final statusListener : Listener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->taskMetricsGroup,final taskMetricsGroup : TaskMetricsGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->THREAD_NAME_PREFIX,static final THREAD_NAME_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->cancelled,volatile cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->stopping,volatile stopping : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerTask->targetState,volatile targetState : TargetState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.distributed,org.apache.kafka.connect.runtime.distributed,medium-high,medium-high,medium-high,low,,,,,,507,2865,,,,,,,,,,,,,30,28,2,2865,16,12,0.1,0.429,0.471,507,,,,,,,
org.apache.kafka.connect.runtime.distributed.ClusterConfigState,ClusterConfigState,low-medium,low,low-medium,medium-high,4,84,18,1,0,31,132,114,8,2,18,0,0,0.769,0.772,0.542,0,0,,,,,132,,,,,,31,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public ClusterConfigState( long, SessionKey, Map, Map, Map, Map, Set ): void","ClusterConfigState( long, SessionKey, Map, Map, Map, Map, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,7,0,0
"<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public ClusterConfigState( long, SessionKey, Map, Map, Map, Map, Set, WorkerConfigTransformer ): void","ClusterConfigState( long, SessionKey, Map, Map, Map, Map, Set, WorkerConfigTransformer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,0,8
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public allTaskConfigs( String ): List,allTaskConfigs( String ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,1,10,3
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public connectorConfig( String ): Map,connectorConfig( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,3
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public connectors( ): Set,connectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public contains( String ): boolean,contains( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,13,1,9,16
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,1,8
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public inconsistentConnectors( ): Set,inconsistentConnectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public rawConnectorConfig( String ): Map,rawConnectorConfig( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public rawTaskConfig( ConnectorTaskId ): Map,rawTaskConfig( ConnectorTaskId ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public sessionKey( ): SessionKey,sessionKey( ): SessionKey,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public targetState( String ): TargetState,targetState( String ): TargetState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public taskConfig( ConnectorTaskId ): Map,taskConfig( ConnectorTaskId ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,3
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public taskCount( String ): int,taskCount( String ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public tasks( String ): List,tasks( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,5,2
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,0,0,6
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->configTransformer,final configTransformer : WorkerConfigTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->connectorConfigs,final connectorConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->connectorTargetStates,final connectorTargetStates : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->connectorTaskCounts,final connectorTaskCounts : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->inconsistentConnectors,final inconsistentConnectors : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->sessionKey,final sessionKey : SessionKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->taskConfigs,final taskConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->EMPTY,static final EMPTY : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->NO_OFFSET,static final NO_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectAssignor,ConnectAssignor,low,low,low,low,1,1,0,1,2,1,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.ConnectAssignor.public abstract performAssignment( String, String, List, WorkerCoordinator ): Map","performAssignment( String, String, List, WorkerCoordinator ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.connect.runtime.distributed.ConnectProtocol,ConnectProtocol,low,low,low-medium,low,4,50,26,1,0,10,169,60,0,16,0,5,0,0.766,0.6,0,0,0,,,,,169,,,,,,10,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.Assignment,Assignment,low,low,low,low,1,16,6,1,1,14,59,50,6,2,10,0,0,0.806,0.72,0.556,0,0,,,,,59,,,,,,14,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState,WorkerState,low,low,low,low,0,4,0,1,1,4,16,13,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,16,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.public static deserializeAssignment( ByteBuffer ): Assignment,static deserializeAssignment( ByteBuffer ): Assignment,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,21,1,13,11
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.public static deserializeMetadata( ByteBuffer ): WorkerState,static deserializeMetadata( ByteBuffer ): WorkerState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,6,5
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.public static serializeAssignment( Assignment ): ByteBuffer,static serializeAssignment( Assignment ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,1,24,13
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.public static serializeMetadata( WorkerState ): ByteBuffer,static serializeMetadata( WorkerState ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,10,7
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->ASSIGNMENT_KEY_NAME,static final ASSIGNMENT_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->ASSIGNMENT_V0,static final ASSIGNMENT_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONFIG_OFFSET_KEY_NAME,static final CONFIG_OFFSET_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONFIG_STATE_V0,static final CONFIG_STATE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_ASSIGNMENT_V0,static final CONNECTOR_ASSIGNMENT_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_KEY_NAME,static final CONNECTOR_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_TASK,static final CONNECTOR_TASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_HEADER_SCHEMA,static final CONNECT_PROTOCOL_HEADER_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_HEADER_V0,static final CONNECT_PROTOCOL_HEADER_V0 : Struct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_V0,static final CONNECT_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->ERROR_KEY_NAME,static final ERROR_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->LEADER_KEY_NAME,static final LEADER_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->LEADER_URL_KEY_NAME,static final LEADER_URL_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->TASKS_KEY_NAME,static final TASKS_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->URL_KEY_NAME,static final URL_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->VERSION_KEY_NAME,static final VERSION_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility,ConnectProtocolCompatibility,low-medium,low,low-medium,low,2,12,6,2,0,9,52,27,0,3,3,3,0,0,0.5,1,0,0,,,,,52,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public abstract protocol( ): String,abstract protocol( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public abstract protocolVersion( ): short,abstract protocolVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public static compatibility( String ): ConnectProtocolCompatibility,static compatibility( String ): ConnectProtocolCompatibility,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,0
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public static fromProtocol( String ): ConnectProtocolCompatibility,static fromProtocol( String ): ConnectProtocolCompatibility,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,0
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public static fromProtocolVersion( short ): ConnectProtocolCompatibility,static fromProtocolVersion( short ): ConnectProtocolCompatibility,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,0,3
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility->COMPATIBLE,static final COMPATIBLE : ConnectProtocolCompatibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility->EAGER,static final EAGER : ConnectProtocolCompatibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocolCompatibility->SESSIONED,static final SESSIONED : ConnectProtocolCompatibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedConfig,DistributedConfig,low-medium,low,medium-high,low,3,56,17,3,0,13,305,48,0,51,4,4,1,1.216,0.562,0.833,0,0.75,,,,,305,,,,,,13,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.public DistributedConfig( Map ): void,DistributedConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.public getInternalRequestKeyGenerator( ): KeyGenerator,getInternalRequestKeyGenerator( ): KeyGenerator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,9,4
<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.public getRebalanceTimeout( ): Integer,getRebalanceTimeout( ): Integer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.private static validateKeyAlgorithm( String, String ): void","static validateKeyAlgorithm( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.private static validateSignatureAlgorithm( String, String ): void","static validateSignatureAlgorithm( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.private static validateSignatureAlgorithms( String, List ): void","static validateSignatureAlgorithms( String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedConfig.private validateKeyAlgorithmAndVerificationAlgorithms( ): void,validateKeyAlgorithmAndVerificationAlgorithms( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,4,4
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONFIG_STORAGE_REPLICATION_FACTOR_CONFIG,static final CONFIG_STORAGE_REPLICATION_FACTOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONFIG_STORAGE_REPLICATION_FACTOR_CONFIG_DOC,static final CONFIG_STORAGE_REPLICATION_FACTOR_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONFIG_TOPIC_CONFIG,static final CONFIG_TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONFIG_TOPIC_CONFIG_DOC,static final CONFIG_TOPIC_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONNECT_PROTOCOL_CONFIG,static final CONNECT_PROTOCOL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONNECT_PROTOCOL_DEFAULT,static final CONNECT_PROTOCOL_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->CONNECT_PROTOCOL_DOC,static final CONNECT_PROTOCOL_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->GROUP_ID_CONFIG,static final GROUP_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->GROUP_ID_DOC,static final GROUP_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->HEARTBEAT_INTERVAL_MS_CONFIG,static final HEARTBEAT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->HEARTBEAT_INTERVAL_MS_DOC,static final HEARTBEAT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_GENERATION_ALGORITHM_CONFIG,static final INTER_WORKER_KEY_GENERATION_ALGORITHM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_GENERATION_ALGORITHM_DEFAULT,static final INTER_WORKER_KEY_GENERATION_ALGORITHM_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_GENERATION_ALGORITHM_DOC,static final INTER_WORKER_KEY_GENERATION_ALGORITHM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_SIZE_CONFIG,static final INTER_WORKER_KEY_SIZE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_SIZE_DEFAULT,static final INTER_WORKER_KEY_SIZE_DEFAULT : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_SIZE_DOC,static final INTER_WORKER_KEY_SIZE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_TTL_MS_CONFIG,static final INTER_WORKER_KEY_TTL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_TTL_MS_MS_DEFAULT,static final INTER_WORKER_KEY_TTL_MS_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_KEY_TTL_MS_MS_DOC,static final INTER_WORKER_KEY_TTL_MS_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_SIGNATURE_ALGORITHM_CONFIG,static final INTER_WORKER_SIGNATURE_ALGORITHM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_SIGNATURE_ALGORITHM_DEFAULT,static final INTER_WORKER_SIGNATURE_ALGORITHM_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_SIGNATURE_ALGORITHM_DOC,static final INTER_WORKER_SIGNATURE_ALGORITHM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_VERIFICATION_ALGORITHMS_CONFIG,static final INTER_WORKER_VERIFICATION_ALGORITHMS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_VERIFICATION_ALGORITHMS_DEFAULT,static final INTER_WORKER_VERIFICATION_ALGORITHMS_DEFAULT : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->INTER_WORKER_VERIFICATION_ALGORITHMS_DOC,static final INTER_WORKER_VERIFICATION_ALGORITHMS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_PARTITIONS_CONFIG,static final OFFSET_STORAGE_PARTITIONS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_PARTITIONS_CONFIG_DOC,static final OFFSET_STORAGE_PARTITIONS_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_REPLICATION_FACTOR_CONFIG,static final OFFSET_STORAGE_REPLICATION_FACTOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_REPLICATION_FACTOR_CONFIG_DOC,static final OFFSET_STORAGE_REPLICATION_FACTOR_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_TOPIC_CONFIG,static final OFFSET_STORAGE_TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->OFFSET_STORAGE_TOPIC_CONFIG_DOC,static final OFFSET_STORAGE_TOPIC_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->REBALANCE_TIMEOUT_MS_CONFIG,static final REBALANCE_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->REBALANCE_TIMEOUT_MS_DOC,static final REBALANCE_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->SCHEDULED_REBALANCE_MAX_DELAY_MS_CONFIG,static final SCHEDULED_REBALANCE_MAX_DELAY_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->SCHEDULED_REBALANCE_MAX_DELAY_MS_DEFAULT,static final SCHEDULED_REBALANCE_MAX_DELAY_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->SCHEDULED_REBALANCE_MAX_DELAY_MS_DOC,static final SCHEDULED_REBALANCE_MAX_DELAY_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->SESSION_TIMEOUT_MS_CONFIG,static final SESSION_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->SESSION_TIMEOUT_MS_DOC,static final SESSION_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_PARTITIONS_CONFIG,static final STATUS_STORAGE_PARTITIONS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_PARTITIONS_CONFIG_DOC,static final STATUS_STORAGE_PARTITIONS_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_REPLICATION_FACTOR_CONFIG,static final STATUS_STORAGE_REPLICATION_FACTOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_REPLICATION_FACTOR_CONFIG_DOC,static final STATUS_STORAGE_REPLICATION_FACTOR_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_TOPIC_CONFIG,static final STATUS_STORAGE_TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->STATUS_STORAGE_TOPIC_CONFIG_DOC,static final STATUS_STORAGE_TOPIC_CONFIG_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_SYNC_TIMEOUT_MS_CONFIG,static final WORKER_SYNC_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_SYNC_TIMEOUT_MS_DOC,static final WORKER_SYNC_TIMEOUT_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_CONFIG,static final WORKER_UNSYNC_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_DEFAULT,static final WORKER_UNSYNC_BACKOFF_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_DOC,static final WORKER_UNSYNC_BACKOFF_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder,DistributedHerder,very-high,very-high,high,very-high,39,767,166,2,0,160,1015,794,34,5,50,3,0,0.934,0.903,0.634,0,0,,,,,1015,,,,,,160,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,4,24,9,1,0,9,37,36,0,0,5,0,0,0,0.5,0,0,0,,,,,37,,,,,,9,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.DistributedHerderRequest,DistributedHerderRequest,low,low,low,low,1,10,4,1,0,10,31,26,4,0,7,0,0,0.625,0.714,0.762,0,0,,,,,31,,,,,,10,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.HerderMetrics,HerderMetrics,low,low,low,low,7,91,10,1,0,5,53,46,6,0,5,0,0,0.75,0.467,0,0,0,,,,,53,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$12915;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$12915;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32579;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32579;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$33229;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$33229;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$34336;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$34336;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$34841;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$34841;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$37216;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$37216;,low,low,low,low,0,0,0,1,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39329;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39329;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39625;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39625;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40379;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40379;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43257;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$43257;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44410;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$44410;,low,low,low,low,0,0,0,1,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$45976;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$45976;,low,low,low,low,0,0,0,1,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$56516;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$56516;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$57126;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$57126;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$58608;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$58608;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$59271;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$59271;,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$59789;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$59789;,low,low,low,low,0,0,0,1,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$60860;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$60860;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$61211;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$61211;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$64709;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$64709;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$72858;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$72858;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.RebalanceListener,RebalanceListener,low,low,low,low,10,45,18,1,0,10,60,58,1,0,3,0,0,0,0.556,1,0,0,,,,,60,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder. DistributedHerder( DistributedConfig, Worker, String, String, StatusBackingStore, ConfigBackingStore, WorkerGroupMember, String, ConnectMetrics, Time, ConnectorClientConfigOverridePolicy ): void"," DistributedHerder( DistributedConfig, Worker, String, String, StatusBackingStore, ConfigBackingStore, WorkerGroupMember, String, ConnectMetrics, Time, ConnectorClientConfigOverridePolicy ): void",low,very-high,medium-high,low,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,61,11,21,31
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder. addRequest( Callable, Callback ): DistributedHerderRequest"," addRequest( Callable, Callback ): DistributedHerderRequest",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder. addRequest( long, Callable, Callback ): DistributedHerderRequest"," addRequest( long, Callable, Callback ): DistributedHerderRequest",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,5,4
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder. isPossibleExpiredKeyException( long, Throwable ): boolean"," isPossibleExpiredKeyException( long, Throwable ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public DistributedHerder( DistributedConfig, Time, Worker, String, StatusBackingStore, ConfigBackingStore, String, ConnectorClientConfigOverridePolicy ): void","DistributedHerder( DistributedConfig, Time, Worker, String, StatusBackingStore, ConfigBackingStore, String, ConnectorClientConfigOverridePolicy ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,8,3,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private backoff( long ): void,backoff( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private checkRebalanceNeeded( Callback ): boolean,checkRebalanceNeeded( Callback ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.protected config( String ): Map,config( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public connectorConfig( String, Callback ): void","connectorConfig( String, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,2,2,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public connectorInfo( String, Callback ): void","connectorInfo( String, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,17,2,3,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public connectors( Callback ): void,connectors( Callback ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,14,1,3,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public deleteConnectorConfig( String, Callback ): void","deleteConnectorConfig( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,20,2,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private getConnectorStartingCallable( String ): Callable,getConnectorStartingCallable( String ): Callable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private getConnectorStoppingCallable( String ): Callable,getConnectorStoppingCallable( String ): Callable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,10,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private getTaskStartingCallable( ConnectorTaskId ): Callable,getTaskStartingCallable( ConnectorTaskId ): Callable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private getTaskStoppingCallable( ConnectorTaskId ): Callable,getTaskStoppingCallable( ConnectorTaskId ): Callable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public halt( ): void,halt( ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,14,6
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private handleRebalanceCompleted( ): boolean,handleRebalanceCompleted( ): boolean,low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,46,0,33,33
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.protected herderMetrics( ): HerderMetrics,herderMetrics( ): HerderMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private internalRequestValidationEnabled( ): boolean,internalRequestValidationEnabled( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,3
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private leaderUrl( ): String,leaderUrl( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,2
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private peekWithoutException( ): DistributedHerderRequest,peekWithoutException( ): DistributedHerderRequest,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,2,2
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private processConnectorConfigUpdates( Set ): void,processConnectorConfigUpdates( Set ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,11,1,7,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private processTargetStateChanges( Set ): void,processTargetStateChanges( Set ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,7,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private processTaskConfigUpdatesWithIncrementalCooperative( Set ): void,processTaskConfigUpdatesWithIncrementalCooperative( Set ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,12,1,13,5
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public putConnectorConfig( String, Map, boolean, Callback ): void","putConnectorConfig( String, Map, boolean, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,27,4,3,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public putTaskConfigs( String, List, Callback, InternalRequestSignature ): void","putTaskConfigs( String, List, Callback, InternalRequestSignature ): void",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,41,4,10,4
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private readConfigToEnd( long ): boolean,readConfigToEnd( long ): boolean,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,10,11
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private reconfigureConnector( String, Callback ): void","reconfigureConnector( String, Callback ): void",low,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,7,51,2,20,12
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private reconfigureConnectorTasksWithRetry( long, String ): void","reconfigureConnectorTasksWithRetry( long, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,22,2,1,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public requestTaskReconfiguration( String ): void,requestTaskReconfiguration( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,17,1,2,1
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public restartConnector( String, Callback ): void","restartConnector( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public restartConnector( long, String, Callback ): HerderRequest","restartConnector( long, String, Callback ): HerderRequest",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,25,3,2,0
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public restartTask( ConnectorTaskId, Callback ): void","restartTask( ConnectorTaskId, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,28,2,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public run( ): void,run( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,10,6
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startAndStop( Collection ): void,startAndStop( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startConnector( String ): boolean,startConnector( String ): boolean,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,1,6,5
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startTask( ConnectorTaskId ): boolean,startTask( ConnectorTaskId ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,7,6
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startWork( ): void,startWork( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,19,13
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private static assignmentDifference( Collection, Collection ): Collection","static assignmentDifference( Collection, Collection ): Collection",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private static final forwardErrorCallback( Callback ): Callback,static final forwardErrorCallback( Callback ): Callback,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private static internalRequestValidationEnabled( short ): boolean,static internalRequestValidationEnabled( short ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,17,0,13,16
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private synchronized checkForKeyRotation( long ): boolean,synchronized checkForKeyRotation( long ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,18,1,14,13
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private synchronized updateConfigsWithEager( AtomicReference, AtomicReference ): boolean","synchronized updateConfigsWithEager( AtomicReference, AtomicReference ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,22,2,11,18
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private synchronized updateConfigsWithIncrementalCooperative( AtomicReference, AtomicReference, AtomicReference ): boolean","synchronized updateConfigsWithIncrementalCooperative( AtomicReference, AtomicReference, AtomicReference ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,25,3,12,20
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public taskConfigs( String, Callback ): void","taskConfigs( String, Callback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,21,2,3,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public tick( ): void,tick( ): void,high,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22,3,67,0,42,19
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private updateDeletedConnectorStatus( ): void,updateDeletedConnectorStatus( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,6,3
"<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.protected validateBasicConnectorConfig( Connector, ConfigDef, Map ): Map","validateBasicConnectorConfig( Connector, ConfigDef, Map ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,3,6,2
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->assignment,assignment : ExtendedAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->canReadConfigs,canReadConfigs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->configState,configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->connectorConfigUpdates,connectorConfigUpdates : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->connectorTargetStateChanges,connectorTargetStateChanges : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->currentProtocolVersion,currentProtocolVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->config,final config : DistributedConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->forwardRequestExecutor,final forwardRequestExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->herderExecutor,final herderExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->herderMetrics,final herderMetrics : HerderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->keyGenerator,final keyGenerator : KeyGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->keyRotationIntervalMs,final keyRotationIntervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->keySignatureVerificationAlgorithms,final keySignatureVerificationAlgorithms : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->member,final member : WorkerGroupMember,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->requestSeqNum,final requestSeqNum : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->requestSignatureAlgorithm,final requestSignatureAlgorithm : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->requests,final requests : NavigableSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->startAndStopExecutor,final startAndStopExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->stopping,final stopping : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerGroupId,final workerGroupId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerSyncTimeoutMs,final workerSyncTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerTasksShutdownTimeoutMs,final workerTasksShutdownTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerUnsyncBackoffMs,final workerUnsyncBackoffMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->needsReconfigRebalance,needsReconfigRebalance : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->rebalanceResolved,rebalanceResolved : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->runningAssignment,runningAssignment : ExtendedAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->sessionKey,sessionKey : SecretKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->CONNECT_CLIENT_ID_SEQUENCE,static final CONNECT_CLIENT_ID_SEQUENCE : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->FORWARD_REQUEST_SHUTDOWN_TIMEOUT_MS,static final FORWARD_REQUEST_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS,static final RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->START_AND_STOP_SHUTDOWN_TIMEOUT_MS,static final START_AND_STOP_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->START_STOP_THREAD_POOL_SIZE,static final START_STOP_THREAD_POOL_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->taskConfigUpdates,taskConfigUpdates : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->tasksToRestart,tasksToRestart : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->generation,volatile generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->keyExpiration,volatile keyExpiration : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->scheduledRebalance,volatile scheduledRebalance : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.EagerAssignor,EagerAssignor,low-medium,medium-high,low-medium,low-medium,11,85,32,1,0,21,93,91,1,0,6,1,0,0,0.603,0,0,0,,,,,93,,,,,,21,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.public EagerAssignor( LogContext ): void,EagerAssignor( LogContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.private ensureLeaderConfig( long, WorkerCoordinator ): Long","ensureLeaderConfig( long, WorkerCoordinator ): Long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,2,7,1
"<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.private fillAssignmentsAndSerialize( Collection, short, String, String, long, Map, Map ): Map","fillAssignmentsAndSerialize( Collection, short, String, String, long, Map, Map ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,20,7,8,2
"<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.private findMaxMemberConfigOffset( Map, WorkerCoordinator ): long","findMaxMemberConfigOffset( Map, WorkerCoordinator ): long",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,7,1
"<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.public performAssignment( String, String, List, WorkerCoordinator ): Map","performAssignment( String, String, List, WorkerCoordinator ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,15,4,11,1
"<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.private performTaskAssignment( String, long, Map, WorkerCoordinator ): Map","performTaskAssignment( String, long, Map, WorkerCoordinator ): Map",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,27,4,23,2
<Method>org.apache.kafka.connect.runtime.distributed.EagerAssignor.private static sorted( Collection ): List,static sorted( Collection ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Field>org.apache.kafka.connect.runtime.distributed.EagerAssignor->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ExtendedAssignment,ExtendedAssignment,low-medium,low,low-medium,medium-high,4,51,33,2,0,27,127,119,4,1,8,5,0,0.75,0.76,0.694,0,0,,,,,127,,,,,,27,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public ExtendedAssignment( short, short, String, String, long, Collection, Collection, Collection, Collection, int ): void","ExtendedAssignment( short, short, String, String, long, Collection, Collection, Collection, Collection, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,10,2,4
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public delay( ): int,delay( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.private revokedAsMap( ): Map,revokedAsMap( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,22,0,8,4
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public revokedConnectors( ): Collection,revokedConnectors( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public revokedTasks( ): Collection,revokedTasks( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public static empty( ): ExtendedAssignment,static empty( ): ExtendedAssignment,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.private static extractConnectors( Struct, String ): Collection","static extractConnectors( Struct, String ): Collection",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,2,7,0
"<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.private static extractTasks( Struct, String ): Collection","static extractTasks( Struct, String ): Collection",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,2,7,0
"<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public static fromStruct( short, Struct ): ExtendedAssignment","static fromStruct( short, Struct ): ExtendedAssignment",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,14,2,9,0
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.private static taskAssignments( Map ): Collection,static taskAssignments( Map ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,5,0
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,0,6,3
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public toStruct( ): Struct,toStruct( ): Struct,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,0,17,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment.public version( ): short,version( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment->delay,final delay : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment->revokedConnectorIds,final revokedConnectorIds : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment->revokedTaskIds,final revokedTaskIds : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment->version,final version : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedAssignment->EMPTY,static final EMPTY : ExtendedAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ExtendedWorkerState,ExtendedWorkerState,low-medium,low,low,low,1,6,3,2,0,4,14,12,1,0,3,0,0,0,0.5,0,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.ExtendedWorkerState.public ExtendedWorkerState( String, long, ExtendedAssignment ): void","ExtendedWorkerState( String, long, ExtendedAssignment ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,3,1,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedWorkerState.public assignment( ): ExtendedAssignment,assignment( ): ExtendedAssignment,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.ExtendedWorkerState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,2,1
<Field>org.apache.kafka.connect.runtime.distributed.ExtendedWorkerState->assignment,final assignment : ExtendedAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor,IncrementalCooperativeAssignor,medium-high,medium-high,medium-high,medium-high,14,135,105,1,0,58,383,373,9,0,17,3,0,0.786,0.75,0,0,0,,,,,383,,,,,,58,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.public IncrementalCooperativeAssignor( LogContext, Time, int ): void","IncrementalCooperativeAssignor( LogContext, Time, int ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,2,9
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.protected assignConnectors( List, Collection ): void","assignConnectors( List, Collection ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,2,18,1
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.protected assignTasks( List, Collection ): void","assignTasks( List, Collection ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,2,18,1
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private assignment( Map ): ConnectorsAndTasks,assignment( Map ): ConnectorsAndTasks,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,13,1
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private calculateDelay( long ): int,calculateDelay( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,2
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private candidateWorkersForReassignment( List ): Set,candidateWorkersForReassignment( List ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,0
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private computeDeleted( ConnectorsAndTasks, Map, Map ): Map","computeDeleted( ConnectorsAndTasks, Map, Map ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,3,7,1
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private computePreviousAssignment( Map, Map, Map, ConnectorsAndTasks ): ConnectorsAndTasks","computePreviousAssignment( Map, Map, Map, ConnectorsAndTasks ): ConnectorsAndTasks",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,4,31,2
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private ensureLeaderConfig( long, WorkerCoordinator ): Long","ensureLeaderConfig( long, WorkerCoordinator ): Long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,2,7,1
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private fillAssignments( Collection, short, String, String, long, Map, Map, Map, int, short ): Map","fillAssignments( Collection, short, String, String, long, Map, Map, Map, int, short ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,10,11,2
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.protected handleLostAssignments( ConnectorsAndTasks, ConnectorsAndTasks, List ): void","handleLostAssignments( ConnectorsAndTasks, ConnectorsAndTasks, List ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,35,3,29,21
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.public performAssignment( String, String, List, WorkerCoordinator ): Map","performAssignment( String, String, List, WorkerCoordinator ): Map",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,26,4,26,3
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.protected performTaskAssignment( String, long, Map, WorkerCoordinator, short ): Map","performTaskAssignment( String, long, Map, WorkerCoordinator, short ): Map",low,medium-high,medium-high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,87,5,84,41
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private performTaskRevocation( ConnectorsAndTasks, Collection ): Map","performTaskRevocation( ConnectorsAndTasks, Collection ): Map",low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,50,2,34,7
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private pickCandidateWorkerForReassignment( List ): Optional,pickCandidateWorkerForReassignment( List ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,8,1
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private resetDelay( ): void,resetDelay( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,6
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.protected serializeAssignments( Map ): Map,serializeAssignments( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,0
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private static diff( ConnectorsAndTasks, ConnectorsAndTasks ): ConnectorsAndTasks","static diff( ConnectorsAndTasks, ConnectorsAndTasks ): ConnectorsAndTasks",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,8,0
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private static diff( Map, Map ): Map","static diff( Map, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,7,0
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor.private static workerAssignment( Map, ConnectorsAndTasks ): List","static workerAssignment( Map, ConnectorsAndTasks ): List",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,2,9,0
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->canRevoke,canRevoke : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->delay,delay : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->candidateWorkersForReassignment,final candidateWorkersForReassignment : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->maxDelay,final maxDelay : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->previousAssignment,previousAssignment : ConnectorsAndTasks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->previousRevocation,previousRevocation : ConnectorsAndTasks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeAssignor->scheduledRebalance,scheduledRebalance : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol,IncrementalCooperativeConnectProtocol,low-medium,low-medium,low-medium,low-medium,6,71,22,1,0,10,87,46,0,12,0,5,0,1.028,0.633,0.5,0,0,,,,,87,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol.public static deserializeAssignment( ByteBuffer ): ExtendedAssignment,static deserializeAssignment( ByteBuffer ): ExtendedAssignment,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,1
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol.public static deserializeMetadata( ByteBuffer ): ExtendedWorkerState,static deserializeMetadata( ByteBuffer ): ExtendedWorkerState,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,9,3
<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol.public static serializeAssignment( ExtendedAssignment ): ByteBuffer,static serializeAssignment( ExtendedAssignment ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,9,4
"<Method>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol.public static serializeMetadata( ExtendedWorkerState, boolean ): ByteBuffer","static serializeMetadata( ExtendedWorkerState, boolean ): ByteBuffer",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,2,15,9
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->ALLOCATION_KEY_NAME,static final ALLOCATION_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->ALLOCATION_V1,static final ALLOCATION_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->ASSIGNMENT_V1,static final ASSIGNMENT_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONFIG_STATE_V1,static final CONFIG_STATE_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONNECTOR_ASSIGNMENT_V1,static final CONNECTOR_ASSIGNMENT_V1 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONNECT_PROTOCOL_HEADER_V1,static final CONNECT_PROTOCOL_HEADER_V1 : Struct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONNECT_PROTOCOL_HEADER_V2,static final CONNECT_PROTOCOL_HEADER_V2 : Struct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONNECT_PROTOCOL_V1,static final CONNECT_PROTOCOL_V1 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->CONNECT_PROTOCOL_V2,static final CONNECT_PROTOCOL_V2 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->REVOKED_KEY_NAME,static final REVOKED_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->SCHEDULED_DELAY_KEY_NAME,static final SCHEDULED_DELAY_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.IncrementalCooperativeConnectProtocol->TOLERATE_MISSING_FIELDS_WITH_DEFAULTS,static final TOLERATE_MISSING_FIELDS_WITH_DEFAULTS : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotAssignedException,NotAssignedException,medium-high,low,low,low,0,1,0,7,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.NotAssignedException.public NotAssignedException( String, String ): void","NotAssignedException( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.connect.runtime.distributed.NotLeaderException,NotLeaderException,medium-high,low,low,low,0,1,0,7,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.NotLeaderException.public NotLeaderException( String, String ): void","NotLeaderException( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.connect.runtime.distributed.RebalanceNeededException,RebalanceNeededException,medium-high,low,low,low,0,1,0,6,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.RebalanceNeededException.public RebalanceNeededException( String ): void,RebalanceNeededException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.runtime.distributed.RequestTargetException,RequestTargetException,medium-high,low,low,low,0,4,0,6,2,4,13,11,1,0,4,0,0,0,0.25,0,0,0,,,,,13,,,,,,4,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.RequestTargetException.public RequestTargetException( String, String ): void","RequestTargetException( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.connect.runtime.distributed.RequestTargetException.public RequestTargetException( String, Throwable, String ): void","RequestTargetException( String, Throwable, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
"<Method>org.apache.kafka.connect.runtime.distributed.RequestTargetException.public RequestTargetException( Throwable, String ): void","RequestTargetException( Throwable, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
<Method>org.apache.kafka.connect.runtime.distributed.RequestTargetException.public forwardUrl( ): String,forwardUrl( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.RequestTargetException->forwardUrl,final forwardUrl : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator,WorkerCoordinator,very-high,medium-high,medium-high,high,19,237,47,2,0,42,343,147,13,1,20,1,2,0.879,0.887,0.945,0,0.2,,,,,343,,,,,,42,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.ConnectorsAndTasks,ConnectorsAndTasks,low,low,low,low,0,8,2,1,0,6,37,14,2,1,6,0,0,0.533,0.417,0.1,0,0,,,,,37,,,,,,6,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.LeaderState,LeaderState,low,low,low,low,2,10,3,1,0,5,20,16,3,0,3,0,0,0.333,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.WorkerCoordinatorMetrics,WorkerCoordinatorMetrics,low,low,low,low,2,17,2,1,0,1,26,24,1,0,1,0,0,0,0,0,0,0,,,,,26,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.WorkerLoad,WorkerLoad,low,low,low,low,1,21,6,1,0,23,84,56,3,0,13,2,0,0.444,0.733,0.462,0,0,,,,,84,,,,,,23,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public WorkerCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, Metrics, String, Time, String, ConfigBackingStore, WorkerRebalanceListener, ConnectProtocolCompatibility, int ): void","WorkerCoordinator( GroupRebalanceConfig, LogContext, ConsumerNetworkClient, Metrics, String, Time, String, ConfigBackingStore, WorkerRebalanceListener, ConnectProtocolCompatibility, int ): void",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,29,11,1,11
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public configFreshSnapshot( ): ClusterConfigState,configFreshSnapshot( ): ClusterConfigState,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public configSnapshot( ): ClusterConfigState,configSnapshot( ): ClusterConfigState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public configSnapshot( ClusterConfigState ): void,configSnapshot( ClusterConfigState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public currentProtocolVersion( ): short,currentProtocolVersion( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public generationId( ): int,generationId( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.private leaderState( ): LeaderState,leaderState( ): LeaderState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public leaderState( LeaderState ): void,leaderState( LeaderState ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public memberId( ): String,memberId( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,1,0
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected onJoinComplete( int, String, String, ByteBuffer ): void","onJoinComplete( int, String, String, ByteBuffer ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,4,26,10
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected onJoinPrepare( int, String ): void","onJoinPrepare( int, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,2,9,6
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public ownerUrl( ConnectorTaskId ): String,ownerUrl( ConnectorTaskId ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,4,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public ownerUrl( String ): String,ownerUrl( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,4,0
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected performAssignment( String, String, List ): Map","performAssignment( String, String, List ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,3,2
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public poll( long ): void,poll( long ): void,low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,31,1,24,17
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public protocolType( ): String,protocolType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected rejoinNeededOrPending( ): boolean,rejoinNeededOrPending( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public static invertAssignment( Map ): Map,static invertAssignment( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,4,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.protected synchronized ensureCoordinatorReady( Timer ): boolean,synchronized ensureCoordinatorReady( Timer ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->configSnapshot,configSnapshot : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->configStorage,final configStorage : ConfigBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->coordinatorDiscoveryTimeoutMs,final coordinatorDiscoveryTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->eagerAssignor,final eagerAssignor : ConnectAssignor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->incrementalAssignor,final incrementalAssignor : ConnectAssignor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->listener,final listener : WorkerRebalanceListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->protocolCompatibility,final protocolCompatibility : ConnectProtocolCompatibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->restUrl,final restUrl : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->leaderState,leaderState : LeaderState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->rejoinRequested,rejoinRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->DEFAULT_SUBPROTOCOL,static final DEFAULT_SUBPROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->assignmentSnapshot,volatile assignmentSnapshot : ExtendedAssignment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->currentConnectProtocol,volatile currentConnectProtocol : ConnectProtocolCompatibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerGroupMember,WorkerGroupMember,very-high,high,low-medium,high,27,353,33,1,0,17,116,105,9,1,12,0,0,0.855,0.808,0.327,0,0,,,,,116,,,,,,17,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public WorkerGroupMember( DistributedConfig, String, ConfigBackingStore, WorkerRebalanceListener, Time, String, LogContext ): void","WorkerGroupMember( DistributedConfig, String, ConfigBackingStore, WorkerRebalanceListener, Time, String, LogContext ): void",low,very-high,medium-high,low,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,70,7,33,21
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public currentProtocolVersion( ): short,currentProtocolVersion( ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ensureActive( ): void,ensureActive( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public maybeLeaveGroup( String ): void,maybeLeaveGroup( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public memberId( ): String,memberId( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ownerUrl( ConnectorTaskId ): String,ownerUrl( ConnectorTaskId ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ownerUrl( String ): String,ownerUrl( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public poll( long ): void,poll( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.private stop( boolean ): void,stop( boolean ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,1,8,9
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public wakeup( ): void,wakeup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->client,final client : ConsumerNetworkClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->coordinator,final coordinator : WorkerCoordinator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->metadata,final metadata : Metadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->JMX_PREFIX,static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->stopped,stopped : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener,WorkerRebalanceListener,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0.4,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener.public abstract onAssigned( ExtendedAssignment, int ): void","onAssigned( ExtendedAssignment, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener.public abstract onRevoked( String, Collection, Collection ): void","onRevoked( String, Collection, Collection ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Package>org.apache.kafka.connect.runtime.errors,org.apache.kafka.connect.runtime.errors,low,low,low-medium,low,,,,,,96,390,,,,,,,,,,,,,9,7,2,390,6,5,0.222,0.455,0.323,96,,,,,,,
org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter,DeadLetterQueueReporter,very-high,medium-high,low-medium,medium-high,17,390,49,1,0,22,103,85,4,13,7,1,0,0.941,0.76,1,0,0,,,,,103,,,,,,22,,,,,,,
"<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter. DeadLetterQueueReporter( KafkaProducer, SinkConnectorConfig, ConnectorTaskId, ErrorHandlingMetrics ): void"," DeadLetterQueueReporter( KafkaProducer, SinkConnectorConfig, ConnectorTaskId, ErrorHandlingMetrics ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,4,4
"<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter. populateContextHeaders( ProducerRecord, ProcessingContext ): void"," populateContextHeaders( ProducerRecord, ProcessingContext ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,2,42,12
<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.public report( ProcessingContext ): void,report( ProcessingContext ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,23,1,16,5
<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.private stacktrace( Throwable ): byte,stacktrace( Throwable ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,4,1
"<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.public static createAndSetup( Map, ConnectorTaskId, SinkConnectorConfig, Map, ErrorHandlingMetrics ): DeadLetterQueueReporter","static createAndSetup( Map, ConnectorTaskId, SinkConnectorConfig, Map, ErrorHandlingMetrics ): DeadLetterQueueReporter",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,5,13,2
<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.private toBytes( String ): byte,toBytes( String ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.private toBytes( int ): byte,toBytes( int ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter.private toBytes( long ): byte,toBytes( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->connConfig,final connConfig : SinkConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->connectorTaskId,final connectorTaskId : ConnectorTaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->errorHandlingMetrics,final errorHandlingMetrics : ErrorHandlingMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->kafkaProducer,kafkaProducer : KafkaProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->DLQ_NUM_DESIRED_PARTITIONS,static final DLQ_NUM_DESIRED_PARTITIONS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_CONNECTOR_NAME,static final ERROR_HEADER_CONNECTOR_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_EXCEPTION,static final ERROR_HEADER_EXCEPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_EXCEPTION_MESSAGE,static final ERROR_HEADER_EXCEPTION_MESSAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_EXCEPTION_STACK_TRACE,static final ERROR_HEADER_EXCEPTION_STACK_TRACE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_EXECUTING_CLASS,static final ERROR_HEADER_EXECUTING_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_ORIG_OFFSET,static final ERROR_HEADER_ORIG_OFFSET : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_ORIG_PARTITION,static final ERROR_HEADER_ORIG_PARTITION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_ORIG_TOPIC,static final ERROR_HEADER_ORIG_TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_STAGE,static final ERROR_HEADER_STAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->ERROR_HEADER_TASK_ID,static final ERROR_HEADER_TASK_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->HEADER_PREFIX,static final HEADER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.DeadLetterQueueReporter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics,ErrorHandlingMetrics,medium-high,low-medium,low-medium,low-medium,9,103,16,1,0,11,53,42,10,0,11,0,0,0.911,0.606,0.855,0,0,,,,,53,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public ErrorHandlingMetrics( ): void,ErrorHandlingMetrics( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public ErrorHandlingMetrics( ConnectorTaskId, ConnectMetrics ): void","ErrorHandlingMetrics( ConnectorTaskId, ConnectMetrics ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,20,2,31,38
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public metricGroup( ): MetricGroup,metricGroup( ): MetricGroup,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordDeadLetterQueueProduceFailed( ): void,recordDeadLetterQueueProduceFailed( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordDeadLetterQueueProduceRequest( ): void,recordDeadLetterQueueProduceRequest( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordError( ): void,recordError( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordErrorLogged( ): void,recordErrorLogged( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordErrorTimestamp( ): void,recordErrorTimestamp( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordFailure( ): void,recordFailure( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordRetry( ): void,recordRetry( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics.public recordSkipped( ): void,recordSkipped( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->dlqProduceFailures,final dlqProduceFailures : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->dlqProduceRequests,final dlqProduceRequests : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->errorsLogged,final errorsLogged : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->metricGroup,final metricGroup : MetricGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->recordProcessingErrors,final recordProcessingErrors : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->recordProcessingFailures,final recordProcessingFailures : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->recordsSkipped,final recordsSkipped : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->retries,final retries : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics->lastErrorTime,lastErrorTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.ErrorReporter,ErrorReporter,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.errors.ErrorReporter.public abstract report( ProcessingContext ): void,report( ProcessingContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.runtime.errors.LogReporter,LogReporter,low-medium,low,low,low,5,54,11,1,0,5,23,18,3,1,3,0,0,0.5,0.467,0,0,0,,,,,23,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.errors.LogReporter. message( ProcessingContext ): String, message( ProcessingContext ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
"<Method>org.apache.kafka.connect.runtime.errors.LogReporter.public LogReporter( ConnectorTaskId, ConnectorConfig, ErrorHandlingMetrics ): void","LogReporter( ConnectorTaskId, ConnectorConfig, ErrorHandlingMetrics ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,3,3
<Method>org.apache.kafka.connect.runtime.errors.LogReporter.public report( ProcessingContext ): void,report( ProcessingContext ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,6,3
<Field>org.apache.kafka.connect.runtime.errors.LogReporter->connConfig,final connConfig : ConnectorConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.LogReporter->errorHandlingMetrics,final errorHandlingMetrics : ErrorHandlingMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.LogReporter->id,final id : ConnectorTaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.LogReporter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.Operation<V>,Operation,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.errors.ProcessingContext,ProcessingContext,low-medium,low,low-medium,high,5,34,24,1,0,27,75,67,7,0,19,0,0,0.888,0.83,0.954,0,0,,,,,75,,,,,,27,,,,,,,
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public attempt( ): int,attempt( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public attempt( int ): void,attempt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public consumerRecord( ): ConsumerRecord,consumerRecord( ): ConsumerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public consumerRecord( ConsumerRecord ): void,consumerRecord( ConsumerRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public currentContext( Stage, Class ): void","currentContext( Stage, Class ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public error( ): Throwable,error( ): Throwable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public error( Throwable ): void,error( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public executingClass( ): Class,executingClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public executingClass( Class ): void,executingClass( Class ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public failed( ): boolean,failed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public position( Stage ): void,position( Stage ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public report( ): void,report( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public reporters( Collection ): void,reporters( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.private reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,4
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public sourceRecord( ): SourceRecord,sourceRecord( ): SourceRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public sourceRecord( SourceRecord ): void,sourceRecord( SourceRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public stage( ): Stage,stage( ): Stage,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.runtime.errors.ProcessingContext.public toString( boolean ): String,toString( boolean ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,1,38,0
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->attempt,attempt : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->consumedMessage,consumedMessage : ConsumerRecord,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->error,error : Throwable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->klass,klass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->position,position : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->reporters,reporters : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ProcessingContext->sourceRecord,sourceRecord : SourceRecord,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator,RetryWithToleranceOperator,low-medium,medium-high,low-medium,high,12,68,36,1,0,29,119,103,7,3,14,0,0,0.8,0.821,0.393,0,0,,,,,119,,,,,,29,,,,,,,
"<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator. backoff( int, long ): void"," backoff( int, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,6,7
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator. checkRetry( long ): boolean, checkRetry( long ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator. markAsFailed( ): void, markAsFailed( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator. withinToleranceLimits( ): boolean, withinToleranceLimits( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,0,3
"<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public RetryWithToleranceOperator( long, long, ToleranceType, Time ): void","RetryWithToleranceOperator( long, long, ToleranceType, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public consumerRecord( ConsumerRecord ): void,consumerRecord( ConsumerRecord ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.protected execAndHandleError( Operation, Class ): V","execAndHandleError( Operation, Class ): V",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,2,11,5
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.protected execAndRetry( Operation ): V,execAndRetry( Operation ): V,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,25,1,16,12
"<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public execute( Operation, Stage, Class ): V","execute( Operation, Stage, Class ): V",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,3,9,8
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public failed( ): boolean,failed( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public metrics( ErrorHandlingMetrics ): void,metrics( ErrorHandlingMetrics ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public reporters( List ): void,reporters( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public sourceRecord( SourceRecord ): void,sourceRecord( SourceRecord ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,6
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->context,context : ProcessingContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->errorHandlingMetrics,errorHandlingMetrics : ErrorHandlingMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->errorMaxDelayInMillis,final errorMaxDelayInMillis : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->errorRetryTimeout,final errorRetryTimeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->errorToleranceType,final errorToleranceType : ToleranceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->RETRIES_DELAY_MIN_MS,static final RETRIES_DELAY_MIN_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->TOLERABLE_EXCEPTIONS,static final TOLERABLE_EXCEPTIONS : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator->totalFailures,totalFailures : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.Stage,Stage,low-medium,low,low,low,0,0,0,2,0,0,9,0,0,8,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->HEADER_CONVERTER,static final HEADER_CONVERTER : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->KAFKA_CONSUME,static final KAFKA_CONSUME : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->KAFKA_PRODUCE,static final KAFKA_PRODUCE : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->KEY_CONVERTER,static final KEY_CONVERTER : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->TASK_POLL,static final TASK_POLL : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->TASK_PUT,static final TASK_PUT : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->TRANSFORMATION,static final TRANSFORMATION : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.Stage->VALUE_CONVERTER,static final VALUE_CONVERTER : Stage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.errors.ToleranceType,ToleranceType,low-medium,low,low,low,0,3,2,2,0,1,5,2,0,2,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.errors.ToleranceType.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Field>org.apache.kafka.connect.runtime.errors.ToleranceType->ALL,static final ALL : ToleranceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.errors.ToleranceType->NONE,static final NONE : ToleranceType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.health,org.apache.kafka.connect.runtime.health,low,low,low,low,,,,,,11,65,,,,,,,,,,,,,2,2,0,65,1,2,0,0.667,0.333,11,,,,,,,
org.apache.kafka.connect.runtime.health.ConnectClusterDetailsImpl,ConnectClusterDetailsImpl,low,low,low,low,0,2,0,1,0,2,7,5,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterDetailsImpl.public ConnectClusterDetailsImpl( String ): void,ConnectClusterDetailsImpl( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterDetailsImpl.public kafkaClusterId( ): String,kafkaClusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.health.ConnectClusterDetailsImpl->kafkaClusterId,final kafkaClusterId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl,ConnectClusterStateImpl,low,medium-high,low-medium,low-medium,11,22,15,1,0,9,58,54,3,0,6,0,0,0.5,0.667,0.3,0,0,,,,,58,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.public ConnectClusterStateImpl( long, ConnectClusterDetails, Herder ): void","ConnectClusterStateImpl( long, ConnectClusterDetails, Herder ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,0,3
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.public clusterDetails( ): ConnectClusterDetails,clusterDetails( ): ConnectClusterDetails,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.public connectorConfig( String ): Map,connectorConfig( String ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,3,2
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.public connectorHealth( String ): ConnectorHealth,connectorHealth( String ): ConnectorHealth,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,1,11,1
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.public connectors( ): Collection,connectors( ): Collection,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,2,2
<Method>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl.private taskStates( List ): Map,taskStates( List ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,6,0
<Field>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl->clusterDetails,final clusterDetails : ConnectClusterDetails,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl->herder,final herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.health.ConnectClusterStateImpl->herderRequestTimeoutMs,final herderRequestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.isolation,org.apache.kafka.connect.runtime.isolation,low-medium,low,low-medium,low,,,,,,203,925,,,,,,,,,,,,,10,10,0,925,14,5,0,0.263,0.737,203,,,,,,,
org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader,DelegatingClassLoader,medium-high,medium-high,low-medium,high,12,141,81,4,0,60,284,254,10,6,26,4,0,0.902,0.831,0.901,0,0,,,,,284,,,,,,60,,,,,,,
org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.InternalReflections,InternalReflections,low,low,low,low,3,5,3,2,0,5,11,10,0,0,2,0,0,0,0.333,0,0,0,,,,,11,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$12235;,Lorg.apache.kafka.connect.runtime.isolation.DelegatingClassLoader$12235;,low,low,low,low,0,0,0,1,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public DelegatingClassLoader( List ): void,DelegatingClassLoader( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public DelegatingClassLoader( List, ClassLoader ): void","DelegatingClassLoader( List, ClassLoader ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,0,10
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private addAliases( Collection ): void,addAliases( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,1,12,4
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private addAllAliases( ): void,addAllAliases( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,6,6
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private addPlugins( Collection, ClassLoader ): void","addPlugins( Collection, ClassLoader ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,2,5,3
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public configProviders( ): Set,configProviders( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public connectorClientConfigPolicies( ): Set,connectorClientConfigPolicies( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public connectorLoader( Connector ): ClassLoader,connectorLoader( Connector ): ClassLoader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public connectorLoader( String ): ClassLoader,connectorLoader( String ): ClassLoader,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,5,4
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public connectors( ): Set,connectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public converters( ): Set,converters( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private getPluginDesc( Reflections, Class, ClassLoader ): Collection","getPluginDesc( Reflections, Class, ClassLoader ): Collection",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,3,5,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public getResource( String ): URL,getResource( String ): URL,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public getResources( String ): Enumeration,getResources( String ): Enumeration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,0
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private getServiceLoaderPluginDesc( Class, ClassLoader ): Collection","getServiceLoaderPluginDesc( Class, ClassLoader ): Collection",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,12,2,6,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public headerConverters( ): Set,headerConverters( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.protected initLoaders( ): void,initLoaders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,2
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private initPluginLoader( String ): void,initPluginLoader( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,22,1,16,4
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.protected loadClass( String, boolean ): Class","loadClass( String, boolean ): Class",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,6,3
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private loadJdbcDrivers( ClassLoader ): void,loadJdbcDrivers( ClassLoader ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,25,1,1,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public pluginClassLoader( String ): PluginClassLoader,pluginClassLoader( String ): PluginClassLoader,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,4,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private registerPlugin( Path ): void,registerPlugin( Path ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,1,13,3
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public restExtensions( ): Set,restExtensions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private scanPluginPath( ClassLoader, URL ): PluginScanResult","scanPluginPath( ClassLoader, URL ): PluginScanResult",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,2,11,0
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private scanUrlsAndAddPlugins( ClassLoader, URL, Path ): void","scanUrlsAndAddPlugins( ClassLoader, URL, Path ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,23,3,32,8
"<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private static newPluginClassLoader( URL, URL, ClassLoader ): PluginClassLoader","static newPluginClassLoader( URL, URL, ClassLoader ): PluginClassLoader",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,1,0
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.static serviceLoaderManifestForPlugin( String ): boolean,static serviceLoaderManifestForPlugin( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private static versionFor( Class ): String,static versionFor( Class ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,3,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.private static versionFor( T ): String,static versionFor( T ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,1
<Method>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader.public transformations( ): Set,transformations( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->aliases,final aliases : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->configProviders,final configProviders : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->connectorClientConfigPolicies,final connectorClientConfigPolicies : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->connectors,final connectors : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->converters,final converters : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->headerConverters,final headerConverters : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->pluginLoaders,final pluginLoaders : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->pluginPaths,final pluginPaths : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->restExtensions,final restExtensions : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->transformations,final transformations : SortedSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->CLASSPATH_NAME,static final CLASSPATH_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->MANIFEST_PREFIX,static final MANIFEST_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->PLUGIN_MANIFEST_FILES,static final PLUGIN_MANIFEST_FILES : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->SERVICE_LOADER_PLUGINS,static final SERVICE_LOADER_PLUGINS : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->UNDEFINED_VERSION,static final UNDEFINED_VERSION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginClassLoader,PluginClassLoader,medium-high,low,low,low,2,15,8,4,0,10,32,27,1,1,5,0,0,0.625,0.6,0,0,0,,,,,32,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.isolation.PluginClassLoader.public PluginClassLoader( URL, URL ): void","PluginClassLoader( URL, URL ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.connect.runtime.isolation.PluginClassLoader.public PluginClassLoader( URL, URL, ClassLoader ): void","PluginClassLoader( URL, URL, ClassLoader ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginClassLoader.public location( ): String,location( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.isolation.PluginClassLoader.protected synchronized loadClass( String, boolean ): Class","synchronized loadClass( String, boolean ): Class",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,16,2,7,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginClassLoader.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.isolation.PluginClassLoader->pluginLocation,final pluginLocation : URL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginClassLoader->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginDesc<T>,PluginDesc,low,low,low-medium,medium-high,3,23,8,1,0,16,62,54,7,0,11,0,0,0.7,0.758,0.509,0,0,,,,,62,,,,,,16,,,,,,,
"<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public PluginDesc( Class, String, ClassLoader ): void","PluginDesc( Class, String, ClassLoader ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,3,4,9
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public className( ): String,className( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public compareTo( PluginDesc ): int,compareTo( PluginDesc ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,4
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,2,6
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public location( ): String,location( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public pluginClass( ): Class,pluginClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,0,7
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public type( ): PluginType,type( ): PluginType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public typeName( ): String,typeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->encodedVersion,final encodedVersion : DefaultArtifactVersion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->klass,final klass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->location,final location : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->type,final type : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->typeName,final typeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginDesc<T>->version,final version : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginScanResult,PluginScanResult,low,low,low,low,0,11,2,1,0,10,47,38,8,0,9,0,0,0.875,0.444,0.778,0,0,,,,,47,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public PluginScanResult( Collection, Collection, Collection, Collection, Collection, Collection, Collection ): void","PluginScanResult( Collection, Collection, Collection, Collection, Collection, Collection, Collection ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,7,1,8
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public configProviders( ): Collection,configProviders( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public connectorClientConfigPolicies( ): Collection,connectorClientConfigPolicies( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public connectors( ): Collection,connectors( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public converters( ): Collection,converters( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public headerConverters( ): Collection,headerConverters( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public restExtensions( ): Collection,restExtensions( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginScanResult.public transformations( ): Collection,transformations( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->allPlugins,final allPlugins : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->configProviders,final configProviders : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->connectorClientConfigPolicies,final connectorClientConfigPolicies : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->connectors,final connectors : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->converters,final converters : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->headerConverters,final headerConverters : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->restExtensions,final restExtensions : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginScanResult->transformations,final transformations : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginType,PluginType,low-medium,low,low,low,0,8,4,2,0,6,23,12,1,9,3,1,0,1.3,0.25,0.667,0,0,,,,,23,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.PluginType.private PluginType( Class ): void,PluginType( Class ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginType.public simpleName( ): String,simpleName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginType.public static from( Class ): PluginType,static from( Class ): PluginType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,1,2
<Method>org.apache.kafka.connect.runtime.isolation.PluginType.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->klass,klass : Class,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONFIGPROVIDER,static final CONFIGPROVIDER : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONNECTOR,static final CONNECTOR : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY,static final CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->CONVERTER,static final CONVERTER : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->REST_EXTENSION,static final REST_EXTENSION : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->SINK,static final SINK : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->SOURCE,static final SOURCE : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->TRANSFORMATION,static final TRANSFORMATION : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginType->UNKNOWN,static final UNKNOWN : PluginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginUtils,PluginUtils,low-medium,low,low-medium,low-medium,3,48,43,1,0,32,214,108,0,4,0,10,0,0.875,0.633,0.972,0,0,,,,,214,,,,,,32,,,,,,,
org.apache.kafka.connect.runtime.isolation.PluginUtils.DirectoryEntry,DirectoryEntry,low,low,low,low,0,2,1,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static isAliasUnique( PluginDesc, Collection ): boolean","static isAliasUnique( PluginDesc, Collection ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,12,2,6,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static isArchive( Path ): boolean,static isArchive( Path ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static isClassFile( Path ): boolean,static isClassFile( Path ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static isConcrete( Class ): boolean,static isConcrete( Class ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static pluginLocations( Path ): List,static pluginLocations( Path ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,11,1,2,1
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static pluginUrls( Path ): List,static pluginUrls( Path ): List,low-medium,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,6,59,1,33,4
"<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.private static prunePluginName( PluginDesc, String ): String","static prunePluginName( PluginDesc, String ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static prunedName( PluginDesc ): String,static prunedName( PluginDesc ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,5,0
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static shouldLoadInIsolation( String ): boolean,static shouldLoadInIsolation( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,2
<Method>org.apache.kafka.connect.runtime.isolation.PluginUtils.public static simpleName( PluginDesc ): String,static simpleName( PluginDesc ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Field>org.apache.kafka.connect.runtime.isolation.PluginUtils->BLACKLIST,static final BLACKLIST : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginUtils->PLUGIN_PATH_FILTER,static final PLUGIN_PATH_FILTER : Filter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginUtils->WHITELIST,static final WHITELIST : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.PluginUtils->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.isolation.Plugins,Plugins,high,medium-high,low-medium,medium-high,18,193,53,1,0,63,263,257,1,1,19,6,0,0.458,0.789,0.544,1,0,,,,,263,,,,,,63,,,,,,,
org.apache.kafka.connect.runtime.isolation.Plugins.ClassLoaderUsage,ClassLoaderUsage,low,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public Plugins( Map ): void,Plugins( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public compareAndSwapLoaders( Connector ): ClassLoader,compareAndSwapLoaders( Connector ): ClassLoader,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public compareAndSwapWithDelegatingLoader( ): ClassLoader,compareAndSwapWithDelegatingLoader( ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,2
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public configProviders( ): Set,configProviders( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public connectorClass( String ): Class,connectorClass( String ): Class,low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,34,1,14,3
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public connectors( ): Set,connectors( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public converters( ): Set,converters( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public currentThreadLoader( ): ClassLoader,currentThreadLoader( ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public delegatingLoader( ): DelegatingClassLoader,delegatingLoader( ): DelegatingClassLoader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newConfigProvider( AbstractConfig, String, ClassLoaderUsage ): ConfigProvider","newConfigProvider( AbstractConfig, String, ClassLoaderUsage ): ConfigProvider",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,33,3,14,3
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newConnector( String ): Connector,newConnector( String ): Connector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newConverter( AbstractConfig, String, ClassLoaderUsage ): Converter","newConverter( AbstractConfig, String, ClassLoaderUsage ): Converter",low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,39,3,25,4
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newHeaderConverter( AbstractConfig, String, ClassLoaderUsage ): HeaderConverter","newHeaderConverter( AbstractConfig, String, ClassLoaderUsage ): HeaderConverter",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,37,3,20,4
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newPlugin( String, AbstractConfig, Class ): T","newPlugin( String, AbstractConfig, Class ): T",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,22,3,12,1
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newPlugins( List, AbstractConfig, Class ): List","newPlugins( List, AbstractConfig, Class ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,3,2,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newTask( Class ): Task,newTask( Class ): Task,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public newTranformations( String ): Transformation,newTranformations( String ): Transformation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.protected pluginClassFromConfig( AbstractConfig, String, Class, Collection ): Class","pluginClassFromConfig( AbstractConfig, String, Class, Collection ): Class",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,4,4,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public static compareAndSwapLoaders( ClassLoader ): ClassLoader,static compareAndSwapLoaders( ClassLoader ): ClassLoader,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,5,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.protected static isInternalConverter( String ): boolean,static isInternalConverter( String ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.private static newDelegatingClassLoader( List ): DelegatingClassLoader,static newDelegatingClassLoader( List ): DelegatingClassLoader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.protected static newPlugin( Class ): T,static newPlugin( Class ): T,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,0
"<Method>org.apache.kafka.connect.runtime.isolation.Plugins.protected static pluginClass( DelegatingClassLoader, String, Class ): Class","static pluginClass( DelegatingClassLoader, String, Class ): Class",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,3,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.private static pluginNames( Collection ): String,static pluginNames( Collection ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.runtime.isolation.Plugins.public transformations( ): Set,transformations( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.connect.runtime.isolation.Plugins->delegatingLoader,final delegatingLoader : DelegatingClassLoader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.isolation.Plugins->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest,org.apache.kafka.connect.runtime.rest,low,low,low-medium,low,,,,,,140,483,,,,,,,,,,,,,6,6,0,483,7,5,0,0.417,0.583,140,,,,,,,
org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable,ConnectRestConfigurable,low-medium,low,low-medium,low-medium,2,27,16,1,0,23,64,59,1,3,13,0,0,0.688,0.659,0,0,0,,,,,64,,,,,,23,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public ConnectRestConfigurable( ResourceConfig ): void,ConnectRestConfigurable( ResourceConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.private allowedToRegister( Class ): boolean,allowedToRegister( Class ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,4
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.private allowedToRegister( Object ): boolean,allowedToRegister( Object ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,4
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public getConfiguration( ): Configuration,getConfiguration( ): Configuration,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public property( String, Object ): ResourceConfig","property( String, Object ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Class ): ResourceConfig,register( Class ): ResourceConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Class, Class ): ResourceConfig","register( Class, Class ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Class, Map ): ResourceConfig","register( Class, Map ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Class, int ): ResourceConfig","register( Class, int ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Object ): ResourceConfig,register( Object ): ResourceConfig,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Object, Class ): ResourceConfig","register( Object, Class ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Object, Map ): ResourceConfig","register( Object, Map ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable.public register( Object, int ): ResourceConfig","register( Object, int ): ResourceConfig",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable->resourceConfig,resourceConfig : ResourceConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable->ALLOWED_TO_REGISTER,static final ALLOWED_TO_REGISTER : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable->NOT_ALLOWED_TO_REGISTER,static final NOT_ALLOWED_TO_REGISTER : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestConfigurable->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl,ConnectRestExtensionContextImpl,low,low,low,low,1,3,0,1,0,3,15,12,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,15,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl.public ConnectRestExtensionContextImpl( Configurable, ConnectClusterState ): void","ConnectRestExtensionContextImpl( Configurable, ConnectClusterState ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,2
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl.public clusterState( ): ConnectClusterState,clusterState( ): ConnectClusterState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl.public configurable( ): Configurable,configurable( ): Configurable,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl->clusterState,clusterState : ConnectClusterState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.ConnectRestExtensionContextImpl->configurable,configurable : Configurable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.InternalRequestSignature,InternalRequestSignature,low,low,low-medium,low-medium,3,29,22,1,0,19,71,65,3,2,5,4,0,0.6,0.681,0.476,0,0,,,,,71,,,,,,19,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public InternalRequestSignature( byte, Mac, byte ): void","InternalRequestSignature( byte, Mac, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,12,1,12,10
<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,3
<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public isValid( SecretKey ): boolean,isValid( SecretKey ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,3
<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public keyAlgorithm( ): String,keyAlgorithm( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public static addToRequest( SecretKey, byte, String, Request ): void","static addToRequest( SecretKey, byte, String, Request ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,4,6,2
"<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.public static fromHeaders( byte, HttpHeaders ): InternalRequestSignature","static fromHeaders( byte, HttpHeaders ): InternalRequestSignature",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,22,2,7,2
<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.private static mac( String ): Mac,static mac( String ): Mac,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.rest.InternalRequestSignature.private static sign( Mac, SecretKey, byte ): byte","static sign( Mac, SecretKey, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,2,0
<Field>org.apache.kafka.connect.runtime.rest.InternalRequestSignature->mac,final mac : Mac,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.InternalRequestSignature->requestBody,final requestBody : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.InternalRequestSignature->requestSignature,final requestSignature : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.InternalRequestSignature->SIGNATURE_ALGORITHM_HEADER,static final SIGNATURE_ALGORITHM_HEADER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.InternalRequestSignature->SIGNATURE_HEADER,static final SIGNATURE_HEADER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.RestClient,RestClient,medium-high,medium-high,low-medium,low,15,104,35,1,0,21,86,69,0,2,0,4,0,0,0.5,1,0,0,,,,,86,,,,,,21,,,,,,,
org.apache.kafka.connect.runtime.rest.RestClient.HttpResponse<T>,HttpResponse,low,low,low,low,1,4,0,1,0,4,14,10,3,0,4,0,0,0.667,0.562,0.5,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.RestClient.private static addHeadersToRequest( HttpHeaders, Request ): void","static addHeadersToRequest( HttpHeaders, Request ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,2,2,0
<Method>org.apache.kafka.connect.runtime.rest.RestClient.private static convertHttpFieldsToMap( HttpFields ): Map,static convertHttpFieldsToMap( HttpFields ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,1,4,0
"<Method>org.apache.kafka.connect.runtime.rest.RestClient.public static httpRequest( String, String, HttpHeaders, Object, TypeReference, WorkerConfig ): HttpResponse","static httpRequest( String, String, HttpHeaders, Object, TypeReference, WorkerConfig ): HttpResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,6,1,0
"<Method>org.apache.kafka.connect.runtime.rest.RestClient.public static httpRequest( String, String, HttpHeaders, Object, TypeReference, WorkerConfig, SecretKey, String ): HttpResponse","static httpRequest( String, String, HttpHeaders, Object, TypeReference, WorkerConfig, SecretKey, String ): HttpResponse",low-medium,very-high,medium-high,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,54,8,34,8
<Field>org.apache.kafka.connect.runtime.rest.RestClient->JSON_SERDE,static final JSON_SERDE : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestClient->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer,RestServer,high,very-high,low-medium,medium-high,36,176,87,1,0,70,247,236,4,6,14,1,0,0.758,0.762,0.364,0,0,,,,,247,,,,,,70,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.RestServer. determineAdvertisedProtocol( ): String, determineAdvertisedProtocol( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,16,0,9,8
<Method>org.apache.kafka.connect.runtime.rest.RestServer. findConnector( String ): ServerConnector, findConnector( String ): ServerConnector,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,1,4,2
<Method>org.apache.kafka.connect.runtime.rest.RestServer. parseListeners( ): List, parseListeners( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,0,6,4
"<Method>org.apache.kafka.connect.runtime.rest.RestServer. registerRestExtensions( Herder, ResourceConfig ): void"," registerRestExtensions( Herder, ResourceConfig ): void",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,2,8,5
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public RestServer( WorkerConfig ): void,RestServer( WorkerConfig ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,3,3
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public adminUrl( ): URI,adminUrl( ): URI,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,17,0,12,5
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public advertisedUrl( ): URI,advertisedUrl( ): URI,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,1,17,0,21,4
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public createConnector( String ): Connector,createConnector( String ): Connector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.rest.RestServer.public createConnector( String, boolean ): Connector","createConnector( String, boolean ): Connector",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,29,2,21,13
"<Method>org.apache.kafka.connect.runtime.rest.RestServer.public createConnectors( List, List ): void","createConnectors( List, List ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,2,11,4
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public initializeResources( Herder ): void,initializeResources( Herder ): void,low-medium,very-high,medium-high,low,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,68,1,46,12
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public initializeServer( ): void,initializeServer( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,11,10
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public serverUrl( ): URI,serverUrl( ): URI,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.runtime.rest.RestServer.public static urlJoin( String, String ): String","static urlJoin( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,2,3,0
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public stop( ): void,stop( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,0,7,7
<Field>org.apache.kafka.connect.runtime.rest.RestServer->connectRestExtensions,connectRestExtensions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->config,final config : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->handlers,handlers : ContextHandlerCollection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->jettyServer,jettyServer : Server,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->ADMIN_SERVER_CONNECTOR_NAME,static final ADMIN_SERVER_CONNECTOR_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->LISTENER_PATTERN,static final LISTENER_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->PROTOCOL_HTTP,static final PROTOCOL_HTTP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->PROTOCOL_HTTPS,static final PROTOCOL_HTTPS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.RestServer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.entities,org.apache.kafka.connect.runtime.rest.entities,low,low,medium-high,low,,,,,,122,522,,,,,,,,,,,,,15,15,0,522,9,3,0.067,0.25,0.683,122,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigInfo,ConfigInfo,low,low,low,low-medium,2,16,5,1,0,9,28,25,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,28,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public ConfigInfo( ConfigKeyInfo, ConfigValueInfo ): void","ConfigInfo( ConfigKeyInfo, ConfigValueInfo ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public configKey( ): ConfigKeyInfo,configKey( ): ConfigKeyInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public configValue( ): ConfigValueInfo,configValue( ): ConfigValueInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo.public toString( ): String,toString( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo->configKey,configKey : ConfigKeyInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfo->configValue,configValue : ConfigValueInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigInfos,ConfigInfos,low,low,low-medium,low-medium,0,15,7,1,0,11,55,46,4,0,8,0,0,0.429,0.7,0.214,0,0,,,,,55,,,,,,11,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public ConfigInfos( String, int, List, List ): void","ConfigInfos( String, int, List, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,0,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,6,8
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public errorCount( ): int,errorCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public groups( ): List,groups( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,0,10,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos.public values( ): List,values( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->configs,final configs : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->errorCount,final errorCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->groups,final groups : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigInfos->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo,ConfigKeyInfo,low,low,low-medium,medium-high,0,23,8,1,0,18,114,102,11,0,15,0,0,0.714,0.778,0.524,0,0,,,,,114,,,,,,18,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public ConfigKeyInfo( String, String, boolean, String, String, String, String, int, String, String, List ): void","ConfigKeyInfo( String, String, boolean, String, String, String, String, int, String, String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,11,0,11
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public defaultValue( ): String,defaultValue( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public dependents( ): List,dependents( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public displayName( ): String,displayName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public documentation( ): String,documentation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,16,1,13,22
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public group( ): String,group( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,11
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public importance( ): String,importance( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public orderInGroup( ): int,orderInGroup( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public required( ): boolean,required( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,27,0,24,11
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public type( ): String,type( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo.public width( ): String,width( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->defaultValue,final defaultValue : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->dependents,final dependents : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->displayName,final displayName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->documentation,final documentation : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->group,final group : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->importance,final importance : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->orderInGroup,final orderInGroup : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->required,final required : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->type,final type : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigKeyInfo->width,final width : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo,ConfigValueInfo,low,low,low-medium,medium-high,0,16,7,1,0,12,61,55,5,0,9,0,0,0.5,0.711,0.278,0,0,,,,,61,,,,,,12,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public ConfigValueInfo( String, String, List, List, boolean ): void","ConfigValueInfo( String, String, List, List, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,5,0,5
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,1,7,10
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public errors( ): List,errors( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public recommendedValues( ): List,recommendedValues( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,0,12,5
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public value( ): String,value( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo.public visible( ): boolean,visible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->errors,errors : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->recommendedValues,recommendedValues : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->value,value : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConfigValueInfo->visible,visible : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo,ConnectorInfo,low,low,low,medium-high,1,10,3,1,0,10,38,33,4,0,7,0,0,0.5,0.714,0.286,0,0,,,,,38,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public ConnectorInfo( String, Map, List, ConnectorType ): void","ConnectorInfo( String, Map, List, ConnectorType ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,0,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public config( ): Map,config( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,6,8
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public tasks( ): List,tasks( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public type( ): ConnectorType,type( ): ConnectorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo->config,final config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo->tasks,final tasks : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo->type,final type : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo,ConnectorPluginInfo,low,low,low,low-medium,2,20,11,1,0,11,45,41,3,0,8,0,0,0.333,0.7,0.357,0,0,,,,,45,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public ConnectorPluginInfo( PluginDesc ): void,ConnectorPluginInfo( PluginDesc ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,0
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public ConnectorPluginInfo( String, ConnectorType, String ): void","ConnectorPluginInfo( String, ConnectorType, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,0,3
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public className( ): String,className( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,4,6
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,10,3
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public type( ): ConnectorType,type( ): ConnectorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo->className,className : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo->type,type : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorPluginInfo->version,version : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo,ConnectorStateInfo,low,low,low-medium,low-medium,1,5,0,1,0,5,76,21,4,0,5,0,0,0.75,0.64,0.6,0,0,,,,,76,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.AbstractState,AbstractState,low,low,low,low,0,4,0,1,2,4,18,14,3,0,4,0,0,0.667,0.375,0.5,0,0,,,,,18,,,,,,4,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.ConnectorState,ConnectorState,low,low,low,low,0,1,0,2,0,1,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.TaskState,TaskState,low,low,low,low,0,7,3,2,0,7,26,24,1,0,5,0,0,0,0.64,0.4,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public ConnectorStateInfo( String, ConnectorState, List, ConnectorType ): void","ConnectorStateInfo( String, ConnectorState, List, ConnectorType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,0,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public connector( ): ConnectorState,connector( ): ConnectorState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public tasks( ): List,tasks( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo.public type( ): ConnectorType,type( ): ConnectorType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->connector,final connector : ConnectorState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->tasks,final tasks : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorStateInfo->type,final type : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorType,ConnectorType,low-medium,low,low,low,0,7,4,2,0,5,15,13,0,3,1,2,0,0,0.444,1,0,0,,,,,15,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorType.public static forValue( String ): ConnectorType,static forValue( String ): ConnectorType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorType.public static from( Class ): ConnectorType,static from( Class ): ConnectorType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,3
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorType.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->SINK,static final SINK : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->SOURCE,static final SOURCE : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ConnectorType->UNKNOWN,static final UNKNOWN : ConnectorType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest,CreateConnectorRequest,low,low,low,low,0,8,3,1,0,8,23,20,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,23,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public CreateConnectorRequest( String, Map ): void","CreateConnectorRequest( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public config( ): Map,config( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest->config,final config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ErrorMessage,ErrorMessage,low,low,low,low,0,8,3,1,0,8,23,20,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,23,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public ErrorMessage( int, String ): void","ErrorMessage( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public message( ): String,message( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage->message,final message : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ServerInfo,ServerInfo,low,low,low,low,1,7,2,1,0,5,22,18,3,0,5,0,0,0.667,0.3,1,1,0,,,,,22,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public ServerInfo( String ): void,ServerInfo( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.private ServerInfo( String, String, String ): void","ServerInfo( String, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,3
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public clusterId( ): String,clusterId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public commit( ): String,commit( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public version( ): String,version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ServerInfo->commit,final commit : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ServerInfo->kafkaClusterId,final kafkaClusterId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.ServerInfo->version,final version : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.TaskInfo,TaskInfo,low,low,low,low,1,8,3,1,0,8,22,19,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,22,,,,,,8,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public TaskInfo( ConnectorTaskId, Map ): void","TaskInfo( ConnectorTaskId, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public config( ): Map,config( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public id( ): ConnectorTaskId,id( ): ConnectorTaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.TaskInfo->config,final config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.entities.TaskInfo->id,final id : ConnectorTaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.errors,org.apache.kafka.connect.runtime.rest.errors,low,low,low,low,,,,,,17,59,,,,,,,,,,,,,3,3,0,59,6,2,0,0.25,0.75,17,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.BadRequestException,BadRequestException,medium-high,low,low,low,0,1,0,7,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.errors.BadRequestException.public BadRequestException( String ): void,BadRequestException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper,ConnectExceptionMapper,low,low,low,low,3,17,16,1,0,6,31,27,1,1,1,0,0,0,0,0,0,0,,,,,31,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper.public toResponse( Exception ): Response,toResponse( Exception ): Response,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,27,1,29,5
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper->uriInfo,uriInfo : UriInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectRestException,ConnectRestException,medium-high,low,low,low,0,11,1,6,1,10,25,22,2,0,10,0,0,0.5,0.36,0.956,0,0,,,,,25,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( Status, String ): void","ConnectRestException( Status, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( Status, String, Throwable ): void","ConnectRestException( Status, String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( Status, int, String ): void","ConnectRestException( Status, int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( Status, int, String, Throwable ): void","ConnectRestException( Status, int, String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,1,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( int, String ): void","ConnectRestException( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( int, String, Throwable ): void","ConnectRestException( int, String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( int, int, String ): void","ConnectRestException( int, int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,0
"<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public ConnectRestException( int, int, String, Throwable ): void","ConnectRestException( int, int, String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,0,2
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.resources,org.apache.kafka.connect.runtime.rest.resources,low,low,low-medium,low,,,,,,75,349,,,,,,,,,,,,,7,6,1,349,1,4,0.143,0.8,0.057,75,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource,ConnectorPluginsResource,low,low-medium,low,low,6,18,14,1,0,12,43,31,2,2,5,0,0,0.75,0.55,0.667,0,0,,,,,43,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource.public ConnectorPluginsResource( Herder ): void,ConnectorPluginsResource( Herder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource.public listConnectorPlugins( ): List,listConnectorPlugins( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource.private normalizedPluginName( String ): String,normalizedPluginName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,6,3
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource.private synchronized getConnectorPlugins( ): List,synchronized getConnectorPlugins( ): List,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,6,0,7,5
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource.public validateConfigs( String, Map ): ConfigInfos","validateConfigs( String, Map ): ConfigInfos",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,2,5,1
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource->connectorPlugins,final connectorPlugins : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource->herder,final herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource->ALIAS_SUFFIX,static final ALIAS_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource->CONNECTOR_EXCLUDES,static final CONNECTOR_EXCLUDES : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource,ConnectorsResource,high,medium-high,low-medium,medium-high,18,170,51,1,0,36,213,190,3,3,19,0,0,0.833,0.719,0,0,0,,,,,213,,,,,,36,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.CreatedConnectorInfoTranslator,CreatedConnectorInfoTranslator,low,low,low,low,2,3,2,1,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.IdentityTranslator<T>,IdentityTranslator,low,low,low,low,1,2,1,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$10887;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$10887;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6587;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6587;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8938;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$8938;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.Translator<T,U>",Translator,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public ConnectorsResource( Herder, WorkerConfig ): void","ConnectorsResource( Herder, WorkerConfig ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.private checkAndPutConnectorConfigName( String, Map ): void","checkAndPutConnectorConfigName( String, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,3,0
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.private completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, Boolean ): T","completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, Boolean ): T",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,6,1,0
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.private completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, TypeReference, Boolean ): T","completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, TypeReference, Boolean ): T",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,7,1,0
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.private completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, TypeReference, Translator, Boolean ): T","completeOrForwardRequest( FutureCallback, String, String, HttpHeaders, Object, TypeReference, Translator, Boolean ): T",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,34,8,15,3
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public createConnector( Boolean, HttpHeaders, CreateConnectorRequest ): Response","createConnector( Boolean, HttpHeaders, CreateConnectorRequest ): Response",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,14,3,14,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public destroyConnector( String, HttpHeaders, Boolean ): void","destroyConnector( String, HttpHeaders, Boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public getConnector( String, HttpHeaders, Boolean ): ConnectorInfo","getConnector( String, HttpHeaders, Boolean ): ConnectorInfo",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public getConnectorConfig( String, HttpHeaders, Boolean ): Map","getConnectorConfig( String, HttpHeaders, Boolean ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,1
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public getConnectorStatus( String ): ConnectorStateInfo,getConnectorStatus( String ): ConnectorStateInfo,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public getTaskConfigs( String, HttpHeaders, Boolean ): List","getTaskConfigs( String, HttpHeaders, Boolean ): List",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,2,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public getTaskStatus( String, HttpHeaders, Integer ): TaskState","getTaskStatus( String, HttpHeaders, Integer ): TaskState",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public listConnectors( UriInfo, HttpHeaders ): Response","listConnectors( UriInfo, HttpHeaders ): Response",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,27,2,17,6
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public pauseConnector( String, HttpHeaders ): Response","pauseConnector( String, HttpHeaders ): Response",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public putConnectorConfig( String, HttpHeaders, Boolean, Map ): Response","putConnectorConfig( String, HttpHeaders, Boolean, Map ): Response",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,4,12,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public putTaskConfigs( String, HttpHeaders, Boolean, byte ): void","putTaskConfigs( String, HttpHeaders, Boolean, byte ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,4,2
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public restartConnector( String, HttpHeaders, Boolean ): void","restartConnector( String, HttpHeaders, Boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,1
"<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public restartTask( String, Integer, HttpHeaders, Boolean ): void","restartTask( String, Integer, HttpHeaders, Boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,2,1
<Method>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.public resumeConnector( String ): Response,resumeConnector( String ): Response,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,1
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->context,context : ServletContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->config,final config : WorkerConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->herder,final herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->REQUEST_TIMEOUT_MS,static final REQUEST_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->TASK_CONFIGS_TYPE,static final TASK_CONFIGS_TYPE : TypeReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.LoggingResource,LoggingResource,low-medium,low,low-medium,low,5,35,32,1,0,22,83,78,0,1,6,2,0,0,0.562,0,0,0,,,,,83,,,,,,22,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.protected currentLoggers( ): Enumeration,currentLoggers( ): Enumeration,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.public getLogger( String ): Response,getLogger( String ): Response,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,18,1,11,1
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.public listLoggers( ): Response,listLoggers( ): Response,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,11,1
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.protected lookupLogger( String ): Logger,lookupLogger( String ): Logger,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.protected rootLogger( ): Logger,rootLogger( ): Logger,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.public setLevel( String, Map ): Response","setLevel( String, Map ): Response",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,33,2,24,1
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.private static effectiveLevelToMap( Logger ): Map,static effectiveLevelToMap( Logger ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.connect.runtime.rest.resources.LoggingResource.private static levelToMap( Logger ): Map,static levelToMap( Logger ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Field>org.apache.kafka.connect.runtime.rest.resources.LoggingResource->ROOT_LOGGER_NAME,static final ROOT_LOGGER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.RootResource,RootResource,low,low,low,low,2,3,1,1,0,2,10,6,1,0,2,0,0,0,0.25,0,0,0,,,,,10,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.resources.RootResource.public RootResource( Herder ): void,RootResource( Herder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.runtime.rest.resources.RootResource.public serverInfo( ): ServerInfo,serverInfo( ): ServerInfo,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Field>org.apache.kafka.connect.runtime.rest.resources.RootResource->herder,final herder : Herder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.util,org.apache.kafka.connect.runtime.rest.util,low,low,low,low,,,,,,21,75,,,,,,,,,,,,,1,1,0,75,2,1,0,0.333,0.667,21,,,,,,,
org.apache.kafka.connect.runtime.rest.util.SSLUtils,SSLUtils,low-medium,low-medium,low-medium,low,7,69,32,1,0,21,75,73,0,1,0,9,0,0,0.587,1,0,0,,,,,75,,,,,,21,,,,,,,
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static configureSslContextFactoryAlgorithms( SslContextFactory, Map ): void","static configureSslContextFactoryAlgorithms( SslContextFactory, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,16,2,20,1
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static configureSslContextFactoryAuthentication( Server, Map ): void","static configureSslContextFactoryAuthentication( Server, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,5,0
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static configureSslContextFactoryEndpointIdentification( SslContextFactory, Map ): void","static configureSslContextFactoryEndpointIdentification( SslContextFactory, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,0
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static configureSslContextFactoryKeyStore( SslContextFactory, Map ): void","static configureSslContextFactoryKeyStore( SslContextFactory, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,11,2,10,0
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static configureSslContextFactoryTrustStore( SslContextFactory, Map ): void","static configureSslContextFactoryTrustStore( SslContextFactory, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,7,0
<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.public static createClientSideSslContextFactory( WorkerConfig ): SslContextFactory,static createClientSideSslContextFactory( WorkerConfig ): SslContextFactory,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,5,0
<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.public static createServerSideSslContextFactory( WorkerConfig ): SslContextFactory,static createServerSideSslContextFactory( WorkerConfig ): SslContextFactory,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.public static createServerSideSslContextFactory( WorkerConfig, String ): SslContextFactory","static createServerSideSslContextFactory( WorkerConfig, String ): SslContextFactory",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,5,0
"<Method>org.apache.kafka.connect.runtime.rest.util.SSLUtils.protected static getOrDefault( Map, String, Object ): Object","static getOrDefault( Map, String, Object ): Object",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,3,2,0
<Field>org.apache.kafka.connect.runtime.rest.util.SSLUtils->COMMA_WITH_WHITESPACE,static final COMMA_WITH_WHITESPACE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.standalone,org.apache.kafka.connect.runtime.standalone,low,low,low,low,,,,,,61,244,,,,,,,,,,,,,4,4,0,244,2,2,0,0.5,0.5,61,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneConfig,StandaloneConfig,low-medium,low,low,low,1,1,0,3,0,1,12,2,0,3,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneConfig.public StandaloneConfig( Map ): void,StandaloneConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneConfig->OFFSET_STORAGE_FILE_FILENAME_CONFIG,static final OFFSET_STORAGE_FILE_FILENAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneConfig->OFFSET_STORAGE_FILE_FILENAME_DOC,static final OFFSET_STORAGE_FILE_FILENAME_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder,StandaloneHerder,very-high,high,low-medium,high,23,555,57,2,0,48,232,185,3,1,23,0,0,0.734,0.801,0.79,0,0,,,,,232,,,,,,48,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder.ConfigUpdateListener,ConfigUpdateListener,low,low,low,low,6,401,4,1,0,6,23,22,0,0,5,0,0,0,0.5,0,0,0,,,,,23,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$11879;,Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$11879;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$6552;,Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$6552;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder.StandaloneHerderRequest,StandaloneHerderRequest,low,low,low,low,0,6,2,1,0,6,19,16,2,0,4,0,0,0.5,0.562,0.333,0,0,,,,,19,,,,,,6,,,,,,,
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder. StandaloneHerder( Worker, String, String, StatusBackingStore, MemoryConfigBackingStore, ConnectorClientConfigOverridePolicy ): void"," StandaloneHerder( Worker, String, String, StatusBackingStore, MemoryConfigBackingStore, ConnectorClientConfigOverridePolicy ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,6,2,2
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public StandaloneHerder( Worker, String, ConnectorClientConfigOverridePolicy ): void","StandaloneHerder( Worker, String, ConnectorClientConfigOverridePolicy ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.protected config( String ): Map,config( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public connectorConfig( String, Callback ): void","connectorConfig( String, Callback ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,10,2,1,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private createConnectorInfo( String ): ConnectorInfo,createConnectorInfo( String ): ConnectorInfo,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,5,3
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private createConnectorTasks( String, TargetState ): void","createConnectorTasks( String, TargetState ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,4,5
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public generation( ): int,generation( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public putTaskConfigs( String, List, Callback, InternalRequestSignature ): void","putTaskConfigs( String, List, Callback, InternalRequestSignature ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private recomputeTaskConfigs( String ): List,recomputeTaskConfigs( String ): List,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,5,3
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private removeConnectorTasks( String ): void,removeConnectorTasks( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,3
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private startConnector( String ): boolean,startConnector( String ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,3
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized connectorInfo( String, Callback ): void","synchronized connectorInfo( String, Callback ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized connectors( Callback ): void,synchronized connectors( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized deleteConnectorConfig( String, Callback ): void","synchronized deleteConnectorConfig( String, Callback ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,8,3
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized putConnectorConfig( String, Map, boolean, Callback ): void","synchronized putConnectorConfig( String, Map, boolean, Callback ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,24,4,12,3
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized requestTaskReconfiguration( String ): void,synchronized requestTaskReconfiguration( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,4,2
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized restartConnector( String, Callback ): void","synchronized restartConnector( String, Callback ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,2,6,2
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized restartConnector( long, String, Callback ): HerderRequest","synchronized restartConnector( long, String, Callback ): HerderRequest",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,3,2,2
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized restartTask( ConnectorTaskId, Callback ): void","synchronized restartTask( ConnectorTaskId, Callback ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,14,2,14,7
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,2
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,0,9,6
"<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized taskConfigs( String, Callback ): void","synchronized taskConfigs( String, Callback ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,6,3
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.private updateConnectorTasks( String ): void,updateConnectorTasks( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,10,6
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneHerder->configState,configState : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneHerder->requestExecutorService,final requestExecutorService : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneHerder->requestSeqNum,final requestSeqNum : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.standalone.StandaloneHerder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.sink,org.apache.kafka.connect.sink,low,low,low,low,,,,,,33,82,,,,,,,,,,,,,4,3,1,82,10,4,0.75,0.286,0.036,33,,,,,,,
org.apache.kafka.connect.sink.SinkConnector,SinkConnector,low-medium,low,low,low,0,0,0,2,2,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.sink.SinkConnector->TOPICS_CONFIG,static final TOPICS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkRecord,SinkRecord,low-medium,low,low,low,3,23,10,2,0,15,48,45,2,0,10,0,0,0.25,0.58,0.578,0,0,,,,,48,,,,,,15,,,,,,,
"<Method>org.apache.kafka.connect.sink.SinkRecord.public SinkRecord( String, int, Schema, Object, Schema, Object, long ): void","SinkRecord( String, int, Schema, Object, Schema, Object, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,7,0,0
"<Method>org.apache.kafka.connect.sink.SinkRecord.public SinkRecord( String, int, Schema, Object, Schema, Object, long, Long, TimestampType ): void","SinkRecord( String, int, Schema, Object, Schema, Object, long, Long, TimestampType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,9,0,0
"<Method>org.apache.kafka.connect.sink.SinkRecord.public SinkRecord( String, int, Schema, Object, Schema, Object, long, Long, TimestampType, Iterable ): void","SinkRecord( String, int, Schema, Object, Schema, Object, long, Long, TimestampType, Iterable ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,10,0,2
<Method>org.apache.kafka.connect.sink.SinkRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,12,1,3,4
<Method>org.apache.kafka.connect.sink.SinkRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,2
<Method>org.apache.kafka.connect.sink.SinkRecord.public kafkaOffset( ): long,kafkaOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.connect.sink.SinkRecord.public newRecord( String, Integer, Schema, Object, Schema, Object, Long ): SinkRecord","newRecord( String, Integer, Schema, Object, Schema, Object, Long ): SinkRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,7,3,0
"<Method>org.apache.kafka.connect.sink.SinkRecord.public newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): SinkRecord","newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): SinkRecord",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,8,1,1
<Method>org.apache.kafka.connect.sink.SinkRecord.public timestampType( ): TimestampType,timestampType( ): TimestampType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.sink.SinkRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
<Field>org.apache.kafka.connect.sink.SinkRecord->kafkaOffset,final kafkaOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.sink.SinkRecord->timestampType,final timestampType : TimestampType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkTask,SinkTask,low,low,low,low,1,10,3,1,3,10,23,19,1,2,10,0,0,0,0.525,1,0,0,,,,,23,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract put( Collection ): void,abstract put( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract start( Map ): void,abstract start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public close( Collection ): void,close( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.sink.SinkTask.public flush( Map ): void,flush( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public initialize( SinkTaskContext ): void,initialize( SinkTaskContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.sink.SinkTask.public onPartitionsAssigned( Collection ): void,onPartitionsAssigned( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public onPartitionsRevoked( Collection ): void,onPartitionsRevoked( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTask.public open( Collection ): void,open( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.sink.SinkTask.public preCommit( Map ): Map,preCommit( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.connect.sink.SinkTask->context,context : SinkTaskContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.sink.SinkTask->TOPICS_CONFIG,static final TOPICS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.sink.SinkTask->TOPICS_REGEX_CONFIG,static final TOPICS_REGEX_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkTaskContext,SinkTaskContext,low,low,low,low,1,8,0,1,1,8,9,8,0,0,8,0,0,0,0.562,0,0,0,,,,,9,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract assignment( ): Set,assignment( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract offset( Map ): void,offset( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract offset( TopicPartition, long ): void","offset( TopicPartition, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract pause( TopicPartition ): void,pause( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract requestCommit( ): void,requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract resume( TopicPartition ): void,resume( TopicPartition ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.connect.source,org.apache.kafka.connect.source,low,low,low,low,,,,,,28,82,,,,,,,,,,,,,4,3,1,82,19,4,0.75,0.174,0.076,28,,,,,,,
org.apache.kafka.connect.source.SourceConnector,SourceConnector,low-medium,low,low,low,0,0,0,2,8,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.connect.source.SourceRecord,SourceRecord,low-medium,low,low-medium,low,2,25,9,2,0,19,64,61,2,0,13,0,0,0.167,0.462,0.744,0,0,,,,,64,,,,,,19,,,,,,,
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Integer, Schema, Object ): void","SourceRecord( Map, Map, String, Integer, Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,6,0,0
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object ): void","SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,8,0,0
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object, Long ): void","SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object, Long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,9,0,0
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object, Long, Iterable ): void","SourceRecord( Map, Map, String, Integer, Schema, Object, Schema, Object, Long, Iterable ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,10,0,2
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Schema, Object ): void","SourceRecord( Map, Map, String, Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,5,0,0
"<Method>org.apache.kafka.connect.source.SourceRecord.public SourceRecord( Map, Map, String, Schema, Object, Schema, Object ): void","SourceRecord( Map, Map, String, Schema, Object, Schema, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,7,0,0
<Method>org.apache.kafka.connect.source.SourceRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,1,5,4
<Method>org.apache.kafka.connect.source.SourceRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,3,4
"<Method>org.apache.kafka.connect.source.SourceRecord.public newRecord( String, Integer, Schema, Object, Schema, Object, Long ): SourceRecord","newRecord( String, Integer, Schema, Object, Schema, Object, Long ): SourceRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,7,3,0
"<Method>org.apache.kafka.connect.source.SourceRecord.public newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): SourceRecord","newRecord( String, Integer, Schema, Object, Schema, Object, Long, Iterable ): SourceRecord",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,8,0,2
<Method>org.apache.kafka.connect.source.SourceRecord.public sourceOffset( ): Map,sourceOffset( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.source.SourceRecord.public sourcePartition( ): Map,sourcePartition( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.source.SourceRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
<Field>org.apache.kafka.connect.source.SourceRecord->sourceOffset,final sourceOffset : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.source.SourceRecord->sourcePartition,final sourcePartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.source.SourceTask,SourceTask,low,low,low,low-medium,3,7,1,1,7,7,14,12,1,0,7,0,0,0,0.657,1,0,0,,,,,14,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.source.SourceTask.public abstract poll( ): List,abstract poll( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public abstract start( Map ): void,abstract start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,1,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public commitRecord( SourceRecord ): void,commitRecord( SourceRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.source.SourceTask.public commitRecord( SourceRecord, RecordMetadata ): void","commitRecord( SourceRecord, RecordMetadata ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.connect.source.SourceTask.public initialize( SourceTaskContext ): void,initialize( SourceTaskContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.connect.source.SourceTask->context,context : SourceTaskContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.source.SourceTaskContext,SourceTaskContext,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.source.SourceTaskContext.public abstract configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTaskContext.public abstract offsetStorageReader( ): OffsetStorageReader,offsetStorageReader( ): OffsetStorageReader,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.storage,org.apache.kafka.connect.storage,low-medium,medium-high,medium-high,low,,,,,,366,1364,,,,,,,,,,,,,27,19,8,1364,23,19,0.333,0.452,0.215,366,,,,,,,
org.apache.kafka.connect.storage.CloseableOffsetStorageReader,CloseableOffsetStorageReader,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.storage.CloseableOffsetStorageReader.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.ConfigBackingStore,ConfigBackingStore,low,low,low,medium-high,3,12,0,1,2,12,19,12,0,0,12,0,0,0,0.769,0,0,0,,,,,19,,,,,,12,,,,,,,
org.apache.kafka.connect.storage.ConfigBackingStore.UpdateListener,UpdateListener,low,low,low,low,1,5,0,1,2,5,6,5,0,0,5,0,0,0,0.5,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract contains( String ): boolean,contains( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract putConnectorConfig( String, Map ): void","putConnectorConfig( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract putSessionKey( SessionKey ): void,putSessionKey( SessionKey ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract putTargetState( String, TargetState ): void","putTargetState( String, TargetState ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract putTaskConfigs( String, List ): void","putTaskConfigs( String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract refresh( long, TimeUnit ): void","refresh( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract removeConnectorConfig( String ): void,removeConnectorConfig( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract removeTaskConfigs( String ): void,removeTaskConfigs( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract setUpdateListener( UpdateListener ): void,setUpdateListener( UpdateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract snapshot( ): ClusterConfigState,snapshot( ): ClusterConfigState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.ConfigBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.Converter,Converter,low,low,low,low,3,5,2,1,4,5,8,5,0,0,5,0,0,0,0.525,0,0,0,,,,,8,,,,,,5,,,,,,,
"<Method>org.apache.kafka.connect.storage.Converter.public abstract configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.connect.storage.Converter.public fromConnectData( String, Headers, Schema, Object ): byte","fromConnectData( String, Headers, Schema, Object ): byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,1,0
"<Method>org.apache.kafka.connect.storage.Converter.public abstract fromConnectData( String, Schema, Object ): byte","fromConnectData( String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.connect.storage.Converter.public toConnectData( String, Headers, byte ): SchemaAndValue","toConnectData( String, Headers, byte ): SchemaAndValue",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,1,0
"<Method>org.apache.kafka.connect.storage.Converter.public abstract toConnectData( String, byte ): SchemaAndValue","toConnectData( String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.connect.storage.ConverterConfig,ConverterConfig,low-medium,low,low,low,5,24,5,2,3,3,11,8,0,2,2,1,0,0.5,0.444,0,1,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.storage.ConverterConfig.protected ConverterConfig( ConfigDef, Map ): void","ConverterConfig( ConfigDef, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.connect.storage.ConverterConfig.public static newConfigDef( ): ConfigDef,static newConfigDef( ): ConfigDef,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,5,2
<Method>org.apache.kafka.connect.storage.ConverterConfig.public type( ): ConverterType,type( ): ConverterType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Field>org.apache.kafka.connect.storage.ConverterConfig->TYPE_CONFIG,static final TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.ConverterConfig->TYPE_DOC,static final TYPE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.ConverterType,ConverterType,low-medium,low,low,low,0,7,4,2,0,4,20,8,1,4,2,1,0,1.2,0.333,1,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.ConverterType.private ConverterType( ): void,ConverterType( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.connect.storage.ConverterType.public getName( ): String,getName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.storage.ConverterType.public static withName( String ): ConverterType,static withName( String ): ConverterType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,3,1
<Field>org.apache.kafka.connect.storage.ConverterType->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.ConverterType->HEADER,static final HEADER : ConverterType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.ConverterType->KEY,static final KEY : ConverterType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.ConverterType->NAME_TO_TYPE,static final NAME_TO_TYPE : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.ConverterType->VALUE,static final VALUE : ConverterType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.FileOffsetBackingStore,FileOffsetBackingStore,low-medium,low,low,low,5,36,19,2,0,16,43,40,1,1,6,0,1,0.5,0.417,0.667,0,0.333,,,,,43,,,,,,16,,,,,,,
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public FileOffsetBackingStore( ): void,FileOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.private load( ): void,load( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,15,0,12,3
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,0,11,2
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,2
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Field>org.apache.kafka.connect.storage.FileOffsetBackingStore->file,file : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.FileOffsetBackingStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.HeaderConverter,HeaderConverter,low,low,low,low,3,3,0,1,5,3,4,3,0,0,3,0,0,0,0.467,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.storage.HeaderConverter.public abstract config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.storage.HeaderConverter.public abstract fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.connect.storage.HeaderConverter.public abstract toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.connect.storage.KafkaConfigBackingStore,KafkaConfigBackingStore,medium-high,high,medium-high,high,23,144,51,1,0,43,372,191,15,12,19,5,0,0.928,0.873,0.721,0,0,,,,,372,,,,,,43,,,,,,,
org.apache.kafka.connect.storage.KafkaConfigBackingStore.ConsumeCallback,ConsumeCallback,low,low,low,low,9,56,39,1,0,39,143,141,0,0,1,0,0,0,0,0,0,0,,,,,143,,,,,,39,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaConfigBackingStore$25457;,Lorg.apache.kafka.connect.storage.KafkaConfigBackingStore$25457;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore. setupAndCreateKafkaBasedLog( String, WorkerConfig ): KafkaBasedLog"," setupAndCreateKafkaBasedLog( String, WorkerConfig ): KafkaBasedLog",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,17,0
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public KafkaConfigBackingStore( Converter, WorkerConfig, WorkerConfigTransformer ): void","KafkaConfigBackingStore( Converter, WorkerConfig, WorkerConfigTransformer ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,3,4,10
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private completeTaskIdSet( Set, int ): boolean","completeTaskIdSet( Set, int ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,2,2,0
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public contains( String ): boolean,contains( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,1,2
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog","createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,6,0,0
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private parseTaskId( String ): ConnectorTaskId,parseTaskId( String ): ConnectorTaskId,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,4,0
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public putConnectorConfig( String, Map ): void","putConnectorConfig( String, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,4,5
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public putSessionKey( SessionKey ): void,putSessionKey( SessionKey ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,1,16,10
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public putTargetState( String, TargetState ): void","putTargetState( String, TargetState ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,6,6
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public putTaskConfigs( String, List ): void","putTaskConfigs( String, List ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,29,2,19,20
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public refresh( long, TimeUnit ): void","refresh( long, TimeUnit ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public removeConnectorConfig( String ): void,removeConnectorConfig( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,8,6
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public removeTaskConfigs( String ): void,removeTaskConfigs( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public setUpdateListener( UpdateListener ): void,setUpdateListener( UpdateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public snapshot( ): ClusterConfigState,snapshot( ): ClusterConfigState,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,13,0,0,9
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public start( ): void,start( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,4
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public static COMMIT_TASKS_KEY( String ): String,static COMMIT_TASKS_KEY( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public static CONNECTOR_KEY( String ): String,static CONNECTOR_KEY( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public static TARGET_STATE_KEY( String ): String,static TARGET_STATE_KEY( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public static TASK_KEY( ConnectorTaskId ): String,static TASK_KEY( ConnectorTaskId ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private static intValue( Object ): int,static intValue( Object ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,0
<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,3
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private taskIds( String, Map ): Set","taskIds( String, Map ): Set",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,5,0
"<Method>org.apache.kafka.connect.storage.KafkaConfigBackingStore.private updateConnectorConfig( String, byte ): void","updateConnectorConfig( String, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,5,4
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->configLog,final configLog : KafkaBasedLog,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->configTransformer,final configTransformer : WorkerConfigTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->connectorConfigs,final connectorConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->connectorTargetStates,final connectorTargetStates : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->connectorTaskCounts,final connectorTaskCounts : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->converter,final converter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->deferredTaskUpdates,final deferredTaskUpdates : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->inconsistent,final inconsistent : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->lock,final lock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->taskConfigs,final taskConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->COMMIT_TASKS_PREFIX,static final COMMIT_TASKS_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->CONNECTOR_CONFIGURATION_V0,static final CONNECTOR_CONFIGURATION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->CONNECTOR_PREFIX,static final CONNECTOR_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->CONNECTOR_TASKS_COMMIT_V0,static final CONNECTOR_TASKS_COMMIT_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->READ_TO_END_TIMEOUT_MS,static final READ_TO_END_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->SESSION_KEY_KEY,static final SESSION_KEY_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->SESSION_KEY_V0,static final SESSION_KEY_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->TARGET_STATE_PREFIX,static final TARGET_STATE_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->TARGET_STATE_V0,static final TARGET_STATE_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->TASK_CONFIGURATION_V0,static final TASK_CONFIGURATION_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->TASK_PREFIX,static final TASK_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->updateListener,updateListener : UpdateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->offset,volatile offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->sessionKey,volatile sessionKey : SessionKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigBackingStore->started,volatile started : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore,KafkaOffsetBackingStore,low-medium,medium-high,low-medium,low-medium,13,76,24,1,0,11,124,63,3,1,6,0,0,0.688,0.667,0,0,0,,,,,124,,,,,,11,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4803;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4803;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$5837;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$5837;,low,low,low,low,0,0,0,2,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore.SetCallbackFuture,SetCallbackFuture,low,low,low,low,2,13,6,1,0,15,50,45,4,0,7,0,0,0.563,0.75,0.667,0,0,,,,,50,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,21,1,21,3
"<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.private createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog","createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,6,0,0
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public get( Collection ): Future,get( Collection ): Future,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,1,1,1
"<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public set( Map, Callback ): Future","set( Map, Callback ): Future",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,2,7,1
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,3
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,3
<Field>org.apache.kafka.connect.storage.KafkaOffsetBackingStore->data,data : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaOffsetBackingStore->consumedCallback,final consumedCallback : Callback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaOffsetBackingStore->offsetLog,offsetLog : KafkaBasedLog,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaOffsetBackingStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.KafkaStatusBackingStore,KafkaStatusBackingStore,high,high,low-medium,high,24,172,78,1,0,61,280,239,7,8,30,0,0,0.899,0.867,0.846,0,0,,,,,280,,,,,,61,,,,,,,
org.apache.kafka.connect.storage.KafkaStatusBackingStore.CacheEntry<T>,CacheEntry,low,low,low,low,1,10,4,1,0,7,20,16,3,0,7,0,0,0.778,0.476,0.762,0,0,,,,,20,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$10216;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$10216;,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6827;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$6827;,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$7677;,Lorg.apache.kafka.connect.storage.KafkaStatusBackingStore$7677;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore. KafkaStatusBackingStore( Time, Converter, String, KafkaBasedLog ): void"," KafkaStatusBackingStore( Time, Converter, String, KafkaBasedLog ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,0,2
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore. read( ConsumerRecord ): void, read( ConsumerRecord ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,8,3
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public KafkaStatusBackingStore( Time, Converter ): void","KafkaStatusBackingStore( Time, Converter ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,4
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,25,1,21,6
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog","createKafkaBasedLog( String, Map, Map, Callback, NewTopic, Map ): KafkaBasedLog",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,6,0,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private parseConnectorStatus( String, byte ): ConnectorStatus","parseConnectorStatus( String, byte ): ConnectorStatus",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,12,8
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private parseConnectorStatusKey( String ): String,parseConnectorStatusKey( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private parseConnectorTaskId( String ): ConnectorTaskId,parseConnectorTaskId( String ): ConnectorTaskId,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,5,1
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private parseTaskStatus( ConnectorTaskId, byte ): TaskStatus","parseTaskStatus( ConnectorTaskId, byte ): TaskStatus",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,12,8
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public put( ConnectorStatus ): void,put( ConnectorStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public put( TaskStatus ): void,put( TaskStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public putSafe( ConnectorStatus ): void,putSafe( ConnectorStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public putSafe( TaskStatus ): void,putSafe( TaskStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private readConnectorStatus( String, byte ): void","readConnectorStatus( String, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,16,2,9,3
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private readTaskStatus( String, byte ): void","readTaskStatus( String, byte ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,2,9,4
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private send( String, V, CacheEntry, boolean ): void","send( String, V, CacheEntry, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,25,4,6,2
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private sendConnectorStatus( ConnectorStatus, boolean ): void","sendConnectorStatus( ConnectorStatus, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
"<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private sendTaskStatus( TaskStatus, boolean ): void","sendTaskStatus( TaskStatus, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,5,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private serialize( AbstractStatus ): byte,serialize( AbstractStatus ): byte,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,11,8
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public synchronized connectors( ): Set,synchronized connectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public synchronized get( ConnectorTaskId ): TaskStatus,synchronized get( ConnectorTaskId ): TaskStatus,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,4,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public synchronized get( String ): ConnectorStatus,synchronized get( String ): ConnectorStatus,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.public synchronized getAll( String ): Collection,synchronized getAll( String ): Collection,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,4,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private synchronized getOrAdd( ConnectorTaskId ): CacheEntry,synchronized getOrAdd( ConnectorTaskId ): CacheEntry,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,6,2
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private synchronized getOrAdd( String ): CacheEntry,synchronized getOrAdd( String ): CacheEntry,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,2
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private synchronized remove( ConnectorTaskId ): void,synchronized remove( ConnectorTaskId ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,4,1
<Method>org.apache.kafka.connect.storage.KafkaStatusBackingStore.private synchronized remove( String ): void,synchronized remove( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,5,2
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->connectors,final connectors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->converter,final converter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->tasks,final tasks : Table,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->generation,generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->kafkaLog,kafkaLog : KafkaBasedLog,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->CONNECTOR_STATUS_PREFIX,static final CONNECTOR_STATUS_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->GENERATION_KEY_NAME,static final GENERATION_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->STATE_KEY_NAME,static final STATE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->STATUS_SCHEMA_V0,static final STATUS_SCHEMA_V0 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->TASK_STATUS_PREFIX,static final TASK_STATUS_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->TRACE_KEY_NAME,static final TRACE_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->WORKER_ID_KEY_NAME,static final WORKER_ID_KEY_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaStatusBackingStore->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore,MemoryConfigBackingStore,low-medium,low-medium,low-medium,medium-high,6,31,17,1,0,27,97,85,3,0,14,1,0,0.5,0.793,0.703,0,0,,,,,97,,,,,,27,,,,,,,
org.apache.kafka.connect.storage.MemoryConfigBackingStore.ConnectorState,ConnectorState,low,low,low,low,1,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public MemoryConfigBackingStore( ): void,MemoryConfigBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public MemoryConfigBackingStore( WorkerConfigTransformer ): void,MemoryConfigBackingStore( WorkerConfigTransformer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public putSessionKey( SessionKey ): void,putSessionKey( SessionKey ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public refresh( long, TimeUnit ): void","refresh( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.private static taskConfigListAsMap( String, List ): Map","static taskConfigListAsMap( String, List ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized contains( String ): boolean,synchronized contains( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized putConnectorConfig( String, Map ): void","synchronized putConnectorConfig( String, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,2,3,4
"<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized putTargetState( String, TargetState ): void","synchronized putTargetState( String, TargetState ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,2,3
"<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized putTaskConfigs( String, List ): void","synchronized putTaskConfigs( String, List ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,2,4,3
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized removeConnectorConfig( String ): void,synchronized removeConnectorConfig( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,1,2,3
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized removeTaskConfigs( String ): void,synchronized removeTaskConfigs( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,1,4,3
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized setUpdateListener( UpdateListener ): void,synchronized setUpdateListener( UpdateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized snapshot( ): ClusterConfigState,synchronized snapshot( ): ClusterConfigState,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,22,0,9,2
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryConfigBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.storage.MemoryConfigBackingStore->configTransformer,configTransformer : WorkerConfigTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.MemoryConfigBackingStore->connectors,connectors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.MemoryConfigBackingStore->updateListener,updateListener : UpdateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.MemoryOffsetBackingStore,MemoryOffsetBackingStore,low,low,low,low-medium,4,15,8,1,1,10,46,42,2,1,7,0,0,0.889,0.686,0.6,0,0,,,,,46,,,,,,10,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2906;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2906;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3474;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3474;,low,low,low,low,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public MemoryOffsetBackingStore( ): void,MemoryOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public get( Collection ): Future,get( Collection ): Future,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,10,1,1,1
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public set( Map, Callback ): Future","set( Map, Callback ): Future",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,13,2,1,1
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,0,6,5
<Field>org.apache.kafka.connect.storage.MemoryOffsetBackingStore->data,data : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.MemoryOffsetBackingStore->executor,executor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.MemoryOffsetBackingStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.MemoryStatusBackingStore,MemoryStatusBackingStore,low,low-medium,low,medium-high,6,29,15,1,0,15,44,41,2,0,13,0,0,0.5,0.731,0.846,0,0,,,,,44,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public MemoryStatusBackingStore( ): void,MemoryStatusBackingStore( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized connectors( ): Set,synchronized connectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized get( ConnectorTaskId ): TaskStatus,synchronized get( ConnectorTaskId ): TaskStatus,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized get( String ): ConnectorStatus,synchronized get( String ): ConnectorStatus,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized getAll( String ): Collection,synchronized getAll( String ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized put( ConnectorStatus ): void,synchronized put( ConnectorStatus ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,5,2
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized put( TaskStatus ): void,synchronized put( TaskStatus ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,11,2
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized putSafe( ConnectorStatus ): void,synchronized putSafe( ConnectorStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.connect.storage.MemoryStatusBackingStore.public synchronized putSafe( TaskStatus ): void,synchronized putSafe( TaskStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.connect.storage.MemoryStatusBackingStore->connectors,final connectors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.MemoryStatusBackingStore->tasks,final tasks : Table,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetBackingStore,OffsetBackingStore,low,low,low,low-medium,2,5,0,1,2,5,6,5,0,0,5,0,0,0,0.64,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract get( Collection ): Future,get( Collection ): Future,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract set( Map, Callback ): Future","set( Map, Callback ): Future",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.OffsetStorageReader,OffsetStorageReader,low,low,low,low,0,2,0,1,1,2,3,2,0,0,2,0,0,0,0.333,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetStorageReader.public abstract offset( Map ): Map,offset( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.OffsetStorageReader.public abstract offsets( Collection ): Map,offsets( Collection ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.connect.storage.OffsetStorageReaderImpl,OffsetStorageReaderImpl,low,low-medium,low-medium,low-medium,6,36,29,1,0,17,84,76,6,1,4,0,0,0.357,0.625,0.5,0,0,,,,,84,,,,,,17,,,,,,,
"<Method>org.apache.kafka.connect.storage.OffsetStorageReaderImpl.public OffsetStorageReaderImpl( OffsetBackingStore, String, Converter, Converter ): void","OffsetStorageReaderImpl( OffsetBackingStore, String, Converter, Converter ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,6
<Method>org.apache.kafka.connect.storage.OffsetStorageReaderImpl.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,9,0,4,5
<Method>org.apache.kafka.connect.storage.OffsetStorageReaderImpl.public offset( Map ): Map,offset( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.connect.storage.OffsetStorageReaderImpl.public offsets( Collection ): Map,offsets( Collection ): Map,low-medium,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,56,1,30,18
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->backingStore,final backingStore : OffsetBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->closed,final closed : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->keyConverter,final keyConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->namespace,final namespace : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->offsetReadFutures,final offsetReadFutures : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->valueConverter,final valueConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageReaderImpl->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageWriter,OffsetStorageWriter,low,low-medium,low-medium,medium-high,6,29,19,1,0,16,76,67,7,1,7,0,0,0.729,0.762,0.4,0,0,,,,,76,,,,,,16,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7976;,Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7976;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public OffsetStorageWriter( OffsetBackingStore, String, Converter, Converter ): void","OffsetStorageWriter( OffsetBackingStore, String, Converter, Converter ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public doFlush( Callback ): Future,doFlush( Callback ): Future,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,30,1,20,14
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.private flushing( ): boolean,flushing( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized beginFlush( ): boolean,synchronized beginFlush( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,4,5
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized cancelFlush( ): void,synchronized cancelFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,6
"<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.private synchronized handleFinishWrite( long, Throwable, Void ): boolean","synchronized handleFinishWrite( long, Throwable, Void ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,3,1,3
"<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized offset( Map, Map ): void","synchronized offset( Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->currentFlushId,currentFlushId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->data,data : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->backingStore,final backingStore : OffsetBackingStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->keyConverter,final keyConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->namespace,final namespace : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->valueConverter,final valueConverter : Converter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->toFlush,toFlush : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetUtils,OffsetUtils,low,low,low,low,3,11,7,1,0,10,22,21,0,0,0,2,0,0,0.333,0,0,0,,,,,22,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetUtils.public static validateFormat( Map ): void,static validateFormat( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,14,1,9,0
<Method>org.apache.kafka.connect.storage.OffsetUtils.public static validateFormat( Object ): void,static validateFormat( Object ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,1,0
org.apache.kafka.connect.storage.SimpleHeaderConverter,SimpleHeaderConverter,medium-high,low-medium,low,low-medium,6,140,5,1,0,10,31,26,0,4,5,0,0,0.875,0.633,0.9,0,0,,,,,31,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.storage.SimpleHeaderConverter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.SimpleHeaderConverter.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.storage.SimpleHeaderConverter.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.storage.SimpleHeaderConverter.public fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,4,2,1
"<Method>org.apache.kafka.connect.storage.SimpleHeaderConverter.public toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,14,3,3,3
<Field>org.apache.kafka.connect.storage.SimpleHeaderConverter->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.SimpleHeaderConverter->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.SimpleHeaderConverter->NULL_SCHEMA_AND_VALUE,static final NULL_SCHEMA_AND_VALUE : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.SimpleHeaderConverter->UTF_8,static final UTF_8 : Charset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.StatusBackingStore,StatusBackingStore,low,low,low,medium-high,4,12,0,1,2,12,13,12,0,0,12,0,0,0,0.722,0,0,0,,,,,13,,,,,,12,,,,,,,
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract configure( WorkerConfig ): void,configure( WorkerConfig ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract connectors( ): Set,connectors( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract get( ConnectorTaskId ): TaskStatus,get( ConnectorTaskId ): TaskStatus,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract get( String ): ConnectorStatus,get( String ): ConnectorStatus,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract getAll( String ): Collection,getAll( String ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract put( ConnectorStatus ): void,put( ConnectorStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract put( TaskStatus ): void,put( TaskStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract putSafe( ConnectorStatus ): void,putSafe( ConnectorStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract putSafe( TaskStatus ): void,putSafe( TaskStatus ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StatusBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.StringConverter,StringConverter,low,low-medium,low,low-medium,10,29,13,1,0,13,43,40,2,0,9,0,0,0.5,0.651,0.944,1,0,,,,,43,,,,,,13,,,,,,,
<Method>org.apache.kafka.connect.storage.StringConverter.public StringConverter( ): void,StringConverter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.StringConverter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.StringConverter.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.connect.storage.StringConverter.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,6,2
"<Method>org.apache.kafka.connect.storage.StringConverter.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,4,0
"<Method>org.apache.kafka.connect.storage.StringConverter.public fromConnectData( String, Schema, Object ): byte","fromConnectData( String, Schema, Object ): byte",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,3,2,1
"<Method>org.apache.kafka.connect.storage.StringConverter.public fromConnectHeader( String, String, Schema, Object ): byte","fromConnectHeader( String, String, Schema, Object ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,1,0
"<Method>org.apache.kafka.connect.storage.StringConverter.public toConnectData( String, byte ): SchemaAndValue","toConnectData( String, byte ): SchemaAndValue",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,1
"<Method>org.apache.kafka.connect.storage.StringConverter.public toConnectHeader( String, String, byte ): SchemaAndValue","toConnectHeader( String, String, byte ): SchemaAndValue",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,0
<Field>org.apache.kafka.connect.storage.StringConverter->deserializer,final deserializer : StringDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.StringConverter->serializer,final serializer : StringSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.StringConverterConfig,StringConverterConfig,low-medium,low,low,low,2,9,1,3,0,3,16,6,0,5,2,1,0,1.2,0.333,0.667,0,0,,,,,16,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.storage.StringConverterConfig.public StringConverterConfig( Map ): void,StringConverterConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.connect.storage.StringConverterConfig.public encoding( ): String,encoding( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.storage.StringConverterConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.storage.StringConverterConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.StringConverterConfig->ENCODING_CONFIG,static final ENCODING_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.StringConverterConfig->ENCODING_DEFAULT,static final ENCODING_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.StringConverterConfig->ENCODING_DISPLAY,static final ENCODING_DISPLAY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.StringConverterConfig->ENCODING_DOC,static final ENCODING_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.tools,org.apache.kafka.connect.tools,low,medium-high,medium-high,low,,,,,,106,524,,,,,,,,,,,,,13,13,0,524,0,12,0,1,0,106,,,,,,,
org.apache.kafka.connect.tools.MockConnector,MockConnector,low-medium,low,low,low,3,17,11,2,0,11,47,38,2,6,6,0,0,0.875,0.556,0.867,1,0,,,,,47,,,,,,11,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.tools.MockConnector$3124;,Lorg.apache.kafka.connect.tools.MockConnector$3124;,low,low,low,low,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.tools.MockConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.MockConnector.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,1,7,8
<Method>org.apache.kafka.connect.tools.MockConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,2,3
<Method>org.apache.kafka.connect.tools.MockConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.MockConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
<Method>org.apache.kafka.connect.tools.MockConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.MockConnector->config,config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->executor,executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->CONNECTOR_FAILURE,static final CONNECTOR_FAILURE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->DEFAULT_FAILURE_DELAY_MS,static final DEFAULT_FAILURE_DELAY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->DELAY_MS_KEY,static final DELAY_MS_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->MOCK_MODE_KEY,static final MOCK_MODE_KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->TASK_FAILURE,static final TASK_FAILURE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockConnector->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSinkConnector,MockSinkConnector,low-medium,low,low,low-medium,4,83,9,3,0,10,32,30,1,0,10,0,4,0,0.66,0.2,0,1.2,,,,,32,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public initialize( ConnectorContext ): void,initialize( ConnectorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.tools.MockSinkConnector.public initialize( ConnectorContext, List ): void","initialize( ConnectorContext, List ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public validate( Map ): Config,validate( Map ): Config,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSinkConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.connect.tools.MockSinkConnector->delegate,delegate : MockConnector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSinkTask,MockSinkTask,low-medium,low,low,low,4,15,10,2,0,10,33,28,3,1,6,0,1,0.375,0.5,0.9,1,0.333,,,,,33,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSinkTask.public flush( Map ): void,flush( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.tools.MockSinkTask.public put( Collection ): void,put( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,4,4
<Method>org.apache.kafka.connect.tools.MockSinkTask.private setTimeout( ): void,setTimeout( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.connect.tools.MockSinkTask.public start( Map ): void,start( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,7,8
<Method>org.apache.kafka.connect.tools.MockSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.MockSinkTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.MockSinkTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSinkTask->mockMode,mockMode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSinkTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSinkTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSourceConnector,MockSourceConnector,low-medium,low,low,low-medium,4,83,9,3,0,10,32,30,1,0,10,0,4,0,0.66,0.2,0,1.2,,,,,32,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public initialize( ConnectorContext ): void,initialize( ConnectorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.connect.tools.MockSourceConnector.public initialize( ConnectorContext, List ): void","initialize( ConnectorContext, List ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public reconfigure( Map ): void,reconfigure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public validate( Map ): Config,validate( Map ): Config,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.connect.tools.MockSourceConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.connect.tools.MockSourceConnector->delegate,delegate : MockConnector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.MockSourceTask,MockSourceTask,low-medium,low,low,low,3,12,8,2,0,8,28,23,3,1,4,0,0,0,0.375,0.833,1,0,,,,,28,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.tools.MockSourceTask.public poll( ): List,poll( ): List,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,4,4
<Method>org.apache.kafka.connect.tools.MockSourceTask.public start( Map ): void,start( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,6,8
<Method>org.apache.kafka.connect.tools.MockSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.MockSourceTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.MockSourceTask->failureDelayMs,failureDelayMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSourceTask->mockMode,mockMode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSourceTask->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.MockSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.SchemaSourceConnector,SchemaSourceConnector,low-medium,low,low,low,3,10,4,3,0,7,24,22,1,0,6,0,0,0,0.556,0.933,1,0,,,,,24,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public start( Map ): void,start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,3,1
<Method>org.apache.kafka.connect.tools.SchemaSourceConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.SchemaSourceConnector->config,config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.SchemaSourceTask,SchemaSourceTask,low-medium,low-medium,low-medium,low,9,49,17,2,0,11,113,70,11,12,4,0,0,0.739,0.375,0.5,0,0,,,,,113,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public poll( ): List,poll( ): List,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,41,0,24,31
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public start( Map ): void,start( Map ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,23,1,19,31
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.SchemaSourceTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->count,count : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->maxNumMsgs,maxNumMsgs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->multipleSchema,multipleSchema : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->partition,partition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->partitionCount,partitionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->ID_CONFIG,static final ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->ID_FIELD,static final ID_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->MULTIPLE_SCHEMA_CONFIG,static final MULTIPLE_SCHEMA_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->NAME_CONFIG,static final NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->NUM_MSGS_CONFIG,static final NUM_MSGS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->PARTITION_COUNT_CONFIG,static final PARTITION_COUNT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->SEQNO_FIELD,static final SEQNO_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->THROUGHPUT_CONFIG,static final THROUGHPUT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->TOPIC_CONFIG,static final TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->valueSchema,static valueSchema : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->valueSchema2,static valueSchema2 : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->throttler,throttler : ThroughputThrottler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.SchemaSourceTask->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.TransformationDoc,TransformationDoc,low,low,low,low,1,36,5,1,0,4,37,14,0,1,0,3,0,0,0.417,0,0,0,,,,,37,,,,,,4,,,,,,,
org.apache.kafka.connect.tools.TransformationDoc.DocInfo,DocInfo,low,low,low,low,1,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.TransformationDoc.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.tools.TransformationDoc.private static printHtml( PrintStream ): void,static printHtml( PrintStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,1
"<Method>org.apache.kafka.connect.tools.TransformationDoc.private static printTransformationHtml( PrintStream, DocInfo ): void","static printTransformationHtml( PrintStream, DocInfo ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,9,0
<Field>org.apache.kafka.connect.tools.TransformationDoc->TRANSFORMATIONS,static final TRANSFORMATIONS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSinkConnector,VerifiableSinkConnector,low-medium,low,low,low,3,10,4,3,0,7,24,22,1,0,6,0,0,0,0.556,0.933,1,0,,,,,24,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public start( Map ): void,start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,3,1
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.VerifiableSinkConnector->config,config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSinkTask,VerifiableSinkTask,low-medium,low,low-medium,low,5,20,14,2,0,10,51,44,3,3,5,0,1,0.667,0.467,0.8,0,0.4,,,,,51,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public flush( Map ): void,flush( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,1,7,3
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public put( Collection ): void,put( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,19,1,16,4
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public start( Map ): void,start( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,4
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->ID_CONFIG,static final ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->JSON_SERDE,static final JSON_SERDE : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->NAME_CONFIG,static final NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->unflushed,unflushed : ArrayList,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSourceConnector,VerifiableSourceConnector,low-medium,low,low,low,3,10,4,3,0,7,24,22,1,0,6,0,0,0,0.556,0.933,1,0,,,,,24,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public start( Map ): void,start( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public taskClass( ): Class,taskClass( ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public taskConfigs( int ): List,taskConfigs( int ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,3,1
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.VerifiableSourceConnector->config,config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSourceTask,VerifiableSourceTask,low-medium,low-medium,low-medium,low,10,28,18,2,0,10,79,63,7,8,5,0,1,0.711,0.533,0.5,0,0.4,,,,,79,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public commitRecord( SourceRecord ): void,commitRecord( SourceRecord ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,1,11,4
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public poll( ): List,poll( ): List,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,23,0,14,16
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public start( Map ): void,start( Map ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,1,12,23
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public version( ): String,version( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->partition,partition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->ID_CONFIG,static final ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->ID_FIELD,static final ID_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->JSON_SERDE,static final JSON_SERDE : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->NAME_CONFIG,static final NAME_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->SEQNO_FIELD,static final SEQNO_FIELD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->THROUGHPUT_CONFIG,static final THROUGHPUT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->TOPIC_CONFIG,static final TOPIC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->throttler,throttler : ThroughputThrottler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.transforms,org.apache.kafka.connect.transforms,low-medium,medium-high,high,low,,,,,,417,1396,,,,,,,,,,,,,40,33,7,1396,3,13,0.4,0.813,0.213,417,,,,,,,
org.apache.kafka.connect.transforms.Cast<R>,Cast,medium-high,high,low-medium,medium-high,21,126,85,1,2,101,297,235,3,8,11,12,0,0.864,0.728,0.833,0,0,,,,,297,,,,,,101,,,,,,,
org.apache.kafka.connect.transforms.Cast.FieldType,FieldType,low,low,low,low,0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.Cast.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.Cast.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.Cast<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,12,4
<Method>org.apache.kafka.connect.transforms.Cast<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,1,20,5
<Method>org.apache.kafka.connect.transforms.Cast<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.Cast<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,7
<Method>org.apache.kafka.connect.transforms.Cast<R>.private convertFieldType( Type ): SchemaBuilder,convertFieldType( Type ): SchemaBuilder,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,20,1,8,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private getOrBuildSchema( Schema ): Schema,getOrBuildSchema( Schema ): Schema,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,27,1,36,6
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToBoolean( Object ): boolean,static castToBoolean( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToFloat32( Object ): float,static castToFloat32( Object ): float,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToFloat64( Object ): double,static castToFloat64( Object ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToInt16( Object ): short,static castToInt16( Object ): short,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToInt32( Object ): int,static castToInt32( Object ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToInt64( Object ): long,static castToInt64( Object ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToInt8( Object ): byte,static castToInt8( Object ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,9,1,3,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castToString( Object ): String,static castToString( Object ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
"<Method>org.apache.kafka.connect.transforms.Cast<R>.private static castValueToType( Schema, Object, Type ): Object","static castValueToType( Schema, Object, Type ): Object",low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,3,32,3,17,0
"<Method>org.apache.kafka.connect.transforms.Cast<R>.private static encodeLogicalType( Schema, Object ): Object","static encodeLogicalType( Schema, Object ): Object",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,4,0
<Method>org.apache.kafka.connect.transforms.Cast<R>.private static parseFieldTypes( List ): Map,static parseFieldTypes( List ): Map,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,22,1,12,1
"<Method>org.apache.kafka.connect.transforms.Cast<R>.private static validCastType( Type, FieldType ): Type","static validCastType( Type, FieldType ): Type",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,2,2,4
<Field>org.apache.kafka.connect.transforms.Cast<R>->casts,casts : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->SPEC_CONFIG,static final SPEC_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->SUPPORTED_CAST_INPUT_TYPES,static final SUPPORTED_CAST_INPUT_TYPES : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->SUPPORTED_CAST_OUTPUT_TYPES,static final SUPPORTED_CAST_OUTPUT_TYPES : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->WHOLE_VALUE_CAST,static final WHOLE_VALUE_CAST : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Cast<R>->wholeValueCastType,wholeValueCastType : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.ExtractField<R>,ExtractField,low,low-medium,low-medium,low,6,27,10,1,2,10,52,21,1,4,7,0,0,0.9,0.6,0.667,0,0,,,,,52,,,,,,10,,,,,,,
org.apache.kafka.connect.transforms.ExtractField.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.ExtractField.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.ExtractField<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public apply( R ): R,apply( R ): R,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,11,5
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.ExtractField<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Field>org.apache.kafka.connect.transforms.ExtractField<R>->fieldName,fieldName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ExtractField<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ExtractField<R>->FIELD_CONFIG,static final FIELD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ExtractField<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ExtractField<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.Flatten<R>,Flatten,medium-high,medium-high,low-medium,medium-high,14,81,39,1,2,58,165,129,2,5,14,0,0,0.914,0.714,0.833,0,0,,,,,165,,,,,,58,,,,,,,
org.apache.kafka.connect.transforms.Flatten.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.Flatten.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.private applySchemaless( Map, String, Map ): void","applySchemaless( Map, String, Map ): void",low-medium,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,30,3,19,1
<Method>org.apache.kafka.connect.transforms.Flatten<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,1
<Method>org.apache.kafka.connect.transforms.Flatten<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,1,14,3
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.private buildUpdatedSchema( Schema, String, SchemaBuilder, boolean, Struct ): void","buildUpdatedSchema( Schema, String, SchemaBuilder, boolean, Struct ): void",low-medium,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,27,5,19,0
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.private buildWithSchema( Struct, String, Struct ): void","buildWithSchema( Struct, String, Struct ): void",low-medium,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,23,3,13,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.Flatten<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,4
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.private convertFieldSchema( Schema, boolean, Object ): Schema","convertFieldSchema( Schema, boolean, Object ): Schema",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,3,4,0
"<Method>org.apache.kafka.connect.transforms.Flatten<R>.private fieldName( String, String ): String","fieldName( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,1,1
<Field>org.apache.kafka.connect.transforms.Flatten<R>->delimiter,delimiter : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->DELIMITER_CONFIG,static final DELIMITER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->DELIMITER_DEFAULT,static final DELIMITER_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.Flatten<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.HoistField<R>,HoistField,low,low-medium,low-medium,low,8,50,11,1,2,9,58,27,2,3,7,0,0,0.867,0.6,0.333,0,0,,,,,58,,,,,,9,,,,,,,
org.apache.kafka.connect.transforms.HoistField.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.HoistField.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.HoistField<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.HoistField<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.HoistField<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public apply( R ): R,apply( R ): R,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,1,11,5
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.HoistField<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,3
<Field>org.apache.kafka.connect.transforms.HoistField<R>->fieldName,fieldName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.HoistField<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.HoistField<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.HoistField<R>->FIELD_CONFIG,static final FIELD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.HoistField<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.InsertField<R>,InsertField,low-medium,medium-high,low-medium,low,14,79,30,1,2,49,150,82,7,5,11,0,0,0.683,0.6,0.667,0,0,,,,,150,,,,,,49,,,,,,,
org.apache.kafka.connect.transforms.InsertField.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,7,0,0,6,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.InsertField.InsertionSpec,InsertionSpec,low,low,low,low,0,5,3,1,0,5,13,10,2,0,1,1,0,0,0.167,0,0,0,,,,,13,,,,,,5,,,,,,,
org.apache.kafka.connect.transforms.InsertField.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.InsertField.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.InsertField<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,4,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,14,1,15,14
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low-medium,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,2,20,1,26,16
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.InsertField<R>.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,14,1,11,16
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private isTombstoneRecord( R ): boolean,isTombstoneRecord( R ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.transforms.InsertField<R>.private makeUpdatedSchema( Schema ): Schema,makeUpdatedSchema( Schema ): Schema,low-medium,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,2,15,1,12,16
<Field>org.apache.kafka.connect.transforms.InsertField<R>->offsetField,offsetField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->partitionField,partitionField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->OPTIONALITY_DOC,static final OPTIONALITY_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->OPTIONAL_TIMESTAMP_SCHEMA,static final OPTIONAL_TIMESTAMP_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->staticField,staticField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->staticValue,staticValue : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->timestampField,timestampField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.InsertField<R>->topicField,topicField : InsertionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.MaskField<R>,MaskField,low,low-medium,low-medium,low,7,46,20,1,2,18,86,43,1,5,9,1,0,0.875,0.525,0.833,0,0,,,,,86,,,,,,18,,,,,,,
org.apache.kafka.connect.transforms.MaskField.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.222,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.MaskField.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.222,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.MaskField<R>.protected abstract newRecord( R, Object ): R","abstract newRecord( R, Object ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,6,2
<Method>org.apache.kafka.connect.transforms.MaskField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,11,2
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.MaskField<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.connect.transforms.MaskField<R>.private static masked( Object ): Object,static masked( Object ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,5,1
<Field>org.apache.kafka.connect.transforms.MaskField<R>->maskedFields,maskedFields : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.MaskField<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.MaskField<R>->FIELDS_CONFIG,static final FIELDS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.MaskField<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.MaskField<R>->PRIMITIVE_VALUE_MAPPING,static final PRIMITIVE_VALUE_MAPPING : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.MaskField<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.RegexRouter<R>,RegexRouter,low,low,low,low,2,22,13,1,0,5,31,17,2,2,4,0,0,0.75,0.5,0.667,0,0,,,,,31,,,,,,5,,,,,,,
org.apache.kafka.connect.transforms.RegexRouter.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,11,2
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.RegexRouter<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,3
<Field>org.apache.kafka.connect.transforms.RegexRouter<R>->regex,regex : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.RegexRouter<R>->replacement,replacement : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.RegexRouter<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.RegexRouter<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField<R>,ReplaceField,low-medium,medium-high,low-medium,medium-high,12,77,35,1,2,27,118,70,5,3,13,2,0,0.875,0.714,0.667,0,0,,,,,118,,,,,,27,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.ReplaceField.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>. filter( String ): boolean, filter( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,3
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>. renamed( String ): String, renamed( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>. reverseRenamed( String ): String, reverseRenamed( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
"<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,1,10,1
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,15,3
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,5,7
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.private makeUpdatedSchema( Schema ): Schema,makeUpdatedSchema( Schema ): Schema,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,10,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.static invert( Map ): Map,static invert( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.connect.transforms.ReplaceField<R>.static parseRenameMappings( List ): Map,static parseRenameMappings( List ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,2,0
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->blacklist,blacklist : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->renames,renames : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->reverseRenames,reverseRenames : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ReplaceField<R>->whitelist,whitelist : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata<R>,SetSchemaMetadata,low,low-medium,low-medium,low,10,41,18,1,2,16,72,43,2,3,6,1,0,0.8,0.6,0.667,0,0,,,,,72,,,,,,16,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.Key<R>,Key,low,low,low,low,1,34,9,2,0,2,8,7,0,0,2,0,0,0,0.167,0,0,0,,,,,8,,,,,,2,,,,,,,
org.apache.kafka.connect.transforms.SetSchemaMetadata.Value<R>,Value,low,low,low,low,1,34,9,2,0,2,8,7,0,0,2,0,0,0,0.167,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.protected abstract newRecord( R, Schema ): R","abstract newRecord( R, Schema ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public apply( R ): R,apply( R ): R,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,21,1,16,5
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,5
"<Method>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>.protected static updateSchemaIn( Object, Schema ): Object","static updateSchemaIn( Object, Schema ): Object",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,2,3,0
<Field>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>->schemaName,schemaName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>->schemaVersion,schemaVersion : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.SetSchemaMetadata<R>->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter<R>,TimestampConverter,low-medium,medium-high,low-medium,low-medium,19,93,44,1,2,44,266,116,2,19,14,0,0,0.959,0.694,0.833,0,0,,,,,266,,,,,,44,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Config,Config,low,low,low,low,0,1,0,1,0,1,8,4,3,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Key<R>,Key,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$5310;,Lorg.apache.kafka.connect.transforms.TimestampConverter$5310;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$6386;,Lorg.apache.kafka.connect.transforms.TimestampConverter$6386;,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$7143;,Lorg.apache.kafka.connect.transforms.TimestampConverter$7143;,low,low,low,low,0,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$8268;,Lorg.apache.kafka.connect.transforms.TimestampConverter$8268;,low,low,low,low,0,0,0,1,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampConverter$9623;,Lorg.apache.kafka.connect.transforms.TimestampConverter$9623;,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.TimestampTranslator,TimestampTranslator,low,low,low,low,2,3,0,1,5,3,4,3,0,0,3,0,0,0,0.467,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.connect.transforms.TimestampConverter.Value<R>,Value,low,low,low,low,1,11,8,2,0,3,10,9,0,0,3,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.protected abstract newRecord( R, Schema, Object ): R","abstract newRecord( R, Schema, Object ): R",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,3,0,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.protected abstract operatingSchema( R ): Schema,abstract operatingSchema( R ): Schema,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.protected abstract operatingValue( R ): Object,abstract operatingValue( R ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,9,4
"<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private applyValueWithSchema( Struct, Schema ): Struct","applyValueWithSchema( Struct, Schema ): Struct",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,2,11,1
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,25,1,36,9
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,21,1,11,10
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private convertTimestamp( Object ): Object,convertTimestamp( Object ): Object,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private convertTimestamp( Object, String ): Object","convertTimestamp( Object, String ): Object",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,2,5,6
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private inferTimestampType( Object ): String,inferTimestampType( Object ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,1,3
<Method>org.apache.kafka.connect.transforms.TimestampConverter<R>.private timestampTypeFromSchema( Schema ): String,timestampTypeFromSchema( Schema ): String,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,12,1,10,5
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->config,config : Config,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->schemaUpdateCache,schemaUpdateCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->FIELD_CONFIG,static final FIELD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->FIELD_DEFAULT,static final FIELD_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->FORMAT_CONFIG,static final FORMAT_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->FORMAT_DEFAULT,static final FORMAT_DEFAULT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->OPTIONAL_DATE_SCHEMA,static final OPTIONAL_DATE_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->OPTIONAL_TIMESTAMP_SCHEMA,static final OPTIONAL_TIMESTAMP_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->OPTIONAL_TIME_SCHEMA,static final OPTIONAL_TIME_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TARGET_TYPE_CONFIG,static final TARGET_TYPE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TRANSLATORS,static final TRANSLATORS : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TYPE_DATE,static final TYPE_DATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TYPE_STRING,static final TYPE_STRING : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TYPE_TIME,static final TYPE_TIME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TYPE_TIMESTAMP,static final TYPE_TIMESTAMP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->TYPE_UNIX,static final TYPE_UNIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->UTC,static final UTC : TimeZone,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampConverter<R>->VALID_TYPES,static final VALID_TYPES : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.TimestampRouter<R>,TimestampRouter,low,low,low,low,3,23,14,1,0,5,50,32,2,4,4,0,0,0.833,0.5,0.333,0,0,,,,,50,,,,,,5,,,,,,,
org.apache.kafka.connect.transforms.TimestampRouter.ConfigName,ConfigName,low,low,low,low,0,0,0,1,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.transforms.TimestampRouter$3095;,Lorg.apache.kafka.connect.transforms.TimestampRouter$3095;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,1,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public apply( R ): R,apply( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,1,17,4
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.TimestampRouter<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,1,2,3
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->TIMESTAMP,static final TIMESTAMP : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->TOPIC,static final TOPIC : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->timestampFormat,timestampFormat : ThreadLocal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.TimestampRouter<R>->topicFormat,topicFormat : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.transforms.Transformation<R>,Transformation,low,low,low,low,1,3,0,1,12,3,5,3,0,0,3,0,0,0,0.333,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.transforms.Transformation<R>.public abstract apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.transforms.Transformation<R>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.transforms.Transformation<R>.public abstract config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.transforms.ValueToKey<R>,ValueToKey,low-medium,low-medium,low,low,10,61,24,1,0,11,46,37,2,4,6,0,0,0.792,0.444,0.667,0,0,,,,,46,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public apply( R ): R,apply( R ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.private applySchemaless( R ): R,applySchemaless( R ): R,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,11,3
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.private applyWithSchema( R ): R,applyWithSchema( R ): R,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,19,5
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public config( ): ConfigDef,config( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.transforms.ValueToKey<R>.public configure( Map ): void,configure( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,4
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->fields,fields : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->FIELDS_CONFIG,static final FIELDS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->OVERVIEW_DOC,static final OVERVIEW_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->PURPOSE,static final PURPOSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.transforms.ValueToKey<R>->valueToKeySchemaCache,valueToKeySchemaCache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.transforms.util,org.apache.kafka.connect.transforms.util,low,low,low,low,,,,,,25,59,,,,,,,,,,,,,5,5,0,59,12,5,0,0.294,0.706,25,,,,,,,
org.apache.kafka.connect.transforms.util.NonEmptyListValidator,NonEmptyListValidator,low,low,low,low,1,3,1,1,0,4,8,7,0,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,4,,,,,,,
"<Method>org.apache.kafka.connect.transforms.util.NonEmptyListValidator.public ensureValid( String, Object ): void","ensureValid( String, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,2,1,0
<Method>org.apache.kafka.connect.transforms.util.NonEmptyListValidator.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.transforms.util.RegexValidator,RegexValidator,low,low,low,low,1,4,2,1,0,3,10,9,0,0,2,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.connect.transforms.util.RegexValidator.public ensureValid( String, Object ): void","ensureValid( String, Object ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
<Method>org.apache.kafka.connect.transforms.util.RegexValidator.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.transforms.util.Requirements,Requirements,low,low,low,low,5,9,5,1,0,14,27,26,0,0,0,7,0,0,0.429,0,0,0,,,,,27,,,,,,14,,,,,,,
<Method>org.apache.kafka.connect.transforms.util.Requirements.private static nullSafeClassName( Object ): String,static nullSafeClassName( Object ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,2,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireMap( Object, String ): Map","static requireMap( Object, String ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,1,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireMapOrNull( Object, String ): Map","static requireMapOrNull( Object, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireSchema( Schema, String ): void","static requireSchema( Schema, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,0,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireSinkRecord( ConnectRecord, String ): SinkRecord","static requireSinkRecord( ConnectRecord, String ): SinkRecord",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireStruct( Object, String ): Struct","static requireStruct( Object, String ): Struct",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
"<Method>org.apache.kafka.connect.transforms.util.Requirements.public static requireStructOrNull( Object, String ): Struct","static requireStructOrNull( Object, String ): Struct",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
org.apache.kafka.connect.transforms.util.SchemaUtil,SchemaUtil,low,low,low,low,2,14,10,1,0,3,11,10,0,0,0,2,0,0,0.167,0,0,0,,,,,11,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.transforms.util.SchemaUtil.public static copySchemaBasics( Schema ): SchemaBuilder,static copySchemaBasics( Schema ): SchemaBuilder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.connect.transforms.util.SchemaUtil.public static copySchemaBasics( Schema, SchemaBuilder ): SchemaBuilder","static copySchemaBasics( Schema, SchemaBuilder ): SchemaBuilder",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,8,0
org.apache.kafka.connect.transforms.util.SimpleConfig,SimpleConfig,low-medium,low,low,low,1,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.transforms.util.SimpleConfig.public SimpleConfig( ConfigDef, Map ): void","SimpleConfig( ConfigDef, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Package>org.apache.kafka.connect.util,org.apache.kafka.connect.util,low,low-medium,medium-high,low,,,,,,173,604,,,,,,,,,,,,,18,17,1,604,40,7,0.167,0.149,0.684,173,,,,,,,
org.apache.kafka.connect.util.Callback<V>,Callback,low,low,low,low,0,1,0,1,13,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.connect.util.Callback<V>.public abstract onCompletion( Throwable, V ): void","onCompletion( Throwable, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.connect.util.ConnectUtils,ConnectUtils,medium-high,low-medium,low,low,8,134,10,1,0,9,29,27,0,1,0,3,0,0,0.5,1,0,0,,,,,29,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.util.ConnectUtils.public static checkAndConvertTimestamp( Long ): Long,static checkAndConvertTimestamp( Long ): Long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,1,0
<Method>org.apache.kafka.connect.util.ConnectUtils.static lookupKafkaClusterId( Admin ): String,static lookupKafkaClusterId( Admin ): String,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,1,7,4
<Method>org.apache.kafka.connect.util.ConnectUtils.public static lookupKafkaClusterId( WorkerConfig ): String,static lookupKafkaClusterId( WorkerConfig ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,4,1
<Field>org.apache.kafka.connect.util.ConnectUtils->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ConnectorTaskId,ConnectorTaskId,low,low,low,low-medium,0,12,5,1,0,13,37,34,2,0,7,0,0,0.167,0.686,0.048,0,0,,,,,37,,,,,,13,,,,,,,
"<Method>org.apache.kafka.connect.util.ConnectorTaskId.public ConnectorTaskId( String, int ): void","ConnectorTaskId( String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public compareTo( ConnectorTaskId ): int,compareTo( ConnectorTaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,2,4
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public connector( ): String,connector( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,10,1,3,4
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,1,3
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public task( ): int,task( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.connect.util.ConnectorTaskId->connector,final connector : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.ConnectorTaskId->task,final task : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ConnectorUtils,ConnectorUtils,low,low,low,low,0,4,3,1,0,5,16,15,0,0,0,1,0,0,0,0,0,0,,,,,16,,,,,,5,,,,,,,
"<Method>org.apache.kafka.connect.util.ConnectorUtils.public static groupPartitions( List, int ): List","static groupPartitions( List, int ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,2,5,0
"org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>",ConvertingFutureCallback,low,low,low-medium,medium-high,2,15,8,1,2,19,60,54,5,0,10,0,0,0.714,0.757,0.556,0,0,,,,,60,,,,,,19,,,,,,,
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public ConvertingFutureCallback( ): void",ConvertingFutureCallback( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public ConvertingFutureCallback( Callback ): void",ConvertingFutureCallback( Callback ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public abstract convert( U ): T",abstract convert( U ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public cancel( boolean ): boolean",cancel( boolean ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,1,3,3
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public get( ): T",get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public get( long, TimeUnit ): T","get( long, TimeUnit ): T",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,2,1
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isCancelled( ): boolean",isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isDone( ): boolean",isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public onCompletion( Throwable, U ): void","onCompletion( Throwable, U ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,2,4,6
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.private result( ): T",result( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,0,4
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->finishedLatch",final finishedLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->underlying",final underlying : Callback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->cancelled",volatile cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->exception",volatile exception : Throwable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->result",volatile result : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.FutureCallback<T>,FutureCallback,low-medium,low,low,low,1,3,0,2,0,3,8,7,0,0,3,0,0,0,0.444,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public FutureCallback( ): void,FutureCallback( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public FutureCallback( Callback ): void,FutureCallback( Callback ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public convert( T ): T,convert( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.connect.util.KafkaBasedLog<K,V>",KafkaBasedLog,low-medium,medium-high,low-medium,medium-high,20,53,44,1,0,26,154,107,11,2,12,0,0,0.795,0.8,0.5,0,0,,,,,154,,,,,,26,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.util.KafkaBasedLog$5981;,Lorg.apache.kafka.connect.util.KafkaBasedLog$5981;,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.util.KafkaBasedLog.WorkThread,WorkThread,low,low,low,low,4,26,9,2,0,10,33,32,0,0,2,0,1,0,0,0,0,1,,,,,33,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public KafkaBasedLog( String, Map, Map, Callback, Time, Runnable ): void","KafkaBasedLog( String, Map, Map, Callback, Time, Runnable ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,6,0,8
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private createConsumer( ): Consumer",createConsumer( ): Consumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,3
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private createProducer( ): Producer",createProducer( ): Producer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,3
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private poll( long ): void",poll( long ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,3
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public readToEnd( ): Future",readToEnd( ): Future,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public readToEnd( Callback ): void",readToEnd( Callback ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,4,5
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private readToLogEnd( ): void",readToLogEnd( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,0,14,5
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public send( K, V ): void","send( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public send( K, V, Callback ): void","send( K, V, Callback ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,2
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public start( ): void",start( ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,24,0,19,19
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public stop( ): void",stop( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,8,11
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->consumer",consumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->consumedCallback",final consumedCallback : Callback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->consumerConfigs",final consumerConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->producerConfigs",final producerConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->topic",final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->initializer",initializer : Runnable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->producer",producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->readLogEndOffsetCallbacks",readLogEndOffsetCallbacks : Queue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->CREATE_TOPIC_TIMEOUT_MS",static final CREATE_TOPIC_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->log",static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->stopRequested",stopRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->thread",thread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->time",time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.LoggingContext,LoggingContext,low,low,low-medium,low-medium,2,21,14,1,0,13,59,44,1,2,2,6,0,0.733,0.625,0.6,0,0,,,,,59,,,,,,13,,,,,,,
org.apache.kafka.connect.util.LoggingContext.Scope,Scope,low,low,low,low,0,2,0,2,0,2,11,5,1,4,2,0,0,1.6,0.25,0,0,0,,,,,11,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.util.LoggingContext.private LoggingContext( ): void,LoggingContext( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.connect.util.LoggingContext.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,0,4,4
<Method>org.apache.kafka.connect.util.LoggingContext.public static clear( ): void,static clear( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.connect.util.LoggingContext.public static forConnector( String ): LoggingContext,static forConnector( String ): LoggingContext,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,1
<Method>org.apache.kafka.connect.util.LoggingContext.public static forOffsets( ConnectorTaskId ): LoggingContext,static forOffsets( ConnectorTaskId ): LoggingContext,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,1
<Method>org.apache.kafka.connect.util.LoggingContext.public static forTask( ConnectorTaskId ): LoggingContext,static forTask( ConnectorTaskId ): LoggingContext,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,1
<Method>org.apache.kafka.connect.util.LoggingContext.public static forValidation( String ): LoggingContext,static forValidation( String ): LoggingContext,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.connect.util.LoggingContext.protected static prefixFor( String, Scope, Integer ): String","static prefixFor( String, Scope, Integer ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,3,13,0
<Field>org.apache.kafka.connect.util.LoggingContext->previous,final previous : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.LoggingContext->ALL_CONTEXTS,static final ALL_CONTEXTS : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.LoggingContext->CONNECTOR_CONTEXT,static final CONNECTOR_CONTEXT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil,ReflectionsUtil,low,low,low,low,2,6,5,1,0,1,36,5,0,2,0,1,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ReflectionsUtil.EmptyUrlType,EmptyUrlType,low,low,low,low,1,8,5,1,0,7,28,26,1,0,3,1,0,0,0.333,1,0,0,,,,,28,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.util.ReflectionsUtil.public static registerUrlTypes( ): void,static registerUrlTypes( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,1
<Field>org.apache.kafka.connect.util.ReflectionsUtil->ENDINGS,static final ENDINGS : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.ReflectionsUtil->FILE_PROTOCOL,static final FILE_PROTOCOL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.SafeObjectInputStream,SafeObjectInputStream,low-medium,low,low,low,0,6,4,3,0,6,27,13,0,1,3,0,0,0,0.5,0,0,0,,,,,27,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.util.SafeObjectInputStream.public SafeObjectInputStream( InputStream ): void,SafeObjectInputStream( InputStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.util.SafeObjectInputStream.private isBlacklisted( String ): boolean,isBlacklisted( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,1,1
<Method>org.apache.kafka.connect.util.SafeObjectInputStream.protected resolveClass( ObjectStreamClass ): Class,resolveClass( ObjectStreamClass ): Class,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
<Field>org.apache.kafka.connect.util.SafeObjectInputStream->DEFAULT_NO_DESERIALIZE_CLASS_NAMES,static final DEFAULT_NO_DESERIALIZE_CLASS_NAMES : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ShutdownableThread,ShutdownableThread,low-medium,low,low,low-medium,1,20,15,2,0,13,41,36,2,2,10,0,1,0.75,0.62,0.867,0,0.2,,,,,41,,,,,,13,,,,,,,
<Method>org.apache.kafka.connect.util.ShutdownableThread.public ShutdownableThread( String ): void,ShutdownableThread( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.connect.util.ShutdownableThread.public ShutdownableThread( String, boolean ): void","ShutdownableThread( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,2
<Method>org.apache.kafka.connect.util.ShutdownableThread.public abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
"<Method>org.apache.kafka.connect.util.ShutdownableThread.public awaitShutdown( long, TimeUnit ): boolean","awaitShutdown( long, TimeUnit ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
<Method>org.apache.kafka.connect.util.ShutdownableThread.public forceShutdown( ): void,forceShutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,4,2
<Method>org.apache.kafka.connect.util.ShutdownableThread.public getRunning( ): boolean,getRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.connect.util.ShutdownableThread.public gracefulShutdown( long, TimeUnit ): boolean","gracefulShutdown( long, TimeUnit ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,4,2
"<Method>org.apache.kafka.connect.util.ShutdownableThread.public shutdown( long, TimeUnit ): void","shutdown( long, TimeUnit ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public startGracefulShutdown( ): void,startGracefulShutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,2
<Field>org.apache.kafka.connect.util.ShutdownableThread->isRunning,isRunning : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.ShutdownableThread->shutdownLatch,shutdownLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.ShutdownableThread->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.ShutdownableThread->funcaughtExceptionHandler,static volatile funcaughtExceptionHandler : UncaughtExceptionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.SinkUtils,SinkUtils,low,low,low,low,0,2,0,1,0,2,4,3,0,0,1,1,0,0,0.25,0,0,0,,,,,4,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.util.SinkUtils.private SinkUtils( ): void,SinkUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.util.SinkUtils.public static consumerGroupId( String ): String,static consumerGroupId( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"org.apache.kafka.connect.util.Table<R,C,V>",Table,low,low,low,low,0,11,6,1,0,10,28,26,1,0,5,0,0,0,0.3,0,0,0,,,,,28,,,,,,10,,,,,,,
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public get( R, C ): V","get( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,1
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public put( R, C, V ): V","put( R, C, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,3,2
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public remove( R ): Map",remove( R ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public remove( R, C ): V","remove( R, C ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,4,2
"<Method>org.apache.kafka.connect.util.Table<R,C,V>.public row( R ): Map",row( R ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,3,1
"<Field>org.apache.kafka.connect.util.Table<R,C,V>->table",table : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.TopicAdmin,TopicAdmin,high,low-medium,low-medium,low-medium,9,162,28,1,0,22,103,63,2,5,6,1,0,1.048,0.629,0.9,0,0,,,,,103,,,,,,22,,,,,,,
org.apache.kafka.connect.util.TopicAdmin.NewTopicBuilder,NewTopicBuilder,low,low,low,low,1,17,9,1,0,11,32,27,4,0,8,0,0,0.75,0.708,0.429,0,0,,,,,32,,,,,,11,,,,,,,
"<Method>org.apache.kafka.connect.util.TopicAdmin. TopicAdmin( Map, Admin ): void"," TopicAdmin( Map, Admin ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,1,2
<Method>org.apache.kafka.connect.util.TopicAdmin.public TopicAdmin( Map ): void,TopicAdmin( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.connect.util.TopicAdmin.private bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,1
<Method>org.apache.kafka.connect.util.TopicAdmin.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.connect.util.TopicAdmin.public createTopic( NewTopic ): boolean,createTopic( NewTopic ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,3,0
<Method>org.apache.kafka.connect.util.TopicAdmin.public createTopics( NewTopic ): Set,createTopics( NewTopic ): Set,low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,46,1,27,6
<Method>org.apache.kafka.connect.util.TopicAdmin.public static defineTopic( String ): NewTopicBuilder,static defineTopic( String ): NewTopicBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.connect.util.TopicAdmin->admin,final admin : Admin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->adminConfig,final adminConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->CLEANUP_POLICY_COMPACT,static final CLEANUP_POLICY_COMPACT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->CLEANUP_POLICY_CONFIG,static final CLEANUP_POLICY_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->MIN_INSYNC_REPLICAS_CONFIG,static final MIN_INSYNC_REPLICAS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->UNCLEAN_LEADER_ELECTION_ENABLE_CONFIG,static final UNCLEAN_LEADER_ELECTION_ENABLE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.util.TopicAdmin->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.cache,org.apache.kafka.jmh.cache,low,low,low,low,,,,,,4,29,,,,,,,,,,,,,1,1,0,29,0,1,0,1,0,4,,,,,,,
org.apache.kafka.jmh.cache.LRUCacheBenchmark,LRUCacheBenchmark,low,low,low,low,5,12,7,1,0,4,29,19,4,3,2,1,0,0.429,0.333,0.667,0,0,,,,,29,,,,,,4,,,,,,,
<Method>org.apache.kafka.jmh.cache.LRUCacheBenchmark.public setUp( ): void,setUp( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,6
<Method>org.apache.kafka.jmh.cache.LRUCacheBenchmark.public static main( String ): void,static main( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,5,0
<Method>org.apache.kafka.jmh.cache.LRUCacheBenchmark.public testCachePerformance( ): String,testCachePerformance( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,2,7
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->counter,counter : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->keys,final keys : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->values,final values : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->lruCache,lruCache : LRUCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->DISTINCT_KEYS,static final DISTINCT_KEYS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->KEY,static final KEY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.cache.LRUCacheBenchmark->VALUE,static final VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.common,org.apache.kafka.jmh.common,low,low,low,low,,,,,,1,15,,,,,,,,,,,,,2,2,0,15,0,1,0,1,0,1,,,,,,,
org.apache.kafka.jmh.common.TopicBenchmark,TopicBenchmark,low,low,low,low,1,7,1,1,0,1,15,4,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.jmh.common.TopicBenchmark.BenchState,BenchState,low,low,low,low,0,0,0,1,0,0,4,0,1,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.jmh.common.TopicBenchmark.public testValidate( BenchState ): BenchState,testValidate( BenchState ): BenchState,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Package>org.apache.kafka.jmh.fetcher,org.apache.kafka.jmh.fetcher,low,low,low,low,,,,,,16,166,,,,,,,,,,,,,3,3,0,166,0,1,0,1,0,16,,,,,,,
org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark,ReplicaFetcherThreadBenchmark,low,medium-high,low-medium,low,14,21,16,1,0,5,166,76,3,0,3,0,0,0.667,0,0.333,0,0,,,,,166,,,,,,5,,,,,,,
org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.DelayedOperationsMock,DelayedOperationsMock,low,low,low,low,1,2,0,1,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark$7159;,Lorg.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark$7159;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.ReplicaFetcherBenchThread,ReplicaFetcherBenchThread,low,low,low,low,11,17,9,1,0,9,56,28,0,0,8,0,0,0,0.643,0,0,0,,,,,56,,,,,,9,,,,,,,
<Method>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.public setup( ): void,setup( ): void,low,very-high,medium-high,low,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,67,0,24,8
<Method>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.public tearDown( ): void,tearDown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,1
<Method>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark.public testFetcher( ): long,testFetcher( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark->fetcher,fetcher : ReplicaFetcherBenchThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark->logDir,logDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetcher.ReplicaFetcherThreadBenchmark->partitionCount,partitionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.fetchsession,org.apache.kafka.jmh.fetchsession,low,low,low,low,,,,,,8,55,,,,,,,,,,,,,1,1,0,55,0,1,0,1,0,8,,,,,,,
org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark,FetchSessionBenchmark,low-medium,low-medium,low-medium,low,8,59,13,1,0,8,55,39,5,1,2,0,0,0.667,0,0,0,0,,,,,55,,,,,,8,,,,,,,
<Method>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark.public incrementalFetchSessionBuild( ): void,incrementalFetchSessionBuild( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,8,5
<Method>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark.public setUp( ): void,setUp( ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,28,0,11,12
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->fetches,fetches : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->handler,handler : FetchSessionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->partitionCount,partitionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->presize,presize : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->LOG_CONTEXT,static final LOG_CONTEXT : LogContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.fetchsession.FetchSessionBenchmark->updatedPercentage,updatedPercentage : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.partition,org.apache.kafka.jmh.partition,low,low,low,low,,,,,,6,97,,,,,,,,,,,,,2,2,0,97,0,1,0,1,0,6,,,,,,,
org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark,UpdateFollowerFetchStateBenchmark,low,low-medium,low-medium,low,8,15,11,1,0,4,97,62,3,0,4,0,0,0.833,0,0.833,0,0,,,,,97,,,,,,4,,,,,,,
org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.DelayedOperationsMock,DelayedOperationsMock,low,low,low,low,0,2,0,1,0,2,6,5,0,0,2,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.public setUp( ): void,setUp( ): void,low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,43,0,19,4
<Method>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.public tearDown( ): void,tearDown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.public updateFollowerFetchStateBench( ): void,updateFollowerFetchStateBench( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,9
<Method>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark.public updateFollowerFetchStateBenchNoChange( ): void,updateFollowerFetchStateBenchNoChange( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,6
<Field>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark->logDir,logDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark->nextOffset,nextOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.partition.UpdateFollowerFetchStateBenchmark->topicPartition,topicPartition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.jmh.producer,org.apache.kafka.jmh.producer,low,low,low,low,,,,,,1,11,,,,,,,,,,,,,1,1,0,11,0,1,0,1,0,1,,,,,,,
org.apache.kafka.jmh.producer.ProducerRecordBenchmark,ProducerRecordBenchmark,low,low,low,low,1,1,0,1,0,1,11,4,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.jmh.producer.ProducerRecordBenchmark.public constructorBenchmark( ): ProducerRecord,constructorBenchmark( ): ProducerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Package>org.apache.kafka.jmh.record,org.apache.kafka.jmh.record,low,low,low,low,,,,,,17,76,,,,,,,,,,,,,2,2,0,76,0,1,0,1,0,17,,,,,,,
org.apache.kafka.jmh.record.RecordBatchIterationBenchmark,RecordBatchIterationBenchmark,medium-high,medium-high,low-medium,low,11,121,19,1,0,17,76,52,12,0,5,0,0,0.813,0.4,0,0,0,,,,,76,,,,,,17,,,,,,,
org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.Bytes,Bytes,low,low,low,low,0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.private createBatch( int ): ByteBuffer,createBatch( int ): ByteBuffer,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,18,1,8,8
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.public init( ): void,init( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,4,11
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.public measureIteratorForBatchWithSingleMessage( Blackhole ): void,measureIteratorForBatchWithSingleMessage( Blackhole ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,7,2
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.public measureSkipIteratorForVariableBatchSize( Blackhole ): void,measureSkipIteratorForVariableBatchSize( Blackhole ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,1,7,3
<Method>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.public measureStreamingIteratorForVariableBatchSize( Blackhole ): void,measureStreamingIteratorForVariableBatchSize( Blackhole ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,1,7,3
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->batchBuffers,batchBuffers : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->batchSizes,batchSizes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->bufferSupplier,bufferSupplier : BufferSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->bytes,bytes : Bytes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->compressionType,compressionType : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->batchCount,final batchCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->random,final random : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->startingOffset,final startingOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->maxBatchSize,maxBatchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->messageSize,messageSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->messageVersion,messageVersion : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.jmh.record.RecordBatchIterationBenchmark->singleBatchBuffer,singleBatchBuffer : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.log4jappender,org.apache.kafka.log4jappender,low,low,low,low,,,,,,72,170,,,,,,,,,,,,,1,1,0,170,0,1,0,1,0,72,,,,,,,
org.apache.kafka.log4jappender.KafkaLog4jAppender,KafkaLog4jAppender,medium-high,medium-high,high,medium-high,11,62,17,2,0,72,170,148,21,0,47,0,1,0.952,0.752,0.938,0,0.043,,,,,170,,,,,,72,,,,,,,
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public activateOptions( ): void,activateOptions( ): void,high,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,3,41,0,28,39
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.protected append( LoggingEvent ): void,append( LoggingEvent ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,7,4
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,3
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getBrokerList( ): String,getBrokerList( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getClientJaasConf( ): String,getClientJaasConf( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getClientJaasConfPath( ): String,getClientJaasConfPath( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getCompressionType( ): String,getCompressionType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getDeliveryTimeoutMs( ): int,getDeliveryTimeoutMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getIgnoreExceptions( ): boolean,getIgnoreExceptions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.protected getKafkaProducer( Properties ): Producer,getKafkaProducer( Properties ): Producer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getKerb5ConfPath( ): String,getKerb5ConfPath( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getMaxBlockMs( ): int,getMaxBlockMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getProducer( ): Producer,getProducer( ): Producer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRequiredNumAcks( ): int,getRequiredNumAcks( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRetries( ): int,getRetries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSaslKerberosServiceName( ): String,getSaslKerberosServiceName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSaslMechanism( ): String,getSaslMechanism( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSecurityProtocol( ): String,getSecurityProtocol( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSslKeystoreLocation( ): String,getSslKeystoreLocation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSslKeystorePassword( ): String,getSslKeystorePassword( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSslKeystoreType( ): String,getSslKeystoreType( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSslTruststoreLocation( ): String,getSslTruststoreLocation( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSslTruststorePassword( ): String,getSslTruststorePassword( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSyncSend( ): boolean,getSyncSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getTopic( ): String,getTopic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public requiresLayout( ): boolean,requiresLayout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setBrokerList( String ): void,setBrokerList( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setClientJaasConf( String ): void,setClientJaasConf( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setClientJaasConfPath( String ): void,setClientJaasConfPath( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setCompressionType( String ): void,setCompressionType( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setDeliveryTimeoutMs( int ): void,setDeliveryTimeoutMs( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setIgnoreExceptions( boolean ): void,setIgnoreExceptions( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setKerb5ConfPath( String ): void,setKerb5ConfPath( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setMaxBlockMs( int ): void,setMaxBlockMs( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRequiredNumAcks( int ): void,setRequiredNumAcks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRetries( int ): void,setRetries( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSaslKerberosServiceName( String ): void,setSaslKerberosServiceName( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSaslMechanism( String ): void,setSaslMechanism( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSecurityProtocol( String ): void,setSecurityProtocol( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSslKeystoreLocation( String ): void,setSslKeystoreLocation( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSslKeystorePassword( String ): void,setSslKeystorePassword( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSslKeystoreType( String ): void,setSslKeystoreType( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSslTruststoreLocation( String ): void,setSslTruststoreLocation( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSslTruststorePassword( String ): void,setSslTruststorePassword( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSyncSend( boolean ): void,setSyncSend( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setTopic( String ): void,setTopic( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.private subAppend( LoggingEvent ): String,subAppend( LoggingEvent ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,2,2
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->brokerList,brokerList : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->clientJaasConf,clientJaasConf : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->clientJaasConfPath,clientJaasConfPath : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->compressionType,compressionType : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->deliveryTimeoutMs,deliveryTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->ignoreExceptions,ignoreExceptions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->kerb5ConfPath,kerb5ConfPath : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->maxBlockMs,maxBlockMs : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->producer,producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->requiredNumAcks,requiredNumAcks : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->retries,retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->saslKerberosServiceName,saslKerberosServiceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->saslMechanism,saslMechanism : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->securityProtocol,securityProtocol : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->sslKeystoreLocation,sslKeystoreLocation : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->sslKeystorePassword,sslKeystorePassword : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->sslKeystoreType,sslKeystoreType : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->sslTruststoreLocation,sslTruststoreLocation : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->sslTruststorePassword,sslTruststorePassword : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->syncSend,syncSend : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.message,org.apache.kafka.message,medium-high,low,medium-high,low,,,,,,720,3143,,,,,,,,,,,,,29,27,2,3143,0,1,0.069,1,0.069,720,,,,,,,
org.apache.kafka.message.ApiMessageTypeGenerator,ApiMessageTypeGenerator,low-medium,low-medium,low-medium,low-medium,6,76,39,1,0,33,236,206,3,0,13,0,0,0.389,0.635,0.4,0,0,,,,,236,,,,,,33,,,,,,,
org.apache.kafka.message.ApiMessageTypeGenerator.ApiData,ApiData,low,low,low,low,2,11,3,1,0,8,26,22,3,0,4,0,0,0.667,0.375,0,0,0,,,,,26,,,,,,8,,,,,,,
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.public ApiMessageTypeGenerator( String ): void,ApiMessageTypeGenerator( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,3
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.public generate( ): void,generate( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,29,0,28,16
"<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateAccessor( String, String ): void","generateAccessor( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,5,5
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateEnumConstructor( ): void,generateEnumConstructor( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,8,8
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateEnumValues( ): void,generateEnumValues( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,0,11,3
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateFromApiKey( ): void,generateFromApiKey( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,22,0,23,18
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateHeaderVersion( String ): void,generateHeaderVersion( String ): void,low-medium,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,54,1,36,25
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateInstanceVariables( ): void,generateInstanceVariables( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,5
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateNewApiMessageMethod( String ): void,generateNewApiMessageMethod( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,24,1,24,19
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.private generateToString( ): void,generateToString( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,6,6
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.public hasRegisteredTypes( ): boolean,hasRegisteredTypes( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.public registerMessageType( MessageSpec ): void,registerMessageType( MessageSpec ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,26,1,15,6
<Method>org.apache.kafka.message.ApiMessageTypeGenerator.public write( BufferedWriter ): void,write( BufferedWriter ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Field>org.apache.kafka.message.ApiMessageTypeGenerator->apis,final apis : TreeMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.ApiMessageTypeGenerator->buffer,final buffer : CodeBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.ApiMessageTypeGenerator->headerGenerator,final headerGenerator : HeaderGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.ClauseGenerator,ClauseGenerator,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.message.ClauseGenerator.public abstract generate( Versions ): void,generate( Versions ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.message.CodeBuffer,CodeBuffer,low,low,low,low-medium,0,16,8,1,0,14,34,31,2,0,9,0,0,0.5,0.689,0.357,0,0,,,,,34,,,,,,14,,,,,,,
<Method>org.apache.kafka.message.CodeBuffer.public CodeBuffer( ): void,CodeBuffer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.message.CodeBuffer.public decrementIndent( ): void,decrementIndent( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,2
<Method>org.apache.kafka.message.CodeBuffer.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,2
<Method>org.apache.kafka.message.CodeBuffer.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.CodeBuffer.public incrementIndent( ): void,incrementIndent( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.CodeBuffer.private indentSpaces( ): String,indentSpaces( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
"<Method>org.apache.kafka.message.CodeBuffer.public printf( String, Object ): void","printf( String, Object ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,1
<Method>org.apache.kafka.message.CodeBuffer.public write( CodeBuffer ): void,write( CodeBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,2
<Method>org.apache.kafka.message.CodeBuffer.public write( Writer ): void,write( Writer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,1
<Field>org.apache.kafka.message.CodeBuffer->lines,final lines : ArrayList,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.CodeBuffer->indent,indent : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.EntityType,EntityType,low-medium,low,low,low,2,6,5,2,0,5,27,13,1,6,2,0,0,1.571,0.167,0,0,0,,,,,27,,,,,,5,,,,,,,
<Method>org.apache.kafka.message.EntityType.private EntityType( FieldType ): void,EntityType( FieldType ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.message.EntityType.public verifyTypeMatches( String, FieldType ): void","verifyTypeMatches( String, FieldType ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,7,2
<Field>org.apache.kafka.message.EntityType->baseType,final baseType : FieldType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->BROKER_ID,static final BROKER_ID : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->GROUP_ID,static final GROUP_ID : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->PRODUCER_ID,static final PRODUCER_ID : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->TOPIC_NAME,static final TOPIC_NAME : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->TRANSACTIONAL_ID,static final TRANSACTIONAL_ID : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.EntityType->UNKNOWN,static final UNKNOWN : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.FieldSpec,FieldSpec,low-medium,low,low-medium,medium-high,4,74,31,1,0,50,153,137,14,1,24,0,0,0.922,0.799,0.868,0,0,,,,,153,,,,,,50,,,,,,,
<Method>org.apache.kafka.message.FieldSpec. camelCaseName( ): String, camelCaseName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.message.FieldSpec. capitalizedCamelCaseName( ): String, capitalizedCamelCaseName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.message.FieldSpec. snakeCaseName( ): String, snakeCaseName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.message.FieldSpec.public FieldSpec( String, String, List, String, boolean, String, String, boolean, EntityType, String, String, String, Integer, boolean ): void","FieldSpec( String, String, List, String, boolean, String, String, boolean, EntityType, String, String, String, Integer, boolean ): void",medium-high,low,medium-high,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,3,54,14,26,31
<Method>org.apache.kafka.message.FieldSpec.public about( ): String,about( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.private checkTagInvariants( ): void,checkTagInvariants( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,26,0,12,25
<Method>org.apache.kafka.message.FieldSpec.public defaultString( ): String,defaultString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public fields( ): List,fields( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public flexibleVersions( ): Optional,flexibleVersions( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public flexibleVersionsString( ): String,flexibleVersionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,3,2
<Method>org.apache.kafka.message.FieldSpec.public ignorable( ): boolean,ignorable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public mapKey( ): boolean,mapKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public nullableVersions( ): Versions,nullableVersions( ): Versions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public nullableVersionsString( ): String,nullableVersionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.FieldSpec.public tag( ): Optional,tag( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public tagInteger( ): Integer,tagInteger( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.FieldSpec.public taggedVersions( ): Versions,taggedVersions( ): Versions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public taggedVersionsString( ): String,taggedVersionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.FieldSpec.public type( ): FieldType,type( ): FieldType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public typeString( ): String,typeString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.FieldSpec.public versions( ): Versions,versions( ): Versions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.FieldSpec.public versionsString( ): String,versionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.FieldSpec.public zeroCopy( ): boolean,zeroCopy( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.message.FieldSpec->about,final about : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->entityType,final entityType : EntityType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->fieldDefault,final fieldDefault : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->fields,final fields : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->flexibleVersions,final flexibleVersions : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->ignorable,final ignorable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->mapKey,final mapKey : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->nullableVersions,final nullableVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->tag,final tag : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->taggedVersions,final taggedVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->type,final type : FieldType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->versions,final versions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->VALID_FIELD_NAMES,static final VALID_FIELD_NAMES : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.FieldSpec->zeroCopy,zeroCopy : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.FieldType,FieldType,low,low,low-medium,low,1,21,10,1,10,11,175,11,0,1,10,1,0,0,0.455,1,0,0,,,,,175,,,,,,11,,,,,,,
org.apache.kafka.message.FieldType.ArrayType,ArrayType,low,low,low,low,0,10,2,1,0,8,23,21,1,0,8,0,0,0,0.437,0.714,0,0,,,,,23,,,,,,8,,,,,,,
org.apache.kafka.message.FieldType.BoolFieldType,BoolFieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.message.FieldType.BytesFieldType,BytesFieldType,low,low,low,low,0,4,0,1,0,4,15,12,0,2,4,0,0,0,0,1,0,0,,,,,15,,,,,,4,,,,,,,
org.apache.kafka.message.FieldType.Int16FieldType,Int16FieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.message.FieldType.Int32FieldType,Int32FieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.message.FieldType.Int64FieldType,Int64FieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.message.FieldType.Int8FieldType,Int8FieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
org.apache.kafka.message.FieldType.StringFieldType,StringFieldType,low,low,low,low,0,4,0,1,0,4,15,12,0,2,4,0,0,0,0,1,0,0,,,,,15,,,,,,4,,,,,,,
org.apache.kafka.message.FieldType.StructType,StructType,low,low,low,low,0,4,0,1,0,4,13,11,1,0,4,0,0,0,0.375,1,0,0,,,,,13,,,,,,4,,,,,,,
org.apache.kafka.message.FieldType.UUIDFieldType,UUIDFieldType,low,low,low,low,0,3,1,1,0,2,9,6,0,2,2,0,0,0,0,1,0,0,,,,,9,,,,,,2,,,,,,,
<Method>org.apache.kafka.message.FieldType.public canBeNullable( ): boolean,canBeNullable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public fixedLength( ): Optional,fixedLength( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,1,0
<Method>org.apache.kafka.message.FieldType.public isArray( ): boolean,isArray( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public isBytes( ): boolean,isBytes( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public isString( ): boolean,isString( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public isStruct( ): boolean,isStruct( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public isStructArray( ): boolean,isStructArray( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public isVariableLength( ): boolean,isVariableLength( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,2,0
<Method>org.apache.kafka.message.FieldType.public serializationIsDifferentInFlexibleVersions( ): boolean,serializationIsDifferentInFlexibleVersions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.message.FieldType.public static parse( String ): FieldType,static parse( String ): FieldType,low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,8,2
<Method>org.apache.kafka.message.FieldType.public abstract toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.message.FieldType->STRUCT_PREFIX,static final STRUCT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.HeaderGenerator,HeaderGenerator,low,low,low,low,1,14,4,1,0,9,50,24,4,1,5,0,0,0.65,0.2,0.3,0,0,,,,,50,,,,,,9,,,,,,,
<Method>org.apache.kafka.message.HeaderGenerator.public HeaderGenerator( String ): void,HeaderGenerator( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,4
<Method>org.apache.kafka.message.HeaderGenerator.public addImport( String ): void,addImport( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.message.HeaderGenerator.public addStaticImport( String ): void,addStaticImport( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.message.HeaderGenerator.public buffer( ): CodeBuffer,buffer( ): CodeBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.HeaderGenerator.public generate( ): void,generate( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,0,9,14
<Field>org.apache.kafka.message.HeaderGenerator->buffer,final buffer : CodeBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.HeaderGenerator->imports,final imports : TreeSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.HeaderGenerator->packageName,final packageName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.HeaderGenerator->staticImports,final staticImports : TreeSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.HeaderGenerator->HEADER,static final HEADER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.IsNullConditional,IsNullConditional,low,low,low-medium,medium-high,3,27,9,1,0,16,58,51,6,0,7,2,0,0.833,0.714,0,0,0,,,,,58,,,,,,16,,,,,,,
<Method>org.apache.kafka.message.IsNullConditional. alwaysEmitBlockScope( boolean ): IsNullConditional, alwaysEmitBlockScope( boolean ): IsNullConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.IsNullConditional. generate( CodeBuffer ): void, generate( CodeBuffer ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,28,1,21,14
<Method>org.apache.kafka.message.IsNullConditional. ifNotNull( Runnable ): IsNullConditional, ifNotNull( Runnable ): IsNullConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.IsNullConditional. ifNull( Runnable ): IsNullConditional, ifNull( Runnable ): IsNullConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.IsNullConditional. nullableVersions( Versions ): IsNullConditional, nullableVersions( Versions ): IsNullConditional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.IsNullConditional. possibleVersions( Versions ): IsNullConditional, possibleVersions( Versions ): IsNullConditional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.IsNullConditional.private IsNullConditional( String ): void,IsNullConditional( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.message.IsNullConditional.static forField( FieldSpec ): IsNullConditional,static forField( FieldSpec ): IsNullConditional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
<Method>org.apache.kafka.message.IsNullConditional.static forName( String ): IsNullConditional,static forName( String ): IsNullConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.message.IsNullConditional->alwaysEmitBlockScope,alwaysEmitBlockScope : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.IsNullConditional->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.IsNullConditional->ifNotNull,ifNotNull : Runnable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.IsNullConditional->ifNull,ifNull : Runnable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.IsNullConditional->nullableVersions,nullableVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.IsNullConditional->possibleVersions,possibleVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.MessageDataGenerator,MessageDataGenerator,very-high,medium-high,very-high,medium-high,13,211,145,1,0,331,1673,1666,5,1,59,1,0,0.729,0.757,0,0,0,,,,,1673,,,,,,331,,,,,,,
<Method>org.apache.kafka.message.MessageDataGenerator. MessageDataGenerator( String ): void, MessageDataGenerator( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,6
<Method>org.apache.kafka.message.MessageDataGenerator. generate( MessageSpec ): void, generate( MessageSpec ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,14,4
<Method>org.apache.kafka.message.MessageDataGenerator. write( Writer ): void, write( Writer ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,2
<Method>org.apache.kafka.message.MessageDataGenerator.private commaSeparatedHashSetFieldAndTypes( StructSpec ): String,commaSeparatedHashSetFieldAndTypes( StructSpec ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,6,0
<Method>org.apache.kafka.message.MessageDataGenerator.private fieldAbstractJavaType( FieldSpec ): String,fieldAbstractJavaType( FieldSpec ): String,low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,34,1,29,5
<Method>org.apache.kafka.message.MessageDataGenerator.private fieldConcreteJavaType( FieldSpec ): String,fieldConcreteJavaType( FieldSpec ): String,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,12,3
<Method>org.apache.kafka.message.MessageDataGenerator.private fieldDefault( FieldSpec ): String,fieldDefault( FieldSpec ): String,very-high,low-medium,high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,5,116,1,91,7
<Method>org.apache.kafka.message.MessageDataGenerator.private fieldFlexibleVersions( FieldSpec ): Versions,fieldFlexibleVersions( FieldSpec ): Versions,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,13,3
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateAccessor( String, String, String ): void","generateAccessor( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,5,5
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateArrayFromStruct( FieldSpec, Versions ): void","generateArrayFromStruct( FieldSpec, Versions ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,25,2,7,1
<Method>org.apache.kafka.message.MessageDataGenerator.private generateCheckForUnsupportedNumTaggedFields( String ): void,generateCheckForUnsupportedNumTaggedFields( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,6,6
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClass( Optional, String, StructSpec, Versions ): void","generateClass( Optional, String, StructSpec, Versions ): void",low,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,55,4,52,22
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassConstructors( String, StructSpec, boolean ): void","generateClassConstructors( String, StructSpec, boolean ): void",low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,34,3,31,28
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassEquals( String, StructSpec, boolean ): void","generateClassEquals( String, StructSpec, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,3,13,8
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassFromStruct( String, StructSpec, Versions ): void","generateClassFromStruct( String, StructSpec, Versions ): void",low,medium-high,medium-high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,93,3,36,16
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassHashCode( StructSpec, boolean ): void","generateClassHashCode( StructSpec, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,10,7
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassHeader( String, boolean, boolean ): void","generateClassHeader( String, boolean, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,20,3,11,4
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassReader( String, StructSpec, Versions ): void","generateClassReader( String, StructSpec, Versions ): void",low,medium-high,high,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,6,109,3,35,11
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassSize( String, StructSpec, Versions ): void","generateClassSize( String, StructSpec, Versions ): void",low,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,53,3,37,25
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassToString( String, StructSpec ): void","generateClassToString( String, StructSpec ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,11,9
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassToStruct( String, StructSpec, Versions ): void","generateClassToStruct( String, StructSpec, Versions ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,4,50,3,33,16
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateClassWriter( String, StructSpec, Versions ): void","generateClassWriter( String, StructSpec, Versions ): void",low-medium,medium-high,high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,6,138,3,28,15
<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldAccessor( FieldSpec ): void,generateFieldAccessor( FieldSpec ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,5,1
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldAccessors( StructSpec, boolean ): void","generateFieldAccessors( StructSpec, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,8,4
<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldDeclaration( FieldSpec ): void,generateFieldDeclaration( FieldSpec ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldDeclarations( StructSpec, boolean ): void","generateFieldDeclarations( StructSpec, boolean ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,7,5
<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldEquals( FieldSpec ): void,generateFieldEquals( FieldSpec ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,27,1,37,15
<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldHashCode( FieldSpec ): void,generateFieldHashCode( FieldSpec ): void,low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,31,1,34,9
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldMutator( String, FieldSpec ): void","generateFieldMutator( String, FieldSpec ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,10,7
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldMutators( StructSpec, String, boolean ): void","generateFieldMutators( StructSpec, String, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,3,8,4
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldSize( FieldSpec, Versions, boolean ): void","generateFieldSize( FieldSpec, Versions, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,3,5,0
<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldToObjectArray( FieldSpec ): void,generateFieldToObjectArray( FieldSpec ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,1,17,8
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldToString( String, FieldSpec ): void","generateFieldToString( String, FieldSpec ): void",low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,37,2,48,10
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFieldToStruct( FieldSpec, Versions ): void","generateFieldToStruct( FieldSpec, Versions ): void",low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,34,2,32,4
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateFixedLengthFieldSize( FieldSpec, boolean ): void","generateFixedLengthFieldSize( FieldSpec, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,2,23,8
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSet( String, StructSpec ): void","generateHashSet( String, StructSpec ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,2,12,6
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSetFindAllMethod( String, StructSpec ): void","generateHashSetFindAllMethod( String, StructSpec ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,10,8
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSetFindMethod( String, StructSpec ): void","generateHashSetFindMethod( String, StructSpec ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,10,8
<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSetIteratorConstructor( String ): void,generateHashSetIteratorConstructor( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,8,7
<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSetSizeArgConstructor( String ): void,generateHashSetSizeArgConstructor( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,7,6
<Method>org.apache.kafka.message.MessageDataGenerator.private generateHashSetZeroArgConstructor( String ): void,generateHashSetZeroArgConstructor( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,7,6
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateKeyElement( String, StructSpec ): void","generateKeyElement( String, StructSpec ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,2,6,2
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateNonDefaultValueCheck( FieldSpec, Versions ): void","generateNonDefaultValueCheck( FieldSpec, Versions ): void",low-medium,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,4,41,2,53,13
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateSetter( String, String, String ): void","generateSetter( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,5,5
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateShortAccessor( String, short ): void","generateShortAccessor( String, short ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,6,6
<Method>org.apache.kafka.message.MessageDataGenerator.private generateStringToBytes( String ): void,generateStringToBytes( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,8,8
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateSubclasses( String, StructSpec, Versions, boolean ): void","generateSubclasses( String, StructSpec, Versions, boolean ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,12,4,15,2
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateTaggedFieldToMap( FieldSpec, Versions ): void","generateTaggedFieldToMap( FieldSpec, Versions ): void",low-medium,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,34,2,40,5
<Method>org.apache.kafka.message.MessageDataGenerator.private generateUnknownTaggedFieldsAccessor( StructSpec ): void,generateUnknownTaggedFieldsAccessor( StructSpec ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,1,14,14
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateVariableLengthArrayElementSize( Versions, String, FieldType, Versions ): void","generateVariableLengthArrayElementSize( Versions, String, FieldType, Versions ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,32,4,10,3
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateVariableLengthFieldSize( FieldSpec, Versions, boolean ): void","generateVariableLengthFieldSize( FieldSpec, Versions, boolean ): void",high,low,high,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,5,128,3,8,1
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateVariableLengthReader( Versions, String, FieldType, Versions, Versions, String, String, boolean, boolean ): void","generateVariableLengthReader( Versions, String, FieldType, Versions, Versions, String, String, boolean, boolean ): void",low-medium,medium-high,medium-high,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,91,9,61,29
"<Method>org.apache.kafka.message.MessageDataGenerator.private generateVariableLengthWriter( Versions, String, FieldType, Versions, Versions, boolean ): void","generateVariableLengthWriter( Versions, String, FieldType, Versions, Versions, boolean ): void",low-medium,low,medium-high,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,88,6,8,1
<Method>org.apache.kafka.message.MessageDataGenerator.private getBoxedJavaType( FieldType ): String,getBoxedJavaType( FieldType ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,20,1,4,1
"<Method>org.apache.kafka.message.MessageDataGenerator.private maybeGenerateNonIgnorableFieldCheck( FieldSpec, VersionConditional ): void","maybeGenerateNonIgnorableFieldCheck( FieldSpec, VersionConditional ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,12,2,2,0
<Method>org.apache.kafka.message.MessageDataGenerator.private primitiveReadExpression( FieldType ): String,primitiveReadExpression( FieldType ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,17,1,3,0
"<Method>org.apache.kafka.message.MessageDataGenerator.private primitiveWriteExpression( FieldType, String ): String","primitiveWriteExpression( FieldType, String ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,17,2,7,0
"<Method>org.apache.kafka.message.MessageDataGenerator.private readFieldFromStruct( FieldType, String, boolean ): String","readFieldFromStruct( FieldType, String, boolean ): String",low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,24,3,14,0
<Method>org.apache.kafka.message.MessageDataGenerator.private static collectionType( String ): String,static collectionType( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.message.MessageDataGenerator.private validateNullDefault( FieldSpec ): void,validateNullDefault( FieldSpec ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Field>org.apache.kafka.message.MessageDataGenerator->buffer,final buffer : CodeBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageDataGenerator->headerGenerator,final headerGenerator : HeaderGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageDataGenerator->schemaGenerator,final schemaGenerator : SchemaGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageDataGenerator->structRegistry,final structRegistry : StructRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageDataGenerator->messageFlexibleVersions,messageFlexibleVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageDataGenerator->TAGGED_FIELDS_SECTION_NAME,static final TAGGED_FIELDS_SECTION_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.MessageGenerator,MessageGenerator,very-high,low-medium,low-medium,low,4,225,35,1,0,24,134,85,0,39,0,8,0,1.872,0.333,1,0,0,,,,,134,,,,,,24,,,,,,,
<Method>org.apache.kafka.message.MessageGenerator.static capitalizeFirst( String ): String,static capitalizeFirst( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.message.MessageGenerator.static firstIsCapitalized( String ): boolean,static firstIsCapitalized( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,3,0
<Method>org.apache.kafka.message.MessageGenerator.static lowerCaseFirst( String ): String,static lowerCaseFirst( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
<Method>org.apache.kafka.message.MessageGenerator.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,5,2
"<Method>org.apache.kafka.message.MessageGenerator.public static processDirectories( String, String, String ): void","static processDirectories( String, String, String ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,37,3,27,5
<Method>org.apache.kafka.message.MessageGenerator.static sizeOfUnsignedVarint( int ): int,static sizeOfUnsignedVarint( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.message.MessageGenerator.static stripSuffix( String, String ): String","static stripSuffix( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,0
<Method>org.apache.kafka.message.MessageGenerator.static toSnakeCase( String ): String,static toSnakeCase( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,1,8,0
<Field>org.apache.kafka.message.MessageGenerator->API_MESSAGE_CLASS,static final API_MESSAGE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->API_MESSAGE_TYPE_JAVA,static final API_MESSAGE_TYPE_JAVA : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->ARRAYLIST_CLASS,static final ARRAYLIST_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->ARRAYOF_CLASS,static final ARRAYOF_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->ARRAYS_CLASS,static final ARRAYS_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->BYTES_CLASS,static final BYTES_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->BYTE_BUFFER_CLASS,static final BYTE_BUFFER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->BYTE_UTILS_CLASS,static final BYTE_UTILS_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->COMPACT_ARRAYOF_CLASS,static final COMPACT_ARRAYOF_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->FIELD_CLASS,static final FIELD_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->IMPLICIT_LINKED_HASH_COLLECTION_CLASS,static final IMPLICIT_LINKED_HASH_COLLECTION_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->IMPLICIT_LINKED_HASH_MULTI_COLLECTION_CLASS,static final IMPLICIT_LINKED_HASH_MULTI_COLLECTION_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->ITERATOR_CLASS,static final ITERATOR_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->JAVA_SUFFIX,static final JAVA_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->JSON_GLOB,static final JSON_GLOB : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->JSON_SERDE,static final JSON_SERDE : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->JSON_SUFFIX,static final JSON_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->LIST_CLASS,static final LIST_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->MAP_ENTRY_CLASS,static final MAP_ENTRY_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->MESSAGE_CLASS,static final MESSAGE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->MESSAGE_UTIL_CLASS,static final MESSAGE_UTIL_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->NAVIGABLE_MAP_CLASS,static final NAVIGABLE_MAP_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->OBJECTS_CLASS,static final OBJECTS_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->OBJECT_SERIALIZATION_CACHE_CLASS,static final OBJECT_SERIALIZATION_CACHE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->RAW_TAGGED_FIELD_CLASS,static final RAW_TAGGED_FIELD_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->RAW_TAGGED_FIELD_WRITER_CLASS,static final RAW_TAGGED_FIELD_WRITER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->READABLE_CLASS,static final READABLE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->REQUEST_SUFFIX,static final REQUEST_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->RESPONSE_SUFFIX,static final RESPONSE_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->SCHEMA_CLASS,static final SCHEMA_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->STANDARD_CHARSETS,static final STANDARD_CHARSETS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->STRUCT_CLASS,static final STRUCT_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->TAGGED_FIELDS_SECTION_CLASS,static final TAGGED_FIELDS_SECTION_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->TREE_MAP_CLASS,static final TREE_MAP_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->TYPE_CLASS,static final TYPE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->UNSUPPORTED_VERSION_EXCEPTION_CLASS,static final UNSUPPORTED_VERSION_EXCEPTION_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->USAGE,static final USAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->UUID_CLASS,static final UUID_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageGenerator->WRITABLE_CLASS,static final WRITABLE_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.MessageSpec,MessageSpec,low,low,low-medium,medium-high,3,35,14,1,0,16,54,48,5,0,12,0,0,0.8,0.733,0.591,0,0,,,,,54,,,,,,16,,,,,,,
"<Method>org.apache.kafka.message.MessageSpec.public MessageSpec( String, String, List, Short, MessageSpecType, List, String ): void","MessageSpec( String, String, List, Short, MessageSpecType, List, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,19,7,9,7
<Method>org.apache.kafka.message.MessageSpec.public apiKey( ): Optional,apiKey( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.MessageSpec.public commonStructs( ): List,commonStructs( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.MessageSpec.public fields( ): List,fields( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.MessageSpec.public flexibleVersions( ): Versions,flexibleVersions( ): Versions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.MessageSpec.public flexibleVersionsString( ): String,flexibleVersionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.MessageSpec.public generatedClassName( ): String,generatedClassName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.message.MessageSpec.public name( ): String,name( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.message.MessageSpec.public struct( ): StructSpec,struct( ): StructSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.MessageSpec.public type( ): MessageSpecType,type( ): MessageSpecType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.MessageSpec.public validVersions( ): Versions,validVersions( ): Versions,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.message.MessageSpec.public validVersionsString( ): String,validVersionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.message.MessageSpec->apiKey,final apiKey : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpec->commonStructs,final commonStructs : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpec->flexibleVersions,final flexibleVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpec->struct,final struct : StructSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpec->type,final type : MessageSpecType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.MessageSpecType,MessageSpecType,low-medium,low,low,low,0,0,0,2,0,0,9,0,0,4,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Field>org.apache.kafka.message.MessageSpecType->DATA,static final DATA : MessageSpecType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpecType->HEADER,static final HEADER : MessageSpecType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpecType->REQUEST,static final REQUEST : MessageSpecType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.MessageSpecType->RESPONSE,static final RESPONSE : MessageSpecType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.SchemaGenerator,SchemaGenerator,medium-high,low-medium,low-medium,medium-high,10,68,51,1,0,66,208,197,4,0,9,0,0,0.643,0.704,0,0,0,,,,,208,,,,,,66,,,,,,,
org.apache.kafka.message.SchemaGenerator.MessageInfo,MessageInfo,low,low,low,low,1,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.message.SchemaGenerator. SchemaGenerator( HeaderGenerator, StructRegistry ): void"," SchemaGenerator( HeaderGenerator, StructRegistry ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,3
<Method>org.apache.kafka.message.SchemaGenerator. generateSchemas( MessageSpec ): void, generateSchemas( MessageSpec ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,12,2
"<Method>org.apache.kafka.message.SchemaGenerator. generateSchemas( String, StructSpec, Versions ): void"," generateSchemas( String, StructSpec, Versions ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,21,3,23,4
"<Method>org.apache.kafka.message.SchemaGenerator. writeSchema( String, CodeBuffer ): void"," writeSchema( String, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,22,2,22,1
"<Method>org.apache.kafka.message.SchemaGenerator.private fieldTypeToSchemaType( FieldSpec, short, Versions ): String","fieldTypeToSchemaType( FieldSpec, short, Versions ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,5,0
"<Method>org.apache.kafka.message.SchemaGenerator.private fieldTypeToSchemaType( FieldType, boolean, short, Versions, boolean ): String","fieldTypeToSchemaType( FieldType, boolean, short, Versions, boolean ): String",very-high,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,3,67,5,25,10
"<Method>org.apache.kafka.message.SchemaGenerator.private floorVersion( String, short ): short","floorVersion( String, short ): short",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.message.SchemaGenerator.private generateSchemaForVersion( StructSpec, short, CodeBuffer ): void","generateSchemaForVersion( StructSpec, short, CodeBuffer ): void",low-medium,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,35,3,29,5
"<Method>org.apache.kafka.message.SchemaGenerator.private generateTaggedFieldsSchemaForVersion( StructSpec, short, CodeBuffer ): void","generateTaggedFieldsSchemaForVersion( StructSpec, short, CodeBuffer ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,30,3,28,3
<Field>org.apache.kafka.message.SchemaGenerator->headerGenerator,final headerGenerator : HeaderGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.SchemaGenerator->messages,final messages : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.SchemaGenerator->structRegistry,final structRegistry : StructRegistry,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.SchemaGenerator->messageFlexibleVersions,messageFlexibleVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.StructRegistry,StructRegistry,low-medium,low-medium,low-medium,low-medium,7,35,21,1,0,21,66,63,2,0,7,0,0,0.3,0.607,0,0,0,,,,,66,,,,,,21,,,,,,,
<Anonymous> : Lorg.apache.kafka.message.StructRegistry$5086;,Lorg.apache.kafka.message.StructRegistry$5086;,low,low,low,low,0,0,0,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.message.StructRegistry. StructRegistry( ): void, StructRegistry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.message.StructRegistry. commonStructNames( ): Set, commonStructNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.StructRegistry. commonStructs( ): Iterator, commonStructs( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,0,0,0
<Method>org.apache.kafka.message.StructRegistry. findStruct( FieldSpec ): StructSpec, findStruct( FieldSpec ): StructSpec,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,9,1
<Method>org.apache.kafka.message.StructRegistry. isStructArrayWithKeys( FieldSpec ): boolean, isStructArrayWithKeys( FieldSpec ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,1,8,1
<Method>org.apache.kafka.message.StructRegistry. register( MessageSpec ): void, register( MessageSpec ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,11,2
<Method>org.apache.kafka.message.StructRegistry.private addStructSpecs( List ): void,addStructSpecs( List ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,16,1,17,2
<Field>org.apache.kafka.message.StructRegistry->commonStructNames,final commonStructNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.StructRegistry->structSpecs,final structSpecs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.StructSpec,StructSpec,low,low,low,low,2,31,14,1,0,13,45,40,4,0,6,0,0,0.75,0.556,0.5,0,0,,,,,45,,,,,,13,,,,,,,
<Method>org.apache.kafka.message.StructSpec. hasKeys( ): boolean, hasKeys( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.message.StructSpec.public StructSpec( String, String, List ): void","StructSpec( String, String, List ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,27,3,19,6
<Method>org.apache.kafka.message.StructSpec.public fields( ): List,fields( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.StructSpec.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.message.StructSpec.public versions( ): Versions,versions( ): Versions,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.StructSpec.public versionsString( ): String,versionsString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.message.StructSpec->fields,final fields : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.StructSpec->hasKeys,final hasKeys : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.StructSpec->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.StructSpec->versions,final versions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.VersionConditional,VersionConditional,low-medium,low,low-medium,low,3,25,13,1,0,35,128,121,6,0,11,1,0,0.7,0.517,0,0,0,,,,,128,,,,,,35,,,,,,,
<Method>org.apache.kafka.message.VersionConditional. allowMembershipCheckAlwaysFalse( boolean ): VersionConditional, allowMembershipCheckAlwaysFalse( boolean ): VersionConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.VersionConditional. alwaysEmitBlockScope( boolean ): VersionConditional, alwaysEmitBlockScope( boolean ): VersionConditional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.VersionConditional. generate( CodeBuffer ): void, generate( CodeBuffer ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,20,1,20,17
<Method>org.apache.kafka.message.VersionConditional. ifMember( ClauseGenerator ): VersionConditional, ifMember( ClauseGenerator ): VersionConditional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.message.VersionConditional. ifNotMember( ClauseGenerator ): VersionConditional, ifNotMember( ClauseGenerator ): VersionConditional,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.message.VersionConditional.private VersionConditional( Versions, Versions ): void","VersionConditional( Versions, Versions ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.message.VersionConditional.private generateAlwaysFalseCheck( Versions, CodeBuffer ): void","generateAlwaysFalseCheck( Versions, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,2,5,7
"<Method>org.apache.kafka.message.VersionConditional.private generateAlwaysTrueCheck( Versions, CodeBuffer ): void","generateAlwaysTrueCheck( Versions, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,2,5,4
"<Method>org.apache.kafka.message.VersionConditional.private generateFullRangeCheck( Versions, Versions, CodeBuffer ): void","generateFullRangeCheck( Versions, Versions, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,22,3,18,10
"<Method>org.apache.kafka.message.VersionConditional.private generateLowerRangeCheck( Versions, Versions, CodeBuffer ): void","generateLowerRangeCheck( Versions, Versions, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,20,3,16,8
"<Method>org.apache.kafka.message.VersionConditional.private generateUpperRangeCheck( Versions, Versions, CodeBuffer ): void","generateUpperRangeCheck( Versions, Versions, CodeBuffer ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,20,3,16,8
"<Method>org.apache.kafka.message.VersionConditional.static forVersions( Versions, Versions ): VersionConditional","static forVersions( Versions, Versions ): VersionConditional",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Field>org.apache.kafka.message.VersionConditional->allowMembershipCheckAlwaysFalse,allowMembershipCheckAlwaysFalse : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.VersionConditional->alwaysEmitBlockScope,alwaysEmitBlockScope : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.VersionConditional->containingVersions,final containingVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.VersionConditional->possibleVersions,final possibleVersions : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.VersionConditional->ifMember,ifMember : ClauseGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.VersionConditional->ifNotMember,ifNotMember : ClauseGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.message.Versions,Versions,low-medium,low,low-medium,low-medium,0,24,14,1,0,34,91,85,2,3,12,1,0,0.633,0.677,0.136,0,0,,,,,91,,,,,,34,,,,,,,
<Method>org.apache.kafka.message.Versions.private Versions( ): void,Versions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Method>org.apache.kafka.message.Versions.public Versions( short, short ): void","Versions( short, short ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,2
<Method>org.apache.kafka.message.Versions.public contains( Versions ): boolean,contains( Versions ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,4
<Method>org.apache.kafka.message.Versions.public contains( short ): boolean,contains( short ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.message.Versions.public empty( ): boolean,empty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.message.Versions.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,4
<Method>org.apache.kafka.message.Versions.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.message.Versions.public highest( ): short,highest( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.message.Versions.public intersect( Versions ): Versions,intersect( Versions ): Versions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,1,0,9
<Method>org.apache.kafka.message.Versions.public lowest( ): short,lowest( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.message.Versions.public static parse( String, Versions ): Versions","static parse( String, Versions ): Versions",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,20,2,13,2
<Method>org.apache.kafka.message.Versions.public subtract( Versions ): Versions,subtract( Versions ): Versions,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,18,1,2,12
<Method>org.apache.kafka.message.Versions.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,4,8
<Field>org.apache.kafka.message.Versions->highest,final highest : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.Versions->lowest,final lowest : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.Versions->ALL,static final ALL : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.Versions->NONE,static final NONE : Versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.message.Versions->NONE_STRING,static final NONE_STRING : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.server.authorizer,org.apache.kafka.server.authorizer,low,low-medium,low-medium,low,,,,,,43,115,,,,,,,,,,,,,8,5,3,115,1,6,0.375,0.857,0.232,43,,,,,,,
org.apache.kafka.server.authorizer.AclCreateResult,AclCreateResult,low,low,low,low,1,5,2,1,0,4,10,6,1,1,3,0,0,1,0.333,0,0,0,,,,,10,,,,,,4,,,,,,,
<Method>org.apache.kafka.server.authorizer.AclCreateResult.private AclCreateResult( ): void,AclCreateResult( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.server.authorizer.AclCreateResult.public AclCreateResult( ApiException ): void,AclCreateResult( ApiException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.server.authorizer.AclCreateResult.public exception( ): Optional,exception( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,2
<Field>org.apache.kafka.server.authorizer.AclCreateResult->exception,final exception : ApiException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.AclCreateResult->SUCCESS,static final SUCCESS : AclCreateResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.server.authorizer.AclDeleteResult,AclDeleteResult,low,low,low,low,1,8,3,1,0,6,27,11,2,0,5,0,0,0.5,0.4,1,0,0,,,,,27,,,,,,6,,,,,,,
org.apache.kafka.server.authorizer.AclDeleteResult.AclBindingDeleteResult,AclBindingDeleteResult,low,low,low,low,2,6,2,1,0,5,12,9,2,0,4,0,0,0.5,0.417,0.667,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.server.authorizer.AclDeleteResult.public AclDeleteResult( ApiException ): void,AclDeleteResult( ApiException ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.server.authorizer.AclDeleteResult.public AclDeleteResult( Collection ): void,AclDeleteResult( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.server.authorizer.AclDeleteResult.private AclDeleteResult( Collection, ApiException ): void","AclDeleteResult( Collection, ApiException ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.server.authorizer.AclDeleteResult.public aclBindingDeleteResults( ): Collection,aclBindingDeleteResults( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.AclDeleteResult.public exception( ): Optional,exception( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,2
<Field>org.apache.kafka.server.authorizer.AclDeleteResult->aclBindingDeleteResults,final aclBindingDeleteResults : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.AclDeleteResult->exception,final exception : ApiException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.server.authorizer.Action,Action,low,low,low-medium,medium-high,2,11,2,1,0,11,51,44,5,0,9,0,0,0.5,0.741,0.278,0,0,,,,,51,,,,,,11,,,,,,,
"<Method>org.apache.kafka.server.authorizer.Action.public Action( AclOperation, ResourcePattern, int, boolean, boolean ): void","Action( AclOperation, ResourcePattern, int, boolean, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
<Method>org.apache.kafka.server.authorizer.Action.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,2,10
<Method>org.apache.kafka.server.authorizer.Action.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.server.authorizer.Action.public logIfAllowed( ): boolean,logIfAllowed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.Action.public logIfDenied( ): boolean,logIfDenied( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.Action.public operation( ): AclOperation,operation( ): AclOperation,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.Action.public resourcePattern( ): ResourcePattern,resourcePattern( ): ResourcePattern,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.Action.public resourceReferenceCount( ): int,resourceReferenceCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.server.authorizer.Action.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,0,5
<Field>org.apache.kafka.server.authorizer.Action->logIfAllowed,final logIfAllowed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.Action->logIfDenied,final logIfDenied : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.Action->operation,final operation : AclOperation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.Action->resourcePattern,final resourcePattern : ResourcePattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.Action->resourceReferenceCount,final resourceReferenceCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.server.authorizer.AuthorizableRequestContext,AuthorizableRequestContext,low,low,low,low,2,8,0,1,1,8,10,8,0,0,8,0,0,0,0,0,0,0,,,,,10,,,,,,8,,,,,,,
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract clientAddress( ): InetAddress,clientAddress( ): InetAddress,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract clientId( ): String,clientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract listenerName( ): String,listenerName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract principal( ): KafkaPrincipal,principal( ): KafkaPrincipal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract requestType( ): int,requestType( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract requestVersion( ): int,requestVersion( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizableRequestContext.public abstract securityProtocol( ): SecurityProtocol,securityProtocol( ): SecurityProtocol,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.server.authorizer.AuthorizationResult,AuthorizationResult,low-medium,low,low,low,0,0,0,2,0,0,4,0,0,2,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.server.authorizer.AuthorizationResult->ALLOWED,static final ALLOWED : AuthorizationResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.authorizer.AuthorizationResult->DENIED,static final DENIED : AuthorizationResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.server.authorizer.Authorizer,Authorizer,low,low,low,low,3,5,0,1,0,5,7,5,0,0,5,0,0,0,0.48,0,0,0,,,,,7,,,,,,5,,,,,,,
<Method>org.apache.kafka.server.authorizer.Authorizer.public abstract acls( AclBindingFilter ): Iterable,acls( AclBindingFilter ): Iterable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.server.authorizer.Authorizer.public abstract authorize( AuthorizableRequestContext, List ): List","authorize( AuthorizableRequestContext, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.server.authorizer.Authorizer.public abstract createAcls( AuthorizableRequestContext, List ): List","createAcls( AuthorizableRequestContext, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.server.authorizer.Authorizer.public abstract deleteAcls( AuthorizableRequestContext, List ): List","deleteAcls( AuthorizableRequestContext, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.server.authorizer.Authorizer.public abstract start( AuthorizerServerInfo ): Map,start( AuthorizerServerInfo ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.server.authorizer.AuthorizerServerInfo,AuthorizerServerInfo,low,low,low,low,2,4,0,1,0,4,6,4,0,0,4,0,0,0,0,0,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.server.authorizer.AuthorizerServerInfo.public abstract brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizerServerInfo.public abstract clusterResource( ): ClusterResource,clusterResource( ): ClusterResource,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizerServerInfo.public abstract endpoints( ): Collection,endpoints( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.server.authorizer.AuthorizerServerInfo.public abstract interBrokerEndpoint( ): Endpoint,interBrokerEndpoint( ): Endpoint,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.server.policy,org.apache.kafka.server.policy,low,low,low,low,,,,,,14,48,,,,,,,,,,,,,4,2,2,48,0,2,0.5,1,0.5,14,,,,,,,
org.apache.kafka.server.policy.AlterConfigPolicy,AlterConfigPolicy,low,low,low,low,0,1,0,1,0,1,16,1,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.server.policy.AlterConfigPolicy.RequestMetadata,RequestMetadata,low,low,low,low,1,4,0,1,0,4,14,11,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.server.policy.AlterConfigPolicy.public abstract validate( RequestMetadata ): void,validate( RequestMetadata ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.server.policy.CreateTopicPolicy,CreateTopicPolicy,low,low,low,low,0,1,0,1,0,1,32,1,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
org.apache.kafka.server.policy.CreateTopicPolicy.RequestMetadata,RequestMetadata,low,low,low,low,0,8,1,1,0,8,30,24,5,0,7,0,0,0.667,0.686,0.476,0,0,,,,,30,,,,,,8,,,,,,,
<Method>org.apache.kafka.server.policy.CreateTopicPolicy.public abstract validate( RequestMetadata ): void,validate( RequestMetadata ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.server.quota,org.apache.kafka.server.quota,low,low,low,low,,,,,,10,22,,,,,,,,,,,,,5,2,3,22,0,1,0.6,1,0.6,10,,,,,,,
org.apache.kafka.server.quota.ClientQuotaCallback,ClientQuotaCallback,low,low,low,low-medium,4,7,0,1,0,7,8,7,0,0,7,0,0,0,0.661,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract quotaLimit( ClientQuotaType, Map ): Double","quotaLimit( ClientQuotaType, Map ): Double",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract quotaMetricTags( ClientQuotaType, KafkaPrincipal, String ): Map","quotaMetricTags( ClientQuotaType, KafkaPrincipal, String ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract quotaResetRequired( ClientQuotaType ): boolean,quotaResetRequired( ClientQuotaType ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract removeQuota( ClientQuotaType, ClientQuotaEntity ): void","removeQuota( ClientQuotaType, ClientQuotaEntity ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract updateClusterMetadata( Cluster ): boolean,updateClusterMetadata( Cluster ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.server.quota.ClientQuotaCallback.public abstract updateQuota( ClientQuotaType, ClientQuotaEntity, double ): void","updateQuota( ClientQuotaType, ClientQuotaEntity, double ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.server.quota.ClientQuotaEntity,ClientQuotaEntity,low,low,low,low,0,1,0,1,0,1,10,1,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.server.quota.ClientQuotaEntity.ConfigEntity,ConfigEntity,low,low,low,low,1,2,0,1,0,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.server.quota.ClientQuotaEntity.ConfigEntityType,ConfigEntityType,low,low,low,low,0,0,0,2,0,0,5,0,0,4,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.server.quota.ClientQuotaEntity.public abstract configEntities( ): List,configEntities( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.server.quota.ClientQuotaType,ClientQuotaType,low-medium,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.server.quota.ClientQuotaType->FETCH,static final FETCH : ClientQuotaType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.quota.ClientQuotaType->PRODUCE,static final PRODUCE : ClientQuotaType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.server.quota.ClientQuotaType->REQUEST,static final REQUEST : ClientQuotaType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams,org.apache.kafka.streams,low-medium,low-medium,medium-high,low,,,,,,344,1940,,,,,,,,,,,,,22,12,10,1940,80,9,0.455,0.101,0.444,344,,,,,,,
org.apache.kafka.streams.KafkaClientSupplier,KafkaClientSupplier,low,low,low,low,4,6,1,1,1,6,13,6,0,0,6,0,0,0,0,0,0,0,,,,,13,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.KafkaClientSupplier.public getAdmin( Map ): Admin,getAdmin( Map ): Admin,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,1,0
<Method>org.apache.kafka.streams.KafkaClientSupplier.public getAdminClient( Map ): AdminClient,getAdminClient( Map ): AdminClient,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.KafkaClientSupplier.public abstract getConsumer( Map ): Consumer,getConsumer( Map ): Consumer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.KafkaClientSupplier.public abstract getGlobalConsumer( Map ): Consumer,getGlobalConsumer( Map ): Consumer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.KafkaClientSupplier.public abstract getProducer( Map ): Producer,getProducer( Map ): Producer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.KafkaClientSupplier.public abstract getRestoreConsumer( Map ): Consumer,getRestoreConsumer( Map ): Consumer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.KafkaStreams,KafkaStreams,very-high,very-high,medium-high,high,38,345,96,1,0,90,457,342,19,1,30,3,0,0.898,0.873,0.917,1,0,,,,,457,,,,,,90,,,,,,,
org.apache.kafka.streams.KafkaStreams.DelegatingStateRestoreListener,DelegatingStateRestoreListener,low,low,low,low,1,4,0,1,0,4,0,0,0,0,4,0,,0,0.2,0,0,0,,,,,0,,,,,,4,,,,,,,
org.apache.kafka.streams.KafkaStreams.State,State,low,low,low,low,0,3,0,2,0,3,7,0,1,6,3,0,,0,0.444,1,0,0,,,,,7,,,,,,3,,,,,,,
org.apache.kafka.streams.KafkaStreams.StateListener,StateListener,low,low,low,low,1,1,0,1,0,1,0,0,0,0,1,0,,0,0,0,0,0,,,,,0,,,,,,1,,,,,,,
org.apache.kafka.streams.KafkaStreams.StreamStateListener,StreamStateListener,low,low,low,low,2,4,0,1,0,4,3,0,3,0,4,0,,0,0.6,0,0,0,,,,,3,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.KafkaStreams.private KafkaStreams( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier ): void","KafkaStreams( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.private KafkaStreams( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier, Time ): void","KafkaStreams( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier, Time ): void",low,very-high,high,low,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,102,4,58,52
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, Properties ): void","KafkaStreams( Topology, Properties ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, Properties, KafkaClientSupplier ): void","KafkaStreams( Topology, Properties, KafkaClientSupplier ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, Properties, KafkaClientSupplier, Time ): void","KafkaStreams( Topology, Properties, KafkaClientSupplier, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, Properties, Time ): void","KafkaStreams( Topology, Properties, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, StreamsConfig ): void","KafkaStreams( Topology, StreamsConfig ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, StreamsConfig, KafkaClientSupplier ): void","KafkaStreams( Topology, StreamsConfig, KafkaClientSupplier ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
"<Method>org.apache.kafka.streams.KafkaStreams.public KafkaStreams( Topology, StreamsConfig, Time ): void","KafkaStreams( Topology, StreamsConfig, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
<Method>org.apache.kafka.streams.KafkaStreams.public allMetadata( ): Collection,allMetadata( ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.streams.KafkaStreams.public allMetadataForStore( String ): Collection,allMetadataForStore( String ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.streams.KafkaStreams.public cleanUp( ): void,cleanUp( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,1
<Method>org.apache.kafka.streams.KafkaStreams.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.KafkaStreams.private close( long ): boolean,close( long ): boolean,low-medium,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,6,37,1,9,6
<Method>org.apache.kafka.streams.KafkaStreams.private isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,2
<Method>org.apache.kafka.streams.KafkaStreams.public localThreadsMetadata( ): Set,localThreadsMetadata( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,1
"<Method>org.apache.kafka.streams.KafkaStreams.public metadataForKey( String, K, Serializer ): StreamsMetadata","metadataForKey( String, K, Serializer ): StreamsMetadata",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,1
"<Method>org.apache.kafka.streams.KafkaStreams.public metadataForKey( String, K, StreamPartitioner ): StreamsMetadata","metadataForKey( String, K, StreamPartitioner ): StreamsMetadata",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,1
<Method>org.apache.kafka.streams.KafkaStreams.public metrics( ): Map,metrics( ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,11,4
<Method>org.apache.kafka.streams.KafkaStreams.public setGlobalStateRestoreListener( StateRestoreListener ): void,setGlobalStateRestoreListener( StateRestoreListener ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,7,1,0,4
<Method>org.apache.kafka.streams.KafkaStreams.private setState( State ): boolean,setState( State ): boolean,low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,21,1,4,13
<Method>org.apache.kafka.streams.KafkaStreams.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,6,1,0,4
<Method>org.apache.kafka.streams.KafkaStreams.public setUncaughtExceptionHandler( UncaughtExceptionHandler ): void,setUncaughtExceptionHandler( UncaughtExceptionHandler ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,1,2,6
<Method>org.apache.kafka.streams.KafkaStreams.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.KafkaStreams.private static maybeCreateRocksDBMetricsRecordingService( String, StreamsConfig ): ScheduledExecutorService","static maybeCreateRocksDBMetricsRecordingService( String, StreamsConfig ): ScheduledExecutorService",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,2,3,0
"<Method>org.apache.kafka.streams.KafkaStreams.private static maybeWarnAboutCodeInRocksDBConfigSetter( Logger, StreamsConfig ): void","static maybeWarnAboutCodeInRocksDBConfigSetter( Logger, StreamsConfig ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,2,0
<Method>org.apache.kafka.streams.KafkaStreams.private static parseHostInfo( String ): HostInfo,static parseHostInfo( String ): HostInfo,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,8,1,5,0
"<Method>org.apache.kafka.streams.KafkaStreams.public store( String, QueryableStoreType ): T","store( String, QueryableStoreType ): T",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
<Method>org.apache.kafka.streams.KafkaStreams.public synchronized close( Duration ): boolean,synchronized close( Duration ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,1
"<Method>org.apache.kafka.streams.KafkaStreams.public synchronized close( long, TimeUnit ): boolean","synchronized close( long, TimeUnit ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,3,1
<Method>org.apache.kafka.streams.KafkaStreams.public synchronized start( ): void,synchronized start( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,23,0,7,9
<Method>org.apache.kafka.streams.KafkaStreams.private validateIsRunning( ): void,validateIsRunning( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,1,1
"<Method>org.apache.kafka.streams.KafkaStreams.private waitOnState( State, long ): boolean","waitOnState( State, long ): boolean",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,5,15,2,4,6
<Field>org.apache.kafka.streams.KafkaStreams->globalStreamThread, globalStreamThread : GlobalStreamThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->adminClient,final adminClient : Admin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->config,final config : StreamsConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->queryableStoreProvider,final queryableStoreProvider : QueryableStoreProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->rocksDBMetricsRecordingService,final rocksDBMetricsRecordingService : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->rocksDBMetricsRecordingTrigger,final rocksDBMetricsRecordingTrigger : RocksDBMetricsRecordingTrigger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->stateDirCleaner,final stateDirCleaner : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->stateDirectory,final stateDirectory : StateDirectory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->stateLock,final stateLock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->streamsMetadataState,final streamsMetadataState : StreamsMetadataState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->streamsMetrics,final streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->threads,final threads : StreamThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->globalStateRestoreListener,globalStateRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->JMX_PREFIX,static final JMX_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreams->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.KeyValue<K,V>",KeyValue,low,low,low,low,2,7,2,1,0,7,22,19,2,0,4,1,0,0,0.5,0.4,0,0,,,,,22,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public KeyValue( K, V ): void","KeyValue( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public equals( Object ): boolean",equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,4
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public static pair( K, V ): KeyValue","static pair( K, V ): KeyValue",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.streams.KeyValue<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Field>org.apache.kafka.streams.KeyValue<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.KeyValue<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsBuilder,StreamsBuilder,medium-high,medium-high,low-medium,low-medium,12,146,25,1,0,19,126,122,3,0,19,0,0,0.697,0.684,0.614,0,0,,,,,126,,,,,,19,,,,,,,
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized addGlobalStore( StoreBuilder, String, Consumed, ProcessorSupplier ): StreamsBuilder","synchronized addGlobalStore( StoreBuilder, String, Consumed, ProcessorSupplier ): StreamsBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,4,3,1
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized addGlobalStore( StoreBuilder, String, String, Consumed, String, ProcessorSupplier ): StreamsBuilder","synchronized addGlobalStore( StoreBuilder, String, String, Consumed, String, ProcessorSupplier ): StreamsBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,6,3,1
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized addStateStore( StoreBuilder ): StreamsBuilder,synchronized addStateStore( StoreBuilder ): StreamsBuilder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized build( ): Topology,synchronized build( ): Topology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized build( Properties ): Topology,synchronized build( Properties ): Topology,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized globalTable( String ): GlobalKTable,synchronized globalTable( String ): GlobalKTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized globalTable( String, Consumed ): GlobalKTable","synchronized globalTable( String, Consumed ): GlobalKTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,6,2
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized globalTable( String, Consumed, Materialized ): GlobalKTable","synchronized globalTable( String, Consumed, Materialized ): GlobalKTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,8,2
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized globalTable( String, Materialized ): GlobalKTable","synchronized globalTable( String, Materialized ): GlobalKTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,6,2
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( Collection ): KStream,synchronized stream( Collection ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( Collection, Consumed ): KStream","synchronized stream( Collection, Consumed ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( Pattern ): KStream,synchronized stream( Pattern ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( Pattern, Consumed ): KStream","synchronized stream( Pattern, Consumed ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( String ): KStream,synchronized stream( String ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized stream( String, Consumed ): KStream","synchronized stream( String, Consumed ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized table( String ): KTable,synchronized table( String ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized table( String, Consumed ): KTable","synchronized table( String, Consumed ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,6,2
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized table( String, Consumed, Materialized ): KTable","synchronized table( String, Consumed, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,8,2
"<Method>org.apache.kafka.streams.StreamsBuilder.public synchronized table( String, Materialized ): KTable","synchronized table( String, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,6,2
<Field>org.apache.kafka.streams.StreamsBuilder->internalStreamsBuilder,final internalStreamsBuilder : InternalStreamsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsBuilder->internalTopologyBuilder,final internalTopologyBuilder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsBuilder->topology,final topology : Topology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsConfig,StreamsConfig,medium-high,medium-high,medium-high,low-medium,13,112,45,2,1,59,646,214,1,102,19,9,1,1.013,0.685,0.91,0,0.105,,,,,646,,,,,,59,,,,,,,
org.apache.kafka.streams.StreamsConfig.InternalConfig,InternalConfig,low,low,low,low,0,0,0,1,0,0,2,0,0,2,0,0,,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.StreamsConfig.public StreamsConfig( Map ): void,StreamsConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.StreamsConfig.protected StreamsConfig( Map, boolean ): void","StreamsConfig( Map, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,7
"<Method>org.apache.kafka.streams.StreamsConfig.private checkIfUnexpectedUserSpecifiedConsumerConfig( Map, String ): void","checkIfUnexpectedUserSpecifiedConsumerConfig( Map, String ): void",low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,6,35,2,33,16
"<Method>org.apache.kafka.streams.StreamsConfig.private clientProps( Set, Map ): Map","clientProps( Set, Map ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,2,3,0
<Method>org.apache.kafka.streams.StreamsConfig.public defaultDeserializationExceptionHandler( ): DeserializationExceptionHandler,defaultDeserializationExceptionHandler( ): DeserializationExceptionHandler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.StreamsConfig.public defaultKeySerde( ): Serde,defaultKeySerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,5,2
<Method>org.apache.kafka.streams.StreamsConfig.public defaultProductionExceptionHandler( ): ProductionExceptionHandler,defaultProductionExceptionHandler( ): ProductionExceptionHandler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.StreamsConfig.public defaultTimestampExtractor( ): TimestampExtractor,defaultTimestampExtractor( ): TimestampExtractor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.StreamsConfig.public defaultValueSerde( ): Serde,defaultValueSerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,5,2
<Method>org.apache.kafka.streams.StreamsConfig.public getAdminConfigs( String ): Map,getAdminConfigs( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,6,2
<Method>org.apache.kafka.streams.StreamsConfig.private getClientCustomProps( ): Map,getClientCustomProps( ): Map,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,25,4
"<Method>org.apache.kafka.streams.StreamsConfig.private getClientPropsWithPrefix( String, Set ): Map","getClientPropsWithPrefix( String, Set ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
<Method>org.apache.kafka.streams.StreamsConfig.private getCommonConsumerConfigs( ): Map,getCommonConsumerConfigs( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,9,0,10,8
"<Method>org.apache.kafka.streams.StreamsConfig.public getConsumerConfigs( String, String ): Map","getConsumerConfigs( String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.StreamsConfig.public getGlobalConsumerConfigs( String ): Map,getGlobalConsumerConfigs( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,9,2
"<Method>org.apache.kafka.streams.StreamsConfig.public getMainConsumerConfigs( String, String, int ): Map","getMainConsumerConfigs( String, String, int ): Map",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,33,3,46,20
<Method>org.apache.kafka.streams.StreamsConfig.public getProducerConfigs( String ): Map,getProducerConfigs( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,1,10,8
<Method>org.apache.kafka.streams.StreamsConfig.public getRestoreConsumerConfigs( String ): Map,getRestoreConsumerConfigs( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,9,2
<Method>org.apache.kafka.streams.StreamsConfig.protected postProcessParsedConfig( Map ): Map,postProcessParsedConfig( Map ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,7,8
<Method>org.apache.kafka.streams.StreamsConfig.public static adminClientPrefix( String ): String,static adminClientPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static configDef( ): ConfigDef,static configDef( ): ConfigDef,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static consumerPrefix( String ): String,static consumerPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static globalConsumerPrefix( String ): String,static globalConsumerPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static main( String ): void,static main( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.StreamsConfig.public static mainConsumerPrefix( String ): String,static mainConsumerPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static producerPrefix( String ): String,static producerPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static restoreConsumerPrefix( String ): String,static restoreConsumerPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.StreamsConfig.public static topicPrefix( String ): String,static topicPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.streams.StreamsConfig->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->ADMIN_CLIENT_PREFIX,static final ADMIN_CLIENT_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->APPLICATION_ID_CONFIG,static final APPLICATION_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->APPLICATION_ID_DOC,static final APPLICATION_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->APPLICATION_SERVER_CONFIG,static final APPLICATION_SERVER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->APPLICATION_SERVER_DOC,static final APPLICATION_SERVER_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->AT_LEAST_ONCE,static final AT_LEAST_ONCE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->BOOTSTRAP_SERVERS_CONFIG,static final BOOTSTRAP_SERVERS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->BUFFERED_RECORDS_PER_PARTITION_CONFIG,static final BUFFERED_RECORDS_PER_PARTITION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->BUFFERED_RECORDS_PER_PARTITION_DOC,static final BUFFERED_RECORDS_PER_PARTITION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->BUILT_IN_METRICS_VERSION_CONFIG,static final BUILT_IN_METRICS_VERSION_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->BUILT_IN_METRICS_VERSION_DOC,static final BUILT_IN_METRICS_VERSION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CACHE_MAX_BYTES_BUFFERING_CONFIG,static final CACHE_MAX_BYTES_BUFFERING_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CACHE_MAX_BYTES_BUFFERING_DOC,static final CACHE_MAX_BYTES_BUFFERING_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CLIENT_ID_DOC,static final CLIENT_ID_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->COMMIT_INTERVAL_MS_CONFIG,static final COMMIT_INTERVAL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->COMMIT_INTERVAL_MS_DOC,static final COMMIT_INTERVAL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CONFIG,static final CONFIG : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CONNECTIONS_MAX_IDLE_MS_CONFIG,static final CONNECTIONS_MAX_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CONSUMER_DEFAULT_OVERRIDES,static final CONSUMER_DEFAULT_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CONSUMER_EOS_OVERRIDES,static final CONSUMER_EOS_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->CONSUMER_PREFIX,static final CONSUMER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_COMMIT_INTERVAL_MS,static final DEFAULT_COMMIT_INTERVAL_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_CONFIG,static final DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_DOC,static final DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_KEY_SERDE_CLASS_CONFIG,static final DEFAULT_KEY_SERDE_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_KEY_SERDE_CLASS_DOC,static final DEFAULT_KEY_SERDE_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_CONFIG,static final DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_DOC,static final DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_CONFIG,static final DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_DOC,static final DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_VALUE_SERDE_CLASS_CONFIG,static final DEFAULT_VALUE_SERDE_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_VALUE_SERDE_CLASS_DOC,static final DEFAULT_VALUE_SERDE_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS,static final DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS,static final DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->DUMMY_THREAD_INDEX,static final DUMMY_THREAD_INDEX : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->EOS_DEFAULT_COMMIT_INTERVAL_MS,static final EOS_DEFAULT_COMMIT_INTERVAL_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->EXACTLY_ONCE,static final EXACTLY_ONCE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->GLOBAL_CONSUMER_PREFIX,static final GLOBAL_CONSUMER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->MAIN_CONSUMER_PREFIX,static final MAIN_CONSUMER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->MAX_TASK_IDLE_MS_CONFIG,static final MAX_TASK_IDLE_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->MAX_TASK_IDLE_MS_DOC,static final MAX_TASK_IDLE_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METADATA_MAX_AGE_CONFIG,static final METADATA_MAX_AGE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRICS_0100_TO_24,static final METRICS_0100_TO_24 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRICS_LATEST,static final METRICS_LATEST : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRICS_NUM_SAMPLES_CONFIG,static final METRICS_NUM_SAMPLES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRICS_RECORDING_LEVEL_CONFIG,static final METRICS_RECORDING_LEVEL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRICS_SAMPLE_WINDOW_MS_CONFIG,static final METRICS_SAMPLE_WINDOW_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->METRIC_REPORTER_CLASSES_CONFIG,static final METRIC_REPORTER_CLASSES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS,static final NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NON_CONFIGURABLE_CONSUMER_EOS_CONFIGS,static final NON_CONFIGURABLE_CONSUMER_EOS_CONFIGS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NON_CONFIGURABLE_PRODUCER_EOS_CONFIGS,static final NON_CONFIGURABLE_PRODUCER_EOS_CONFIGS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NO_OPTIMIZATION,static final NO_OPTIMIZATION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NUM_STANDBY_REPLICAS_CONFIG,static final NUM_STANDBY_REPLICAS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NUM_STANDBY_REPLICAS_DOC,static final NUM_STANDBY_REPLICAS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NUM_STREAM_THREADS_CONFIG,static final NUM_STREAM_THREADS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->NUM_STREAM_THREADS_DOC,static final NUM_STREAM_THREADS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->OPTIMIZE,static final OPTIMIZE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PARTITION_GROUPER_CLASS_CONFIG,static final PARTITION_GROUPER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PARTITION_GROUPER_CLASS_DOC,static final PARTITION_GROUPER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->POLL_MS_CONFIG,static final POLL_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->POLL_MS_DOC,static final POLL_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PROCESSING_GUARANTEE_CONFIG,static final PROCESSING_GUARANTEE_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PROCESSING_GUARANTEE_DOC,static final PROCESSING_GUARANTEE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PRODUCER_DEFAULT_OVERRIDES,static final PRODUCER_DEFAULT_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PRODUCER_EOS_OVERRIDES,static final PRODUCER_EOS_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->PRODUCER_PREFIX,static final PRODUCER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RECEIVE_BUFFER_CONFIG,static final RECEIVE_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RECONNECT_BACKOFF_MAX_MS_CONFIG,static final RECONNECT_BACKOFF_MAX_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RECONNECT_BACKOFF_MS_CONFIG,static final RECONNECT_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->REPLICATION_FACTOR_CONFIG,static final REPLICATION_FACTOR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->REPLICATION_FACTOR_DOC,static final REPLICATION_FACTOR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->REQUEST_TIMEOUT_MS_CONFIG,static final REQUEST_TIMEOUT_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RESTORE_CONSUMER_PREFIX,static final RESTORE_CONSUMER_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RETRIES_CONFIG,static final RETRIES_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->RETRY_BACKOFF_MS_CONFIG,static final RETRY_BACKOFF_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->ROCKSDB_CONFIG_SETTER_CLASS_CONFIG,static final ROCKSDB_CONFIG_SETTER_CLASS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->ROCKSDB_CONFIG_SETTER_CLASS_DOC,static final ROCKSDB_CONFIG_SETTER_CLASS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->SECURITY_PROTOCOL_CONFIG,static final SECURITY_PROTOCOL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->SEND_BUFFER_CONFIG,static final SEND_BUFFER_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->STATE_CLEANUP_DELAY_MS_CONFIG,static final STATE_CLEANUP_DELAY_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->STATE_CLEANUP_DELAY_MS_DOC,static final STATE_CLEANUP_DELAY_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->STATE_DIR_CONFIG,static final STATE_DIR_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->STATE_DIR_DOC,static final STATE_DIR_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->TOPIC_PREFIX,static final TOPIC_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->TOPOLOGY_OPTIMIZATION,static final TOPOLOGY_OPTIMIZATION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->TOPOLOGY_OPTIMIZATION_DOC,static final TOPOLOGY_OPTIMIZATION_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_0100,static final UPGRADE_FROM_0100 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_0101,static final UPGRADE_FROM_0101 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_0102,static final UPGRADE_FROM_0102 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_0110,static final UPGRADE_FROM_0110 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_10,static final UPGRADE_FROM_10 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_11,static final UPGRADE_FROM_11 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_20,static final UPGRADE_FROM_20 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_21,static final UPGRADE_FROM_21 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_22,static final UPGRADE_FROM_22 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_23,static final UPGRADE_FROM_23 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_CONFIG,static final UPGRADE_FROM_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->UPGRADE_FROM_DOC,static final UPGRADE_FROM_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG,static final WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_DOC,static final WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.StreamsConfig->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamsMetrics,StreamsMetrics,low,low,low,low,2,10,0,1,1,10,37,10,0,0,10,0,0,0,0.44,0,0,0,,,,,37,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addLatencyAndThroughputSensor( String, String, String, RecordingLevel, String ): Sensor","addLatencyAndThroughputSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addLatencyRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor","addLatencyRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor","addRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addSensor( String, RecordingLevel ): Sensor","addSensor( String, RecordingLevel ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addSensor( String, RecordingLevel, Sensor ): Sensor","addSensor( String, RecordingLevel, Sensor ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract addThroughputSensor( String, String, String, RecordingLevel, String ): Sensor","addThroughputSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
<Method>org.apache.kafka.streams.StreamsMetrics.public abstract metrics( ): Map,metrics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract recordLatency( Sensor, long, long ): void","recordLatency( Sensor, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.StreamsMetrics.public abstract recordThroughput( Sensor, long ): void","recordThroughput( Sensor, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.StreamsMetrics.public abstract removeSensor( Sensor ): void,removeSensor( Sensor ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.Topology,Topology,low-medium,low-medium,low-medium,low-medium,9,100,9,1,0,28,179,175,1,0,28,0,0,0,0.666,0,0,0,,,,,179,,,,,,28,,,,,,,
org.apache.kafka.streams.Topology.AutoOffsetReset,AutoOffsetReset,low,low,low,low,0,0,0,2,0,0,2,0,0,2,0,0,,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.Topology.public synchronized addGlobalStore( StoreBuilder, String, Deserializer, Deserializer, String, String, ProcessorSupplier ): Topology","synchronized addGlobalStore( StoreBuilder, String, Deserializer, Deserializer, String, String, ProcessorSupplier ): Topology",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,7,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addGlobalStore( StoreBuilder, String, TimestampExtractor, Deserializer, Deserializer, String, String, ProcessorSupplier ): Topology","synchronized addGlobalStore( StoreBuilder, String, TimestampExtractor, Deserializer, Deserializer, String, String, ProcessorSupplier ): Topology",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,8,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addProcessor( String, ProcessorSupplier, String ): Topology","synchronized addProcessor( String, ProcessorSupplier, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, String, Serializer, Serializer, StreamPartitioner, String ): Topology","synchronized addSink( String, String, Serializer, Serializer, StreamPartitioner, String ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, String, Serializer, Serializer, String ): Topology","synchronized addSink( String, String, Serializer, Serializer, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, String, StreamPartitioner, String ): Topology","synchronized addSink( String, String, StreamPartitioner, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, String, String ): Topology","synchronized addSink( String, String, String ): Topology",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner, String ): Topology","synchronized addSink( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner, String ): Topology",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, TopicNameExtractor, Serializer, Serializer, String ): Topology","synchronized addSink( String, TopicNameExtractor, Serializer, Serializer, String ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, TopicNameExtractor, StreamPartitioner, String ): Topology","synchronized addSink( String, TopicNameExtractor, StreamPartitioner, String ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSink( String, TopicNameExtractor, String ): Topology","synchronized addSink( String, TopicNameExtractor, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, Deserializer, Deserializer, Pattern ): Topology","synchronized addSource( AutoOffsetReset, String, Deserializer, Deserializer, Pattern ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, Deserializer, Deserializer, String ): Topology","synchronized addSource( AutoOffsetReset, String, Deserializer, Deserializer, String ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,5,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, Pattern ): Topology","synchronized addSource( AutoOffsetReset, String, Pattern ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, String ): Topology","synchronized addSource( AutoOffsetReset, String, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, Pattern ): Topology","synchronized addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, Pattern ): Topology",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,6,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, String ): Topology","synchronized addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, String ): Topology",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,6,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, TimestampExtractor, String, Pattern ): Topology","synchronized addSource( AutoOffsetReset, TimestampExtractor, String, Pattern ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( AutoOffsetReset, TimestampExtractor, String, String ): Topology","synchronized addSource( AutoOffsetReset, TimestampExtractor, String, String ): Topology",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( String, Deserializer, Deserializer, Pattern ): Topology","synchronized addSource( String, Deserializer, Deserializer, Pattern ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( String, Deserializer, Deserializer, String ): Topology","synchronized addSource( String, Deserializer, Deserializer, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( String, Pattern ): Topology","synchronized addSource( String, Pattern ): Topology",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( String, String ): Topology","synchronized addSource( String, String ): Topology",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( TimestampExtractor, String, Pattern ): Topology","synchronized addSource( TimestampExtractor, String, Pattern ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addSource( TimestampExtractor, String, String ): Topology","synchronized addSource( TimestampExtractor, String, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized addStateStore( StoreBuilder, String ): Topology","synchronized addStateStore( StoreBuilder, String ): Topology",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.Topology.public synchronized connectProcessorAndStateStores( String, String ): Topology","synchronized connectProcessorAndStateStores( String, String ): Topology",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.Topology.public synchronized describe( ): TopologyDescription,synchronized describe( ): TopologyDescription,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.streams.Topology->internalTopologyBuilder,final internalTopologyBuilder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.TopologyDescription,TopologyDescription,low,low,low,low,0,2,0,1,1,2,24,2,0,0,2,0,0,0,0,0,0,0,,,,,24,,,,,,2,,,,,,,
org.apache.kafka.streams.TopologyDescription.GlobalStore,GlobalStore,low,low,low,low,2,3,0,1,1,3,0,0,0,0,3,0,,0,0,0,0,0,,,,,0,,,,,,3,,,,,,,
org.apache.kafka.streams.TopologyDescription.Node,Node,low,low,low,low,0,3,0,1,4,3,0,0,0,0,3,0,,0,0,0,0,0,,,,,0,,,,,,3,,,,,,,
org.apache.kafka.streams.TopologyDescription.Processor,Processor,low,low,low,low,0,1,0,1,1,1,0,0,0,0,1,0,,0,0,0,0,0,,,,,0,,,,,,1,,,,,,,
org.apache.kafka.streams.TopologyDescription.Sink,Sink,low,low,low,low,1,2,0,1,1,2,0,0,0,0,2,0,,0,0,0,0,0,,,,,0,,,,,,2,,,,,,,
org.apache.kafka.streams.TopologyDescription.Source,Source,low,low,low,low,0,3,0,1,1,3,0,0,0,0,3,0,,0,0,0,0,0,,,,,0,,,,,,3,,,,,,,
org.apache.kafka.streams.TopologyDescription.Subtopology,Subtopology,low,low,low,low,0,2,0,1,1,2,0,0,0,0,2,0,,0,0,0,0,0,,,,,0,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.TopologyDescription.public abstract globalStores( ): Set,globalStores( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.TopologyDescription.public abstract subtopologies( ): Set,subtopologies( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.TopologyTestDriver,TopologyTestDriver,very-high,very-high,medium-high,high,54,514,122,1,0,97,436,392,16,3,36,0,0,0.901,0.876,0.976,0,0,,,,,436,,,,,,97,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.TopologyTestDriver$14831;,Lorg.apache.kafka.streams.TopologyTestDriver$14831;,low,low,low,low,0,0,0,2,0,0,4,0,0,0,0,0,1,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.TopologyTestDriver$16575;,Lorg.apache.kafka.streams.TopologyTestDriver$16575;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.TopologyTestDriver$48857;,Lorg.apache.kafka.streams.TopologyTestDriver$48857;,low,low,low,low,0,0,0,2,0,0,8,0,0,0,0,0,3,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.TopologyTestDriver.MockTime,MockTime,low,low,low,low,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,0,0,,,,,0,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.TopologyTestDriver. pipeRecord( String, TestRecord, Serializer, Serializer, Instant ): void"," pipeRecord( String, TestRecord, Serializer, Serializer, Instant ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,5,11,0
<Method>org.apache.kafka.streams.TopologyTestDriver. readRecord( String ): ProducerRecord, readRecord( String ): ProducerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,0
"<Method>org.apache.kafka.streams.TopologyTestDriver. readRecord( String, Deserializer, Deserializer ): TestRecord"," readRecord( String, Deserializer, Deserializer ): TestRecord",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,3,10,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.private TopologyTestDriver( InternalTopologyBuilder, Properties, long ): void","TopologyTestDriver( InternalTopologyBuilder, Properties, long ): void",low,very-high,high,low,34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,115,3,51,52
"<Method>org.apache.kafka.streams.TopologyTestDriver.public TopologyTestDriver( Topology, Properties ): void","TopologyTestDriver( Topology, Properties ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.public TopologyTestDriver( Topology, Properties, Instant ): void","TopologyTestDriver( Topology, Properties, Instant ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,3,2,1
"<Method>org.apache.kafka.streams.TopologyTestDriver.public TopologyTestDriver( Topology, Properties, long ): void","TopologyTestDriver( Topology, Properties, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,1
<Method>org.apache.kafka.streams.TopologyTestDriver.public advanceWallClockTime( Duration ): void,advanceWallClockTime( Duration ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,6,4
<Method>org.apache.kafka.streams.TopologyTestDriver.public advanceWallClockTime( long ): void,advanceWallClockTime( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.streams.TopologyTestDriver.private captureOutputRecords( ): void,captureOutputRecords( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,12,0,14,10
<Method>org.apache.kafka.streams.TopologyTestDriver.public close( ): void,close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,0,5,7
<Method>org.apache.kafka.streams.TopologyTestDriver.private createRestoreConsumer( Map ): MockConsumer,createRestoreConsumer( Map ): MockConsumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,1,6,2
"<Method>org.apache.kafka.streams.TopologyTestDriver.public final createInputTopic( String, Serializer, Serializer ): TestInputTopic","final createInputTopic( String, Serializer, Serializer ): TestInputTopic",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.public final createInputTopic( String, Serializer, Serializer, Instant, Duration ): TestInputTopic","final createInputTopic( String, Serializer, Serializer, Instant, Duration ): TestInputTopic",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.public final createOutputTopic( String, Deserializer, Deserializer ): TestOutputTopic","final createOutputTopic( String, Deserializer, Deserializer ): TestOutputTopic",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Method>org.apache.kafka.streams.TopologyTestDriver.final getQueueSize( String ): long,final getQueueSize( String ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,0
<Method>org.apache.kafka.streams.TopologyTestDriver.final isEmpty( String ): boolean,final isEmpty( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.streams.TopologyTestDriver.public getAllStateStores( ): Map,getAllStateStores( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,1
<Method>org.apache.kafka.streams.TopologyTestDriver.public getKeyValueStore( String ): KeyValueStore,getKeyValueStore( String ): KeyValueStore,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,1
<Method>org.apache.kafka.streams.TopologyTestDriver.private getRecordsQueue( String ): Queue,getRecordsQueue( String ): Queue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,3,2
<Method>org.apache.kafka.streams.TopologyTestDriver.public getSessionStore( String ): SessionStore,getSessionStore( String ): SessionStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,0
<Method>org.apache.kafka.streams.TopologyTestDriver.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.private getStateStore( String, boolean ): StateStore","getStateStore( String, boolean ): StateStore",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,15,2,6,4
<Method>org.apache.kafka.streams.TopologyTestDriver.public getTimestampedKeyValueStore( String ): KeyValueStore,getTimestampedKeyValueStore( String ): KeyValueStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,0
<Method>org.apache.kafka.streams.TopologyTestDriver.public getTimestampedWindowStore( String ): WindowStore,getTimestampedWindowStore( String ): WindowStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,0
<Method>org.apache.kafka.streams.TopologyTestDriver.private getTopicPartition( String ): TopicPartition,getTopicPartition( String ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,7,1,7,2
<Method>org.apache.kafka.streams.TopologyTestDriver.public getWindowStore( String ): WindowStore,getWindowStore( String ): WindowStore,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,1
<Method>org.apache.kafka.streams.TopologyTestDriver.public metrics( ): Map,metrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.TopologyTestDriver.public pipeInput( ConsumerRecord ): void,pipeInput( ConsumerRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,6,0
<Method>org.apache.kafka.streams.TopologyTestDriver.public pipeInput( List ): void,pipeInput( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,0
<Method>org.apache.kafka.streams.TopologyTestDriver.private pipeRecord( ProducerRecord ): void,pipeRecord( ProducerRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,6,0
"<Method>org.apache.kafka.streams.TopologyTestDriver.private pipeRecord( String, Long, byte, byte, Headers ): void","pipeRecord( String, Long, byte, byte, Headers ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,44,5,20,10
<Method>org.apache.kafka.streams.TopologyTestDriver.public readOutput( String ): ProducerRecord,readOutput( String ): ProducerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,1
"<Method>org.apache.kafka.streams.TopologyTestDriver.public readOutput( String, Deserializer, Deserializer ): ProducerRecord","readOutput( String, Deserializer, Deserializer ): ProducerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,11,0
<Method>org.apache.kafka.streams.TopologyTestDriver.private throwIfBuiltInStore( StateStore ): void,throwIfBuiltInStore( StateStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,16,1,5,0
<Method>org.apache.kafka.streams.TopologyTestDriver.private validateSourceTopicNameRegexPattern( String ): void,validateSourceTopicNameRegexPattern( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,6,1,5,1
<Field>org.apache.kafka.streams.TopologyTestDriver->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->globalPartitionsByTopic,final globalPartitionsByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->globalStateManager,final globalStateManager : GlobalStateManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->globalStateTask,final globalStateTask : GlobalStateUpdateTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->globalTopology,final globalTopology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->internalTopics,final internalTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->internalTopologyBuilder,final internalTopologyBuilder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->mockWallClockTime,final mockWallClockTime : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->offsetsByTopicPartition,final offsetsByTopicPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->outputRecordsByTopic,final outputRecordsByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->partitionsByTopic,final partitionsByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->processorTopology,final processorTopology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->producer,final producer : MockProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->stateDirectory,final stateDirectory : StateDirectory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->task,final task : StreamTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->PARTITION_ID,static final PARTITION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->TASK_ID,static final TASK_ID : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.TopologyTestDriver->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.errors,org.apache.kafka.streams.errors,low,low-medium,medium-high,low,,,,,,43,147,,,,,,,,,,,,,16,14,2,147,62,7,0.125,0.101,0.774,43,,,,,,,
org.apache.kafka.streams.errors.BrokerNotFoundException,BrokerNotFoundException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.BrokerNotFoundException.public BrokerNotFoundException( String ): void,BrokerNotFoundException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.BrokerNotFoundException.public BrokerNotFoundException( String, Throwable ): void","BrokerNotFoundException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.BrokerNotFoundException.public BrokerNotFoundException( Throwable ): void,BrokerNotFoundException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.BrokerNotFoundException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.DefaultProductionExceptionHandler,DefaultProductionExceptionHandler,low,low,low,low,2,2,0,1,0,2,7,6,0,0,2,0,0,0,0.375,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.errors.DefaultProductionExceptionHandler.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.DefaultProductionExceptionHandler.public handle( ProducerRecord, Exception ): ProductionExceptionHandlerResponse","handle( ProducerRecord, Exception ): ProductionExceptionHandlerResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
org.apache.kafka.streams.errors.DeserializationExceptionHandler,DeserializationExceptionHandler,low,low,low,low,2,1,0,1,2,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.errors.DeserializationExceptionHandler.DeserializationHandlerResponse,DeserializationHandlerResponse,low,low,low,low,0,1,0,2,0,1,8,3,2,2,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.errors.DeserializationExceptionHandler.public abstract handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse","handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.errors.InvalidStateStoreException,InvalidStateStoreException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.InvalidStateStoreException.public InvalidStateStoreException( String ): void,InvalidStateStoreException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.InvalidStateStoreException.public InvalidStateStoreException( String, Throwable ): void","InvalidStateStoreException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.InvalidStateStoreException.public InvalidStateStoreException( Throwable ): void,InvalidStateStoreException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.InvalidStateStoreException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.LockException,LockException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.LockException.public LockException( String ): void,LockException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.LockException.public LockException( String, Throwable ): void","LockException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.LockException.public LockException( Throwable ): void,LockException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.LockException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.LogAndContinueExceptionHandler,LogAndContinueExceptionHandler,low,low,low,low,4,7,5,1,0,2,13,11,0,1,2,0,0,0,0.4,1,0,0,,,,,13,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.errors.LogAndContinueExceptionHandler.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.LogAndContinueExceptionHandler.public handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse","handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,5,1
<Field>org.apache.kafka.streams.errors.LogAndContinueExceptionHandler->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.LogAndFailExceptionHandler,LogAndFailExceptionHandler,low,low,low,low,4,7,5,1,0,2,13,11,0,1,2,0,0,0,0.4,1,0,0,,,,,13,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.errors.LogAndFailExceptionHandler.public configure( Map ): void,configure( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.LogAndFailExceptionHandler.public handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse","handle( ProcessorContext, ConsumerRecord, Exception ): DeserializationHandlerResponse",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,5,1
<Field>org.apache.kafka.streams.errors.LogAndFailExceptionHandler->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.ProcessorStateException,ProcessorStateException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.ProcessorStateException.public ProcessorStateException( String ): void,ProcessorStateException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.ProcessorStateException.public ProcessorStateException( String, Throwable ): void","ProcessorStateException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.ProcessorStateException.public ProcessorStateException( Throwable ): void,ProcessorStateException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.ProcessorStateException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.ProductionExceptionHandler,ProductionExceptionHandler,low,low,low,low,1,1,0,1,1,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.streams.errors.ProductionExceptionHandler.ProductionExceptionHandlerResponse,ProductionExceptionHandlerResponse,low,low,low,low,0,1,0,2,0,1,9,4,2,2,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.errors.ProductionExceptionHandler.public abstract handle( ProducerRecord, Exception ): ProductionExceptionHandlerResponse","handle( ProducerRecord, Exception ): ProductionExceptionHandlerResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.errors.StreamsException,StreamsException,medium-high,low,low,low,0,3,0,5,8,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.StreamsException.public StreamsException( String ): void,StreamsException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.StreamsException.public StreamsException( String, Throwable ): void","StreamsException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.StreamsException.public StreamsException( Throwable ): void,StreamsException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.StreamsException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskAssignmentException,TaskAssignmentException,medium-high,low,low,low,0,3,0,6,0,3,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.errors.TaskAssignmentException.public TaskAssignmentException( String ): void,TaskAssignmentException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.TaskAssignmentException.public TaskAssignmentException( String, Throwable ): void","TaskAssignmentException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.TaskAssignmentException.public TaskAssignmentException( Throwable ): void,TaskAssignmentException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.TaskAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskIdFormatException,TaskIdFormatException,medium-high,low,low,low,0,3,0,6,0,5,8,6,0,1,3,0,0,0,0.222,0,0,0,,,,,8,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.errors.TaskIdFormatException.public TaskIdFormatException( String ): void,TaskIdFormatException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.TaskIdFormatException.public TaskIdFormatException( String, Throwable ): void","TaskIdFormatException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,0,0
<Method>org.apache.kafka.streams.errors.TaskIdFormatException.public TaskIdFormatException( Throwable ): void,TaskIdFormatException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.TaskIdFormatException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TaskMigratedException,TaskMigratedException,medium-high,low,low,low,2,7,2,6,0,5,25,22,1,1,5,0,0,0.625,0.56,0,0,0,,,,,25,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.errors.TaskMigratedException.public TaskMigratedException( ): void,TaskMigratedException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.errors.TaskMigratedException.public TaskMigratedException( Task ): void,TaskMigratedException( Task ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.errors.TaskMigratedException.public TaskMigratedException( Task, Throwable ): void","TaskMigratedException( Task, Throwable ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.errors.TaskMigratedException.public TaskMigratedException( Task, TopicPartition, long, long ): void","TaskMigratedException( Task, TopicPartition, long, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,1,1
<Method>org.apache.kafka.streams.errors.TaskMigratedException.public migratedTask( ): Task,migratedTask( ): Task,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.errors.TaskMigratedException->task,final task : Task,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.errors.TaskMigratedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.errors.TopologyException,TopologyException,medium-high,low,low,low,0,3,0,6,0,5,9,7,0,1,3,0,0,0,0.222,0,0,0,,,,,9,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.errors.TopologyException.public TopologyException( String ): void,TopologyException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
"<Method>org.apache.kafka.streams.errors.TopologyException.public TopologyException( String, Throwable ): void","TopologyException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,0,0
<Method>org.apache.kafka.streams.errors.TopologyException.public TopologyException( Throwable ): void,TopologyException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.streams.errors.TopologyException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.examples.pageview,org.apache.kafka.streams.examples.pageview,low,low,low-medium,low,,,,,,19,165,,,,,,,,,,,,,10,9,1,165,0,3,0.1,1,0.1,19,,,,,,,
org.apache.kafka.streams.examples.pageview.JsonTimestampExtractor,JsonTimestampExtractor,low,low,low,low,4,4,3,1,0,4,10,9,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.examples.pageview.JsonTimestampExtractor.public extract( ConsumerRecord, long ): long","extract( ConsumerRecord, long ): long",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,9,0
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo,PageViewTypedDemo,high,medium-high,low-medium,low,12,163,24,1,0,3,114,56,0,0,0,1,0,0,0,0,0,0,,,,,114,,,,,,3,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.JSONSerde<T>,JSONSerde,low,low,low,low,2,8,2,1,0,10,29,27,0,1,6,0,0,0,0.667,0.933,0,0,,,,,29,,,,,,10,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.JSONSerdeCompatible,JSONSerdeCompatible,low,low,low,low,0,0,0,1,5,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$10175;,Lorg.apache.kafka.streams.examples.pageview.PageViewTypedDemo$10175;,low,low,low,low,0,0,0,2,0,0,5,0,0,0,0,0,1,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageView,PageView,low,low,low,low,0,0,0,1,0,0,4,0,3,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.PageViewByRegion,PageViewByRegion,low,low,low,low,0,0,0,1,0,0,4,0,3,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.RegionCount,RegionCount,low,low,low,low,0,0,0,1,0,0,3,0,2,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.UserProfile,UserProfile,low,low,low,low,0,0,0,1,0,0,3,0,2,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.WindowedPageViewByRegion,WindowedPageViewByRegion,low,low,low,low,0,0,0,1,0,0,3,0,2,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.PageViewTypedDemo.public static main( String ): void,static main( String ): void,low,very-high,medium-high,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,56,1,38,0
org.apache.kafka.streams.examples.pageview.PageViewUntypedDemo,PageViewUntypedDemo,high,high,low,low,18,169,24,1,0,2,41,40,0,0,0,1,0,0,0,0,0,0,,,,,41,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.examples.pageview.PageViewUntypedDemo.public static main( String ): void,static main( String ): void,low,very-high,low-medium,low,18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,40,1,30,0
<Package>org.apache.kafka.streams.examples.pipe,org.apache.kafka.streams.examples.pipe,low,low,low,low,,,,,,2,24,,,,,,,,,,,,,1,1,0,24,0,1,0,1,0,2,,,,,,,
org.apache.kafka.streams.examples.pipe.PipeDemo,PipeDemo,medium-high,low-medium,low,low,6,126,10,1,0,2,24,23,0,0,0,1,0,0,0,0,0,0,,,,,24,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.pipe.PipeDemo$2847;,Lorg.apache.kafka.streams.examples.pipe.PipeDemo$2847;,low,low,low,low,0,0,0,2,0,0,5,0,0,0,0,0,1,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.examples.pipe.PipeDemo.public static main( String ): void,static main( String ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,23,1,16,0
<Package>org.apache.kafka.streams.examples.temperature,org.apache.kafka.streams.examples.temperature,low,low,low,low,,,,,,3,41,,,,,,,,,,,,,1,1,0,41,0,1,0,1,0,3,,,,,,,
org.apache.kafka.streams.examples.temperature.TemperatureDemo,TemperatureDemo,high,medium-high,low,low,13,151,20,1,0,3,41,38,0,2,0,1,0,0,0,0,0,0,,,,,41,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$5351;,Lorg.apache.kafka.streams.examples.temperature.TemperatureDemo$5351;,low,low,low,low,0,0,0,2,0,0,5,0,0,0,0,0,1,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.examples.temperature.TemperatureDemo.public static main( String ): void,static main( String ): void,low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,38,1,28,1
<Field>org.apache.kafka.streams.examples.temperature.TemperatureDemo->TEMPERATURE_THRESHOLD,static final TEMPERATURE_THRESHOLD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.examples.temperature.TemperatureDemo->TEMPERATURE_WINDOW_SIZE,static final TEMPERATURE_WINDOW_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.examples.wordcount,org.apache.kafka.streams.examples.wordcount,low,low,low,low,,,,,,7,101,,,,,,,,,,,,,3,3,0,101,0,2,0,1,0,7,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountDemo,WordCountDemo,medium-high,medium-high,low,low,9,135,19,1,0,4,37,34,0,2,0,3,0,0,0.444,0,0,0,,,,,37,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$4194;,Lorg.apache.kafka.streams.examples.wordcount.WordCountDemo$4194;,low,low,low,low,0,0,0,2,0,0,5,0,0,0,0,0,1,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.examples.wordcount.WordCountDemo.static createWordCountStream( StreamsBuilder ): void,static createWordCountStream( StreamsBuilder ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,9,2
<Method>org.apache.kafka.streams.examples.wordcount.WordCountDemo.static getStreamsConfig( ): Properties,static getStreamsConfig( ): Properties,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,10,0
<Method>org.apache.kafka.streams.examples.wordcount.WordCountDemo.public static main( String ): void,static main( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,1,9,0
<Field>org.apache.kafka.streams.examples.wordcount.WordCountDemo->INPUT_TOPIC,static final INPUT_TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.examples.wordcount.WordCountDemo->OUTPUT_TOPIC,static final OUTPUT_TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo,WordCountProcessorDemo,low-medium,low-medium,low-medium,low,6,74,14,1,0,2,64,31,0,0,0,1,0,0,0,0,0,0,,,,,64,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo$6126;,Lorg.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo$6126;,low,low,low,low,0,0,0,2,0,0,5,0,0,0,0,0,1,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo.MyProcessorSupplier,MyProcessorSupplier,low,low,low,low,1,1,0,1,0,1,32,31,0,0,1,0,0,0,0,0,0,0,,,,,32,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.examples.wordcount.WordCountProcessorDemo.public static main( String ): void,static main( String ): void,low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,31,1,22,0
<Package>org.apache.kafka.streams.internals,org.apache.kafka.streams.internals,low,low,low,low,,,,,,30,93,,,,,,,,,,,,,4,4,0,93,13,3,0,0.188,0.812,30,,,,,,,
org.apache.kafka.streams.internals.ApiUtils,ApiUtils,low,low,low,low,0,7,3,1,0,8,21,17,0,3,1,3,0,0.667,0.5,0.667,0,0,,,,,21,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.internals.ApiUtils.private ApiUtils( ): void,ApiUtils( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.internals.ApiUtils.public static prepareMillisCheckFailMsgPrefix( Object, String ): String","static prepareMillisCheckFailMsgPrefix( Object, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.streams.internals.ApiUtils.public static validateMillisecondDuration( Duration, String ): long","static validateMillisecondDuration( Duration, String ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,2,1,2
"<Method>org.apache.kafka.streams.internals.ApiUtils.public static validateMillisecondInstant( Instant, String ): long","static validateMillisecondInstant( Instant, String ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,2,1,2
<Field>org.apache.kafka.streams.internals.ApiUtils->MILLISECOND_VALIDATION_FAIL_MSG_FRMT,static final MILLISECOND_VALIDATION_FAIL_MSG_FRMT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.ApiUtils->VALIDATE_MILLISECOND_NULL_SUFFIX,static final VALIDATE_MILLISECOND_NULL_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.ApiUtils->VALIDATE_MILLISECOND_OVERFLOW_SUFFIX,static final VALIDATE_MILLISECOND_OVERFLOW_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>",KeyValueStoreFacade,low-medium,low-medium,low,medium-high,6,23,11,2,0,12,37,36,0,0,11,0,0,0,0.74,0,0,0,,,,,37,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public KeyValueStoreFacade( TimestampedKeyValueStore ): void",KeyValueStoreFacade( TimestampedKeyValueStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public name( ): String",name( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public putAll( List ): void",putAll( List ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,2,1
"<Method>org.apache.kafka.streams.internals.KeyValueStoreFacade<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,1
org.apache.kafka.streams.internals.QuietStreamsConfig,QuietStreamsConfig,low-medium,low,low,low,0,1,0,3,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.internals.QuietStreamsConfig.public QuietStreamsConfig( Map ): void,QuietStreamsConfig( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"org.apache.kafka.streams.internals.WindowStoreFacade<K,V>",WindowStoreFacade,low-medium,low,low,medium-high,5,18,9,2,0,9,32,31,0,0,9,0,0,0,0.73,0,0,0,,,,,32,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public WindowStoreFacade( TimestampedWindowStore ): void",WindowStoreFacade( TimestampedWindowStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public name( ): String",name( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,1
"<Method>org.apache.kafka.streams.internals.WindowStoreFacade<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,1
<Package>org.apache.kafka.streams.internals.metrics,org.apache.kafka.streams.internals.metrics,low,low,low,low,,,,,,8,67,,,,,,,,,,,,,1,1,0,67,1,1,0,0.5,0.5,8,,,,,,,
org.apache.kafka.streams.internals.metrics.ClientMetrics,ClientMetrics,low,low,low-medium,low,4,27,2,1,0,8,67,42,0,14,1,7,0,1,0.5,0.905,0,0,,,,,67,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.private ClientMetrics( ): void,ClientMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static addApplicationIdMetric( StreamsMetricsImpl, String ): void","static addApplicationIdMetric( StreamsMetricsImpl, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,1,2
<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static addCommitIdMetric( StreamsMetricsImpl ): void,static addCommitIdMetric( StreamsMetricsImpl ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,1,3
"<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static addStateMetric( StreamsMetricsImpl, Gauge ): void","static addStateMetric( StreamsMetricsImpl, Gauge ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,1,2
"<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static addTopologyDescriptionMetric( StreamsMetricsImpl, String ): void","static addTopologyDescriptionMetric( StreamsMetricsImpl, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,1,2
<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static addVersionMetric( StreamsMetricsImpl ): void,static addVersionMetric( StreamsMetricsImpl ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,1,3
<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static commitId( ): String,static commitId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.internals.metrics.ClientMetrics.public static version( ): String,static version( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->APPLICATION_ID,static final APPLICATION_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->APPLICATION_ID_DESCRIPTION,static final APPLICATION_ID_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->COMMIT_ID,static final COMMIT_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->COMMIT_ID_DESCRIPTION,static final COMMIT_ID_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->COMMIT_ID_FROM_FILE,static final COMMIT_ID_FROM_FILE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->DEFAULT_VALUE,static final DEFAULT_VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->STATE,static final STATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->STATE_DESCRIPTION,static final STATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->TOPOLOGY_DESCRIPTION,static final TOPOLOGY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->TOPOLOGY_DESCRIPTION_DESCRIPTION,static final TOPOLOGY_DESCRIPTION_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->VERSION,static final VERSION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->VERSION_DESCRIPTION,static final VERSION_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->VERSION_FROM_FILE,static final VERSION_FROM_FILE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.internals.metrics.ClientMetrics->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream,org.apache.kafka.streams.kstream,medium-high,high,very-high,low,,,,,,517,1564,,,,,,,,,,,,,54,23,31,1564,97,24,0.611,0.198,0.191,517,,,,,,,
"org.apache.kafka.streams.kstream.Aggregator<K,V,VA>",Aggregator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Aggregator<K,V,VA>.public abstract apply( K, V, VA ): VA","apply( K, V, VA ): VA",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>",CogroupedKStream,low,low-medium,low,low-medium,10,7,0,1,1,7,13,7,0,0,7,0,0,0,0.661,0,0,0,,,,,13,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract aggregate( Initializer ): KTable",aggregate( Initializer ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract aggregate( Initializer, Materialized ): KTable","aggregate( Initializer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract aggregate( Initializer, Named ): KTable","aggregate( Initializer, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract aggregate( Initializer, Named, Materialized ): KTable","aggregate( Initializer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract cogroup( KGroupedStream, Aggregator ): CogroupedKStream","cogroup( KGroupedStream, Aggregator ): CogroupedKStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract windowedBy( SessionWindows ): SessionWindowedCogroupedKStream",windowedBy( SessionWindows ): SessionWindowedCogroupedKStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.CogroupedKStream<K,VOut>.public abstract windowedBy( Windows ): TimeWindowedCogroupedKStream",windowedBy( Windows ): TimeWindowedCogroupedKStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.Consumed<K,V>",Consumed,low,low,low-medium,low-medium,3,17,3,1,1,17,67,61,5,0,9,5,0,0.55,0.673,0.864,0,0,,,,,67,,,,,,17,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.protected Consumed( Consumed ): void",Consumed( Consumed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,0,5
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.private Consumed( Serde, Serde, TimestampExtractor, AutoOffsetReset, String ): void","Consumed( Serde, Serde, TimestampExtractor, AutoOffsetReset, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public equals( Object ): boolean",equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,5,8
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public static as( String ): Consumed",static as( String ): Consumed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public static with( AutoOffsetReset ): Consumed",static with( AutoOffsetReset ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public static with( Serde, Serde ): Consumed","static with( Serde, Serde ): Consumed",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public static with( Serde, Serde, TimestampExtractor, AutoOffsetReset ): Consumed","static with( Serde, Serde, TimestampExtractor, AutoOffsetReset ): Consumed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public static with( TimestampExtractor ): Consumed",static with( TimestampExtractor ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public withKeySerde( Serde ): Consumed",withKeySerde( Serde ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public withName( String ): Consumed",withName( String ): Consumed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public withOffsetResetPolicy( AutoOffsetReset ): Consumed",withOffsetResetPolicy( AutoOffsetReset ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public withTimestampExtractor( TimestampExtractor ): Consumed",withTimestampExtractor( TimestampExtractor ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Consumed<K,V>.public withValueSerde( Serde ): Consumed",withValueSerde( Serde ): Consumed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Field>org.apache.kafka.streams.kstream.Consumed<K,V>->keySerde",keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Consumed<K,V>->processorName",processorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Consumed<K,V>->resetPolicy",resetPolicy : AutoOffsetReset,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Consumed<K,V>->timestampExtractor",timestampExtractor : TimestampExtractor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Consumed<K,V>->valueSerde",valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.ForeachAction<K,V>",ForeachAction,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ForeachAction<K,V>.public abstract apply( K, V ): void","apply( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.GlobalKTable<K,V>",GlobalKTable,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.GlobalKTable<K,V>.public abstract queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.Grouped<K,V>",Grouped,low,low,low,low,1,10,0,1,1,10,32,28,3,0,5,5,0,0.25,0.45,0.893,0,0,,,,,32,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.protected Grouped( Grouped ): void",Grouped( Grouped ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.private Grouped( String, Serde, Serde ): void","Grouped( String, Serde, Serde ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public static as( String ): Grouped",static as( String ): Grouped,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public static keySerde( Serde ): Grouped",static keySerde( Serde ): Grouped,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public static valueSerde( Serde ): Grouped",static valueSerde( Serde ): Grouped,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public static with( Serde, Serde ): Grouped","static with( Serde, Serde ): Grouped",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public static with( String, Serde, Serde ): Grouped","static with( String, Serde, Serde ): Grouped",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public withKeySerde( Serde ): Grouped",withKeySerde( Serde ): Grouped,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public withName( String ): Grouped",withName( String ): Grouped,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
"<Method>org.apache.kafka.streams.kstream.Grouped<K,V>.public withValueSerde( Serde ): Grouped",withValueSerde( Serde ): Grouped,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
"<Field>org.apache.kafka.streams.kstream.Grouped<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Grouped<K,V>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Grouped<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Initializer<VA>,Initializer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.Initializer<VA>.public abstract apply( ): VA,apply( ): VA,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.JoinWindows,JoinWindows,low-medium,low,low-medium,low-medium,2,24,10,2,0,25,99,94,4,0,15,2,2,0.273,0.647,0.619,0,0.267,,,,,99,,,,,,25,,,,,,,
"<Method>org.apache.kafka.streams.kstream.JoinWindows.private JoinWindows( long, long, long, long ): void","JoinWindows( long, long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,4,0,4
"<Method>org.apache.kafka.streams.kstream.JoinWindows.private JoinWindows( long, long, long, long, int ): void","JoinWindows( long, long, long, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,5,0,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public after( Duration ): JoinWindows,after( Duration ): JoinWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public after( long ): JoinWindows,after( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public before( Duration ): JoinWindows,before( Duration ): JoinWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public before( long ): JoinWindows,before( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,2,10
<Method>org.apache.kafka.streams.kstream.JoinWindows.public grace( Duration ): JoinWindows,grace( Duration ): JoinWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public gracePeriodMs( ): long,gracePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,5
<Method>org.apache.kafka.streams.kstream.JoinWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Method>org.apache.kafka.streams.kstream.JoinWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.JoinWindows.public static of( Duration ): JoinWindows,static of( Duration ): JoinWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public static of( long ): JoinWindows,static of( long ): JoinWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.kstream.JoinWindows.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,5
<Method>org.apache.kafka.streams.kstream.JoinWindows.public until( long ): JoinWindows,until( long ): JoinWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,4
<Method>org.apache.kafka.streams.kstream.JoinWindows.public windowsFor( long ): Map,windowsFor( long ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.streams.kstream.JoinWindows->afterMs,final afterMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.JoinWindows->beforeMs,final beforeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.JoinWindows->graceMs,final graceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.JoinWindows->maintainDurationMs,final maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Joined<K,V,VO>",Joined,low,low,low-medium,low,1,17,0,1,1,17,53,48,4,0,10,7,0,0.444,0.529,0.829,0,0,,,,,53,,,,,,17,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.protected Joined( Joined ): void",Joined( Joined ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,4
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.private Joined( Serde, Serde, Serde, String ): void","Joined( Serde, Serde, Serde, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public otherValueSerde( ): Serde",otherValueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static as( String ): Joined",static as( String ): Joined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static keySerde( Serde ): Joined",static keySerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static named( String ): Joined",static named( String ): Joined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static otherValueSerde( Serde ): Joined",static otherValueSerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static valueSerde( Serde ): Joined",static valueSerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static with( Serde, Serde, Serde ): Joined","static with( Serde, Serde, Serde ): Joined",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public static with( Serde, Serde, Serde, String ): Joined","static with( Serde, Serde, Serde, String ): Joined",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public withKeySerde( Serde ): Joined",withKeySerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public withName( String ): Joined",withName( String ): Joined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,3
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public withOtherValueSerde( Serde ): Joined",withOtherValueSerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
"<Method>org.apache.kafka.streams.kstream.Joined<K,V,VO>.public withValueSerde( Serde ): Joined",withValueSerde( Serde ): Joined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
"<Field>org.apache.kafka.streams.kstream.Joined<K,V,VO>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Joined<K,V,VO>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Joined<K,V,VO>->otherValueSerde",final otherValueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Joined<K,V,VO>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.KGroupedStream<K,V>",KGroupedStream,low,medium-high,low,low-medium,11,13,0,1,1,13,24,13,0,0,13,0,0,0,0.663,0,0,0,,,,,24,,,,,,13,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract aggregate( Initializer, Aggregator ): KTable","aggregate( Initializer, Aggregator ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract aggregate( Initializer, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract aggregate( Initializer, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract cogroup( Aggregator ): CogroupedKStream",cogroup( Aggregator ): CogroupedKStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract count( ): KTable",count( ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract count( Named ): KTable",count( Named ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract windowedBy( SessionWindows ): SessionWindowedKStream",windowedBy( SessionWindows ): SessionWindowedKStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedStream<K,V>.public abstract windowedBy( Windows ): TimeWindowedKStream",windowedBy( Windows ): TimeWindowedKStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.KGroupedTable<K,V>",KGroupedTable,low,low-medium,low,low,6,11,0,1,1,11,30,11,0,0,11,0,0,0,0.5,0,0,0,,,,,30,,,,,,11,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract aggregate( Initializer, Aggregator, Aggregator ): KTable","aggregate( Initializer, Aggregator, Aggregator ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract aggregate( Initializer, Aggregator, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Aggregator, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract aggregate( Initializer, Aggregator, Aggregator, Named ): KTable","aggregate( Initializer, Aggregator, Aggregator, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract aggregate( Initializer, Aggregator, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Aggregator, Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract count( ): KTable",count( ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract count( Named ): KTable",count( Named ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract reduce( Reducer, Reducer ): KTable","reduce( Reducer, Reducer ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract reduce( Reducer, Reducer, Materialized ): KTable","reduce( Reducer, Reducer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KGroupedTable<K,V>.public abstract reduce( Reducer, Reducer, Named, Materialized ): KTable","reduce( Reducer, Reducer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"org.apache.kafka.streams.kstream.KStream<K,V>",KStream,medium-high,high,very-high,high,22,70,0,1,1,70,151,70,0,0,70,0,0,0,0.87,0,0,0,,,,,151,,,,,,70,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract branch( Named, Predicate ): KStream","branch( Named, Predicate ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract branch( Predicate ): KStream",branch( Predicate ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract filter( Predicate ): KStream",filter( Predicate ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract filter( Predicate, Named ): KStream","filter( Predicate, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract filterNot( Predicate ): KStream",filterNot( Predicate ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract filterNot( Predicate, Named ): KStream","filterNot( Predicate, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMap( KeyValueMapper ): KStream",flatMap( KeyValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMap( KeyValueMapper, Named ): KStream","flatMap( KeyValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMapValues( ValueMapper ): KStream",flatMapValues( ValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMapValues( ValueMapper, Named ): KStream","flatMapValues( ValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMapValues( ValueMapperWithKey ): KStream",flatMapValues( ValueMapperWithKey ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatMapValues( ValueMapperWithKey, Named ): KStream","flatMapValues( ValueMapperWithKey, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransform( TransformerSupplier, Named, String ): KStream","flatTransform( TransformerSupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransform( TransformerSupplier, String ): KStream","flatTransform( TransformerSupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransformValues( ValueTransformerSupplier, Named, String ): KStream","flatTransformValues( ValueTransformerSupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransformValues( ValueTransformerSupplier, String ): KStream","flatTransformValues( ValueTransformerSupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream","flatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract flatTransformValues( ValueTransformerWithKeySupplier, String ): KStream","flatTransformValues( ValueTransformerWithKeySupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract foreach( ForeachAction ): void",foreach( ForeachAction ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract foreach( ForeachAction, Named ): void","foreach( ForeachAction, Named ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupBy( KeyValueMapper ): KGroupedStream",groupBy( KeyValueMapper ): KGroupedStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupBy( KeyValueMapper, Grouped ): KGroupedStream","groupBy( KeyValueMapper, Grouped ): KGroupedStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupBy( KeyValueMapper, Serialized ): KGroupedStream","groupBy( KeyValueMapper, Serialized ): KGroupedStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupByKey( ): KGroupedStream",groupByKey( ): KGroupedStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupByKey( Grouped ): KGroupedStream",groupByKey( Grouped ): KGroupedStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract groupByKey( Serialized ): KGroupedStream",groupByKey( Serialized ): KGroupedStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream","join( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream","join( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( KStream, ValueJoiner, JoinWindows ): KStream","join( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( KStream, ValueJoiner, JoinWindows, Joined ): KStream","join( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","join( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( KTable, ValueJoiner ): KStream","join( KTable, ValueJoiner ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract join( KTable, ValueJoiner, Joined ): KStream","join( KTable, ValueJoiner, Joined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream","leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream","leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( KStream, ValueJoiner, JoinWindows ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( KTable, ValueJoiner ): KStream","leftJoin( KTable, ValueJoiner ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract leftJoin( KTable, ValueJoiner, Joined ): KStream","leftJoin( KTable, ValueJoiner, Joined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract map( KeyValueMapper ): KStream",map( KeyValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract map( KeyValueMapper, Named ): KStream","map( KeyValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract mapValues( ValueMapper ): KStream",mapValues( ValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract mapValues( ValueMapper, Named ): KStream","mapValues( ValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract mapValues( ValueMapperWithKey ): KStream",mapValues( ValueMapperWithKey ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract mapValues( ValueMapperWithKey, Named ): KStream","mapValues( ValueMapperWithKey, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract merge( KStream ): KStream",merge( KStream ): KStream,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract merge( KStream, Named ): KStream","merge( KStream, Named ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract outerJoin( KStream, ValueJoiner, JoinWindows ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract outerJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract outerJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract peek( ForeachAction ): KStream",peek( ForeachAction ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract peek( ForeachAction, Named ): KStream","peek( ForeachAction, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract print( Printed ): void",print( Printed ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract process( ProcessorSupplier, Named, String ): void","process( ProcessorSupplier, Named, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract process( ProcessorSupplier, String ): void","process( ProcessorSupplier, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract selectKey( KeyValueMapper ): KStream",selectKey( KeyValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract selectKey( KeyValueMapper, Named ): KStream","selectKey( KeyValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract through( String ): KStream",through( String ): KStream,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract through( String, Produced ): KStream","through( String, Produced ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract to( String ): void",to( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract to( String, Produced ): void","to( String, Produced ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract to( TopicNameExtractor ): void",to( TopicNameExtractor ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract to( TopicNameExtractor, Produced ): void","to( TopicNameExtractor, Produced ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transform( TransformerSupplier, Named, String ): KStream","transform( TransformerSupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transform( TransformerSupplier, String ): KStream","transform( TransformerSupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transformValues( ValueTransformerSupplier, Named, String ): KStream","transformValues( ValueTransformerSupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transformValues( ValueTransformerSupplier, String ): KStream","transformValues( ValueTransformerSupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, Named, String ): KStream","transformValues( ValueTransformerWithKeySupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KStream<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, String ): KStream","transformValues( ValueTransformerWithKeySupplier, String ): KStream",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.KTable<K,V>",KTable,low-medium,medium-high,high,medium-high,13,49,0,1,1,49,124,49,0,0,49,0,0,0,0.767,0,0,0,,,,,124,,,,,,49,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filter( Predicate ): KTable",filter( Predicate ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filter( Predicate, Materialized ): KTable","filter( Predicate, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filter( Predicate, Named ): KTable","filter( Predicate, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filter( Predicate, Named, Materialized ): KTable","filter( Predicate, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filterNot( Predicate ): KTable",filterNot( Predicate ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filterNot( Predicate, Materialized ): KTable","filterNot( Predicate, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filterNot( Predicate, Named ): KTable","filterNot( Predicate, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract filterNot( Predicate, Named, Materialized ): KTable","filterNot( Predicate, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract groupBy( KeyValueMapper ): KGroupedTable",groupBy( KeyValueMapper ): KGroupedTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract groupBy( KeyValueMapper, Grouped ): KGroupedTable","groupBy( KeyValueMapper, Grouped ): KGroupedTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract groupBy( KeyValueMapper, Serialized ): KGroupedTable","groupBy( KeyValueMapper, Serialized ): KGroupedTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, Function, ValueJoiner ): KTable","join( KTable, Function, ValueJoiner ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, Function, ValueJoiner, Materialized ): KTable","join( KTable, Function, ValueJoiner, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, Function, ValueJoiner, Named ): KTable","join( KTable, Function, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, Function, ValueJoiner, Named, Materialized ): KTable","join( KTable, Function, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, ValueJoiner ): KTable","join( KTable, ValueJoiner ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, ValueJoiner, Materialized ): KTable","join( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, ValueJoiner, Named ): KTable","join( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract join( KTable, ValueJoiner, Named, Materialized ): KTable","join( KTable, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, Function, ValueJoiner ): KTable","leftJoin( KTable, Function, ValueJoiner ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, Function, ValueJoiner, Materialized ): KTable","leftJoin( KTable, Function, ValueJoiner, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, Function, ValueJoiner, Named ): KTable","leftJoin( KTable, Function, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, Function, ValueJoiner, Named, Materialized ): KTable","leftJoin( KTable, Function, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, ValueJoiner ): KTable","leftJoin( KTable, ValueJoiner ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, ValueJoiner, Materialized ): KTable","leftJoin( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, ValueJoiner, Named ): KTable","leftJoin( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract leftJoin( KTable, ValueJoiner, Named, Materialized ): KTable","leftJoin( KTable, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapper ): KTable",mapValues( ValueMapper ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapper, Materialized ): KTable","mapValues( ValueMapper, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapper, Named ): KTable","mapValues( ValueMapper, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapper, Named, Materialized ): KTable","mapValues( ValueMapper, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapperWithKey ): KTable",mapValues( ValueMapperWithKey ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapperWithKey, Materialized ): KTable","mapValues( ValueMapperWithKey, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapperWithKey, Named ): KTable","mapValues( ValueMapperWithKey, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract mapValues( ValueMapperWithKey, Named, Materialized ): KTable","mapValues( ValueMapperWithKey, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract outerJoin( KTable, ValueJoiner ): KTable","outerJoin( KTable, ValueJoiner ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract outerJoin( KTable, ValueJoiner, Materialized ): KTable","outerJoin( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract outerJoin( KTable, ValueJoiner, Named ): KTable","outerJoin( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract outerJoin( KTable, ValueJoiner, Named, Materialized ): KTable","outerJoin( KTable, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract suppress( Suppressed ): KTable",suppress( Suppressed ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract toStream( ): KStream",toStream( ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract toStream( KeyValueMapper ): KStream",toStream( KeyValueMapper ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract toStream( KeyValueMapper, Named ): KStream","toStream( KeyValueMapper, Named ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract toStream( Named ): KStream",toStream( Named ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, Materialized, Named, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Materialized, Named, String ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, Materialized, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Materialized, String ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, Named, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Named, String ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.KTable<K,V>.public abstract transformValues( ValueTransformerWithKeySupplier, String ): KTable","transformValues( ValueTransformerWithKeySupplier, String ): KTable",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.KeyValueMapper<K,V,VR>",KeyValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KeyValueMapper<K,V,VR>.public abstract apply( K, V ): VR","apply( K, V ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Materialized<K,V,S>",Materialized,low,low-medium,low-medium,high,7,27,7,1,1,16,64,55,8,0,10,5,0,0.847,0.82,0.97,0,0,,,,,64,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.protected Materialized( Materialized ): void",Materialized( Materialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,0,16
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.private Materialized( StoreSupplier ): void",Materialized( StoreSupplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.private Materialized( String ): void",Materialized( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public static as( KeyValueBytesStoreSupplier ): Materialized",static as( KeyValueBytesStoreSupplier ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public static as( SessionBytesStoreSupplier ): Materialized",static as( SessionBytesStoreSupplier ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public static as( String ): Materialized",static as( String ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public static as( WindowBytesStoreSupplier ): Materialized",static as( WindowBytesStoreSupplier ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public static with( Serde, Serde ): Materialized","static with( Serde, Serde ): Materialized",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withCachingDisabled( ): Materialized",withCachingDisabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withCachingEnabled( ): Materialized",withCachingEnabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withKeySerde( Serde ): Materialized",withKeySerde( Serde ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withLoggingDisabled( ): Materialized",withLoggingDisabled( ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withLoggingEnabled( Map ): Materialized",withLoggingEnabled( Map ): Materialized,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,2
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withRetention( Duration ): Materialized",withRetention( Duration ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,1
"<Method>org.apache.kafka.streams.kstream.Materialized<K,V,S>.public withValueSerde( Serde ): Materialized",withValueSerde( Serde ): Materialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->cachingEnabled",cachingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->keySerde",keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->loggingEnabled",loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->retention",retention : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->storeName",storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->storeSupplier",storeSupplier : StoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->topicConfig",topicConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Materialized<K,V,S>->valueSerde",valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Merger<K,V>",Merger,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Merger<K,V>.public abstract apply( K, V, V ): V","apply( K, V, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.Named,Named,low,low,low,low,1,11,7,1,1,14,34,31,1,1,3,3,0,0.75,0.333,1,0,0,,,,,34,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.kstream.Named.protected Named( Named ): void,Named( Named ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.kstream.Named.protected Named( String ): void,Named( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.streams.kstream.Named.public static as( String ): Named,static as( String ): Named,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.kstream.Named.private static containsValidPattern( String ): boolean,static containsValidPattern( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,1,2,0
<Method>org.apache.kafka.streams.kstream.Named.protected static validate( String ): void,static validate( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,11,1,5,2
<Method>org.apache.kafka.streams.kstream.Named.public withName( String ): Named,withName( String ): Named,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.streams.kstream.Named->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Named->MAX_NAME_LENGTH,static final MAX_NAME_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.NamedOperation<T>,NamedOperation,low,low,low,low,0,1,0,1,8,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.NamedOperation<T>.public abstract withName( String ): T,withName( String ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.Predicate<K,V>",Predicate,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Predicate<K,V>.public abstract test( K, V ): boolean","test( K, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Printed<K,V>",Printed,low,low,low,low-medium,2,13,6,1,1,9,35,29,4,0,5,2,0,0.75,0.629,1,0,0,,,,,35,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.private Printed( OutputStream ): void",Printed( OutputStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.protected Printed( Printed ): void",Printed( Printed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,8
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public static toFile( String ): Printed",static toFile( String ): Printed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,6,0
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public static toSysOut( ): Printed",static toSysOut( ): Printed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public withKeyValueMapper( KeyValueMapper ): Printed",withKeyValueMapper( KeyValueMapper ): Printed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public withLabel( String ): Printed",withLabel( String ): Printed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
"<Method>org.apache.kafka.streams.kstream.Printed<K,V>.public withName( String ): Printed",withName( String ): Printed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
"<Field>org.apache.kafka.streams.kstream.Printed<K,V>->outputStream",final outputStream : OutputStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Printed<K,V>->label",label : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Printed<K,V>->mapper",mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Printed<K,V>->processorName",processorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Produced<K,V>",Produced,low,low,low-medium,low-medium,2,17,3,1,1,17,59,54,4,0,8,6,0,0.5,0.643,0.894,0,0,,,,,59,,,,,,17,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.protected Produced( Produced ): void",Produced( Produced ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,8
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.private Produced( Serde, Serde, StreamPartitioner, String ): void","Produced( Serde, Serde, StreamPartitioner, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public equals( Object ): boolean",equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,5,6
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static as( String ): Produced",static as( String ): Produced,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static keySerde( Serde ): Produced",static keySerde( Serde ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static streamPartitioner( StreamPartitioner ): Produced",static streamPartitioner( StreamPartitioner ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static valueSerde( Serde ): Produced",static valueSerde( Serde ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static with( Serde, Serde ): Produced","static with( Serde, Serde ): Produced",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public static with( Serde, Serde, StreamPartitioner ): Produced","static with( Serde, Serde, StreamPartitioner ): Produced",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public withKeySerde( Serde ): Produced",withKeySerde( Serde ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public withName( String ): Produced",withName( String ): Produced,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public withStreamPartitioner( StreamPartitioner ): Produced",withStreamPartitioner( StreamPartitioner ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.kstream.Produced<K,V>.public withValueSerde( Serde ): Produced",withValueSerde( Serde ): Produced,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Field>org.apache.kafka.streams.kstream.Produced<K,V>->keySerde",keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Produced<K,V>->partitioner",partitioner : StreamPartitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Produced<K,V>->processorName",processorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Produced<K,V>->valueSerde",valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Reducer<V>,Reducer,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Reducer<V>.public abstract apply( V, V ): V","apply( V, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Serialized<K,V>",Serialized,low,low,low,low,1,5,0,1,1,5,17,13,2,0,4,1,0,0,0.333,1,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.private Serialized( Serde, Serde ): void","Serialized( Serde, Serde ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.protected Serialized( Serialized ): void",Serialized( Serialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.public static with( Serde, Serde ): Serialized","static with( Serde, Serde ): Serialized",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.public withKeySerde( Serde ): Serialized",withKeySerde( Serde ): Serialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.Serialized<K,V>.public withValueSerde( Serde ): Serialized",withValueSerde( Serde ): Serialized,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Field>org.apache.kafka.streams.kstream.Serialized<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.Serialized<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K,V>",SessionWindowedCogroupedKStream,low,low,low,low,5,4,0,1,1,4,13,4,0,0,4,0,0,0,0.2,0,0,0,,,,,13,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Merger ): KTable","aggregate( Initializer, Merger ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Merger, Materialized ): KTable","aggregate( Initializer, Merger, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Merger, Named ): KTable","aggregate( Initializer, Merger, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Merger, Named, Materialized ): KTable","aggregate( Initializer, Merger, Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>,SessionWindowedDeserializer,low,low-medium,low,low-medium,7,34,8,1,0,12,28,26,1,0,6,0,0,0,0.694,0.4,0,0,,,,,28,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>. innerDeserializer( ): Deserializer, innerDeserializer( ): Deserializer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>.public SessionWindowedDeserializer( ): void,SessionWindowedDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>.public SessionWindowedDeserializer( Deserializer ): void,SessionWindowedDeserializer( Deserializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,5,3
"<Method>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>.public deserialize( String, byte ): Windowed","deserialize( String, byte ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,2,2
<Field>org.apache.kafka.streams.kstream.SessionWindowedDeserializer<T>->inner,inner : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>",SessionWindowedKStream,low,low-medium,low,low,7,12,0,1,1,12,29,12,0,0,12,0,0,0,0.524,0,0,0,,,,,29,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Merger ): KTable","aggregate( Initializer, Aggregator, Merger ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Merger, Materialized ): KTable","aggregate( Initializer, Aggregator, Merger, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Merger, Named ): KTable","aggregate( Initializer, Aggregator, Merger, Named ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Merger, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Merger, Named, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,5,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract count( ): KTable",count( ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract count( Named ): KTable",count( Named ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract reduce( Reducer, Named ): KTable","reduce( Reducer, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.SessionWindowedKStream<K,V>.public abstract reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>,SessionWindowedSerializer,low,low-medium,low,low-medium,8,40,10,1,0,12,32,30,1,0,7,0,0,0,0.667,0.333,0,0,,,,,32,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>. innerSerializer( ): Serializer, innerSerializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public SessionWindowedSerializer( ): void,SessionWindowedSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public SessionWindowedSerializer( Serializer ): void,SessionWindowedSerializer( Serializer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,5,3
"<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public serialize( String, Windowed ): byte","serialize( String, Windowed ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,2
"<Method>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>.public serializeBaseKey( String, Windowed ): byte","serializeBaseKey( String, Windowed ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,2
<Field>org.apache.kafka.streams.kstream.SessionWindowedSerializer<T>->inner,inner : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.SessionWindows,SessionWindows,low,low,low-medium,low-medium,2,18,8,1,0,18,59,55,3,0,9,2,0,0.292,0.614,0.444,0,0,,,,,59,,,,,,18,,,,,,,
"<Method>org.apache.kafka.streams.kstream.SessionWindows.private SessionWindows( long, long, long ): void","SessionWindows( long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.streams.kstream.SessionWindows.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,2,6
<Method>org.apache.kafka.streams.kstream.SessionWindows.public grace( Duration ): SessionWindows,grace( Duration ): SessionWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,2,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public gracePeriodMs( ): long,gracePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.streams.kstream.SessionWindows.public inactivityGap( ): long,inactivityGap( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.SessionWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.kstream.SessionWindows.public static with( Duration ): SessionWindows,static with( Duration ): SessionWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.streams.kstream.SessionWindows.public static with( long ): SessionWindows,static with( long ): SessionWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.streams.kstream.SessionWindows.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Method>org.apache.kafka.streams.kstream.SessionWindows.public until( long ): SessionWindows,until( long ): SessionWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,3
<Field>org.apache.kafka.streams.kstream.SessionWindows->gapMs,final gapMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.SessionWindows->graceMs,final graceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.SessionWindows->maintainDurationMs,final maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>",StreamJoined,low,low,low-medium,low,2,13,0,1,1,13,146,138,7,0,10,3,0,0.111,0.585,0.491,0,0,,,,,146,,,,,,13,,,,,,,
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.private StreamJoined( Serde, Serde, Serde, WindowBytesStoreSupplier, WindowBytesStoreSupplier, String, String ): void","StreamJoined( Serde, Serde, Serde, WindowBytesStoreSupplier, WindowBytesStoreSupplier, String, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,0,7
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.protected StreamJoined( StreamJoined ): void",StreamJoined( StreamJoined ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,0,7
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public static as( String ): StreamJoined",static as( String ): StreamJoined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,0
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public static with( Serde, Serde, Serde ): StreamJoined","static with( Serde, Serde, Serde ): StreamJoined",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,3,0,0
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public static with( WindowBytesStoreSupplier, WindowBytesStoreSupplier ): StreamJoined","static with( WindowBytesStoreSupplier, WindowBytesStoreSupplier ): StreamJoined",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,0,0
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,0,7
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withKeySerde( Serde ): StreamJoined",withKeySerde( Serde ): StreamJoined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withName( String ): StreamJoined",withName( String ): StreamJoined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withOtherStoreSupplier( WindowBytesStoreSupplier ): StreamJoined",withOtherStoreSupplier( WindowBytesStoreSupplier ): StreamJoined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withOtherValueSerde( Serde ): StreamJoined",withOtherValueSerde( Serde ): StreamJoined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withStoreName( String ): StreamJoined",withStoreName( String ): StreamJoined,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withThisStoreSupplier( WindowBytesStoreSupplier ): StreamJoined",withThisStoreSupplier( WindowBytesStoreSupplier ): StreamJoined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Method>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>.public withValueSerde( Serde ): StreamJoined",withValueSerde( Serde ): StreamJoined,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,6
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->otherStoreSupplier",final otherStoreSupplier : WindowBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->otherValueSerde",final otherValueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->thisStoreSupplier",final thisStoreSupplier : WindowBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.StreamJoined<K,V1,V2>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Suppressed<K>,Suppressed,low,low,low,low,2,3,0,1,3,3,21,3,0,0,1,2,0,0,0.533,0,0,0,,,,,21,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.Suppressed.BufferConfig<BC>,BufferConfig,low,low,low,low,4,8,0,1,3,8,12,8,0,0,5,3,0,0,0.25,0,0,0,,,,,12,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.Suppressed.EagerBufferConfig,EagerBufferConfig,low,low,low,low,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.Suppressed.StrictBufferConfig,StrictBufferConfig,low,low,low,low,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Suppressed<K>.public static untilTimeLimit( Duration, BufferConfig ): Suppressed","static untilTimeLimit( Duration, BufferConfig ): Suppressed",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.kstream.Suppressed<K>.public static untilWindowCloses( StrictBufferConfig ): Suppressed,static untilWindowCloses( StrictBufferConfig ): Suppressed,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.kstream.Suppressed<K>.public abstract withName( String ): Suppressed,withName( String ): Suppressed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K,V>",TimeWindowedCogroupedKStream,low,low,low,low,4,4,0,1,1,4,9,4,0,0,4,0,0,0,0.25,0,0,0,,,,,9,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer ): KTable",aggregate( Initializer ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Materialized ): KTable","aggregate( Initializer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Named ): KTable","aggregate( Initializer, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K,V>.public abstract aggregate( Initializer, Named, Materialized ): KTable","aggregate( Initializer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>,TimeWindowedDeserializer,low,low-medium,low,medium-high,7,40,9,1,0,16,41,37,3,0,9,0,0,0.556,0.73,0.643,0,0,,,,,41,,,,,,16,,,,,,,
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>. innerDeserializer( ): Deserializer, innerDeserializer( ): Deserializer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public TimeWindowedDeserializer( ): void,TimeWindowedDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public TimeWindowedDeserializer( Deserializer ): void,TimeWindowedDeserializer( Deserializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public TimeWindowedDeserializer( Deserializer, long ): void","TimeWindowedDeserializer( Deserializer, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,3
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,5,3
"<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public deserialize( String, byte ): Windowed","deserialize( String, byte ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,2,3,6
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public getWindowSize( ): Long,getWindowSize( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>.public setIsChangelogTopic( boolean ): void,setIsChangelogTopic( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>->windowSize,final windowSize : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>->inner,inner : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindowedDeserializer<T>->isChangelogTopic,isChangelogTopic : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>",TimeWindowedKStream,low,low-medium,low,low,6,12,0,1,1,12,24,12,0,0,12,0,0,0,0.5,0,0,0,,,,,24,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator ): KTable","aggregate( Initializer, Aggregator ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Named ): KTable","aggregate( Initializer, Aggregator, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract aggregate( Initializer, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract count( ): KTable",count( ): KTable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract count( Named ): KTable",count( Named ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract reduce( Reducer, Named ): KTable","reduce( Reducer, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.kstream.TimeWindowedKStream<K,V>.public abstract reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>,TimeWindowedSerializer,low,low-medium,low,low-medium,8,35,9,1,0,12,33,31,1,0,7,0,0,0,0.667,0.333,0,0,,,,,33,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>. innerSerializer( ): Serializer, innerSerializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public TimeWindowedSerializer( ): void,TimeWindowedSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public TimeWindowedSerializer( Serializer ): void,TimeWindowedSerializer( Serializer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,4,3
"<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public serialize( String, Windowed ): byte","serialize( String, Windowed ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,2
"<Method>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>.public serializeBaseKey( String, Windowed ): byte","serializeBaseKey( String, Windowed ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,2
<Field>org.apache.kafka.streams.kstream.TimeWindowedSerializer<T>->inner,inner : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.TimeWindows,TimeWindows,low-medium,low,low-medium,low-medium,3,23,11,2,0,25,102,95,4,0,13,2,2,0.295,0.653,0.474,0,0.308,,,,,102,,,,,,25,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TimeWindows.private TimeWindows( long, long, long, long ): void","TimeWindows( long, long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,4
"<Method>org.apache.kafka.streams.kstream.TimeWindows.private TimeWindows( long, long, long, long, int ): void","TimeWindows( long, long, long, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,4
<Method>org.apache.kafka.streams.kstream.TimeWindows.public advanceBy( Duration ): TimeWindows,advanceBy( Duration ): TimeWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
<Method>org.apache.kafka.streams.kstream.TimeWindows.public advanceBy( long ): TimeWindows,advanceBy( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,1,6
<Method>org.apache.kafka.streams.kstream.TimeWindows.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,1,2,10
<Method>org.apache.kafka.streams.kstream.TimeWindows.public grace( Duration ): TimeWindows,grace( Duration ): TimeWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,4
<Method>org.apache.kafka.streams.kstream.TimeWindows.public gracePeriodMs( ): long,gracePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,2
<Method>org.apache.kafka.streams.kstream.TimeWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,5
<Method>org.apache.kafka.streams.kstream.TimeWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.streams.kstream.TimeWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.TimeWindows.public static of( Duration ): TimeWindows,static of( Duration ): TimeWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
<Method>org.apache.kafka.streams.kstream.TimeWindows.public static of( long ): TimeWindows,static of( long ): TimeWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.streams.kstream.TimeWindows.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,5
<Method>org.apache.kafka.streams.kstream.TimeWindows.public until( long ): TimeWindows,until( long ): TimeWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,5
<Method>org.apache.kafka.streams.kstream.TimeWindows.public windowsFor( long ): Map,windowsFor( long ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,2,6
<Field>org.apache.kafka.streams.kstream.TimeWindows->advanceMs,final advanceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindows->graceMs,final graceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindows->maintainDurationMs,final maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.TimeWindows->sizeMs,final sizeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Transformer<K,V,R>",Transformer,low,low,low,low,1,3,0,1,1,3,4,3,0,0,3,0,0,0,0.5,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract transform( K, V ): R","transform( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.TransformerSupplier<K,V,R>",TransformerSupplier,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.TransformerSupplier<K,V,R>.public abstract get( ): Transformer",get( ): Transformer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.UnlimitedWindows,UnlimitedWindows,low-medium,low,low-medium,low-medium,2,19,6,2,0,17,56,52,1,1,11,1,2,0.6,0.625,0.891,0,0.364,,,,,56,,,,,,17,,,,,,,
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.private UnlimitedWindows( long ): void,UnlimitedWindows( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,2,4
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public gracePeriodMs( ): long,gracePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public startOn( Instant ): UnlimitedWindows,startOn( Instant ): UnlimitedWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public startOn( long ): UnlimitedWindows,startOn( long ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public static of( ): UnlimitedWindows,static of( ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,2
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public until( long ): UnlimitedWindows,until( long ): UnlimitedWindows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,0
<Method>org.apache.kafka.streams.kstream.UnlimitedWindows.public windowsFor( long ): Map,windowsFor( long ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,3
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.UnlimitedWindows->DEFAULT_START_TIMESTAMP_MS,static final DEFAULT_START_TIMESTAMP_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,VR>",ValueJoiner,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,VR>.public abstract apply( V1, V2 ): VR","apply( V1, V2 ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueMapper<V,VR>",ValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueMapper<V,VR>.public abstract apply( V ): VR",apply( V ): VR,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueMapperWithKey<K,V,VR>",ValueMapperWithKey,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueMapperWithKey<K,V,VR>.public abstract apply( K, V ): VR","apply( K, V ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueTransformer<V,VR>",ValueTransformer,low,low,low,low,1,3,0,1,0,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,VR>.public abstract transform( V ): VR",transform( V ): VR,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformerSupplier<V,VR>",ValueTransformerSupplier,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformerSupplier<V,VR>.public abstract get( ): ValueTransformer",get( ): ValueTransformer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.ValueTransformerWithKey<K,V,VR>",ValueTransformerWithKey,low,low,low,low,1,3,0,1,0,3,4,3,0,0,3,0,0,0,0.5,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformerWithKey<K,V,VR>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformerWithKey<K,V,VR>.public abstract init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformerWithKey<K,V,VR>.public abstract transform( K, V ): VR","transform( K, V ): VR",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueTransformerWithKeySupplier<K,V,VR>",ValueTransformerWithKeySupplier,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformerWithKeySupplier<K,V,VR>.public abstract get( ): ValueTransformerWithKey",get( ): ValueTransformerWithKey,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.Window,Window,low,low,low,low-medium,0,11,2,1,3,14,42,37,4,0,9,0,0,0.643,0.667,0.556,0,0,,,,,42,,,,,,14,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Window.public Window( long, long ): void","Window( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,2,4
<Method>org.apache.kafka.streams.kstream.Window.public abstract overlap( Window ): boolean,abstract overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.streams.kstream.Window.public end( ): long,end( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public endTime( ): Instant,endTime( ): Instant,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,2,4
<Method>org.apache.kafka.streams.kstream.Window.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.Window.public start( ): long,start( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public startTime( ): Instant,startTime( ): Instant,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Window.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.kstream.Window->endMs,final endMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Window->endTime,final endTime : Instant,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Window->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Window->startTime,final startTime : Instant,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.Windowed<K>,Windowed,low,low,low,low-medium,2,13,6,1,0,8,25,22,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,25,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Windowed<K>.public Windowed( K, Window ): void","Windowed( K, Window ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,4
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public key( ): K,key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,3
<Method>org.apache.kafka.streams.kstream.Windowed<K>.public window( ): Window,window( ): Window,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.kstream.Windowed<K>->key,final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windowed<K>->window,final window : Window,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.WindowedSerdes,WindowedSerdes,low,low,low,low,4,18,2,1,0,7,35,18,0,0,0,5,0,0,0.56,0,0,0,,,,,35,,,,,,7,,,,,,,
org.apache.kafka.streams.kstream.WindowedSerdes.SessionWindowedSerde<T>,SessionWindowedSerde,low,low,low,low,3,4,2,2,0,2,5,4,0,0,2,0,0,0,0.25,0,0,0,,,,,5,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.WindowedSerdes.TimeWindowedSerde<T>,TimeWindowedSerde,low,low,low,low,3,8,4,2,0,4,11,10,0,0,4,0,0,0,0.5,0,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.kstream.WindowedSerdes.public static sessionWindowedSerdeFrom( Class ): Serde,static sessionWindowedSerdeFrom( Class ): Serde,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.streams.kstream.WindowedSerdes.public static timeWindowedSerdeFrom( Class ): Serde,static timeWindowedSerdeFrom( Class ): Serde,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.streams.kstream.WindowedSerdes.public static timeWindowedSerdeFrom( Class, long ): Serde","static timeWindowedSerdeFrom( Class, long ): Serde",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
"<Method>org.apache.kafka.streams.kstream.WindowedSerdes.static verifyInnerDeserializerNotNull( Deserializer, Deserializer ): void","static verifyInnerDeserializerNotNull( Deserializer, Deserializer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
"<Method>org.apache.kafka.streams.kstream.WindowedSerdes.static verifyInnerSerializerNotNull( Serializer, Serializer ): void","static verifyInnerSerializerNotNull( Serializer, Serializer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
org.apache.kafka.streams.kstream.Windows<W>,Windows,low,low,low,low,0,8,0,1,3,10,25,22,2,0,8,0,0,0.667,0.5,0.9,0,0,,,,,25,,,,,,10,,,,,,,
<Method>org.apache.kafka.streams.kstream.Windows<W>. Windows( int ): void, Windows( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected Windows( ): void,Windows( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public abstract gracePeriodMs( ): long,abstract gracePeriodMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public abstract size( ): long,abstract size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public abstract windowsFor( long ): Map,abstract windowsFor( long ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.streams.kstream.Windows<W>.public maintainMs( ): long,maintainMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.protected segments( int ): Windows,segments( int ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,1
<Method>org.apache.kafka.streams.kstream.Windows<W>.public until( long ): Windows,until( long ): Windows,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,1
<Field>org.apache.kafka.streams.kstream.Windows<W>->maintainDurationMs,maintainDurationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.Windows<W>->segments,segments : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals,org.apache.kafka.streams.kstream.internals,high,high,very-high,low,,,,,,1003,5256,,,,,,,,,,,,,132,126,6,5256,29,80,0.061,0.734,0.205,1003,,,,,,,
"org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>",AbstractStream,low,low-medium,low-medium,high,9,15,4,1,9,12,62,55,6,0,6,3,0,0.633,0.808,0.333,0,0,,,,,62,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>. AbstractStream( String, Serde, Serde, Set, StreamsGraphNode, InternalStreamsBuilder ): void"," AbstractStream( String, Serde, Serde, Set, StreamsGraphNode, InternalStreamsBuilder ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,6,1,6
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>. ensureCopartitionWith( Collection ): Set", ensureCopartitionWith( Collection ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,3
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.public AbstractStream( AbstractStream ): void",AbstractStream( AbstractStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,0,12
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.protected internalTopologyBuilder( ): InternalTopologyBuilder",internalTopologyBuilder( ): InternalTopologyBuilder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.static reverseJoiner( ValueJoiner ): ValueJoiner",static reverseJoiner( ValueJoiner ): ValueJoiner,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.static toValueTransformerWithKeySupplier( ValueTransformerSupplier ): ValueTransformerWithKeySupplier",static toValueTransformerWithKeySupplier( ValueTransformerSupplier ): ValueTransformerWithKeySupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,17,1,1,0
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.static withKey( ValueMapper ): ValueMapperWithKey",static withKey( ValueMapper ): ValueMapperWithKey,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->builder",final builder : InternalStreamsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->sourceNodes",final sourceNodes : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->streamsGraphNode",final streamsGraphNode : StreamsGraphNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.AbstractStream<K,V>->valSerde",final valSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.Change<T>,Change,low,low,low,low,1,7,3,1,0,7,21,18,2,0,4,0,0,0,0.5,0,0,0,,,,,21,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public Change( T, T ): void","Change( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->newValue,final newValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->oldValue,final oldValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>,ChangedDeserializer,low,low,low,low,2,12,6,1,0,7,23,20,1,1,6,0,0,0.5,0.567,0.333,0,0,,,,,23,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public ChangedDeserializer( Deserializer ): void,ChangedDeserializer( Deserializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public deserialize( String, Headers, byte ): Change","deserialize( String, Headers, byte ): Change",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,5,4
"<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public deserialize( String, byte ): Change","deserialize( String, byte ): Change",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public inner( ): Deserializer,inner( ): Deserializer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>.public setInner( Deserializer ): void,setInner( Deserializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>->inner,inner : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>,ChangedSerializer,low,low,low,low,3,13,7,1,0,10,31,28,1,1,6,0,0,0.5,0.567,0.333,0,0,,,,,31,,,,,,10,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public ChangedSerializer( Serializer ): void,ChangedSerializer( Serializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public inner( ): Serializer,inner( ): Serializer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public serialize( String, Change ): byte","serialize( String, Change ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public serialize( String, Headers, Change ): byte","serialize( String, Headers, Change ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,3,6,3
<Method>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>.public setInner( Serializer ): void,setInner( Serializer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>->inner,inner : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.ChangedSerializer<T>->NEWFLAG_SIZE,static final NEWFLAG_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>",CogroupedKStreamImpl,low-medium,medium-high,low-medium,medium-high,18,92,12,2,0,9,77,72,2,2,9,0,0,0.786,0.778,0.714,0,0,,,,,77,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>. CogroupedKStreamImpl( String, Set, StreamsGraphNode, InternalStreamsBuilder ): void"," CogroupedKStreamImpl( String, Set, StreamsGraphNode, InternalStreamsBuilder ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,0,2
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public aggregate( Initializer ): KTable",aggregate( Initializer ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public aggregate( Initializer, Materialized ): KTable","aggregate( Initializer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public aggregate( Initializer, Named ): KTable","aggregate( Initializer, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public aggregate( Initializer, Named, Materialized ): KTable","aggregate( Initializer, Named, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,4,2
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public cogroup( KGroupedStream, Aggregator ): CogroupedKStream","cogroup( KGroupedStream, Aggregator ): CogroupedKStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,3,1
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.private doAggregate( Initializer, NamedInternal, MaterializedInternal ): KTable","doAggregate( Initializer, NamedInternal, MaterializedInternal ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,3,5,2
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public windowedBy( SessionWindows ): SessionWindowedCogroupedKStream",windowedBy( SessionWindows ): SessionWindowedCogroupedKStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,1,6
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>.public windowedBy( Windows ): TimeWindowedCogroupedKStream",windowedBy( Windows ): TimeWindowedCogroupedKStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,1,6
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>->aggregateBuilder",final aggregateBuilder : CogroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>->groupPatterns",final groupPatterns : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>->AGGREGATE_NAME",static final AGGREGATE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K,VOut>->MERGE_NAME",static final MERGE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>",CogroupedStreamAggregateBuilder,low-medium,high,low-medium,low,26,65,23,1,0,16,110,107,2,0,4,0,0,0.5,0.554,0,0,0,,,,,110,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>. CogroupedStreamAggregateBuilder( InternalStreamsBuilder ): void", CogroupedStreamAggregateBuilder( InternalStreamsBuilder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>. build( Map, Initializer, NamedInternal, StoreBuilder, Serde, Serde, String, Windows, SessionWindows, Merger ): KTable"," build( Map, Initializer, NamedInternal, StoreBuilder, Serde, Serde, String, Windows, SessionWindows, Merger ): KTable",low,very-high,medium-high,low,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,62,10,26,11
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>.private createRepartitionSource( String, OptimizableRepartitionNodeBuilder, Serde, Serde ): String","createRepartitionSource( String, OptimizableRepartitionNodeBuilder, Serde, Serde ): String",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,1,1
"<Method>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>.private getStatefulProcessorNode( Aggregator, Initializer, String, boolean, StoreBuilder, Windows, SessionWindows, Merger ): StatefulProcessorNode","getStatefulProcessorNode( Aggregator, Initializer, String, boolean, StoreBuilder, Windows, SessionWindows, Merger ): StatefulProcessorNode",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,33,8,4,0
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>->builder",final builder : InternalStreamsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K,VOut>->parentNodes",final parentNodes : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>",ConsumedInternal,low-medium,low,low,medium-high,4,13,3,2,0,12,24,23,0,0,10,0,0,0,0.72,0,0,0,,,,,24,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public ConsumedInternal( ): void",ConsumedInternal( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public ConsumedInternal( Consumed ): void",ConsumedInternal( Consumed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public ConsumedInternal( Serde, Serde, TimestampExtractor, AutoOffsetReset ): void","ConsumedInternal( Serde, Serde, TimestampExtractor, AutoOffsetReset ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public keyDeserializer( ): Deserializer",keyDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public offsetResetPolicy( ): AutoOffsetReset",offsetResetPolicy( ): AutoOffsetReset,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public timestampExtractor( ): TimestampExtractor",timestampExtractor( ): TimestampExtractor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public valueDeserializer( ): Deserializer",valueDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.ConsumedInternal<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>,FullChangeSerde,low-medium,low,low-medium,low,4,20,14,1,0,24,53,51,1,0,4,3,0,0,0.571,1,0,0,,,,,53,,,,,,24,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.private FullChangeSerde( Serde ): void,FullChangeSerde( Serde ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public deserializeParts( String, Change ): Change","deserializeParts( String, Change ): Change",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,2,4,0
<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public innerSerde( ): Serde,innerSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public serializeParts( String, Change ): Change","serializeParts( String, Change ): Change",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,2,4,0
<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public static decomposeLegacyFormattedArrayIntoChangeArrays( byte ): Change,static decomposeLegacyFormattedArrayIntoChangeArrays( byte ): Change,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,13,1,5,0
<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public static mergeChangeArraysIntoSingleLegacyFormattedArray( Change ): byte,static mergeChangeArraysIntoSingleLegacyFormattedArray( Change ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,13,1,8,0
<Method>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>.public static wrap( Serde ): FullChangeSerde,static wrap( Serde ): FullChangeSerde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Field>org.apache.kafka.streams.kstream.internals.FullChangeSerde<T>->inner,final inner : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.FullTimeWindowedSerde<T>,FullTimeWindowedSerde,low-medium,low,low,low,3,3,2,2,0,1,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.FullTimeWindowedSerde<T>. FullTimeWindowedSerde( Serde, long ): void"," FullTimeWindowedSerde( Serde, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>",GlobalKTableImpl,low,low,low,low,1,3,0,1,0,3,12,9,2,0,3,0,0,0.5,0.444,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>. GlobalKTableImpl( KTableValueGetterSupplier, String ): void"," GlobalKTableImpl( KTableValueGetterSupplier, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>. valueGetterSupplier( ): KTableValueGetterSupplier", valueGetterSupplier( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>.public queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>->queryableStoreName",final queryableStoreName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GlobalKTableImpl<K,V>->valueGetterSupplier",final valueGetterSupplier : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.GroupedInternal<K,V>",GroupedInternal,low-medium,low,low,low,1,4,0,2,0,4,9,8,0,0,4,0,0,0,0.375,0,0,0,,,,,9,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.GroupedInternal<K,V>.public GroupedInternal( Grouped ): void",GroupedInternal( Grouped ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.GroupedInternal<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.GroupedInternal<K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.GroupedInternal<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>",GroupedStreamAggregateBuilder,low,medium-high,low-medium,low,16,45,12,1,0,8,67,54,12,0,3,0,0,0.75,0.556,0,0,0,,,,,67,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>. GroupedStreamAggregateBuilder( InternalStreamsBuilder, GroupedInternal, boolean, Set, String, StreamsGraphNode ): void"," GroupedStreamAggregateBuilder( InternalStreamsBuilder, GroupedInternal, boolean, Set, String, StreamsGraphNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,6,3,8
"<Method>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>. build( NamedInternal, StoreBuilder, KStreamAggProcessorSupplier, String, Serde, Serde ): KTable"," build( NamedInternal, StoreBuilder, KStreamAggProcessorSupplier, String, Serde, Serde ): KTable",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,33,6,11,15
"<Method>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>.private createRepartitionSource( String, OptimizableRepartitionNodeBuilder ): String","createRepartitionSource( String, OptimizableRepartitionNodeBuilder ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,1,3
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->builder",final builder : InternalStreamsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->countAggregator",final countAggregator : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->countInitializer",final countInitializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->reduceInitializer",final reduceInitializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->sourceNodes",final sourceNodes : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->streamsGraphNode",final streamsGraphNode : StreamsGraphNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->userProvidedRepartitionTopicName",final userProvidedRepartitionTopicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.GroupedStreamAggregateBuilder<K,V>->repartitionNode",repartitionNode : StreamsGraphNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.InternalNameProvider,InternalNameProvider,low,low,low,low,0,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.InternalNameProvider.public abstract newProcessorName( String ): String,newProcessorName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.kstream.internals.InternalNameProvider.public abstract newStoreName( String ): String,newStoreName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder,InternalStreamsBuilder,medium-high,high,low-medium,high,29,125,95,1,0,66,276,262,7,3,25,0,0,0.887,0.815,0.615,1,0,,,,,276,,,,,,66,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder. addGraphNode( Collection, StreamsGraphNode ): void"," addGraphNode( Collection, StreamsGraphNode ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,4,0
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder. addGraphNode( StreamsGraphNode, StreamsGraphNode ): void"," addGraphNode( StreamsGraphNode, StreamsGraphNode ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,0
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public InternalStreamsBuilder( InternalTopologyBuilder ): void,InternalStreamsBuilder( InternalTopologyBuilder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public buildAndOptimizeTopology( ): void,buildAndOptimizeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public buildAndOptimizeTopology( Properties ): void,buildAndOptimizeTopology( Properties ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,1,14,4
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private createRepartitionNode( String, Serde, Serde ): OptimizableRepartitionNode","createRepartitionNode( String, Serde, Serde ): OptimizableRepartitionNode",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,4,0
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private findParentNodeMatching( StreamsGraphNode, Predicate ): StreamsGraphNode","findParentNodeMatching( StreamsGraphNode, Predicate ): StreamsGraphNode",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,2,4,0
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private getFirstRepartitionTopicName( Collection ): String,getFirstRepartitionTopicName( Collection ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private getKeyChangingParentNode( StreamsGraphNode ): StreamsGraphNode,getKeyChangingParentNode( StreamsGraphNode ): StreamsGraphNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,3,0
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private getRepartitionSerdes( Collection ): GroupedInternal,getRepartitionSerdes( Collection ): GroupedInternal,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,12,1,5,0
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public globalTable( String, ConsumedInternal, MaterializedInternal ): GlobalKTable","globalTable( String, ConsumedInternal, MaterializedInternal ): GlobalKTable",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,3,17,2
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private maybeAddNodeForOptimizationMetadata( StreamsGraphNode ): void,maybeAddNodeForOptimizationMetadata( StreamsGraphNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,16,1,17,6
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private maybeOptimizeRepartitionOperations( ): void,maybeOptimizeRepartitionOperations( ): void,low,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,34,0,34,4
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private maybePerformOptimizations( Properties ): void,maybePerformOptimizations( Properties ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,5,1
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private maybeUpdateKeyChangingRepartitionNodeMap( ): void,maybeUpdateKeyChangingRepartitionNodeMap( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,20,0,13,5
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public newProcessorName( String ): String,newProcessorName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public newStoreName( String ): String,newStoreName( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.private optimizeKTableSourceTopics( ): void,optimizeKTableSourceTopics( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public root( ): StreamsGraphNode,root( ): StreamsGraphNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public stream( Collection, ConsumedInternal ): KStream","stream( Collection, ConsumedInternal ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,6,1
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public stream( Pattern, ConsumedInternal ): KStream","stream( Pattern, ConsumedInternal ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,5,1
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public synchronized addGlobalStore( StoreBuilder, String, ConsumedInternal, ProcessorSupplier ): void","synchronized addGlobalStore( StoreBuilder, String, ConsumedInternal, ProcessorSupplier ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,4,4,0
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public synchronized addGlobalStore( StoreBuilder, String, String, ConsumedInternal, String, ProcessorSupplier ): void","synchronized addGlobalStore( StoreBuilder, String, String, ConsumedInternal, String, ProcessorSupplier ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,6,1,1
<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public synchronized addStateStore( StoreBuilder ): void,synchronized addStateStore( StoreBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder.public table( String, ConsumedInternal, MaterializedInternal ): KTable","table( String, ConsumedInternal, MaterializedInternal ): KTable",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,27,3,18,2
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->buildPriorityIndex,final buildPriorityIndex : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->index,final index : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->internalTopologyBuilder,final internalTopologyBuilder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->keyChangingOperationsToOptimizableRepartitionNodes,final keyChangingOperationsToOptimizableRepartitionNodes : LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->mergeNodes,final mergeNodes : LinkedHashSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->root,final root : StreamsGraphNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->tableSourceNodes,final tableSourceNodes : LinkedHashSet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->TABLE_SOURCE_SUFFIX,static final TABLE_SOURCE_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder->TOPOLOGY_ROOT,static final TOPOLOGY_ROOT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>",JoinedInternal,low-medium,low,low,low,1,5,0,2,0,5,13,12,0,0,5,0,4,0,0.4,0,0,1.6,,,,,13,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>. JoinedInternal( Joined ): void", JoinedInternal( Joined ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>.public otherValueSerde( ): Serde",otherValueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.JoinedInternal<K,V,VO>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>",KGroupedStreamImpl,low-medium,high,low-medium,high,25,85,25,2,0,22,144,138,3,2,16,0,0,0.9,0.809,0.526,0,0,,,,,144,,,,,,22,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>. KGroupedStreamImpl( String, Set, GroupedInternal, boolean, StreamsGraphNode, InternalStreamsBuilder ): void"," KGroupedStreamImpl( String, Set, GroupedInternal, boolean, StreamsGraphNode, InternalStreamsBuilder ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,6,3,3
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public aggregate( Initializer, Aggregator ): KTable","aggregate( Initializer, Aggregator ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Named, Materialized ): KTable",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,19,4,9,5
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public cogroup( Aggregator ): CogroupedKStream",cogroup( Aggregator ): CogroupedKStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,4
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public count( ): KTable",count( ): KTable,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public count( Named ): KTable",count( Named ): KTable,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,2
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.private doAggregate( KStreamAggProcessorSupplier, String, MaterializedInternal ): KTable","doAggregate( KStreamAggProcessorSupplier, String, MaterializedInternal ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,5,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.private doCount( Named, Materialized ): KTable","doCount( Named, Materialized ): KTable",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,8,7
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,3,10,6
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public windowedBy( SessionWindows ): SessionWindowedKStream",windowedBy( SessionWindows ): SessionWindowedKStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,0,7
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>.public windowedBy( Windows ): TimeWindowedKStream",windowedBy( Windows ): TimeWindowedKStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,0,7
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->aggregateBuilder",final aggregateBuilder : GroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->userProvidedRepartitionTopicName",final userProvidedRepartitionTopicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->AGGREGATE_NAME",static final AGGREGATE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K,V>->REDUCE_NAME",static final REDUCE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>",KGroupedTableImpl,low-medium,high,low-medium,medium-high,22,76,34,2,0,22,141,133,5,2,14,0,0,0.957,0.765,0.491,0,0,,,,,141,,,,,,22,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>. KGroupedTableImpl( InternalStreamsBuilder, String, Set, GroupedInternal, StreamsGraphNode ): void"," KGroupedTableImpl( InternalStreamsBuilder, String, Set, GroupedInternal, StreamsGraphNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,3,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public aggregate( Initializer, Aggregator, Aggregator ): KTable","aggregate( Initializer, Aggregator, Aggregator ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public aggregate( Initializer, Aggregator, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Aggregator, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public aggregate( Initializer, Aggregator, Aggregator, Named ): KTable","aggregate( Initializer, Aggregator, Aggregator, Named ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public aggregate( Initializer, Aggregator, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Aggregator, Named, Materialized ): KTable",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,21,5,9,4
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public count( ): KTable",count( ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public count( Named ): KTable",count( Named ): KTable,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,2,7,7
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.private createRepartitionNode( String, String, String ): GroupedTableOperationRepartitionNode","createRepartitionNode( String, String, String ): GroupedTableOperationRepartitionNode",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,8,2
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.private doAggregate( ProcessorSupplier, NamedInternal, String, MaterializedInternal ): KTable","doAggregate( ProcessorSupplier, NamedInternal, String, MaterializedInternal ): KTable",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,26,4,12,14
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public reduce( Reducer, Reducer ): KTable","reduce( Reducer, Reducer ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public reduce( Reducer, Reducer, Materialized ): KTable","reduce( Reducer, Reducer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>.public reduce( Reducer, Reducer, Named, Materialized ): KTable","reduce( Reducer, Reducer, Named, Materialized ): KTable",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,20,4,10,5
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->countAdder",final countAdder : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->countInitializer",final countInitializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->countSubtractor",final countSubtractor : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->userProvidedRepartitionTopicName",final userProvidedRepartitionTopicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->repartitionGraphNode",repartitionGraphNode : StreamsGraphNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->AGGREGATE_NAME",static final AGGREGATE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KGroupedTableImpl<K,V>->REDUCE_NAME",static final REDUCE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>",KStreamAggProcessorSupplier,low,low,low,low,1,2,0,1,4,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggProcessorSupplier<K,RK,V,T>.public abstract view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>",KStreamAggregate,low,low,low-medium,low,5,4,0,1,0,4,75,19,4,1,4,0,0,1.2,0.562,1,0,0,,,,,75,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateProcessor,KStreamAggregateProcessor,low,low,low,low,12,85,25,2,0,6,39,34,4,0,2,0,0,0.25,0.375,0,0,0,,,,,39,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamAggregate.KStreamAggregateValueGetter,KStreamAggregateValueGetter,low,low,low,low,3,5,2,1,0,3,11,9,1,0,3,0,0,0,0.444,0.667,0,0,,,,,11,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$4812;,Lorg.apache.kafka.streams.kstream.internals.KStreamAggregate$4812;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>. KStreamAggregate( String, Initializer, Aggregator ): void"," KStreamAggregate( String, Initializer, Aggregator ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->aggregator",final aggregator : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->initializer",final initializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamAggregate<K,V,T>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>",KStreamBranch,low,low,low,low,2,2,0,1,0,2,17,7,2,0,2,0,0,0,0.333,0,0,0,,,,,17,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamBranch.KStreamBranchProcessor,KStreamBranchProcessor,low,low,low,low,3,5,4,2,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>. KStreamBranch( Predicate, String ): void"," KStreamBranch( Predicate, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>->childNodes",final childNodes : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>->predicates",final predicates : Predicate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>",KStreamFilter,low,low,low,low,2,2,0,1,0,2,14,6,2,0,2,0,0,0,0.333,1,0,0,,,,,14,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFilter.KStreamFilterProcessor,KStreamFilterProcessor,low,low,low,low,2,4,3,2,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>.public KStreamFilter( Predicate, boolean ): void","KStreamFilter( Predicate, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>->predicate",final predicate : Predicate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>",KStreamFlatMap,low,low,low,low,2,2,0,1,0,2,12,5,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMap.KStreamFlatMapProcessor,KStreamFlatMapProcessor,low,low,low,low,3,4,3,2,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>. KStreamFlatMap( KeyValueMapper ): void", KStreamFlatMap( KeyValueMapper ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K,V,K1,V1>->mapper",final mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>",KStreamFlatMapValues,low,low,low,low,2,2,0,1,0,2,13,5,1,0,2,0,0,0,0.25,0,0,0,,,,,13,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues.KStreamFlatMapValuesProcessor,KStreamFlatMapValuesProcessor,low,low,low,low,2,4,3,2,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>. KStreamFlatMapValues( ValueMapperWithKey ): void", KStreamFlatMapValues( ValueMapperWithKey ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K,V,V1>->mapper",final mapper : ValueMapperWithKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatTransform<KIn,VIn,KOut,VOut>",KStreamFlatTransform,low,low,low,low,2,3,1,1,0,2,24,5,1,0,2,0,0,0,0.25,0,0,0,,,,,24,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatTransform.KStreamFlatTransformProcessor<KIn,VIn,KOut,VOut>",KStreamFlatTransformProcessor,low,low,low,low,3,10,6,2,0,6,17,15,1,0,4,0,1,0,0.6,0,0,0.5,,,,,17,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatTransform<KIn,VIn,KOut,VOut>.public KStreamFlatTransform( TransformerSupplier ): void",KStreamFlatTransform( TransformerSupplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatTransform<KIn,VIn,KOut,VOut>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFlatTransform<KIn,VIn,KOut,VOut>->transformerSupplier",final transformerSupplier : TransformerSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues<KIn,VIn,VOut>",KStreamFlatTransformValues,low,low,low,low,2,3,1,1,0,2,25,5,1,0,2,0,0,0,0.25,0,0,0,,,,,25,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues.KStreamFlatTransformValuesProcessor<KIn,VIn,VOut>",KStreamFlatTransformValuesProcessor,low,low,low,low,3,8,4,1,0,6,18,15,2,0,4,0,0,0.333,0.6,0,0,0,,,,,18,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues<KIn,VIn,VOut>.public KStreamFlatTransformValues( ValueTransformerWithKeySupplier ): void",KStreamFlatTransformValues( ValueTransformerWithKeySupplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues<KIn,VIn,VOut>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues<KIn,VIn,VOut>->valueTransformerSupplier",final valueTransformerSupplier : ValueTransformerWithKeySupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>",KStreamGlobalKTableJoin,low,low,low,low,5,3,1,1,0,2,16,11,4,0,2,0,0,0,0.4,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>. KStreamGlobalKTableJoin( KTableValueGetterSupplier, ValueJoiner, KeyValueMapper, boolean ): void"," KStreamGlobalKTableJoin( KTableValueGetterSupplier, ValueJoiner, KeyValueMapper, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
"<Field>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>->mapper",final mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamGlobalKTableJoin<K1,K2,R,V1,V2>->valueGetterSupplier",final valueGetterSupplier : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>",KStreamImpl,very-high,very-high,very-high,high,61,217,100,2,0,104,751,724,1,25,81,1,0,0.987,0.9,0.861,0,0,,,,,751,,,,,,104,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>. KStreamImpl( String, Serde, Serde, Set, boolean, StreamsGraphNode, InternalStreamsBuilder ): void"," KStreamImpl( String, Serde, Serde, Set, boolean, StreamsGraphNode, InternalStreamsBuilder ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,7,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public branch( Named, Predicate ): KStream","branch( Named, Predicate ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public branch( Predicate ): KStream",branch( Predicate ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private doBranch( NamedInternal, Predicate ): KStream","doBranch( NamedInternal, Predicate ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,21,2,6,12
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private doFlatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream","doFlatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,3,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private doJoin( KStream, ValueJoiner, JoinWindows, StreamJoined, KStreamImplJoin ): KStream","doJoin( KStream, ValueJoiner, JoinWindows, StreamJoined, KStreamImplJoin ): KStream",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,28,5,16,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private doStreamTableJoin( KTable, ValueJoiner, Joined, boolean ): KStream","doStreamTableJoin( KTable, ValueJoiner, Joined, boolean ): KStream",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,25,4,12,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private doTransformValues( ValueTransformerWithKeySupplier, NamedInternal, String ): KStream","doTransformValues( ValueTransformerWithKeySupplier, NamedInternal, String ): KStream",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,3,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public filter( Predicate ): KStream",filter( Predicate ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public filter( Predicate, Named ): KStream","filter( Predicate, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,4,9
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public filterNot( Predicate ): KStream",filterNot( Predicate ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public filterNot( Predicate, Named ): KStream","filterNot( Predicate, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,4,9
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMap( KeyValueMapper ): KStream",flatMap( KeyValueMapper ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMap( KeyValueMapper, Named ): KStream","flatMap( KeyValueMapper, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,5,6
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMapValues( ValueMapper ): KStream",flatMapValues( ValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMapValues( ValueMapper, Named ): KStream","flatMapValues( ValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMapValues( ValueMapperWithKey ): KStream",flatMapValues( ValueMapperWithKey ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatMapValues( ValueMapperWithKey, Named ): KStream","flatMapValues( ValueMapperWithKey, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,5,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransform( TransformerSupplier, Named, String ): KStream","flatTransform( TransformerSupplier, Named, String ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,3,5,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransform( TransformerSupplier, String ): KStream","flatTransform( TransformerSupplier, String ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransformValues( ValueTransformerSupplier, Named, String ): KStream","flatTransformValues( ValueTransformerSupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransformValues( ValueTransformerSupplier, String ): KStream","flatTransformValues( ValueTransformerSupplier, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream","flatTransformValues( ValueTransformerWithKeySupplier, Named, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public flatTransformValues( ValueTransformerWithKeySupplier, String ): KStream","flatTransformValues( ValueTransformerWithKeySupplier, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public foreach( ForeachAction ): void",foreach( ForeachAction ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public foreach( ForeachAction, Named ): void","foreach( ForeachAction, Named ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,3,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private globalTableJoin( GlobalKTable, KeyValueMapper, ValueJoiner, boolean, Named ): KStream","globalTableJoin( GlobalKTable, KeyValueMapper, ValueJoiner, boolean, Named ): KStream",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,5,7,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupBy( KeyValueMapper ): KGroupedStream",groupBy( KeyValueMapper ): KGroupedStream,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupBy( KeyValueMapper, Grouped ): KGroupedStream","groupBy( KeyValueMapper, Grouped ): KGroupedStream",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupBy( KeyValueMapper, Serialized ): KGroupedStream","groupBy( KeyValueMapper, Serialized ): KGroupedStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,6,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupByKey( ): KGroupedStream",groupByKey( ): KGroupedStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupByKey( Grouped ): KGroupedStream",groupByKey( Grouped ): KGroupedStream,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public groupByKey( Serialized ): KGroupedStream",groupByKey( Serialized ): KGroupedStream,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private internalSelectKey( KeyValueMapper, NamedInternal ): ProcessorGraphNode","internalSelectKey( KeyValueMapper, NamedInternal ): ProcessorGraphNode",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,1,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream","join( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream","join( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( KStream, ValueJoiner, JoinWindows ): KStream","join( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( KStream, ValueJoiner, JoinWindows, Joined ): KStream","join( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,8,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","join( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( KTable, ValueJoiner ): KStream","join( KTable, ValueJoiner ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public join( KTable, ValueJoiner, Joined ): KStream","join( KTable, ValueJoiner, Joined ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,3,9,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream","leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream","leftJoin( GlobalKTable, KeyValueMapper, ValueJoiner, Named ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( KStream, ValueJoiner, JoinWindows ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,8,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","leftJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( KTable, ValueJoiner ): KStream","leftJoin( KTable, ValueJoiner ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public leftJoin( KTable, ValueJoiner, Joined ): KStream","leftJoin( KTable, ValueJoiner, Joined ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,3,9,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public map( KeyValueMapper ): KStream",map( KeyValueMapper ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public map( KeyValueMapper, Named ): KStream","map( KeyValueMapper, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,5,6
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public mapValues( ValueMapper ): KStream",mapValues( ValueMapper ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public mapValues( ValueMapper, Named ): KStream","mapValues( ValueMapper, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public mapValues( ValueMapperWithKey ): KStream",mapValues( ValueMapperWithKey ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public mapValues( ValueMapperWithKey, Named ): KStream","mapValues( ValueMapperWithKey, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,5,8
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private merge( InternalStreamsBuilder, KStream, NamedInternal ): KStream","merge( InternalStreamsBuilder, KStream, NamedInternal ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,3,6,7
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public merge( KStream ): KStream",merge( KStream ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public merge( KStream, Named ): KStream","merge( KStream, Named ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public outerJoin( KStream, ValueJoiner, JoinWindows ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public outerJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows, Joined ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,4,8,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public outerJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","outerJoin( KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public peek( ForeachAction ): KStream",peek( ForeachAction ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public peek( ForeachAction, Named ): KStream","peek( ForeachAction, Named ): KStream",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,4,9
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public print( Printed ): void",print( Printed ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,5,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public process( ProcessorSupplier, Named, String ): void","process( ProcessorSupplier, Named, String ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,3,4,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public process( ProcessorSupplier, String ): void","process( ProcessorSupplier, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private repartitionForJoin( String, Serde, Serde ): KStreamImpl","repartitionForJoin( String, Serde, Serde ): KStreamImpl",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,15,3,5,6
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public selectKey( KeyValueMapper ): KStream",selectKey( KeyValueMapper ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public selectKey( KeyValueMapper, Named ): KStream","selectKey( KeyValueMapper, Named ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,6,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.static createRepartitionedSource( InternalStreamsBuilder, Serde, Serde, String, OptimizableRepartitionNodeBuilder ): String","static createRepartitionedSource( InternalStreamsBuilder, Serde, Serde, String, OptimizableRepartitionNodeBuilder ): String",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,34,5,12,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public through( String ): KStream",through( String ): KStream,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public through( String, Produced ): KStream","through( String, Produced ): KStream",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,2,11,3
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public to( String ): void",to( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public to( String, Produced ): void","to( String, Produced ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,7,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public to( TopicNameExtractor ): void",to( TopicNameExtractor ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public to( TopicNameExtractor, Produced ): void","to( TopicNameExtractor, Produced ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,7,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.private to( TopicNameExtractor, ProducedInternal ): void","to( TopicNameExtractor, ProducedInternal ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,3,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transform( TransformerSupplier, Named, String ): KStream","transform( TransformerSupplier, Named, String ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transform( TransformerSupplier, String ): KStream","transform( TransformerSupplier, String ): KStream",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transformValues( ValueTransformerSupplier, Named, String ): KStream","transformValues( ValueTransformerSupplier, Named, String ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transformValues( ValueTransformerSupplier, String ): KStream","transformValues( ValueTransformerSupplier, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transformValues( ValueTransformerWithKeySupplier, Named, String ): KStream","transformValues( ValueTransformerWithKeySupplier, Named, String ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>.public transformValues( ValueTransformerWithKeySupplier, String ): KStream","transformValues( ValueTransformerWithKeySupplier, String ): KStream",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->repartitionRequired",final repartitionRequired : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->BRANCHCHILD_NAME",static final BRANCHCHILD_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->BRANCH_NAME",static final BRANCH_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->FILTER_NAME",static final FILTER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->FLATMAPVALUES_NAME",static final FLATMAPVALUES_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->FLATMAP_NAME",static final FLATMAP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->FOREACH_NAME",static final FOREACH_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->JOINOTHER_NAME",static final JOINOTHER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->JOINTHIS_NAME",static final JOINTHIS_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->JOIN_NAME",static final JOIN_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->KEY_SELECT_NAME",static final KEY_SELECT_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->LEFTJOIN_NAME",static final LEFTJOIN_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->MAPVALUES_NAME",static final MAPVALUES_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->MAP_NAME",static final MAP_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->MERGE_NAME",static final MERGE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->OUTEROTHER_NAME",static final OUTEROTHER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->OUTERTHIS_NAME",static final OUTERTHIS_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->PEEK_NAME",static final PEEK_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->PRINTING_NAME",static final PRINTING_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->PROCESSOR_NAME",static final PROCESSOR_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->REPARTITION_TOPIC_SUFFIX",static final REPARTITION_TOPIC_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->SINK_NAME",static final SINK_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->SOURCE_NAME",static final SOURCE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->TRANSFORMVALUES_NAME",static final TRANSFORMVALUES_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->TRANSFORM_NAME",static final TRANSFORM_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>->WINDOWED_NAME",static final WINDOWED_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamImplJoin,KStreamImplJoin,low-medium,high,low-medium,low-medium,22,77,42,1,0,19,127,123,3,0,4,2,0,0,0.667,0,0,0,,,,,127,,,,,,19,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin. KStreamImplJoin( InternalStreamsBuilder, boolean, boolean ): void"," KStreamImplJoin( InternalStreamsBuilder, boolean, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin.private assertUniqueStoreNames( WindowBytesStoreSupplier, WindowBytesStoreSupplier ): void","assertUniqueStoreNames( WindowBytesStoreSupplier, WindowBytesStoreSupplier ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,2,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin.private assertWindowSettings( WindowBytesStoreSupplier, JoinWindows ): void","assertWindowSettings( WindowBytesStoreSupplier, JoinWindows ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,7,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin.public join( KStream, KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream","join( KStream, KStream, ValueJoiner, JoinWindows, StreamJoined ): KStream",low,very-high,medium-high,low,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,80,5,50,17
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin.private static joinWindowStoreBuilder( String, JoinWindows, Serde, Serde ): StoreBuilder","static joinWindowStoreBuilder( String, JoinWindows, Serde, Serde ): StoreBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,4,7,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamImplJoin.private static joinWindowStoreBuilderFromSupplier( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder","static joinWindowStoreBuilderFromSupplier( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,1,0
<Field>org.apache.kafka.streams.kstream.internals.KStreamImplJoin->builder,final builder : InternalStreamsBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.KStreamImplJoin->leftOuter,final leftOuter : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.KStreamImplJoin->rightOuter,final rightOuter : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>",KStreamJoinWindow,low,low,low,low,1,2,0,1,0,2,19,5,1,0,2,0,0,0,0.25,0,0,0,,,,,19,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamJoinWindow.KStreamJoinWindowProcessor,KStreamJoinWindowProcessor,low,low,low,low,2,8,6,2,0,3,12,10,1,0,2,0,0,0,0.375,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>. KStreamJoinWindow( String ): void", KStreamJoinWindow( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamJoinWindow<K,V>->windowName",final windowName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>",KStreamKStreamJoin,low,low,low,low,3,2,0,1,0,2,50,9,5,1,2,0,0,0,0.4,0,0,0,,,,,50,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin.KStreamKStreamJoinProcessor,KStreamKStreamJoinProcessor,low,low,low,low,11,81,24,2,0,6,34,30,3,0,2,0,0,0.333,0.375,0,0,0,,,,,34,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>. KStreamKStreamJoin( String, long, long, ValueJoiner, boolean ): void"," KStreamKStreamJoin( String, long, long, ValueJoiner, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinAfterMs",final joinAfterMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joinBeforeMs",final joinBeforeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->otherWindowName",final otherWindowName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->outer",final outer : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin<K,R,V1,V2>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>",KStreamKTableJoin,low,low,low,low,5,3,1,1,0,2,16,7,4,0,2,0,0,0.25,0.375,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>. KStreamKTableJoin( KTableValueGetterSupplier, ValueJoiner, boolean ): void"," KStreamKTableJoin( KTableValueGetterSupplier, ValueJoiner, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->keyValueMapper",final keyValueMapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoin<K,R,V1,V2>->valueGetterSupplier",final valueGetterSupplier : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>",KStreamKTableJoinProcessor,low-medium,low-medium,low,low-medium,10,80,20,2,0,9,38,30,6,1,4,0,1,0.667,0.656,0,0,0.5,,,,,38,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>. KStreamKTableJoinProcessor( KTableValueGetter, KeyValueMapper, ValueJoiner, boolean ): void"," KStreamKTableJoinProcessor( KTableValueGetter, KeyValueMapper, ValueJoiner, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>.public init( ProcessorContext ): void",init( ProcessorContext ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,8,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>.public process( K1, V1 ): void","process( K1, V1 ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,2,14,6
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->droppedRecordsSensor",droppedRecordsSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->keyMapper",final keyMapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->valueGetter",final valueGetter : KTableValueGetter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->metrics",metrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor<K1,K2,V1,V2,R>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>",KStreamMap,low,low,low,low,2,2,0,1,0,2,12,5,1,0,2,0,0,0,0.25,1,0,0,,,,,12,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMap.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,3,4,3,2,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>.public KStreamMap( KeyValueMapper ): void",KStreamMap( KeyValueMapper ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamMap<K,V,K1,V1>->mapper",final mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>",KStreamMapValues,low,low,low,low,2,2,0,1,0,2,12,5,1,0,2,0,0,0,0.25,1,0,0,,,,,12,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMapValues.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,2,4,3,2,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>.public KStreamMapValues( ValueMapperWithKey ): void",KStreamMapValues( ValueMapperWithKey ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamMapValues<K,V,V1>->mapper",final mapper : ValueMapperWithKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>",KStreamPeek,low,low,low,low,2,2,0,1,0,2,15,6,2,0,2,0,0,0,0.333,1,0,0,,,,,15,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamPeek.KStreamPeekProcessor,KStreamPeekProcessor,low,low,low,low,2,4,3,2,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>.public KStreamPeek( ForeachAction, boolean ): void","KStreamPeek( ForeachAction, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>->action",final action : ForeachAction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamPeek<K,V>->forwardDownStream",final forwardDownStream : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPrint<K,V>",KStreamPrint,low,low,low,low,2,2,0,1,0,2,15,5,1,0,2,0,0,0,0.25,1,0,0,,,,,15,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamPrint.KStreamPrintProcessor,KStreamPrintProcessor,low,low,low,low,2,6,2,2,0,3,8,7,0,0,2,0,1,0,0.333,0,0,1,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamPrint<K,V>.public KStreamPrint( ForeachAction ): void",KStreamPrint( ForeachAction ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamPrint<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamPrint<K,V>->action",final action : ForeachAction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>",KStreamReduce,low,low,low-medium,low,4,4,0,1,0,4,72,18,3,1,4,0,0,1.25,0.5,1,0,0,,,,,72,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceProcessor,KStreamReduceProcessor,low,low,low,low,11,84,23,2,0,6,38,33,4,0,2,0,0,0.25,0.375,0,0,0,,,,,38,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamReduce.KStreamReduceValueGetter,KStreamReduceValueGetter,low,low,low,low,3,5,2,1,0,3,11,9,1,0,3,0,0,0,0.444,0.667,0,0,,,,,11,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$4491;,Lorg.apache.kafka.streams.kstream.internals.KStreamReduce$4491;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>. KStreamReduce( String, Reducer ): void"," KStreamReduce( String, Reducer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->reducer",final reducer : Reducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamReduce<K,V>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>",KStreamSessionWindowAggregate,low,low-medium,low-medium,medium-high,8,8,2,1,0,8,136,32,6,1,6,0,0,1,0.714,0.9,0,0,,,,,136,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate.KStreamSessionWindowAggregateProcessor,KStreamSessionWindowAggregateProcessor,low,low,low,low,19,102,36,2,0,8,83,75,7,0,2,0,0,0.429,0.375,0,0,0,,,,,83,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate.KTableSessionWindowValueGetter,KTableSessionWindowValueGetter,low,low,low,low,5,10,7,1,0,3,13,11,1,0,3,0,0,0,0.444,0.667,0,0,,,,,13,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate$8517;,Lorg.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate$8517;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.public KStreamSessionWindowAggregate( SessionWindows, String, Initializer, Aggregator, Merger ): void","KStreamSessionWindowAggregate( SessionWindows, String, Initializer, Aggregator, Merger ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.private mergeSessionWindow( SessionWindow, SessionWindow ): SessionWindow","mergeSessionWindow( SessionWindow, SessionWindow ): SessionWindow",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,2,8,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>.public windows( ): SessionWindows",windows( ): SessionWindows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->aggregator",final aggregator : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->initializer",final initializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->sessionMerger",final sessionMerger : Merger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->windows",final windows : SessionWindows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamSessionWindowAggregate<K,V,Agg>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>",KStreamTransformValues,low,low,low,low,2,3,1,1,0,2,22,5,1,0,2,0,0,0,0.25,0,0,0,,,,,22,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues.KStreamTransformValuesProcessor<K,V,R>",KStreamTransformValuesProcessor,low,low,low,low,3,8,4,1,0,4,15,12,2,0,4,0,0,0.333,0.6,0,0,0,,,,,15,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>. KStreamTransformValues( ValueTransformerWithKeySupplier ): void", KStreamTransformValues( ValueTransformerWithKeySupplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>->valueTransformerSupplier",final valueTransformerSupplier : ValueTransformerWithKeySupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>",KStreamWindowAggregate,low,low-medium,low-medium,low-medium,6,5,0,1,0,5,128,25,6,0,5,0,0,1,0.64,0.9,0,0,,,,,128,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateProcessor,KStreamWindowAggregateProcessor,low,low,low,low,16,99,33,2,0,7,82,74,7,0,2,0,0,0.429,0.375,0,0,0,,,,,82,,,,,,7,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate.KStreamWindowAggregateValueGetter,KStreamWindowAggregateValueGetter,low,low,low,low,4,8,5,1,0,3,14,12,1,0,3,0,0,0,0.444,0.667,0,0,,,,,14,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$7963;,Lorg.apache.kafka.streams.kstream.internals.KStreamWindowAggregate$7963;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>.public KStreamWindowAggregate( Windows, String, Initializer, Aggregator ): void","KStreamWindowAggregate( Windows, String, Initializer, Aggregator ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>.public windows( ): Windows",windows( ): Windows,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->aggregator",final aggregator : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->initializer",final initializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->log",final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->windows",final windows : Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamWindowAggregate<K,V,Agg,W>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>",KTableAggregate,low,low,low-medium,low,5,4,0,1,0,4,63,17,5,0,4,0,0,0.9,0.562,1,0,0,,,,,63,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableAggregate.KTableAggregateProcessor,KTableAggregateProcessor,low,low,low,low,9,19,13,2,0,9,40,37,2,0,2,0,0,0,0.375,0,0,0,,,,,40,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>. KTableAggregate( String, Initializer, Aggregator, Aggregator ): void"," KTableAggregate( String, Initializer, Aggregator, Aggregator ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->add",final add : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->initializer",final initializer : Initializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->remove",final remove : Aggregator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableAggregate<K,V,T>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>",KTableFilter,low,low-medium,low-medium,medium-high,6,12,3,1,0,11,85,40,5,0,6,0,0,0.7,0.708,1,0,0,,,,,85,,,,,,11,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterProcessor,KTableFilterProcessor,low,low,low,low,6,12,9,2,0,8,25,22,2,0,2,0,0,0,0.375,0,0,0,,,,,25,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterValueGetter,KTableFilterValueGetter,low,low,low,low,2,10,4,1,0,4,14,12,1,0,4,0,0,0,0.562,0,0,0,,,,,14,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableFilter$4617;,Lorg.apache.kafka.streams.kstream.internals.KTableFilter$4617;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>. KTableFilter( KTableImpl, Predicate, boolean, String ): void"," KTableFilter( KTableImpl, Predicate, boolean, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.private computeValue( K, V ): V","computeValue( K, V ): V",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,1,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.private computeValue( K, ValueAndTimestamp ): ValueAndTimestamp","computeValue( K, ValueAndTimestamp ): ValueAndTimestamp",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->filterNot",final filterNot : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->parent",final parent : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->predicate",final predicate : Predicate,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->queryableName",final queryableName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>",KTableImpl,high,very-high,very-high,high,71,179,88,2,0,90,776,751,3,21,60,0,0,0.987,0.852,0.986,0,0,,,,,776,,,,,,90,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. sendingOldValueEnabled( ): boolean", sendingOldValueEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public KTableImpl( String, Serde, Serde, Set, String, ProcessorSupplier, StreamsGraphNode, InternalStreamsBuilder ): void","KTableImpl( String, Serde, Serde, Set, String, ProcessorSupplier, StreamsGraphNode, InternalStreamsBuilder ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,8,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private buildSuppress( Suppressed, String ): SuppressedInternal","buildSuppress( Suppressed, String ): SuppressedInternal",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,2,5,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private doFilter( Predicate, Named, MaterializedInternal, boolean ): KTable","doFilter( Predicate, Named, MaterializedInternal, boolean ): KTable",low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,40,4,11,12
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private doJoin( KTable, ValueJoiner, Named, MaterializedInternal, boolean, boolean ): KTable","doJoin( KTable, ValueJoiner, Named, MaterializedInternal, boolean, boolean ): KTable",low,very-high,medium-high,low,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,73,6,42,13
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private doJoinOnForeignKey( KTable, Function, ValueJoiner, Named, Materialized, boolean ): KTable","doJoinOnForeignKey( KTable, Function, ValueJoiner, Named, Materialized, boolean ): KTable",low,very-high,high,low,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,162,6,70,60
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private doMapValues( ValueMapperWithKey, Named, MaterializedInternal ): KTable","doMapValues( ValueMapperWithKey, Named, MaterializedInternal ): KTable",low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,40,3,10,10
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private doTransformValues( ValueTransformerWithKeySupplier, MaterializedInternal, NamedInternal, String ): KTable","doTransformValues( ValueTransformerWithKeySupplier, MaterializedInternal, NamedInternal, String ): KTable",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,43,4,9,8
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,3,7
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filter( Predicate ): KTable",filter( Predicate ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filter( Predicate, Materialized ): KTable","filter( Predicate, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filter( Predicate, Named ): KTable","filter( Predicate, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filter( Predicate, Named, Materialized ): KTable","filter( Predicate, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filterNot( Predicate ): KTable",filterNot( Predicate ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filterNot( Predicate, Materialized ): KTable","filterNot( Predicate, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filterNot( Predicate, Named ): KTable","filterNot( Predicate, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public filterNot( Predicate, Named, Materialized ): KTable","filterNot( Predicate, Named, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public groupBy( KeyValueMapper ): KGroupedTable",groupBy( KeyValueMapper ): KGroupedTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public groupBy( KeyValueMapper, Grouped ): KGroupedTable","groupBy( KeyValueMapper, Grouped ): KGroupedTable",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,2,6,6
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public groupBy( KeyValueMapper, Serialized ): KGroupedTable","groupBy( KeyValueMapper, Serialized ): KGroupedTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,6,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, Function, ValueJoiner ): KTable","join( KTable, Function, ValueJoiner ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, Function, ValueJoiner, Materialized ): KTable","join( KTable, Function, ValueJoiner, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, Function, ValueJoiner, Named ): KTable","join( KTable, Function, ValueJoiner, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, Function, ValueJoiner, Named, Materialized ): KTable","join( KTable, Function, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, ValueJoiner ): KTable","join( KTable, ValueJoiner ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, ValueJoiner, Materialized ): KTable","join( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, ValueJoiner, Named ): KTable","join( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public join( KTable, ValueJoiner, Named, Materialized ): KTable","join( KTable, ValueJoiner, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, Function, ValueJoiner ): KTable","leftJoin( KTable, Function, ValueJoiner ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, Function, ValueJoiner, Materialized ): KTable","leftJoin( KTable, Function, ValueJoiner, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, Function, ValueJoiner, Named ): KTable","leftJoin( KTable, Function, ValueJoiner, Named ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, Function, ValueJoiner, Named, Materialized ): KTable","leftJoin( KTable, Function, ValueJoiner, Named, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, ValueJoiner ): KTable","leftJoin( KTable, ValueJoiner ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, ValueJoiner, Materialized ): KTable","leftJoin( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, ValueJoiner, Named ): KTable","leftJoin( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public leftJoin( KTable, ValueJoiner, Named, Materialized ): KTable","leftJoin( KTable, ValueJoiner, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapper ): KTable",mapValues( ValueMapper ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapper, Materialized ): KTable","mapValues( ValueMapper, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapper, Named ): KTable","mapValues( ValueMapper, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapper, Named, Materialized ): KTable","mapValues( ValueMapper, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,4,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapperWithKey ): KTable",mapValues( ValueMapperWithKey ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapperWithKey, Materialized ): KTable","mapValues( ValueMapperWithKey, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapperWithKey, Named ): KTable","mapValues( ValueMapperWithKey, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public mapValues( ValueMapperWithKey, Named, Materialized ): KTable","mapValues( ValueMapperWithKey, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public outerJoin( KTable, ValueJoiner ): KTable","outerJoin( KTable, ValueJoiner ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public outerJoin( KTable, ValueJoiner, Materialized ): KTable","outerJoin( KTable, ValueJoiner, Materialized ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public outerJoin( KTable, ValueJoiner, Named ): KTable","outerJoin( KTable, ValueJoiner, Named ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public outerJoin( KTable, ValueJoiner, Named, Materialized ): KTable","outerJoin( KTable, ValueJoiner, Named, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,2,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public suppress( Suppressed ): KTable",suppress( Suppressed ): KTable,low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,32,1,8,12
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public toStream( ): KStream",toStream( ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public toStream( KeyValueMapper ): KStream",toStream( KeyValueMapper ): KStream,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public toStream( KeyValueMapper, Named ): KStream","toStream( KeyValueMapper, Named ): KStream",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public toStream( Named ): KStream",toStream( Named ): KStream,low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,1,4,8
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public transformValues( ValueTransformerWithKeySupplier, Materialized, Named, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Materialized, Named, String ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,3,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public transformValues( ValueTransformerWithKeySupplier, Materialized, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Materialized, String ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public transformValues( ValueTransformerWithKeySupplier, Named, String ): KTable","transformValues( ValueTransformerWithKeySupplier, Named, String ): KTable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public transformValues( ValueTransformerWithKeySupplier, String ): KTable","transformValues( ValueTransformerWithKeySupplier, String ): KTable",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.private unsafeCastProcessorParametersToCompletelyDifferentType( ProcessorParameters ): ProcessorParameters",unsafeCastProcessorParametersToCompletelyDifferentType( ProcessorParameters ): ProcessorParameters,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>.public valueGetterSupplier( ): KTableValueGetterSupplier",valueGetterSupplier( ): KTableValueGetterSupplier,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,4,5
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->processorSupplier",final processorSupplier : ProcessorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->queryableStoreName",final queryableStoreName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->FILTER_NAME",static final FILTER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->FK_JOIN",static final FK_JOIN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->FK_JOIN_OUTPUT_NAME",static final FK_JOIN_OUTPUT_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->FK_JOIN_STATE_STORE_NAME",static final FK_JOIN_STATE_STORE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->JOINOTHER_NAME",static final JOINOTHER_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->JOINTHIS_NAME",static final JOINTHIS_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->MAPVALUES_NAME",static final MAPVALUES_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->MERGE_NAME",static final MERGE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SELECT_NAME",static final SELECT_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SINK_NAME",static final SINK_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SOURCE_NAME",static final SOURCE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->STATE_STORE_NAME",static final STATE_STORE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SUBSCRIPTION_PROCESSOR",static final SUBSCRIPTION_PROCESSOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SUBSCRIPTION_REGISTRATION",static final SUBSCRIPTION_REGISTRATION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SUBSCRIPTION_RESPONSE",static final SUBSCRIPTION_RESPONSE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SUBSCRIPTION_RESPONSE_RESOLVER_PROCESSOR",static final SUBSCRIPTION_RESPONSE_RESOLVER_PROCESSOR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->SUPPRESS_NAME",static final SUPPRESS_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->TOPIC_SUFFIX",static final TOPIC_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->TOSTREAM_NAME",static final TOSTREAM_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->TRANSFORMVALUES_NAME",static final TRANSFORMVALUES_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>",KTableKTableAbstractJoin,low,low,low,low,3,11,2,1,4,2,20,13,6,0,2,0,0,0.667,0.333,0,0,0,,,,,20,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>. KTableKTableAbstractJoin( KTableImpl, KTableImpl, ValueJoiner ): void"," KTableKTableAbstractJoin( KTableImpl, KTableImpl, ValueJoiner ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,5
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>.public final enableSendingOldValues( ): void",final enableSendingOldValues( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,3
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->sendOldValues", sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->table1",final table1 : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->table2",final table2 : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->valueGetterSupplier1",final valueGetterSupplier1 : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,R,V1,V2>->valueGetterSupplier2",final valueGetterSupplier2 : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoinValueGetterSupplier<K,R,V1,V2>",KTableKTableAbstractJoinValueGetterSupplier,low,low,low,low,0,6,4,1,4,2,15,12,2,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoinValueGetterSupplier<K,R,V1,V2>. KTableKTableAbstractJoinValueGetterSupplier( KTableValueGetterSupplier, KTableValueGetterSupplier ): void"," KTableKTableAbstractJoinValueGetterSupplier( KTableValueGetterSupplier, KTableValueGetterSupplier ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoinValueGetterSupplier<K,R,V1,V2>.public storeNames( ): String",storeNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,6,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoinValueGetterSupplier<K,R,V1,V2>->valueGetterSupplier1",final valueGetterSupplier1 : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoinValueGetterSupplier<K,R,V1,V2>->valueGetterSupplier2",final valueGetterSupplier2 : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>",KTableKTableInnerJoin,low-medium,low-medium,low-medium,low,6,4,1,2,0,3,86,10,1,1,3,0,0,2,0.444,0,0,0,,,,,86,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin.KTableKTableInnerJoinValueGetter,KTableKTableInnerJoinValueGetter,low,low,low,low,5,14,9,1,0,6,30,27,2,0,4,0,0,0,0.562,0,0,0,,,,,30,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin.KTableKTableInnerJoinValueGetterSupplier,KTableKTableInnerJoinValueGetterSupplier,low,low,low,low,3,3,1,2,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin.KTableKTableJoinProcessor,KTableKTableJoinProcessor,low,low,low,low,12,84,24,2,0,9,37,33,3,0,4,0,1,0.556,0.6,0,0,0.5,,,,,37,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>. KTableKTableInnerJoin( KTableImpl, KTableImpl, ValueJoiner ): void"," KTableKTableInnerJoin( KTableImpl, KTableImpl, ValueJoiner ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>->keyValueMapper",final keyValueMapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableInnerJoin<K,R,V1,V2>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>",KTableKTableJoinMerger,low,low,low-medium,low,3,8,2,1,0,8,69,40,4,0,5,2,0,0.667,0.429,0.933,0,0,,,,,69,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger.KTableKTableJoinMergeProcessor,KTableKTableJoinMergeProcessor,low,low,low,low,6,10,8,2,0,6,24,21,2,0,2,0,0,0,0.375,0,0,0,,,,,24,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger$2430;,Lorg.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger$2430;,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>. KTableKTableJoinMerger( KTableProcessorSupplier, KTableProcessorSupplier, String ): void"," KTableKTableJoinMerger( KTableProcessorSupplier, KTableProcessorSupplier, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public getQueryableName( ): String",getQueryableName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public static of( KTableProcessorSupplier, KTableProcessorSupplier ): KTableKTableJoinMerger","static of( KTableProcessorSupplier, KTableProcessorSupplier ): KTableKTableJoinMerger",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public static of( KTableProcessorSupplier, KTableProcessorSupplier, String ): KTableKTableJoinMerger","static of( KTableProcessorSupplier, KTableProcessorSupplier, String ): KTableKTableJoinMerger",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,17,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>->parent1",final parent1 : KTableProcessorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>->parent2",final parent2 : KTableProcessorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>->queryableName",final queryableName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>",KTableKTableLeftJoin,low-medium,low,low-medium,low,5,4,1,2,0,3,90,10,0,1,3,0,0,0,0.444,0,0,0,,,,,90,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinProcessor,KTableKTableLeftJoinProcessor,low,low,low,low,13,84,24,2,0,11,42,38,3,0,4,0,1,0.556,0.6,0,0,0.5,,,,,42,,,,,,11,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetter,KTableKTableLeftJoinValueGetter,low,low,low,low,4,13,8,1,0,6,30,27,2,0,4,0,0,0,0.562,0,0,0,,,,,30,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetterSupplier,KTableKTableLeftJoinValueGetterSupplier,low,low,low,low,3,3,1,2,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>. KTableKTableLeftJoin( KTableImpl, KTableImpl, ValueJoiner ): void"," KTableKTableLeftJoin( KTableImpl, KTableImpl, ValueJoiner ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,R,V1,V2>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>",KTableKTableOuterJoin,low-medium,low,low-medium,low,5,4,1,2,0,3,97,10,0,1,3,0,0,0,0.444,0,0,0,,,,,97,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinProcessor,KTableKTableOuterJoinProcessor,low,low,low,low,12,84,24,2,0,13,40,36,3,0,4,0,1,0.556,0.6,0,0,0.5,,,,,40,,,,,,13,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetter,KTableKTableOuterJoinValueGetter,low,low,low,low,5,12,8,1,0,8,39,36,2,0,4,0,0,0,0.562,0,0,0,,,,,39,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetterSupplier,KTableKTableOuterJoinValueGetterSupplier,low,low,low,low,3,3,1,2,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>. KTableKTableOuterJoin( KTableImpl, KTableImpl, ValueJoiner ): void"," KTableKTableOuterJoin( KTableImpl, KTableImpl, ValueJoiner ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,R,V1,V2>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>",KTableKTableRightJoin,low-medium,low,low-medium,low,5,4,1,2,0,3,84,10,0,1,3,0,0,0,0.444,0,0,0,,,,,84,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinProcessor,KTableKTableRightJoinProcessor,low,low,low,low,12,84,24,2,0,7,36,32,3,0,4,0,1,0.556,0.6,0,0,0.5,,,,,36,,,,,,7,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetter,KTableKTableRightJoinValueGetter,low,low,low,low,4,13,8,1,0,6,30,27,2,0,4,0,0,0,0.562,0,0,0,,,,,30,,,,,,6,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetterSupplier,KTableKTableRightJoinValueGetterSupplier,low,low,low,low,3,3,1,2,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>. KTableKTableRightJoin( KTableImpl, KTableImpl, ValueJoiner ): void"," KTableKTableRightJoin( KTableImpl, KTableImpl, ValueJoiner ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,R,V1,V2>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>",KTableMapValues,low,low-medium,low-medium,low-medium,6,14,5,1,0,9,79,38,4,0,6,0,0,0.75,0.69,1,0,0,,,,,79,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesProcessor,KTableMapValuesProcessor,low,low,low,low,6,12,9,2,0,5,23,20,2,0,2,0,0,0,0.375,0,0,0,,,,,23,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesValueGetter,KTableMapValuesValueGetter,low,low,low,low,2,12,4,1,0,4,13,11,1,0,4,0,0,0,0.562,0,0,0,,,,,13,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$2309;,Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$2309;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>. KTableMapValues( KTableImpl, ValueMapperWithKey, String ): void"," KTableMapValues( KTableImpl, ValueMapperWithKey, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.private computeValue( K, V ): V1","computeValue( K, V ): V1",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.private computeValueAndTimestamp( K, ValueAndTimestamp ): ValueAndTimestamp","computeValueAndTimestamp( K, ValueAndTimestamp ): ValueAndTimestamp",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->mapper",final mapper : ValueMapperWithKey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->parent",final parent : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->queryableName",final queryableName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K,V,V1>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier<K,V>",KTableMaterializedValueGetterSupplier,low,low,low,low,1,3,0,1,0,3,20,7,1,0,3,0,0,0,0.333,1,0,0,,,,,20,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier.KTableMaterializedValueGetter,KTableMaterializedValueGetter,low,low,low,low,3,5,2,1,0,3,11,9,1,0,3,0,0,0,0.444,0.667,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier<K,V>. KTableMaterializedValueGetterSupplier( String ): void", KTableMaterializedValueGetterSupplier( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier<K,V>.public get( ): KTableValueGetter",get( ): KTableValueGetter,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier<K,V>.public storeNames( ): String",storeNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableMaterializedValueGetterSupplier<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>",KTableProcessorSupplier,low,low,low,low,1,2,0,1,9,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>.public abstract view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>",KTableReduce,low,low,low-medium,low,4,4,0,1,0,4,56,13,4,0,4,0,0,0.875,0.5,1,0,0,,,,,56,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableReduce.KTableReduceProcessor,KTableReduceProcessor,low,low,low,low,8,18,12,2,0,8,38,35,2,0,2,0,0,0,0.375,0,0,0,,,,,38,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>. KTableReduce( String, Reducer, Reducer ): void"," KTableReduce( String, Reducer, Reducer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->addReducer",final addReducer : Reducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->removeReducer",final removeReducer : Reducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableReduce<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>",KTableRepartitionMap,low,low,low-medium,low,4,9,1,1,0,4,51,19,2,0,4,0,0,0.5,0.5,1,0,0,,,,,51,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapProcessor,KTableMapProcessor,low,low,low,low,5,4,3,2,0,10,11,10,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,10,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableRepartitionMap.KTableMapValueGetter,KTableMapValueGetter,low,low,low,low,3,13,8,1,0,5,18,15,2,0,4,0,0,0.333,0.562,0,0,0,,,,,18,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2298;,Lorg.apache.kafka.streams.kstream.internals.KTableRepartitionMap$2298;,low,low,low,low,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>. KTableRepartitionMap( KTableImpl, KeyValueMapper ): void"," KTableRepartitionMap( KTableImpl, KeyValueMapper ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,0,1,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>->mapper",final mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableRepartitionMap<K,V,K1,V1>->parent",final parent : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableSource<K,V>",KTableSource,low,low,low-medium,low,2,6,1,1,0,5,61,15,3,1,5,0,0,0.583,0.4,0.4,0,0,,,,,61,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSource.KTableSourceProcessor,KTableSourceProcessor,low,low,low,low,11,80,23,2,0,7,41,36,4,0,2,0,0,0.25,0.375,0,0,0,,,,,41,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public KTableSource( String, String ): void","KTableSource( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public materialize( ): void",materialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public queryableName( ): String",queryableName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->queryableName",queryableName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>",KTableSourceValueGetterSupplier,low,low,low,low,1,3,0,1,0,3,18,7,1,0,3,0,0,0,0.333,0.667,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier.KTableSourceValueGetter,KTableSourceValueGetter,low,low,low,low,3,5,2,1,0,3,9,7,1,0,3,0,0,0,0.444,0.667,0,0,,,,,9,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>.public KTableSourceValueGetterSupplier( String ): void",KTableSourceValueGetterSupplier( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>.public get( ): KTableValueGetter",get( ): KTableValueGetter,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>.public storeNames( ): String",storeNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>",KTableTransformValues,low,low,low-medium,low,5,10,3,1,0,5,84,27,4,0,4,0,0,0.75,0.562,1,0,0,,,,,84,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableTransformValues.KTableTransformValuesGetter,KTableTransformValuesGetter,low,low,low,low,5,15,10,1,0,5,21,18,2,0,4,0,0,0,0.6,0,0,0,,,,,21,,,,,,5,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableTransformValues.KTableTransformValuesProcessor,KTableTransformValuesProcessor,low,low,low,low,8,19,14,2,0,8,31,27,3,0,4,0,1,0.444,0.6,0,0,0.5,,,,,31,,,,,,8,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableTransformValues$2693;,Lorg.apache.kafka.streams.kstream.internals.KTableTransformValues$2693;,low,low,low,low,0,0,0,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>. KTableTransformValues( KTableImpl, ValueTransformerWithKeySupplier, String ): void"," KTableTransformValues( KTableImpl, ValueTransformerWithKeySupplier, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,3
"<Method>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>.public get( ): Processor",get( ): Processor,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>->parent",final parent : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>->queryableName",final queryableName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>->transformerSupplier",final transformerSupplier : ValueTransformerWithKeySupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableTransformValues<K,V,V1>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>",KTableValueGetter,low,low,low,low,2,3,0,1,15,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract get( K ): ValueAndTimestamp",get( K ): ValueAndTimestamp,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>",KTableValueGetterSupplier,low,low,low,low,1,2,0,1,13,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>.public abstract get( ): KTableValueGetter",get( ): KTableValueGetter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>.public abstract storeNames( ): String",storeNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>",MaterializedInternal,low-medium,low,low,low-medium,3,13,3,2,0,15,31,29,1,0,11,0,0,0,0.659,0.917,0,0,,,,,31,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>. logConfig( ): Map", logConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>. retention( ): Duration", retention( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public MaterializedInternal( Materialized ): void",MaterializedInternal( Materialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public MaterializedInternal( Materialized, InternalNameProvider, String ): void","MaterializedInternal( Materialized, InternalNameProvider, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,2,3
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public cachingEnabled( ): boolean",cachingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public storeName( ): String",storeName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,3
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public storeSupplier( ): StoreSupplier",storeSupplier( ): StoreSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.MaterializedInternal<K,V,S>->queriable",final queriable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.NamedInternal,NamedInternal,low-medium,low,low,low,1,16,2,2,0,12,33,32,0,0,7,2,1,0,0.5,0,0,0.286,,,,,33,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal. NamedInternal( Named ): void, NamedInternal( Named ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal. NamedInternal( String ): void, NamedInternal( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.NamedInternal. orElseGenerateWithPrefix( InternalNameProvider, String ): String"," orElseGenerateWithPrefix( InternalNameProvider, String ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.NamedInternal. suffixWithOrElseGet( String, InternalNameProvider, String ): String"," suffixWithOrElseGet( String, InternalNameProvider, String ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,3,2
"<Method>org.apache.kafka.streams.kstream.internals.NamedInternal. suffixWithOrElseGet( String, String ): String"," suffixWithOrElseGet( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,2
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal.public static empty( ): NamedInternal,static empty( ): NamedInternal,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal.public static with( String ): NamedInternal,static with( String ): NamedInternal,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.kstream.internals.NamedInternal.public withName( String ): NamedInternal,withName( String ): NamedInternal,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.streams.kstream.internals.PassThrough<K,V>",PassThrough,low,low,low,low,1,1,0,1,0,1,8,3,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.PassThrough.PassThroughProcessor<K,V>",PassThroughProcessor,low,low,low,low,1,3,2,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.PassThrough<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>",PrintForeachAction,low,low,low,low,1,8,5,1,0,5,23,18,4,0,3,0,0,0.25,0.556,0,0,0,,,,,23,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>. PrintForeachAction( OutputStream, KeyValueMapper, String ): void"," PrintForeachAction( OutputStream, KeyValueMapper, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,4
"<Method>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>.public apply( K, V ): void","apply( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,5
"<Method>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,3
"<Field>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>->closable",final closable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>->label",final label : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>->mapper",final mapper : KeyValueMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.PrintForeachAction<K,V>->printWriter",final printWriter : PrintWriter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.PrintedInternal<K,V>",PrintedInternal,low-medium,low,low,low,3,3,0,2,0,4,7,6,0,0,3,0,0,0,0.444,0,0,0,,,,,7,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.PrintedInternal<K,V>.public PrintedInternal( Printed ): void",PrintedInternal( Printed ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.PrintedInternal<K,V>.public build( String ): ProcessorSupplier",build( String ): ProcessorSupplier,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,4
"<Method>org.apache.kafka.streams.kstream.internals.PrintedInternal<K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>",ProducedInternal,low-medium,low,low,low,2,5,0,2,0,5,11,10,0,0,5,0,0,0,0.4,0,0,0,,,,,11,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>.public ProducedInternal( Produced ): void",ProducedInternal( Produced ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>.public streamPartitioner( ): StreamPartitioner",streamPartitioner( ): StreamPartitioner,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.ProducedInternal<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"org.apache.kafka.streams.kstream.internals.SerializedInternal<K,V>",SerializedInternal,low-medium,low,low,low,1,3,0,2,0,3,8,6,0,0,3,0,0,0,0.333,0,0,0,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SerializedInternal<K,V>.public SerializedInternal( Serialized ): void",SerializedInternal( Serialized ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.SerializedInternal<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.SerializedInternal<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"org.apache.kafka.streams.kstream.internals.SessionCacheFlushListener<K,V>",SessionCacheFlushListener,low,low-medium,low,low,7,9,7,1,0,2,17,14,2,0,2,0,0,0,0.4,0,0,0,,,,,17,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionCacheFlushListener<K,V>. SessionCacheFlushListener( ProcessorContext ): void", SessionCacheFlushListener( ProcessorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
"<Method>org.apache.kafka.streams.kstream.internals.SessionCacheFlushListener<K,V>.public apply( Windowed, V, V, long ): void","apply( Windowed, V, V, long ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,4,8,5
"<Field>org.apache.kafka.streams.kstream.internals.SessionCacheFlushListener<K,V>->context",final context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionCacheFlushListener<K,V>->myNode",final myNode : ProcessorNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>",SessionTupleForwarder,low,low-medium,low,low,8,9,6,1,0,4,17,13,3,0,2,0,0,0,0.429,0,0,0,,,,,17,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>. SessionTupleForwarder( StateStore, ProcessorContext, CacheFlushListener, boolean ): void"," SessionTupleForwarder( StateStore, ProcessorContext, CacheFlushListener, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,1,3
"<Method>org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>.public maybeForward( Windowed, V, V ): void","maybeForward( Windowed, V, V ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,3,5,3
"<Field>org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>->cachingEnabled",final cachingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>->context",final context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionTupleForwarder<K,V>->sendOldValues",final sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.SessionWindow,SessionWindow,low-medium,low,low,low,0,3,1,2,0,3,9,8,0,0,2,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindow.public SessionWindow( long, long ): void","SessionWindow( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.kstream.internals.SessionWindow.public overlap( Window ): boolean,overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,4
"org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>",SessionWindowedCogroupedKStreamImpl,low-medium,medium-high,low-medium,low-medium,16,98,26,2,0,12,83,78,3,0,6,0,0,0.333,0.667,1,0,0,,,,,83,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>. SessionWindowedCogroupedKStreamImpl( SessionWindows, InternalStreamsBuilder, Set, String, CogroupedStreamAggregateBuilder, StreamsGraphNode, Map ): void"," SessionWindowedCogroupedKStreamImpl( SessionWindows, InternalStreamsBuilder, Set, String, CogroupedStreamAggregateBuilder, StreamsGraphNode, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,7,0,3
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>.public aggregate( Initializer, Merger ): KTable","aggregate( Initializer, Merger ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>.public aggregate( Initializer, Merger, Materialized ): KTable","aggregate( Initializer, Merger, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>.public aggregate( Initializer, Merger, Named ): KTable","aggregate( Initializer, Merger, Named ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>.public aggregate( Initializer, Merger, Named, Materialized ): KTable","aggregate( Initializer, Merger, Named, Materialized ): KTable",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,25,4,10,4
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>.private materialize( MaterializedInternal ): StoreBuilder",materialize( MaterializedInternal ): StoreBuilder,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,29,1,22,5
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>->aggregateBuilder",final aggregateBuilder : CogroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>->groupPatterns",final groupPatterns : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedCogroupedKStreamImpl<K,V>->sessionWindows",final sessionWindows : SessionWindows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>",SessionWindowedKStreamImpl,low-medium,high,low-medium,medium-high,21,90,38,2,0,32,167,163,3,0,17,0,0,0.708,0.776,0.818,0,0,,,,,167,,,,,,32,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>. SessionWindowedKStreamImpl( SessionWindows, InternalStreamsBuilder, Set, String, Serde, Serde, GroupedStreamAggregateBuilder, StreamsGraphNode ): void"," SessionWindowedKStreamImpl( SessionWindows, InternalStreamsBuilder, Set, String, Serde, Serde, GroupedStreamAggregateBuilder, StreamsGraphNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,8,1,2
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Merger ): KTable","aggregate( Initializer, Aggregator, Merger ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Merger, Materialized ): KTable","aggregate( Initializer, Aggregator, Merger, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Merger, Named ): KTable","aggregate( Initializer, Aggregator, Merger, Named ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,1
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public aggregate( Initializer, Aggregator, Merger, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Merger, Named, Materialized ): KTable",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,27,5,14,5
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.private aggregatorForReducer( Reducer ): Aggregator",aggregatorForReducer( Reducer ): Aggregator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public count( ): KTable",count( ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public count( Named ): KTable",count( Named ): KTable,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.private doCount( Named, Materialized ): KTable","doCount( Named, Materialized ): KTable",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,21,2,13,8
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.private materialize( MaterializedInternal ): StoreBuilder",materialize( MaterializedInternal ): StoreBuilder,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,29,1,22,5
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.private mergerForAggregator( Aggregator ): Merger",mergerForAggregator( Aggregator ): Merger,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public reduce( Reducer, Named ): KTable","reduce( Reducer, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>.public reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,28,3,17,7
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>->aggregateBuilder",final aggregateBuilder : GroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>->countMerger",final countMerger : Merger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.SessionWindowedKStreamImpl<K,V>->windows",final windows : SessionWindows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>",StreamJoinedInternal,low-medium,low,low,low,2,8,0,2,0,8,17,16,0,0,8,0,0,0,0.437,0,0,0,,,,,17,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public StreamJoinedInternal( StreamJoined ): void",StreamJoinedInternal( StreamJoined ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public otherStoreSupplier( ): WindowBytesStoreSupplier",otherStoreSupplier( ): WindowBytesStoreSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public otherValueSerde( ): Serde",otherValueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public storeName( ): String",storeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public thisStoreSupplier( ): WindowBytesStoreSupplier",thisStoreSupplier( ): WindowBytesStoreSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.StreamJoinedInternal<K,V1,V2>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
org.apache.kafka.streams.kstream.internals.TimeWindow,TimeWindow,low-medium,low,low,low,0,3,1,2,0,4,12,11,0,0,2,0,0,0,0.333,0,0,0,,,,,12,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindow.public TimeWindow( long, long ): void","TimeWindow( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,0,0
<Method>org.apache.kafka.streams.kstream.internals.TimeWindow.public overlap( Window ): boolean,overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,4
"org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>",TimeWindowedCogroupedKStreamImpl,low-medium,medium-high,low-medium,low-medium,16,99,27,2,0,13,103,98,3,0,6,0,0,0.333,0.694,1,0,0,,,,,103,,,,,,13,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>. TimeWindowedCogroupedKStreamImpl( Windows, InternalStreamsBuilder, Set, String, CogroupedStreamAggregateBuilder, StreamsGraphNode, Map ): void"," TimeWindowedCogroupedKStreamImpl( Windows, InternalStreamsBuilder, Set, String, CogroupedStreamAggregateBuilder, StreamsGraphNode, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,7,0,3
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>.public aggregate( Initializer ): KTable",aggregate( Initializer ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>.public aggregate( Initializer, Materialized ): KTable","aggregate( Initializer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>.public aggregate( Initializer, Named ): KTable","aggregate( Initializer, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>.public aggregate( Initializer, Named, Materialized ): KTable","aggregate( Initializer, Named, Materialized ): KTable",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,24,3,10,5
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>.private materialize( MaterializedInternal ): StoreBuilder",materialize( MaterializedInternal ): StoreBuilder,low,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,52,1,33,17
"<Field>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>->aggregateBuilder",final aggregateBuilder : CogroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>->groupPatterns",final groupPatterns : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimeWindowedCogroupedKStreamImpl<K,V,W>->windows",final windows : Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>",TimeWindowedKStreamImpl,low-medium,high,low-medium,medium-high,21,90,38,2,0,32,156,153,2,0,16,0,0,0.611,0.772,0.742,0,0,,,,,156,,,,,,32,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>. TimeWindowedKStreamImpl( Windows, InternalStreamsBuilder, Set, String, Serde, Serde, GroupedStreamAggregateBuilder, StreamsGraphNode ): void"," TimeWindowedKStreamImpl( Windows, InternalStreamsBuilder, Set, String, Serde, Serde, GroupedStreamAggregateBuilder, StreamsGraphNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,8,1,2
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public aggregate( Initializer, Aggregator ): KTable","aggregate( Initializer, Aggregator ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public aggregate( Initializer, Aggregator, Materialized ): KTable","aggregate( Initializer, Aggregator, Materialized ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public aggregate( Initializer, Aggregator, Named ): KTable","aggregate( Initializer, Aggregator, Named ): KTable",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,1
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public aggregate( Initializer, Aggregator, Named, Materialized ): KTable","aggregate( Initializer, Aggregator, Named, Materialized ): KTable",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,20,4,14,6
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.private aggregatorForReducer( Reducer ): Aggregator",aggregatorForReducer( Reducer ): Aggregator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public count( ): KTable",count( ): KTable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public count( Materialized ): KTable",count( Materialized ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public count( Named ): KTable",count( Named ): KTable,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public count( Named, Materialized ): KTable","count( Named, Materialized ): KTable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.private doCount( Named, Materialized ): KTable","doCount( Named, Materialized ): KTable",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,2,14,8
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.private materialize( MaterializedInternal ): StoreBuilder",materialize( MaterializedInternal ): StoreBuilder,low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,44,1,33,17
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public reduce( Reducer ): KTable",reduce( Reducer ): KTable,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public reduce( Reducer, Materialized ): KTable","reduce( Reducer, Materialized ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public reduce( Reducer, Named ): KTable","reduce( Reducer, Named ): KTable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>.public reduce( Reducer, Named, Materialized ): KTable","reduce( Reducer, Named, Materialized ): KTable",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,21,3,17,8
"<Field>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>->aggregateBuilder",final aggregateBuilder : GroupedStreamAggregateBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimeWindowedKStreamImpl<K,V,W>->windows",final windows : Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.TimestampedCacheFlushListener<K,V>",TimestampedCacheFlushListener,low,low-medium,low,low,6,10,7,1,0,3,20,17,2,0,2,0,0,0,0.4,0,0,0,,,,,20,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedCacheFlushListener<K,V>. TimestampedCacheFlushListener( ProcessorContext ): void", TimestampedCacheFlushListener( ProcessorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedCacheFlushListener<K,V>.public apply( K, ValueAndTimestamp, ValueAndTimestamp, long ): void","apply( K, ValueAndTimestamp, ValueAndTimestamp, long ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,4,9,5
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedCacheFlushListener<K,V>->context",final context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedCacheFlushListener<K,V>->myNode",final myNode : ProcessorNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.TimestampedKeyValueStoreMaterializer<K,V>",TimestampedKeyValueStoreMaterializer,low,low,low,low,4,16,12,1,0,5,20,18,1,0,2,0,0,0,0.25,0,0,0,,,,,20,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedKeyValueStoreMaterializer<K,V>.public TimestampedKeyValueStoreMaterializer( MaterializedInternal ): void",TimestampedKeyValueStoreMaterializer( MaterializedInternal ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedKeyValueStoreMaterializer<K,V>.public materialize( ): StoreBuilder",materialize( ): StoreBuilder,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,0,12,7
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedKeyValueStoreMaterializer<K,V>->materialized",final materialized : MaterializedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>",TimestampedTupleForwarder,low,low-medium,low,low,6,9,5,1,0,7,23,19,3,0,3,0,0,0,0.5,0,0,0,,,,,23,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>. TimestampedTupleForwarder( StateStore, ProcessorContext, TimestampedCacheFlushListener, boolean ): void"," TimestampedTupleForwarder( StateStore, ProcessorContext, TimestampedCacheFlushListener, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,1,3
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>.public maybeForward( K, V, V ): void","maybeForward( K, V, V ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,3,1,3
"<Method>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>.public maybeForward( K, V, V, long ): void","maybeForward( K, V, V, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,4,3,3
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>->cachingEnabled",final cachingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>->context",final context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.TimestampedTupleForwarder<K,V>->sendOldValues",final sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter<KIn,VIn,KOut,VOut>",TransformerSupplierAdapter,low,low,low,low,1,2,0,1,0,2,21,19,1,0,2,0,0,0,0.25,1,0,0,,,,,21,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter$1612;,Lorg.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter$1612;,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter<KIn,VIn,KOut,VOut>.public TransformerSupplierAdapter( TransformerSupplier ): void",TransformerSupplierAdapter( TransformerSupplier ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter<KIn,VIn,KOut,VOut>.public get( ): Transformer",get( ): Transformer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,17,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.TransformerSupplierAdapter<KIn,VIn,KOut,VOut>->transformerSupplier",transformerSupplier : TransformerSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.UnlimitedWindow,UnlimitedWindow,low-medium,low,low,low,0,3,1,2,0,3,9,8,0,0,2,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.UnlimitedWindow.public UnlimitedWindow( long ): void,UnlimitedWindow( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.kstream.internals.UnlimitedWindow.public overlap( Window ): boolean,overlap( Window ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,0
org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>,WindowedSerializer,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.WindowedSerializer<T>.public abstract serializeBaseKey( String, Windowed ): byte","serializeBaseKey( String, Windowed ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>",WindowedStreamPartitioner,low,low,low,low,3,5,3,1,0,2,8,6,1,0,2,0,0,0,0.417,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>.public WindowedStreamPartitioner( WindowedSerializer ): void",WindowedStreamPartitioner( WindowedSerializer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>.public partition( String, Windowed, V, int ): Integer","partition( String, Windowed, V, int ): Integer",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,3,1
"<Field>org.apache.kafka.streams.kstream.internals.WindowedStreamPartitioner<K,V>->serializer",final serializer : WindowedSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowingDefaults,WindowingDefaults,low,low,low,low,0,1,0,1,0,1,3,1,0,1,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.WindowingDefaults.private WindowingDefaults( ): void,WindowingDefaults( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.streams.kstream.internals.WindowingDefaults->DEFAULT_RETENTION_MS,static final DEFAULT_RETENTION_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals.foreignkeyjoin,org.apache.kafka.streams.kstream.internals.foreignkeyjoin,low,medium-high,medium-high,low,,,,,,90,536,,,,,,,,,,,,,18,18,0,536,1,11,0,0.917,0.083,90,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>",CombinedKey,low,low,low,low,2,8,3,1,0,6,22,19,2,0,5,0,0,0.25,0.4,0.167,0,0,,,,,22,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>. CombinedKey( KF, KP ): void"," CombinedKey( KF, KP ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>.public equals( KF, KP ): boolean","equals( KF, KP ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,2,3
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>.public getForeignKey( ): KF",getForeignKey( ): KF,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>.public getPrimaryKey( ): KP",getPrimaryKey( ): KP,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>->foreignKey",final foreignKey : KF,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKey<KF,KP>->primaryKey",final primaryKey : KP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>",CombinedKeySchema,low,low-medium,low,low-medium,6,19,14,1,0,9,43,37,5,0,5,0,0,0.4,0.657,0,0,0,,,,,43,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>. prefixBytes( KO ): Bytes", prefixBytes( KO ): Bytes,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,2
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>. toBytes( KO, K ): Bytes"," toBytes( KO, K ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,8,4
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>.public CombinedKeySchema( String, Serde, Serde ): void","CombinedKeySchema( String, Serde, Serde ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,4,5
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>.public fromBytes( Bytes ): CombinedKey",fromBytes( Bytes ): CombinedKey,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,7,4
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>.public init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,6,1,8,12
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>->serdeTopic",final serdeTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>->foreignKeyDeserializer",foreignKeyDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>->foreignKeySerializer",foreignKeySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>->primaryKeyDeserializer",primaryKeyDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.CombinedKeySchema<KO,K>->primaryKeySerializer",primaryKeySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>",ForeignJoinSubscriptionProcessorSupplier,low,low,low,low,4,2,0,1,0,2,50,8,2,1,2,0,0,0,0.333,1,0,0,,,,,50,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier.KTableKTableJoinProcessor,KTableKTableJoinProcessor,low,low,low,low,16,98,29,2,0,6,38,35,2,0,3,0,0,0,0.533,0,2,0,,,,,38,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>.public ForeignJoinSubscriptionProcessorSupplier( StoreBuilder, CombinedKeySchema ): void","ForeignJoinSubscriptionProcessorSupplier( StoreBuilder, CombinedKeySchema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>->keySchema",final keySchema : CombinedKeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>->storeBuilder",final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionProcessorSupplier<K,KO,VO>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>",ForeignJoinSubscriptionSendProcessorSupplier,low,low,low-medium,low,4,3,1,1,0,3,78,13,5,1,2,0,0,0,0.417,1,0,0,,,,,78,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier.UnbindChangeProcessor,UnbindChangeProcessor,low,low,low,low,11,80,20,2,0,12,58,56,1,0,2,0,0,0,0.375,0,0,0,,,,,58,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>.public ForeignJoinSubscriptionSendProcessorSupplier( Function, Serde, String, Serializer, boolean ): void","ForeignJoinSubscriptionSendProcessorSupplier( Function, Serde, String, Serializer, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,5,1,5
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->foreignKeyExtractor",final foreignKeyExtractor : Function,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->repartitionTopicName",final repartitionTopicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->foreignKeySerializer",foreignKeySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.ForeignJoinSubscriptionSendProcessorSupplier<K,KO,V>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier<K,KO,VO>",SubscriptionJoinForeignProcessorSupplier,low,low,low-medium,low,2,2,0,1,0,2,57,54,1,0,2,0,0,0,0.25,1,0,0,,,,,57,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier$2484;,Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier$2484;,low,low,low,low,0,0,0,2,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier<K,KO,VO>.public SubscriptionJoinForeignProcessorSupplier( KTableValueGetterSupplier ): void",SubscriptionJoinForeignProcessorSupplier( KTableValueGetterSupplier ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier<K,KO,VO>.public get( ): Processor",get( ): Processor,low,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,52,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionJoinForeignProcessorSupplier<K,KO,VO>->foreignValueGetterSupplier",final foreignValueGetterSupplier : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>",SubscriptionResolverJoinProcessorSupplier,low,low,low,low,4,2,0,1,0,2,40,35,4,0,2,0,0,0,0.4,1,0,0,,,,,40,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier$3021;,Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier$3021;,low,low,low,low,0,0,0,2,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>.public SubscriptionResolverJoinProcessorSupplier( KTableValueGetterSupplier, Serializer, ValueJoiner, boolean ): void","SubscriptionResolverJoinProcessorSupplier( KTableValueGetterSupplier, Serializer, ValueJoiner, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>.public get( ): Processor",get( ): Processor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,27,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>->joiner",final joiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>->leftJoin",final leftJoin : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>->valueGetterSupplier",final valueGetterSupplier : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K,V,VO,VR>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>,SubscriptionResponseWrapper,low,low,low,low,2,7,1,1,0,7,26,21,3,1,6,0,0,0.65,0.542,0.467,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public SubscriptionResponseWrapper( long, FV ): void","SubscriptionResponseWrapper( long, FV ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,1
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public SubscriptionResponseWrapper( long, FV, byte ): void","SubscriptionResponseWrapper( long, FV, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,0,4
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public getForeignValue( ): FV,getForeignValue( ): FV,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public getOriginalValueHash( ): long,getOriginalValueHash( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public getVersion( ): byte,getVersion( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,3
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>->foreignValue,final foreignValue : FV,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>->originalValueHash,final originalValueHash : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>->version,final version : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<FV>->CURRENT_VERSION,static final CURRENT_VERSION : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>,SubscriptionResponseWrapperSerde,low,low,low-medium,low,2,5,2,1,0,3,62,9,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,62,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde.SubscriptionResponseWrapperDeserializer<V>,SubscriptionResponseWrapperDeserializer,low,low,low,low,1,7,5,1,0,4,28,26,1,0,2,0,0,0,0.375,0,0,0,,,,,28,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde.SubscriptionResponseWrapperSerializer<V>,SubscriptionResponseWrapperSerializer,low,low,low,low,2,12,10,1,0,8,22,20,1,0,2,0,0,0,0.375,0,1,0,,,,,22,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>.public SubscriptionResponseWrapperSerde( Serde ): void,SubscriptionResponseWrapperSerde( Serde ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>.public deserializer( ): Deserializer,deserializer( ): Deserializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>.public serializer( ): Serializer,serializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>->deserializer,final deserializer : SubscriptionResponseWrapperDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapperSerde<V>->serializer,final serializer : SubscriptionResponseWrapperSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>",SubscriptionStoreReceiveProcessorSupplier,low,low,low-medium,low,4,2,0,1,0,2,51,46,2,1,2,0,0,0,0.333,1,0,0,,,,,51,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier$2523;,Lorg.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier$2523;,low,low,low,low,0,0,0,2,0,0,38,0,0,0,0,0,0,0,0,0,0,0,,,,,38,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>.public SubscriptionStoreReceiveProcessorSupplier( StoreBuilder, CombinedKeySchema ): void","SubscriptionStoreReceiveProcessorSupplier( StoreBuilder, CombinedKeySchema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>.public get( ): Processor",get( ): Processor,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,41,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>->keySchema",final keySchema : CombinedKeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>->storeBuilder",final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionStoreReceiveProcessorSupplier<K,KO>->LOG",static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>,SubscriptionWrapper,low,low,low,low,2,9,2,1,0,8,48,27,4,1,7,0,0,0.7,0.6,0.524,0,0,,,,,48,,,,,,8,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper.Instruction,Instruction,low,low,low,low,0,3,0,2,0,5,15,9,1,4,2,1,0,1.2,0.167,0,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public SubscriptionWrapper( long, Instruction, K ): void","SubscriptionWrapper( long, Instruction, K ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,1
"<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public SubscriptionWrapper( long, Instruction, K, byte ): void","SubscriptionWrapper( long, Instruction, K, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,4,2,5
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public getHash( ): long,getHash( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public getInstruction( ): Instruction,getInstruction( ): Instruction,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public getPrimaryKey( ): K,getPrimaryKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public getVersion( ): byte,getVersion( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,1,4
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>->hash,final hash : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>->instruction,final instruction : Instruction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>->primaryKey,final primaryKey : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>->version,final version : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper<K>->CURRENT_VERSION,static final CURRENT_VERSION : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>,SubscriptionWrapperSerde,low,low,low-medium,low,2,5,2,1,0,3,59,9,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,59,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde.SubscriptionWrapperDeserializer<K>,SubscriptionWrapperDeserializer,low,low,low,low,2,8,6,1,0,3,24,22,1,0,2,0,0,0,0.375,0,0,0,,,,,24,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde.SubscriptionWrapperSerializer<K>,SubscriptionWrapperSerializer,low,low,low,low,3,14,12,1,0,5,23,21,1,0,2,0,0,0,0.375,0,2,0,,,,,23,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>.public SubscriptionWrapperSerde( Serde ): void,SubscriptionWrapperSerde( Serde ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>.public deserializer( ): Deserializer,deserializer( ): Deserializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>.public serializer( ): Serializer,serializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>->deserializer,final deserializer : SubscriptionWrapperDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapperSerde<K>->serializer,final serializer : SubscriptionWrapperSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals.graph,org.apache.kafka.streams.kstream.internals.graph,low-medium,medium-high,medium-high,low,,,,,,206,1036,,,,,,,,,,,,,24,24,0,1036,14,19,0.083,0.576,0.341,206,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>",BaseJoinProcessorNode,low-medium,low,low,low-medium,2,13,1,2,2,8,43,36,6,0,8,0,0,0.714,0.656,0,0,0,,,,,43,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. BaseJoinProcessorNode( String, ValueJoiner, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String ): void"," BaseJoinProcessorNode( String, ValueJoiner, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,0,6
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. mergeProcessorParameters( ): ProcessorParameters", mergeProcessorParameters( ): ProcessorParameters,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. otherJoinSideNodeName( ): String", otherJoinSideNodeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. otherProcessorParameters( ): ProcessorParameters", otherProcessorParameters( ): ProcessorParameters,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. thisJoinSideNodeName( ): String", thisJoinSideNodeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. thisProcessorParameters( ): ProcessorParameters", thisProcessorParameters( ): ProcessorParameters,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>. valueJoiner( ): ValueJoiner", valueJoiner( ): ValueJoiner,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,1,6
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->joinMergeProcessorParameters",final joinMergeProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->joinOtherProcessorParameters",final joinOtherProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->joinThisProcessorParameters",final joinThisProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->otherJoinSideNodeName",final otherJoinSideNodeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->thisJoinSideNodeName",final thisJoinSideNodeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K,V1,V2,VR>->valueJoiner",final valueJoiner : ValueJoiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>",BaseRepartitionNode,low-medium,low,low,low,5,9,1,2,2,4,37,29,7,0,4,0,0,0,0.6,0,0,0,,,,,37,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>. BaseRepartitionNode( String, String, ProcessorParameters, Serde, Serde, String, String, StreamPartitioner ): void"," BaseRepartitionNode( String, String, ProcessorParameters, Serde, Serde, String, String, StreamPartitioner ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,0,7
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>.abstract getValueDeserializer( ): Deserializer",abstract getValueDeserializer( ): Deserializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>.abstract getValueSerializer( ): Serializer",abstract getValueSerializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,1,7
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->partitioner",final partitioner : StreamPartitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->processorParameters",final processorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->repartitionTopic",final repartitionTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->sinkName",final sinkName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->sourceName",final sourceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode,GlobalStoreNode,low-medium,low,low,low,4,33,5,3,0,3,37,31,5,0,3,0,1,0.2,0.556,0,0,1,,,,,37,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode.public GlobalStoreNode( StoreBuilder, String, String, ConsumedInternal, String, ProcessorSupplier ): void","GlobalStoreNode( StoreBuilder, String, String, ConsumedInternal, String, ProcessorSupplier ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,6,0,5
<Method>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Method>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode.public writeToTopology( InternalTopologyBuilder ): void,writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,5,9
<Field>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode->consumed,final consumed : ConsumedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode->processorName,final processorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode->sourceName,final sourceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode->stateUpdateSupplier,final stateUpdateSupplier : ProcessorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.GlobalStoreNode->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.graph.GraphGraceSearchUtil,GraphGraceSearchUtil,low,low-medium,low,low,9,17,14,1,0,13,39,38,0,0,1,3,0,0,0.333,0,0,0,,,,,39,,,,,,13,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.graph.GraphGraceSearchUtil.private GraphGraceSearchUtil( ): void,GraphGraceSearchUtil( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.graph.GraphGraceSearchUtil.private static extractGracePeriod( StreamsGraphNode ): Long,static extractGracePeriod( StreamsGraphNode ): Long,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,1,7,0
<Method>org.apache.kafka.streams.kstream.internals.graph.GraphGraceSearchUtil.public static findAndVerifyWindowGrace( StreamsGraphNode ): long,static findAndVerifyWindowGrace( StreamsGraphNode ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GraphGraceSearchUtil.private static findAndVerifyWindowGrace( StreamsGraphNode, String ): long","static findAndVerifyWindowGrace( StreamsGraphNode, String ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,20,2,9,0
"org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>",GroupedTableOperationRepartitionNode,low-medium,low-medium,low-medium,medium-high,9,42,11,3,0,12,98,57,0,0,7,1,0,0,0.75,0,0,0,,,,,98,,,,,,12,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode.GroupedTableOperationRepartitionNodeBuilder<K,V>",GroupedTableOperationRepartitionNodeBuilder,low,low,low,low,2,9,0,1,0,9,40,32,7,0,9,0,0,0.857,0.556,0.75,0,0,,,,,40,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>. getValueDeserializer( ): Deserializer", getValueDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>. getValueSerializer( ): Serializer", getValueSerializer( ): Serializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,2,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.private GroupedTableOperationRepartitionNode( String, Serde, Serde, String, String, String, ProcessorParameters ): void","GroupedTableOperationRepartitionNode( String, Serde, Serde, String, String, String, ProcessorParameters ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,7,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.public static groupedTableOperationNodeBuilder( ): GroupedTableOperationRepartitionNodeBuilder",static groupedTableOperationNodeBuilder( ): GroupedTableOperationRepartitionNodeBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.private unsafeCastChangedToValueDeserializer( Deserializer ): Deserializer",unsafeCastChangedToValueDeserializer( Deserializer ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.private unsafeCastChangedToValueSerializer( Serializer ): Serializer",unsafeCastChangedToValueSerializer( Serializer ): Serializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.GroupedTableOperationRepartitionNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,21,1,8,9
"org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>",KTableKTableForeignKeyJoinResolutionNode,low-medium,low,low,low,5,47,10,2,0,2,42,32,9,0,2,0,0,0,0.417,0,0,0,,,,,42,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>.public KTableKTableForeignKeyJoinResolutionNode( String, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String, String, Serde, Serde, KTableValueGetterSupplier ): void","KTableKTableForeignKeyJoinResolutionNode( String, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String, String, Serde, Serde, KTableValueGetterSupplier ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,10,0,9
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,15,16
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->finalRepartitionSinkName",final finalRepartitionSinkName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->finalRepartitionSourceName",final finalRepartitionSourceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->finalRepartitionTopicName",final finalRepartitionTopicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->joinByPrefixProcessorParameters",final joinByPrefixProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->joinOneToOneProcessorParameters",final joinOneToOneProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->originalValueGetter",final originalValueGetter : KTableValueGetterSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->resolverProcessorParameters",final resolverProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableForeignKeyJoinResolutionNode<K,V,KO,VO>->subResponseSerde",final subResponseSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>",KTableKTableJoinNode,low-medium,low,low-medium,medium-high,5,54,15,3,0,11,135,65,5,0,9,1,0,0.72,0.75,0.944,1,0,,,,,135,,,,,,11,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode.KTableKTableJoinNodeBuilder<K,V1,V2,VR>",KTableKTableJoinNodeBuilder,low,low,low,low,4,15,2,1,0,13,64,52,11,0,13,0,0,0.909,0.631,0.833,0,0,,,,,64,,,,,,13,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>. KTableKTableJoinNode( String, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String, Serde, Serde, String, String, StoreBuilder ): void"," KTableKTableJoinNode( String, ProcessorParameters, ProcessorParameters, ProcessorParameters, String, String, Serde, Serde, String, String, StoreBuilder ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,11,0,5
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public joinMerger( ): KTableKTableJoinMerger",joinMerger( ): KTableKTableJoinMerger,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public joinOtherStoreNames( ): String",joinOtherStoreNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public joinThisStoreNames( ): String",joinThisStoreNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public queryableStoreName( ): String",queryableStoreName( ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public static kTableKTableJoinNodeBuilder( ): KTableKTableJoinNodeBuilder",static kTableKTableJoinNodeBuilder( ): KTableKTableJoinNodeBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,22,1,20,4
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>->joinOtherStoreNames",final joinOtherStoreNames : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>->joinThisStoreNames",final joinThisStoreNames : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>->storeBuilder",final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K,V1,V2,VR>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>",OptimizableRepartitionNode,low-medium,low-medium,low-medium,medium-high,8,46,12,3,0,13,107,61,0,0,8,1,0,0,0.741,0,0,0,,,,,107,,,,,,13,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode.OptimizableRepartitionNodeBuilder<K,V>",OptimizableRepartitionNodeBuilder,low,low,low,low,3,10,0,1,0,10,45,36,8,0,10,0,0,0.875,0.64,0.778,0,0,,,,,45,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>. OptimizableRepartitionNode( String, String, ProcessorParameters, Serde, Serde, String, String, StreamPartitioner ): void"," OptimizableRepartitionNode( String, String, ProcessorParameters, Serde, Serde, String, String, StreamPartitioner ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,8,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>. getValueDeserializer( ): Deserializer", getValueDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>. getValueSerializer( ): Serializer", getValueSerializer( ): Serializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public repartitionTopic( ): String",repartitionTopic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public static optimizableRepartitionNodeBuilder( ): OptimizableRepartitionNodeBuilder",static optimizableRepartitionNodeBuilder( ): OptimizableRepartitionNodeBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,26,1,12,13
"org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>",ProcessorGraphNode,low-medium,low,low,low,2,25,5,2,1,5,19,17,1,0,5,0,0,0,0.55,0,0,0,,,,,19,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>.public ProcessorGraphNode( ProcessorParameters ): void",ProcessorGraphNode( ProcessorParameters ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>.public ProcessorGraphNode( String, ProcessorParameters ): void","ProcessorGraphNode( String, ProcessorParameters ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>.public processorParameters( ): ProcessorParameters",processorParameters( ): ProcessorParameters,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
"<Field>org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K,V>->processorParameters",final processorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>",ProcessorParameters,low,low,low,low,1,5,1,1,0,4,17,14,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,17,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>.public ProcessorParameters( ProcessorSupplier, String ): void","ProcessorParameters( ProcessorSupplier, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>.public processorName( ): String",processorName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>.public processorSupplier( ): ProcessorSupplier",processorSupplier( ): ProcessorSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>.public toString( ): String",toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
"<Field>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>->processorName",final processorName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K,V>->processorSupplier",final processorSupplier : ProcessorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.graph.StateStoreNode,StateStoreNode,low-medium,low,low,low,2,31,4,2,1,3,15,13,1,0,3,0,0,0,0.444,0,0,0,,,,,15,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.graph.StateStoreNode.public StateStoreNode( StoreBuilder ): void,StateStoreNode( StoreBuilder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StateStoreNode.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,3,3
<Method>org.apache.kafka.streams.kstream.internals.graph.StateStoreNode.public writeToTopology( InternalTopologyBuilder ): void,writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Field>org.apache.kafka.streams.kstream.internals.graph.StateStoreNode->storeBuilder,final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>",StatefulProcessorNode,low-medium,low,low,low,5,49,14,3,0,8,38,35,2,0,5,0,1,0,0.567,0,0,0.6,,,,,38,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>.public StatefulProcessorNode( ProcessorParameters, Set, Set ): void","StatefulProcessorNode( ProcessorParameters, Set, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,7,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>.public StatefulProcessorNode( String, ProcessorParameters, StoreBuilder ): void","StatefulProcessorNode( String, ProcessorParameters, StoreBuilder ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>.public StatefulProcessorNode( String, ProcessorParameters, String ): void","StatefulProcessorNode( String, ProcessorParameters, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,2,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,8,5
"<Field>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>->storeBuilder",final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K,V>->storeNames",final storeNames : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>",StreamSinkNode,low-medium,low-medium,low,low,8,26,9,2,0,8,30,27,2,0,3,0,0,0,0.533,0,0,0,,,,,30,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>.public StreamSinkNode( String, TopicNameExtractor, ProducedInternal ): void","StreamSinkNode( String, TopicNameExtractor, ProducedInternal ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,15,1,14,9
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>->producedInternal",final producedInternal : ProducedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamSinkNode<K,V>->topicNameExtractor",final topicNameExtractor : TopicNameExtractor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>",StreamSourceNode,low-medium,low,low,medium-high,3,41,12,2,1,10,49,45,3,0,9,0,0,0.5,0.704,0.25,0,0,,,,,49,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public StreamSourceNode( String, Collection, ConsumedInternal ): void","StreamSourceNode( String, Collection, ConsumedInternal ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public StreamSourceNode( String, Pattern, ConsumedInternal ): void","StreamSourceNode( String, Pattern, ConsumedInternal ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public consumedInternal( ): ConsumedInternal",consumedInternal( ): ConsumedInternal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public getTopicNames( ): Collection",getTopicNames( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,3
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public topicPattern( ): Pattern",topicPattern( ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,14,12
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>->consumedInternal",final consumedInternal : ConsumedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>->topicNames",topicNames : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamSourceNode<K,V>->topicPattern",topicPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>",StreamStreamJoinNode,low-medium,low,low-medium,low-medium,5,44,8,3,0,4,104,44,5,0,3,1,0,0.1,0.643,0.667,0,0,,,,,104,,,,,,4,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode.StreamStreamJoinNodeBuilder<K,V1,V2,VR>",StreamStreamJoinNodeBuilder,low,low,low,low,4,12,0,1,0,12,54,43,10,0,12,0,0,0.9,0.694,0.818,0,0,,,,,54,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>.private StreamStreamJoinNode( String, ValueJoiner, ProcessorParameters, ProcessorParameters, ProcessorParameters, ProcessorParameters, ProcessorParameters, StoreBuilder, StoreBuilder, Joined ): void","StreamStreamJoinNode( String, ValueJoiner, ProcessorParameters, ProcessorParameters, ProcessorParameters, ProcessorParameters, ProcessorParameters, StoreBuilder, StoreBuilder, Joined ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,22,10,0,5
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>.public static streamStreamJoinNodeBuilder( ): StreamStreamJoinNodeBuilder",static streamStreamJoinNodeBuilder( ): StreamStreamJoinNodeBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,1,5
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,19,4
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>->joined",final joined : Joined,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>->otherWindowStoreBuilder",final otherWindowStoreBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>->otherWindowedStreamProcessorParameters",final otherWindowedStreamProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>->thisWindowStoreBuilder",final thisWindowStoreBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamStreamJoinNode<K,V1,V2,VR>->thisWindowedStreamProcessorParameters",final thisWindowedStreamProcessorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>",StreamTableJoinNode,low-medium,low,low,low,3,37,7,2,0,4,26,22,3,0,3,0,0,0,0.5,0,0,0,,,,,26,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>.public StreamTableJoinNode( String, ProcessorParameters, String, String ): void","StreamTableJoinNode( String, ProcessorParameters, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,3
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,2,3
"<Method>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,5,4
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>->otherJoinSideNodeName",final otherJoinSideNodeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>->processorParameters",final processorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.StreamTableJoinNode<K,V>->storeNames",final storeNames : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode,StreamsGraphNode,low-medium,low,low-medium,medium-high,1,26,8,1,9,25,69,60,8,0,21,0,0,0.868,0.762,0.837,0,0,,,,,69,,,,,,25,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode. parentNodeNames( ): String, parentNodeNames( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,2
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public StreamsGraphNode( String ): void,StreamsGraphNode( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public abstract writeToTopology( InternalTopologyBuilder ): void,abstract writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public addChild( StreamsGraphNode ): void,addChild( StreamsGraphNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public allParentsWrittenToTopology( ): boolean,allParentsWrittenToTopology( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,1,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public buildPriority( ): Integer,buildPriority( ): Integer,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public children( ): Collection,children( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public clearChildren( ): void,clearChildren( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,3
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public hasWrittenToTopology( ): boolean,hasWrittenToTopology( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public isKeyChangingOperation( ): boolean,isKeyChangingOperation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public isMergeNode( ): boolean,isMergeNode( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public isValueChangingOperation( ): boolean,isValueChangingOperation( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public keyChangingOperation( boolean ): void,keyChangingOperation( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public nodeName( ): String,nodeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public parentNodes( ): Collection,parentNodes( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public removeChild( StreamsGraphNode ): boolean,removeChild( StreamsGraphNode ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public setBuildPriority( int ): void,setBuildPriority( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public setHasWrittenToTopology( boolean ): void,setHasWrittenToTopology( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public setMergeNode( boolean ): void,setMergeNode( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public setValueChangingOperation( boolean ): void,setValueChangingOperation( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,2,6
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->buildPriority,buildPriority : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->childNodes,final childNodes : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->nodeName,final nodeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->parentNodes,final parentNodes : Collection,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->hasWrittenToTopology,hasWrittenToTopology : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->keyChangingOperation,keyChangingOperation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->mergeNode,mergeNode : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode->valueChangingOperation,valueChangingOperation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>",TableProcessorNode,low-medium,low,low,low,3,41,9,2,0,8,32,28,3,0,4,0,0,0,0.45,0.5,0,0,,,,,32,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>.public TableProcessorNode( String, ProcessorParameters, StoreBuilder ): void","TableProcessorNode( String, ProcessorParameters, StoreBuilder ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>.public TableProcessorNode( String, ProcessorParameters, StoreBuilder, String ): void","TableProcessorNode( String, ProcessorParameters, StoreBuilder, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,0,3
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,3,4
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,6,6
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>->processorParameters",final processorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>->storeBuilder",final storeBuilder : StoreBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableProcessorNode<K,V>->storeNames",final storeNames : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>",TableSourceNode,low-medium,low-medium,low-medium,low-medium,8,80,22,3,0,8,99,55,5,0,4,1,1,0.4,0.657,0.667,0,0.75,,,,,99,,,,,,8,,,,,,,
"org.apache.kafka.streams.kstream.internals.graph.TableSourceNode.TableSourceNodeBuilder<K,V>",TableSourceNodeBuilder,low,low,low,low,3,9,0,1,0,9,38,30,7,0,9,0,0,0.857,0.704,0.75,0,0,,,,,38,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>.private TableSourceNode( String, String, String, ConsumedInternal, MaterializedInternal, ProcessorParameters, boolean ): void","TableSourceNode( String, String, String, ConsumedInternal, MaterializedInternal, ProcessorParameters, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,1,4
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>.public reuseSourceTopicForChangeLog( boolean ): void",reuseSourceTopicForChangeLog( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>.public static tableSourceNodeBuilder( ): TableSourceNodeBuilder",static tableSourceNodeBuilder( ): TableSourceNodeBuilder,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,1,4
"<Method>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>.public writeToTopology( InternalTopologyBuilder ): void",writeToTopology( InternalTopologyBuilder ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,29,1,32,11
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>->isGlobalKTable",final isGlobalKTable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>->materializedInternal",final materializedInternal : MaterializedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>->processorParameters",final processorParameters : ProcessorParameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>->sourceName",final sourceName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.graph.TableSourceNode<K,V>->shouldReuseSourceTopicForChangelog",shouldReuseSourceTopicForChangelog : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals.suppress,org.apache.kafka.streams.kstream.internals.suppress,low,low-medium,medium-high,low,,,,,,87,359,,,,,,,,,,,,,14,12,2,359,2,8,0.143,0.8,0.057,87,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>,BufferConfigInternal,low,low,low,low,5,6,2,1,2,6,18,17,0,0,6,0,0,0,0,0,0,0,,,,,18,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public abstract bufferFullStrategy( ): BufferFullStrategy,abstract bufferFullStrategy( ): BufferFullStrategy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,2,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public abstract maxBytes( ): long,abstract maxBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public abstract maxRecords( ): long,abstract maxRecords( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public emitEarlyWhenFull( ): EagerBufferConfig,emitEarlyWhenFull( ): EagerBufferConfig,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public shutDownWhenFull( ): StrictBufferConfig,shutDownWhenFull( ): StrictBufferConfig,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.BufferConfigInternal<BC>.public withNoBound( ): StrictBufferConfig,withNoBound( ): StrictBufferConfig,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
org.apache.kafka.streams.kstream.internals.suppress.BufferFullStrategy,BufferFullStrategy,low-medium,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.BufferFullStrategy->EMIT,static final EMIT : BufferFullStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.BufferFullStrategy->SHUT_DOWN,static final SHUT_DOWN : BufferFullStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.BufferFullStrategy->SPILL_TO_DISK,static final SPILL_TO_DISK : BufferFullStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl,EagerBufferConfigImpl,low-medium,low,low,low,1,11,2,2,0,12,36,33,2,0,9,0,0,0.286,0.519,0.333,0,0,,,,,36,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public EagerBufferConfigImpl( long, long ): void","EagerBufferConfigImpl( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public bufferFullStrategy( ): BufferFullStrategy,bufferFullStrategy( ): BufferFullStrategy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,2,4
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public maxBytes( ): long,maxBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public maxRecords( ): long,maxRecords( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public withMaxBytes( long ): EagerBufferConfig,withMaxBytes( long ): EagerBufferConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl.public withMaxRecords( long ): EagerBufferConfig,withMaxRecords( long ): EagerBufferConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl->maxBytes,final maxBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.EagerBufferConfigImpl->maxRecords,final maxRecords : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>,FinalResultsSuppressionBuilder,low,low,low,low-medium,3,11,4,1,0,10,38,35,2,0,7,0,0,0.167,0.657,0.048,0,0,,,,,38,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public FinalResultsSuppressionBuilder( String, StrictBufferConfig ): void","FinalResultsSuppressionBuilder( String, StrictBufferConfig ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public buildFinalResultsSuppression( Duration ): SuppressedInternal,buildFinalResultsSuppression( Duration ): SuppressedInternal,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,1,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>.public withName( String ): Suppressed,withName( String ): Suppressed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>->bufferConfig,final bufferConfig : StrictBufferConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.FinalResultsSuppressionBuilder<K>->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>",KTableSuppressProcessorSupplier,low,low,low-medium,low,4,13,2,1,0,4,127,46,3,0,4,0,0,0.556,0.562,0.333,0,0,,,,,127,,,,,,4,,,,,,,
"org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier.KTableSuppressProcessor<K,V>",KTableSuppressProcessor,low,low,low,low,15,94,40,1,0,13,77,65,11,0,9,0,0,0.766,0.714,0.667,0,0,,,,,77,,,,,,13,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier$3149;,Lorg.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier$3149;,low,low,low,low,0,0,0,1,0,0,29,0,0,0,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier$3380;,Lorg.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier$3380;,low,low,low,low,0,0,0,1,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>.public KTableSuppressProcessorSupplier( SuppressedInternal, String, KTableImpl ): void","KTableSuppressProcessorSupplier( SuppressedInternal, String, KTableImpl ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,1,3
"<Method>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>.public get( ): Processor",get( ): Processor,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>.public view( ): KTableValueGetterSupplier",view( ): KTableValueGetterSupplier,low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,4,33,0,1,1
"<Field>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>->parentKTable",final parentKTable : KTableImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.suppress.KTableSuppressProcessorSupplier<K,V>->suppress",final suppress : SuppressedInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.NamedSuppressed<K>,NamedSuppressed,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.suppress.NamedSuppressed<K>.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl,StrictBufferConfigImpl,low-medium,low,low,low-medium,1,12,2,2,0,13,47,43,3,0,10,0,0,0.296,0.625,0.111,0,0,,,,,47,,,,,,13,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public StrictBufferConfigImpl( ): void,StrictBufferConfigImpl( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,3
"<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public StrictBufferConfigImpl( long, long, BufferFullStrategy ): void","StrictBufferConfigImpl( long, long, BufferFullStrategy ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public bufferFullStrategy( ): BufferFullStrategy,bufferFullStrategy( ): BufferFullStrategy,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,2,6
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public maxBytes( ): long,maxBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public maxRecords( ): long,maxRecords( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,3
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public withMaxBytes( long ): StrictBufferConfig,withMaxBytes( long ): StrictBufferConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl.public withMaxRecords( long ): StrictBufferConfig,withMaxRecords( long ): StrictBufferConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Field>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl->bufferFullStrategy,final bufferFullStrategy : BufferFullStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl->maxBytes,final maxBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.StrictBufferConfigImpl->maxRecords,final maxRecords : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>,SuppressedInternal,low,low,low-medium,medium-high,5,14,4,1,0,17,56,48,5,2,10,0,0,0.619,0.757,0.067,0,0,,,,,56,,,,,,17,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>. bufferConfig( ): BufferConfigInternal, bufferConfig( ): BufferConfigInternal,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>. safeToDropTombstones( ): boolean, safeToDropTombstones( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>. timeDefinition( ): TimeDefinition, timeDefinition( ): TimeDefinition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>. timeToWaitForMoreEvents( ): Duration, timeToWaitForMoreEvents( ): Duration,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public SuppressedInternal( String, Duration, BufferConfig, TimeDefinition, boolean ): void","SuppressedInternal( String, Duration, BufferConfig, TimeDefinition, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,10,5,1,7
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,1,6,10
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,5
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,0,5
<Method>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>.public withName( String ): Suppressed,withName( String ): Suppressed,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,4
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->bufferConfig,final bufferConfig : BufferConfigInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->safeToDropTombstones,final safeToDropTombstones : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->timeDefinition,final timeDefinition : TimeDefinition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->timeToWaitForMoreEvents,final timeToWaitForMoreEvents : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->DEFAULT_BUFFER_CONFIG,static final DEFAULT_BUFFER_CONFIG : StrictBufferConfigImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.suppress.SuppressedInternal<K>->DEFAULT_SUPPRESSION_TIME,static final DEFAULT_SUPPRESSION_TIME : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions,TimeDefinitions,low,low,low,low,0,1,0,1,0,1,31,1,0,0,1,0,0,0,0,0,0,0,,,,,31,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions.RecordTimeDefintion<K>,RecordTimeDefintion,low,low,low,low,2,5,1,1,0,4,12,10,0,1,3,1,0,0,0.5,1,0,0,,,,,12,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions.TimeDefinition<K>,TimeDefinition,low,low,low,low,2,2,0,1,2,2,3,2,0,0,2,0,0,0,0.333,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions.TimeDefinitionType,TimeDefinitionType,low,low,low,low,0,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions.WindowEndTimeDefinition<K>,WindowEndTimeDefinition,low,low,low,low,3,6,2,1,0,4,12,10,0,1,3,1,0,0,0.5,1,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.kstream.internals.suppress.TimeDefinitions.private TimeDefinitions( ): void,TimeDefinitions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.streams.processor,org.apache.kafka.streams.processor,low,medium-high,high,low,,,,,,188,641,,,,,,,,,,,,,32,18,14,641,175,16,0.531,0.084,0.385,188,,,,,,,
org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback,AbstractNotifyingBatchingRestoreCallback,low,low,low,low,1,4,0,1,3,4,19,18,0,0,4,0,0,0,0.3,0,0,0,,,,,19,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback.public onBatchRestored( TopicPartition, String, long, long ): void","onBatchRestored( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback.public onRestoreEnd( TopicPartition, String, long ): void","onRestoreEnd( TopicPartition, String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback.public onRestoreStart( TopicPartition, String, long, long ): void","onRestoreStart( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingBatchingRestoreCallback.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
org.apache.kafka.streams.processor.AbstractNotifyingRestoreCallback,AbstractNotifyingRestoreCallback,low,low,low,low,1,3,0,1,0,3,15,14,0,0,3,0,0,0,0,0,0,0,,,,,15,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingRestoreCallback.public onBatchRestored( TopicPartition, String, long, long ): void","onBatchRestored( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingRestoreCallback.public onRestoreEnd( TopicPartition, String, long ): void","onRestoreEnd( TopicPartition, String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.processor.AbstractNotifyingRestoreCallback.public onRestoreStart( TopicPartition, String, long, long ): void","onRestoreStart( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"org.apache.kafka.streams.processor.AbstractProcessor<K,V>",AbstractProcessor,low,low,low,low,1,4,0,1,34,4,10,8,1,0,4,0,0,0,0.375,1,0,0,,,,,10,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.protected AbstractProcessor( ): void",AbstractProcessor( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.protected final context( ): ProcessorContext",final context( ): ProcessorContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Field>org.apache.kafka.streams.processor.AbstractProcessor<K,V>->context",context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.BatchingStateRestoreCallback,BatchingStateRestoreCallback,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.BatchingStateRestoreCallback.public abstract restoreAll( Collection ): void,restoreAll( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.Cancellable,Cancellable,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.Cancellable.public abstract cancel( ): void,cancel( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.DefaultPartitionGrouper,DefaultPartitionGrouper,low,low,low,low,4,16,13,1,0,9,28,25,0,1,2,0,0,0,0.25,0,0,0,,,,,28,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.DefaultPartitionGrouper.protected maxNumPartitions( Cluster, Set ): int","maxNumPartitions( Cluster, Set ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,4,1
"<Method>org.apache.kafka.streams.processor.DefaultPartitionGrouper.public partitionGroups( Map, Cluster ): Map","partitionGroups( Map, Cluster ): Map",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,14,2,11,0
<Field>org.apache.kafka.streams.processor.DefaultPartitionGrouper->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.ExtractRecordMetadataTimestamp,ExtractRecordMetadataTimestamp,low,low,low,low,1,3,2,1,4,3,10,9,0,0,2,0,0,0,0,0,0,0,,,,,10,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.ExtractRecordMetadataTimestamp.public abstract onInvalidTimestamp( ConsumerRecord, long, long ): long","abstract onInvalidTimestamp( ConsumerRecord, long, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,3,3,0,0
"<Method>org.apache.kafka.streams.processor.ExtractRecordMetadataTimestamp.public extract( ConsumerRecord, long ): long","extract( ConsumerRecord, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
org.apache.kafka.streams.processor.FailOnInvalidTimestamp,FailOnInvalidTimestamp,low-medium,low,low,low,3,2,1,2,0,1,13,11,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.FailOnInvalidTimestamp.public onInvalidTimestamp( ConsumerRecord, long, long ): long","onInvalidTimestamp( ConsumerRecord, long, long ): long",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,1,1
<Field>org.apache.kafka.streams.processor.FailOnInvalidTimestamp->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp,LogAndSkipOnInvalidTimestamp,low-medium,low,low,low,2,2,1,2,0,1,8,6,0,1,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp.public onInvalidTimestamp( ConsumerRecord, long, long ): long","onInvalidTimestamp( ConsumerRecord, long, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
<Field>org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.MockProcessorContext,MockProcessorContext,medium-high,medium-high,medium-high,high,20,128,25,1,0,47,246,182,13,0,38,0,0,0.933,0.88,0.933,0,0,,,,,246,,,,,,47,,,,,,,
org.apache.kafka.streams.processor.MockProcessorContext.CapturedForward,CapturedForward,low,low,low,low,2,5,0,1,0,6,26,22,3,0,5,0,0,0.5,0.533,0.5,0,0,,,,,26,,,,,,6,,,,,,,
org.apache.kafka.streams.processor.MockProcessorContext.CapturedPunctuator,CapturedPunctuator,low,low,low,low,2,6,0,1,0,6,24,19,4,0,6,0,0,0.8,0.625,0.9,0,0,,,,,24,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.MockProcessorContext$6956;,Lorg.apache.kafka.streams.processor.MockProcessorContext$6956;,low,low,low,low,0,0,0,4,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public MockProcessorContext( ): void,MockProcessorContext( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,0,0
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public MockProcessorContext( Properties ): void,MockProcessorContext( Properties ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public MockProcessorContext( Properties, TaskId, File ): void","MockProcessorContext( Properties, TaskId, File ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,3,6,5
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public appConfigs( ): Map,appConfigs( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,4,2
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public appConfigsWithPrefix( String ): Map,appConfigsWithPrefix( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public applicationId( ): String,applicationId( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public committed( ): boolean,committed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,0
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forward( K, V, To ): void","forward( K, V, To ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,9,3,2,4
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,0
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forwarded( ): List,forwarded( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public forwarded( String ): List,forwarded( String ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,1,4,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public keySerde( ): Serde,keySerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public metrics( ): StreamsMetrics,metrics( ): StreamsMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public recordCollector( ): RecordCollector,recordCollector( ): RecordCollector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public resetCommit( ): void,resetCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public resetForwards( ): void,resetForwards( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,1,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public scheduledPunctuators( ): List,scheduledPunctuators( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setHeaders( Headers ): void,setHeaders( Headers ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setOffset( long ): void,setOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setPartition( int ): void,setPartition( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setRecordMetadata( String, int, long, Headers, long ): void","setRecordMetadata( String, int, long, Headers, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,5
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setTimestamp( long ): void,setTimestamp( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public setTopic( String ): void,setTopic( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public stateDir( ): File,stateDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public taskId( ): TaskId,taskId( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.streams.processor.MockProcessorContext.public valueSerde( ): Serde,valueSerde( ): Serde,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.processor.MockProcessorContext->committed,committed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->capturedForwards,final capturedForwards : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->config,final config : StreamsConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->metrics,final metrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->punctuators,final punctuators : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->stateDir,final stateDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->stateStores,final stateStores : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->taskId,final taskId : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->headers,headers : Headers,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->offset,offset : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->partition,partition : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->timestamp,timestamp : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.MockProcessorContext->topic,topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.PartitionGrouper,PartitionGrouper,low,low,low,low,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.PartitionGrouper.public abstract partitionGroups( Map, Cluster ): Map","partitionGroups( Map, Cluster ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.processor.Processor<K,V>",Processor,low,low,low,low,1,3,0,1,5,3,4,3,0,0,3,0,0,0,0.5,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract init( ProcessorContext ): void",init( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.ProcessorContext,ProcessorContext,low-medium,low-medium,low-medium,high,10,22,0,1,3,22,31,22,0,0,22,0,0,0,0.837,0,0,0,,,,,31,,,,,,22,,,,,,,
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract appConfigs( ): Map,appConfigs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract appConfigsWithPrefix( String ): Map,appConfigsWithPrefix( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract applicationId( ): String,applicationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, To ): void","forward( K, V, To ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract keySerde( ): Serde,keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract metrics( ): StreamsMetrics,metrics( ): StreamsMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract stateDir( ): File,stateDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract taskId( ): TaskId,taskId( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract valueSerde( ): Serde,valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.ProcessorSupplier<K,V>",ProcessorSupplier,low,low,low,low,1,1,0,1,25,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.ProcessorSupplier<K,V>.public abstract get( ): Processor",get( ): Processor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.PunctuationType,PunctuationType,low-medium,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.PunctuationType->STREAM_TIME,static final STREAM_TIME : PunctuationType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.PunctuationType->WALL_CLOCK_TIME,static final WALL_CLOCK_TIME : PunctuationType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.Punctuator,Punctuator,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.Punctuator.public abstract punctuate( long ): void,punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.RecordContext,RecordContext,low,low,low,low,1,5,0,1,1,5,6,5,0,0,5,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.RecordContext.public abstract headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.RecordContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.RecordContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.RecordContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.RecordContext.public abstract topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.StateRestoreCallback,StateRestoreCallback,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.StateRestoreCallback.public abstract restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.StateRestoreListener,StateRestoreListener,low,low,low,low,1,3,0,1,5,3,12,3,0,0,3,0,0,0,0,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.StateRestoreListener.public abstract onBatchRestored( TopicPartition, String, long, long ): void","onBatchRestored( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.processor.StateRestoreListener.public abstract onRestoreEnd( TopicPartition, String, long ): void","onRestoreEnd( TopicPartition, String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.processor.StateRestoreListener.public abstract onRestoreStart( TopicPartition, String, long, long ): void","onRestoreStart( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.streams.processor.StateStore,StateStore,low,low,low,low,1,6,0,1,6,6,7,6,0,0,6,0,0,0,0.556,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStore.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.StateStore.public abstract init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.StreamPartitioner<K,V>",StreamPartitioner,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.StreamPartitioner<K,V>.public abstract partition( String, K, V, int ): Integer","partition( String, K, V, int ): Integer",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.streams.processor.TaskId,TaskId,low,low,low,medium-high,1,20,10,1,0,16,45,42,2,0,7,3,0,0,0.775,0.533,0,0,,,,,45,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.processor.TaskId.public TaskId( int, int ): void","TaskId( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public compareTo( TaskId ): int,compareTo( TaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,4
<Method>org.apache.kafka.streams.processor.TaskId.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,0,4
<Method>org.apache.kafka.streams.processor.TaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public static parse( String ): TaskId,static parse( String ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,6,0
<Method>org.apache.kafka.streams.processor.TaskId.public static readFrom( ByteBuffer ): TaskId,static readFrom( ByteBuffer ): TaskId,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.streams.processor.TaskId.public static readFrom( DataInputStream ): TaskId,static readFrom( DataInputStream ): TaskId,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.streams.processor.TaskId.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public writeTo( ByteBuffer ): void,writeTo( ByteBuffer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.processor.TaskId.public writeTo( DataOutputStream ): void,writeTo( DataOutputStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Field>org.apache.kafka.streams.processor.TaskId->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.TaskId->topicGroupId,final topicGroupId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.TaskMetadata,TaskMetadata,low,low,low,low-medium,0,10,4,1,0,9,29,26,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,29,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.TaskMetadata.public TaskMetadata( String, Set ): void","TaskMetadata( String, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,2
<Method>org.apache.kafka.streams.processor.TaskMetadata.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
<Method>org.apache.kafka.streams.processor.TaskMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.processor.TaskMetadata.public taskId( ): String,taskId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.TaskMetadata.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.streams.processor.TaskMetadata.public topicPartitions( ): Set,topicPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.TaskMetadata->taskId,final taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.TaskMetadata->topicPartitions,final topicPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.ThreadMetadata,ThreadMetadata,low,low,low-medium,low-medium,0,17,5,1,0,15,79,70,8,0,12,0,0,0.636,0.687,0.424,0,0,,,,,79,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.processor.ThreadMetadata.public ThreadMetadata( String, String, String, String, Set, String, Set, Set ): void","ThreadMetadata( String, String, String, String, Set, String, Set, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,2,8
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public activeTasks( ): Set,activeTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public adminClientId( ): String,adminClientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public consumerClientId( ): String,consumerClientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,1,10,16
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,1,8
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public producerClientIds( ): Set,producerClientIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public restoreConsumerClientId( ): String,restoreConsumerClientId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public standbyTasks( ): Set,standbyTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public threadName( ): String,threadName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public threadState( ): String,threadState( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.ThreadMetadata.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,0,8
<Field>org.apache.kafka.streams.processor.ThreadMetadata->activeTasks,final activeTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->adminClientId,final adminClientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->mainConsumerClientId,final mainConsumerClientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->producerClientIds,final producerClientIds : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->restoreConsumerClientId,final restoreConsumerClientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->standbyTasks,final standbyTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->threadName,final threadName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.ThreadMetadata->threadState,final threadState : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.TimestampExtractor,TimestampExtractor,low,low,low,low,1,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.TimestampExtractor.public abstract extract( ConsumerRecord, long ): long","extract( ConsumerRecord, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.To,To,low,low,low,low-medium,0,10,2,1,1,11,31,28,2,0,6,2,0,0.125,0.625,0.9,0,0,,,,,31,,,,,,11,,,,,,,
"<Method>org.apache.kafka.streams.processor.To.private To( String, long ): void","To( String, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.processor.To.protected To( To ): void,To( To ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.To.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,3,4
<Method>org.apache.kafka.streams.processor.To.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.To.public static all( ): To,static all( ): To,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.To.public static child( String ): To,static child( String ): To,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.To.protected update( To ): void,update( To ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,4
<Method>org.apache.kafka.streams.processor.To.public withTimestamp( long ): To,withTimestamp( long ): To,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.streams.processor.To->childName,childName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.To->timestamp,timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.TopicNameExtractor<K,V>",TopicNameExtractor,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.TopicNameExtractor<K,V>.public abstract extract( K, V, RecordContext ): String","extract( K, V, RecordContext ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.processor.UsePartitionTimeOnInvalidTimestamp,UsePartitionTimeOnInvalidTimestamp,low-medium,low,low,low,2,1,0,2,0,2,10,9,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.UsePartitionTimeOnInvalidTimestamp.public onInvalidTimestamp( ConsumerRecord, long, long ): long","onInvalidTimestamp( ConsumerRecord, long, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,3,0,0
org.apache.kafka.streams.processor.UsePreviousTimeOnInvalidTimestamp,UsePreviousTimeOnInvalidTimestamp,low-medium,low,low,low,2,1,0,2,0,2,12,9,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.UsePreviousTimeOnInvalidTimestamp.public onInvalidTimestamp( ConsumerRecord, long, long ): long","onInvalidTimestamp( ConsumerRecord, long, long ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,3,0,0
org.apache.kafka.streams.processor.WallclockTimestampExtractor,WallclockTimestampExtractor,low,low,low,low,1,2,1,1,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.WallclockTimestampExtractor.public extract( ConsumerRecord, long ): long","extract( ConsumerRecord, long ): long",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Package>org.apache.kafka.streams.processor.internals,org.apache.kafka.streams.processor.internals,very-high,high,very-high,low,,,,,,2003,7913,,,,,,,,,,,,,111,95,16,7913,63,56,0.18,0.471,0.349,2003,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractProcessorContext,AbstractProcessorContext,low-medium,medium-high,low-medium,high,11,72,16,1,3,29,109,96,11,1,22,0,0,0.925,0.868,0.84,0,0,,,,,109,,,,,,29,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public AbstractProcessorContext( TaskId, StreamsConfig, StreamsMetricsImpl, StateManager, ThreadCache ): void","AbstractProcessorContext( TaskId, StreamsConfig, StreamsMetricsImpl, StateManager, ThreadCache ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,5,3,8
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public appConfigs( ): Map,appConfigs( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,4,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public appConfigsWithPrefix( String ): Map,appConfigsWithPrefix( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public applicationId( ): String,applicationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public currentNode( ): ProcessorNode,currentNode( ): ProcessorNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public getCache( ): ThreadCache,getCache( ): ThreadCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public headers( ): Headers,headers( ): Headers,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public initialize( ): void,initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public keySerde( ): Serde,keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public metrics( ): StreamsMetricsImpl,metrics( ): StreamsMetricsImpl,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public offset( ): long,offset( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public partition( ): int,partition( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public recordContext( ): ProcessorRecordContext,recordContext( ): ProcessorRecordContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,2,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public setCurrentNode( ProcessorNode ): void,setCurrentNode( ProcessorNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public setRecordContext( ProcessorRecordContext ): void,setRecordContext( ProcessorRecordContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public stateDir( ): File,stateDir( ): File,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public taskId( ): TaskId,taskId( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public topic( ): String,topic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,2,3
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public uninitialize( ): void,uninitialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractProcessorContext.public valueSerde( ): Serde,valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->currentNode,currentNode : ProcessorNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->applicationId,final applicationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->cache,final cache : ThreadCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->config,final config : StreamsConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->keySerde,final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->metrics,final metrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->stateManager,final stateManager : StateManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->taskId,final taskId : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->valueSerde,final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->recordContext,recordContext : ProcessorRecordContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractProcessorContext->NONEXIST_TOPIC,static final NONEXIST_TOPIC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractTask,AbstractTask,medium-high,medium-high,low-medium,high,17,130,32,1,2,34,132,116,15,0,18,0,0,0.9,0.848,0.923,0,0,,,,,132,,,,,,34,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.AbstractTask. AbstractTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, boolean, StateDirectory, StreamsConfig ): void"," AbstractTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, boolean, StateDirectory, StreamsConfig ): void",low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,31,8,11,16
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. closeStateManager( boolean ): void, closeStateManager( boolean ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,1,4,5
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. flushState( ): void, flushState( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,2,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. registerStateStores( ): void, registerStateStores( ): void,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,0,11,12
<Method>org.apache.kafka.streams.processor.internals.AbstractTask. reinitializeStateStoresForPartitions( Collection ): void, reinitializeStateStoresForPartitions( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public applicationId( ): String,applicationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public changelogPartitions( ): Collection,changelogPartitions( ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public commitNeeded( ): boolean,commitNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public context( ): ProcessorContext,context( ): ProcessorContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public getStore( String ): StateStore,getStore( String ): StateStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public hasStateStores( ): boolean,hasStateStores( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public id( ): TaskId,id( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public isClosed( ): boolean,isClosed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public isEosEnabled( ): boolean,isEosEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public partitions( ): Set,partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public toString( String ): String,toString( String ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,1,17,6
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public topology( ): ProcessorTopology,topology( ): ProcessorTopology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->commitNeeded, commitNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->processorContext, processorContext : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->taskClosed, taskClosed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->taskInitialized, taskInitialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->applicationId,final applicationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->consumer,final consumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->id,final id : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->logContext,final logContext : LogContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->partitions,final partitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->stateDirectory,final stateDirectory : StateDirectory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->stateMgr,final stateMgr : ProcessorStateManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AbstractTask->topology,final topology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AssignedStandbyTasks,AssignedStandbyTasks,medium-high,low,low,low,4,136,18,2,0,9,37,36,0,0,4,0,0,0,0.562,0,0,0,,,,,37,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AssignedStandbyTasks. AssignedStandbyTasks( LogContext ): void, AssignedStandbyTasks( LogContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedStandbyTasks. closeRevokedStandbyTasks( Map ): List, closeRevokedStandbyTasks( Map ): List,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,1,15,7
<Method>org.apache.kafka.streams.processor.internals.AssignedStandbyTasks. commit( ): int, commit( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStandbyTasks.public shutdown( boolean ): void,shutdown( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,1,4,3
org.apache.kafka.streams.processor.internals.AssignedStreamsTasks,AssignedStreamsTasks,very-high,low-medium,medium-high,high,7,358,84,2,0,91,339,333,5,0,35,0,0,0.739,0.836,0.333,0,0,,,,,339,,,,,,91,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. AssignedStreamsTasks( LogContext ): void, AssignedStreamsTasks( LogContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. addTaskToRestoring( StreamTask ): void, addTaskToRestoring( StreamTask ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,6,3
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. allAssignedTaskIds( ): Set, allAssignedTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. allTasks( ): List, allTasks( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,2
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. allTasksRunning( ): boolean, allTasksRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,3
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. clear( ): void, clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,6,5
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. clearRestoringPartitions( ): void, clearRestoringPartitions( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,4,5
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. closeAllTasksAsZombies( ): RuntimeException, closeAllTasksAsZombies( ): RuntimeException,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,19,0,25,13
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. closeNotAssignedSuspendedTasks( Set ): RuntimeException, closeNotAssignedSuspendedTasks( Set ): RuntimeException,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,6,3
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. closeRestoringTasks( Set, List ): RuntimeException"," closeRestoringTasks( Set, List ): RuntimeException",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,5,2
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. closeTask( StreamTask, boolean ): void"," closeTask( StreamTask, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,4,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. hasRestoringTasks( ): boolean, hasRestoringTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. maybeCommitPerUserRequested( ): int, maybeCommitPerUserRequested( ): int,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,20,0,10,4
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. maybeResumeSuspendedTask( TaskId, Set ): boolean"," maybeResumeSuspendedTask( TaskId, Set ): boolean",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,20,2,16,6
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. previousRunningTaskIds( ): Set, previousRunningTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. process( long ): int, process( long ): int,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,14,1,7,3
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. punctuate( ): int, punctuate( ): int,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,16,0,7,3
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. recordsToDelete( ): Map, recordsToDelete( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,1
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. removeTaskFromAllStateMaps( StreamTask, Map ): void"," removeTaskFromAllStateMaps( StreamTask, Map ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,10,6
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. restoringTaskIds( ): Set, restoringTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. restoringTasks( ): Collection, restoringTasks( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. suspendOrCloseTasks( Set, List ): RuntimeException"," suspendOrCloseTasks( Set, List ): RuntimeException",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,21,2,18,7
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. suspendedTaskIds( ): Set, suspendedTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks. updateRestored( Collection ): void, updateRestored( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,29,1,26,12
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private closeNonRunning( boolean, StreamTask, List ): RuntimeException","closeNonRunning( boolean, StreamTask, List ): RuntimeException",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,3,7,1
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private closeNonRunningTasks( Set, List ): RuntimeException","closeNonRunningTasks( Set, List ): RuntimeException",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,5,2
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private closeRestoring( boolean, StreamTask, List ): RuntimeException","closeRestoring( boolean, StreamTask, List ): RuntimeException",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,3,7,1
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private closeRunning( boolean, StreamTask ): RuntimeException","closeRunning( boolean, StreamTask ): RuntimeException",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,5,1
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private closeSuspended( boolean, StreamTask ): RuntimeException","closeSuspended( boolean, StreamTask ): RuntimeException",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,5,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private removeFromRestoredPartitions( StreamTask ): void,removeFromRestoredPartitions( StreamTask ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,2
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private removeFromRestoringByPartition( StreamTask ): void,removeFromRestoringByPartition( StreamTask ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,6,2
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.public restoringTaskFor( TopicPartition ): StreamTask,restoringTaskFor( TopicPartition ): StreamTask,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.public shutdown( boolean ): void,shutdown( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,1,6,5
"<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.private suspendRunningTasks( Set, List ): RuntimeException","suspendRunningTasks( Set, List ): RuntimeException",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,29,2,19,12
<Method>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.public toString( String ): String,toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,10,4
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->prevActiveTasks,final prevActiveTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->restoredPartitions,final restoredPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->restoring,final restoring : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->restoringByPartition,final restoringByPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedStreamsTasks->suspended,final suspended : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.AssignedTasks<T>,AssignedTasks,low-medium,low-medium,low-medium,medium-high,7,74,55,1,2,46,156,150,5,0,23,0,0,0.644,0.797,1,0,0,,,,,156,,,,,,46,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. AssignedTasks( LogContext, String ): void"," AssignedTasks( LogContext, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,2
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. addNewTask( T ): void, addNewTask( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. allAssignedTaskIds( ): Set, allAssignedTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,4,2
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. allTasks( ): List, allTasks( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,4,2
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. allTasksRunning( ): boolean, allTasksRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. clear( ): void, clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
"<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. closeTask( T, boolean ): void"," closeTask( T, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. commit( ): int, commit( ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,22,0,7,5
"<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. describePartitions( StringBuilder, Collection, String, String ): void"," describePartitions( StringBuilder, Collection, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,4,6,0
"<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. describeTasks( StringBuilder, Collection, String, String ): void"," describeTasks( StringBuilder, Collection, String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,4,6,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. hasRunningTasks( ): boolean, hasRunningTasks( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. initializeNewTasks( ): void, initializeNewTasks( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,17,0,19,10
"<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. removeTaskFromAllStateMaps( T, Map ): void"," removeTaskFromAllStateMaps( T, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,8,5
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. running( ): Collection, running( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. runningTaskFor( TopicPartition ): T, runningTaskFor( TopicPartition ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. runningTaskIds( ): Set, runningTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. runningTaskMap( ): Map, runningTaskMap( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. shutdown( boolean ): void, shutdown( boolean ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,21,1,13,3
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. transitionToRunning( T ): void, transitionToRunning( T ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,9,5
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>. tryCloseZombieTask( T ): void, tryCloseZombieTask( T ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,2
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>.private closeUnclean( T ): void,closeUnclean( T ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,9,2
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.AssignedTasks<T>.public toString( String ): String,toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,7,3
<Field>org.apache.kafka.streams.processor.internals.AssignedTasks<T>->created,final created : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedTasks<T>->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedTasks<T>->running,final running : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedTasks<T>->runningByPartition,final runningByPartition : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.AssignedTasks<T>->taskTypeName,final taskTypeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ChangelogReader,ChangelogReader,low,low,low,low-medium,2,6,0,1,1,6,7,6,0,0,6,0,0,0,0.625,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract register( StateRestorer ): void,register( StateRestorer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract remove( List ): void,remove( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract restore( RestoringTasks ): Collection,restore( RestoringTasks ): Collection,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.ChangelogReader.public abstract restoredOffsets( ): Map,restoredOffsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.Checkpointable,Checkpointable,low,low,low,low,0,2,0,1,1,2,3,2,0,0,2,0,0,0,0.25,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.Checkpointable.public abstract checkpoint( Map ): void,checkpoint( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.Checkpointable.public abstract checkpointed( ): Map,checkpointed( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.CompositeRestoreListener,CompositeRestoreListener,low,low,low,low-medium,3,14,5,1,0,10,48,40,3,1,8,0,0,0.65,0.656,0.8,0,0,,,,,48,,,,,,10,,,,,,,
org.apache.kafka.streams.processor.internals.CompositeRestoreListener.NoOpStateRestoreListener,NoOpStateRestoreListener,low,low,low,low,0,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener. CompositeRestoreListener( StateRestoreCallback ): void, CompositeRestoreListener( StateRestoreCallback ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,4
<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener. setUserRestoreListener( StateRestoreListener ): void, setUserRestoreListener( StateRestoreListener ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,0,1
"<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public onBatchRestored( TopicPartition, String, long, long ): void","onBatchRestored( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,2
"<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public onRestoreEnd( TopicPartition, String, long ): void","onRestoreEnd( TopicPartition, String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,2
"<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public onRestoreStart( TopicPartition, String, long, long ): void","onRestoreStart( TopicPartition, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,2
"<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public restoreAll( Collection ): void,restoreAll( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.CompositeRestoreListener.public restoreBatch( Collection ): void,restoreBatch( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Field>org.apache.kafka.streams.processor.internals.CompositeRestoreListener->internalBatchingRestoreCallback,final internalBatchingRestoreCallback : RecordBatchingStateRestoreCallback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.CompositeRestoreListener->storeRestoreListener,final storeRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.CompositeRestoreListener->NO_OP_STATE_RESTORE_LISTENER,static final NO_OP_STATE_RESTORE_LISTENER : NoOpStateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.CompositeRestoreListener->userRestoreListener,userRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier,DefaultKafkaClientSupplier,medium-high,low-medium,low,low,8,131,2,1,0,6,20,19,0,0,6,0,0,0,0,0,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getAdmin( Map ): Admin,getAdmin( Map ): Admin,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getAdminClient( Map ): AdminClient,getAdminClient( Map ): AdminClient,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,0
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getConsumer( Map ): Consumer,getConsumer( Map ): Consumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getGlobalConsumer( Map ): Consumer,getGlobalConsumer( Map ): Consumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getProducer( Map ): Producer,getProducer( Map ): Producer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier.public getRestoreConsumer( Map ): Consumer,getRestoreConsumer( Map ): Consumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>",DefaultStreamPartitioner,low,low,low,low,3,21,2,1,0,2,12,8,3,0,2,0,0,0,0.429,0,0,0,,,,,12,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>.public DefaultStreamPartitioner( Serializer, Cluster ): void","DefaultStreamPartitioner( Serializer, Cluster ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,3
"<Method>org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>.public partition( String, K, V, int ): Integer","partition( String, K, V, int ): Integer",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,4,2,3
"<Field>org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>->cluster",final cluster : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>->defaultPartitioner",final defaultPartitioner : DefaultPartitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.DefaultStreamPartitioner<K,V>->keySerializer",final keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext,ForwardingDisabledProcessorContext,low-medium,medium-high,low-medium,high,11,42,19,1,0,23,78,76,1,0,23,0,0,0,0.849,0.324,0,0,,,,,78,,,,,,23,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public ForwardingDisabledProcessorContext( ProcessorContext ): void,ForwardingDisabledProcessorContext( ProcessorContext ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public appConfigs( ): Map,appConfigs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public appConfigsWithPrefix( String ): Map,appConfigsWithPrefix( String ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public applicationId( ): String,applicationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public forward( K, V, To ): void","forward( K, V, To ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public keySerde( ): Serde,keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public metrics( ): StreamsMetrics,metrics( ): StreamsMetrics,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public stateDir( ): File,stateDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public taskId( ): TaskId,taskId( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext.public valueSerde( ): Serde,valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.processor.internals.ForwardingDisabledProcessorContext->delegate,final delegate : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl,GlobalProcessorContextImpl,low-medium,medium-high,low-medium,medium-high,16,42,6,2,0,16,52,51,0,0,9,0,0,0,0.754,0,0,0,,,,,52,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public GlobalProcessorContextImpl( StreamsConfig, StateManager, StreamsMetricsImpl, ThreadCache ): void","GlobalProcessorContextImpl( StreamsConfig, StateManager, StreamsMetricsImpl, ThreadCache ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,6,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V, To ): void","forward( K, V, To ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,3,3,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,15,1,1,1
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
org.apache.kafka.streams.processor.internals.GlobalStateMaintainer,GlobalStateMaintainer,low,low,low,low,1,4,0,1,1,4,5,4,0,0,4,0,0,0,0.375,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract flushState( ): void,flushState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract initialize( ): Map,initialize( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateMaintainer.public abstract update( ConsumerRecord ): void,update( ConsumerRecord ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.GlobalStateManager,GlobalStateManager,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0.25,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManager.public abstract initialize( ): Set,initialize( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManager.public abstract setGlobalProcessorContext( InternalProcessorContext ): void,setGlobalProcessorContext( InternalProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl,GlobalStateManagerImpl,high,high,low-medium,high,26,152,85,1,0,52,273,256,16,0,14,0,0,0.776,0.844,0.5,0,0,,,,,273,,,,,,52,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public GlobalStateManagerImpl( LogContext, ProcessorTopology, Consumer, StateDirectory, StateRestoreListener, StreamsConfig ): void","GlobalStateManagerImpl( LogContext, ProcessorTopology, Consumer, StateDirectory, StateRestoreListener, StreamsConfig ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,22,6,14,14
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public baseDir( ): File,baseDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public checkpoint( Map ): void,checkpoint( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,1,10,6
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public checkpointed( ): Map,checkpointed( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public close( boolean ): void,close( boolean ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,25,1,24,7
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public flush( ): void,flush( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,0,12,3
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public getGlobalStore( String ): StateStore,getGlobalStore( String ): StateStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public getStore( String ): StateStore,getStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public initialize( ): Set,initialize( ): Set,low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,36,0,18,13
"<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,43,2,27,14
"<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void","reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,4,9
"<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.private restoreState( StateRestoreCallback, List, Map, String, RecordConverter ): void","restoreState( StateRestoreCallback, List, Map, String, RecordConverter ): void",low,very-high,low-medium,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,38,5,27,15
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.public setGlobalProcessorContext( InternalProcessorContext ): void,setGlobalProcessorContext( InternalProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl.private topicPartitionsForStore( StateStore ): List,topicPartitionsForStore( StateStore ): List,low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,34,1,14,10
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->baseDir,final baseDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->checkpointFile,final checkpointFile : OffsetCheckpoint,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->checkpointFileCache,final checkpointFileCache : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->globalConsumer,final globalConsumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->globalNonPersistentStoresTopics,final globalNonPersistentStoresTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->globalStoreNames,final globalStoreNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->globalStores,final globalStores : FixedOrderMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->pollTime,final pollTime : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->stateDirectory,final stateDirectory : StateDirectory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->stateRestoreListener,final stateRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->topology,final topology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateManagerImpl->globalProcessorContext,globalProcessorContext : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask,GlobalStateUpdateTask,medium-high,medium-high,low-medium,medium-high,13,127,31,1,0,9,69,61,7,0,6,0,0,0.657,0.714,0.1,0,0,,,,,69,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public GlobalStateUpdateTask( ProcessorTopology, InternalProcessorContext, GlobalStateManager, DeserializationExceptionHandler, LogContext ): void","GlobalStateUpdateTask( ProcessorTopology, InternalProcessorContext, GlobalStateManager, DeserializationExceptionHandler, LogContext ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public flushState( ): void,flushState( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,3
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.private initTopology( ): void,initTopology( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,7,0,4,4
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public initialize( ): Map,initialize( ): Map,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,23,0,14,10
<Method>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask.public update( ConsumerRecord ): void,update( ConsumerRecord ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,19,5
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->deserializationExceptionHandler,final deserializationExceptionHandler : DeserializationExceptionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->deserializers,final deserializers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->logContext,final logContext : LogContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->offsets,final offsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->processorContext,final processorContext : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->stateMgr,final stateMgr : GlobalStateManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask->topology,final topology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStreamThread,GlobalStreamThread,low-medium,medium-high,low-medium,high,18,99,27,2,0,23,190,118,15,0,10,0,1,0.833,0.825,0.893,0,0.2,,,,,190,,,,,,23,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStreamThread.State,State,low,low,low,low,0,8,5,2,0,3,11,8,1,4,3,0,0,1.2,0.444,1,0,0,,,,,11,,,,,,3,,,,,,,
org.apache.kafka.streams.processor.internals.GlobalStreamThread.StateConsumer,StateConsumer,low,low,low,low,9,21,16,1,0,9,45,37,7,0,4,0,0,0.381,0.643,0,0,0,,,,,45,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public GlobalStreamThread( ProcessorTopology, StreamsConfig, Consumer, StateDirectory, long, StreamsMetricsImpl, Time, String, StateRestoreListener ): void","GlobalStreamThread( ProcessorTopology, StreamsConfig, Consumer, StateDirectory, long, StreamsMetricsImpl, Time, String, StateRestoreListener ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,9,3,15
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public consumerMetrics( ): Map,consumerMetrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.private initialize( ): StateConsumer,initialize( ): StateConsumer,low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,41,0,7,21
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public run( ): void,run( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,23,0,17,6
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.private setState( State ): void,setState( State ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,15,1,4,12
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public shutdown( ): void,shutdown( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public stillRunning( ): boolean,stillRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.GlobalStreamThread.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,2
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->cache,final cache : ThreadCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->config,final config : StreamsConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->globalConsumer,final globalConsumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->logContext,final logContext : LogContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->stateDirectory,final stateDirectory : StateDirectory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->stateLock,final stateLock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->stateRestoreListener,final stateRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->streamsMetrics,final streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->topology,final topology : ProcessorTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->startupException,volatile startupException : StreamsException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.GlobalStreamThread->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalProcessorContext,InternalProcessorContext,low,low,low,low-medium,5,11,2,1,1,9,13,9,0,0,9,0,0,0,0.667,0,0,0,,,,,13,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract currentNode( ): ProcessorNode,currentNode( ): ProcessorNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract getCache( ): ThreadCache,getCache( ): ThreadCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public getStateStore( StoreBuilder ): T,getStateStore( StoreBuilder ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,2,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract initialize( ): void,initialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract metrics( ): StreamsMetricsImpl,metrics( ): StreamsMetricsImpl,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract recordContext( ): ProcessorRecordContext,recordContext( ): ProcessorRecordContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract setCurrentNode( ProcessorNode ): void,setCurrentNode( ProcessorNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract setRecordContext( ProcessorRecordContext ): void,setRecordContext( ProcessorRecordContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalProcessorContext.public abstract uninitialize( ): void,uninitialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.InternalTopicConfig,InternalTopicConfig,low,low,low,low-medium,1,14,3,1,3,7,24,20,3,0,6,0,0,0.667,0.633,0.8,0,0,,,,,24,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig. InternalTopicConfig( String, Map ): void"," InternalTopicConfig( String, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public abstract getProperties( Map, long ): Map","abstract getProperties( Map, long ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public numberOfPartitions( ): Optional,numberOfPartitions( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public setNumberOfPartitions( int ): void,setNumberOfPartitions( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopicConfig.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.processor.internals.InternalTopicConfig->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicConfig->topicConfigs,final topicConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicConfig->numberOfPartitions,numberOfPartitions : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicManager,InternalTopicManager,low-medium,medium-high,low-medium,low,13,75,50,1,0,25,127,114,7,1,4,0,0,0.542,0.5,0,0,0,,,,,127,,,,,,25,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopicManager.InternalAdminClientConfig,InternalAdminClientConfig,low,low,low,low,0,1,0,3,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.InternalTopicManager.public InternalTopicManager( Admin, StreamsConfig ): void","InternalTopicManager( Admin, StreamsConfig ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,2,19,11
<Method>org.apache.kafka.streams.processor.internals.InternalTopicManager.protected getNumPartitions( Set ): Map,getNumPartitions( Set ): Map,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,26,1,19,7
<Method>org.apache.kafka.streams.processor.internals.InternalTopicManager.public makeReady( Map ): void,makeReady( Map ): void,low-medium,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,6,50,1,37,17
"<Method>org.apache.kafka.streams.processor.internals.InternalTopicManager.private validateTopics( Set, Map ): Set","validateTopics( Set, Map ): Set",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,18,2,15,1
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->adminClient,final adminClient : Admin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->defaultTopicConfigs,final defaultTopicConfigs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->replicationFactor,final replicationFactor : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->retryBackOffMs,final retryBackOffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->windowChangeLogAdditionalRetention,final windowChangeLogAdditionalRetention : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopicManager->INTERRUPTED_ERROR_MESSAGE,static final INTERRUPTED_ERROR_MESSAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder,InternalTopologyBuilder,very-high,high,very-high,very-high,23,162,118,1,0,202,1164,664,24,6,55,3,0,0.941,0.917,0.804,0,0,,,,,1164,,,,,,202,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.AbstractNode,AbstractNode,low,low,low,low,0,9,3,1,3,6,22,17,4,0,6,0,0,0.85,0.5,0.8,0,0,,,,,22,,,,,,6,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.GlobalStore,GlobalStore,low,low,low,low,5,27,8,1,0,10,40,36,3,0,7,0,0,0.444,0.643,0.238,0,0,,,,,40,,,,,,10,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.GlobalStoreComparator,GlobalStoreComparator,low,low,low,low,1,2,1,1,0,2,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.NodeComparator,NodeComparator,low,low,low,low,2,3,2,1,0,3,12,11,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.NodeFactory,NodeFactory,low,low,low,low,2,3,0,1,3,3,9,6,2,0,3,0,0,0,0.333,0,0,0,,,,,9,,,,,,3,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Processor,Processor,low,low,low,low,0,17,6,2,0,8,26,24,1,0,5,0,0,0,0.6,0,0,0,,,,,26,,,,,,8,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.ProcessorNodeFactory,ProcessorNodeFactory,low,low,low,low,3,6,2,2,0,4,16,13,2,0,4,0,0,0.5,0.417,0,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Sink,Sink,low,low,low,low,3,19,6,2,0,14,44,42,1,0,8,0,1,0,0.675,0.25,0,0.25,,,,,44,,,,,,14,,,,,,,
"org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SinkNodeFactory<K,V>",SinkNodeFactory,low,low,low,low,7,5,2,2,0,5,29,24,4,0,3,0,0,0.375,0.533,0,0,0,,,,,29,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Source,Source,low,low,low,low,1,21,7,2,0,17,44,41,2,0,8,0,1,0.25,0.729,0.321,0,0.25,,,,,44,,,,,,17,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SourceNodeFactory,SourceNodeFactory,low,low,low,low,6,20,13,2,0,14,45,39,5,0,5,0,0,0.6,0.633,0,0,0,,,,,45,,,,,,14,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.StateStoreFactory,StateStoreFactory,low,low,low,low,5,17,7,1,0,11,29,26,2,0,8,0,0,0.571,0.437,0,0,0,,,,,29,,,,,,11,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SubscriptionUpdates,SubscriptionUpdates,low,low,low,low,0,9,5,1,0,4,12,10,1,0,4,0,0,0,0.375,0,0,0,,,,,12,,,,,,4,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.Subtopology,Subtopology,low,low,low,low,1,18,11,1,0,12,37,34,2,0,8,0,0,0.357,0.656,0.133,0,0,,,,,37,,,,,,12,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.SubtopologyComparator,SubtopologyComparator,low,low,low,low,1,2,1,1,0,2,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.TopicsInfo,TopicsInfo,low,low,low,low,0,8,4,1,0,5,32,27,4,0,4,0,0,0.333,0.562,0,0,0,,,,,32,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.TopologyDescription,TopologyDescription,low,low,low,low,2,18,11,1,0,15,58,55,2,0,7,0,0,0.333,0.643,0.19,0,0,,,,,58,,,,,,15,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder. subscriptionUpdates( ): SubscriptionUpdates, subscriptionUpdates( ): SubscriptionUpdates,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder. updateSubscribedTopics( Set, String ): void"," updateSubscribedTopics( Set, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,3,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public allStateStoreName( ): Set,allStateStoreName( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,3
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private build( Set ): ProcessorTopology,build( Set ): ProcessorTopology,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,36,1,14,4
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private buildProcessorNode( Map, Map, ProcessorNodeFactory, ProcessorNode ): void","buildProcessorNode( Map, Map, ProcessorNodeFactory, ProcessorNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,17,4,13,6
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private buildSinkNode( Map, Map, Set, SinkNodeFactory, SinkNode ): void","buildSinkNode( Map, Map, Set, SinkNodeFactory, SinkNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,16,5,7,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private buildSourceNode( Map, Set, SourceNodeFactory, SourceNode ): void","buildSourceNode( Map, Set, SourceNodeFactory, SourceNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,4,7,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private connectProcessorAndStateStore( String, String ): void","connectProcessorAndStateStore( String, String ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,22,2,14,6
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public connectSourceStoreAndTopic( String, String ): void","connectSourceStoreAndTopic( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private connectStateStoreNameToSourceTopicsOrPattern( String, ProcessorNodeFactory ): void","connectStateStoreNameToSourceTopicsOrPattern( String, ProcessorNodeFactory ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,20,2,11,4
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private createChangelogTopicConfig( StateStoreFactory, String ): InternalTopicConfig","createChangelogTopicConfig( StateStoreFactory, String ): InternalTopicConfig",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,5,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private decorateTopic( String ): String,decorateTopic( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public describe( ): TopologyDescription,describe( ): TopologyDescription,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,8,0
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private describeGlobalStore( TopologyDescription, Set, int ): void","describeGlobalStore( TopologyDescription, Set, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,17,3,13,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private describeSubtopology( TopologyDescription, Integer, Set ): void","describeSubtopology( TopologyDescription, Integer, Set ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,3,12,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addGlobalStore( StoreBuilder, String, TimestampExtractor, Deserializer, Deserializer, String, String, ProcessorSupplier ): void","final addGlobalStore( StoreBuilder, String, TimestampExtractor, Deserializer, Deserializer, String, String, ProcessorSupplier ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,37,8,19,9
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addInternalTopic( String ): void,final addInternalTopic( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addProcessor( String, ProcessorSupplier, String ): void","final addProcessor( String, ProcessorSupplier, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,20,3,10,6
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addSink( String, String, Serializer, Serializer, StreamPartitioner, String ): void","final addSink( String, String, Serializer, Serializer, StreamPartitioner, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,6,5,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addSink( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner, String ): void","final addSink( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner, String ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,25,6,11,7
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, Pattern ): void","final addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, Pattern ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,24,6,21,10
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, String ): void","final addSource( AutoOffsetReset, String, TimestampExtractor, Deserializer, Deserializer, String ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,20,6,10,8
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addStateStore( StoreBuilder, String ): void","final addStateStore( StoreBuilder, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final addStateStore( StoreBuilder, boolean, String ): void","final addStateStore( StoreBuilder, boolean, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,3,9,3
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final connectProcessorAndStateStores( String, String ): void","final connectProcessorAndStateStores( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,2,4,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final copartitionSources( Collection ): void,final copartitionSources( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final synchronized rewriteTopology( StreamsConfig ): InternalTopologyBuilder,final synchronized rewriteTopology( StreamsConfig ): InternalTopologyBuilder,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,1,12,4
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public final synchronized setApplicationId( String ): InternalTopologyBuilder,final synchronized setApplicationId( String ): InternalTopologyBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private findSourcesForProcessorPredecessors( String ): Set,findSourcesForProcessorPredecessors( String ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,4,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private globalNodeGroups( ): Set,globalNodeGroups( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,8,0,5,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public globalStateStores( ): Map,globalStateStores( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private isGlobalSource( String ): boolean,isGlobalSource( String ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,4,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private makeNodeGroups( ): Map,makeNodeGroups( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private maybeAddToResetList( Collection, Collection, AutoOffsetReset, T ): void","maybeAddToResetList( Collection, Collection, AutoOffsetReset, T ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,4,3,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private maybeDecorateInternalSourceTopics( Collection ): List,maybeDecorateInternalSourceTopics( Collection ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,1,5,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private nodeGroupContainsGlobalSourceNode( Set ): boolean,nodeGroupContainsGlobalSourceNode( Set ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private putNodeGroupName( String, int, Map, Map ): int","putNodeGroupName( String, int, Map, Map ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,4,5,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private resetTopicsPattern( Set, Set ): Pattern","resetTopicsPattern( Set, Set ): Pattern",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private setRegexMatchedTopicToStateStore( ): void,setRegexMatchedTopicToStateStore( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,6,15,0,14,5
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private setRegexMatchedTopicsToSourceNodes( ): void,setRegexMatchedTopicsToSourceNodes( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,9,7
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public stateStoreNameToSourceTopics( ): Map,stateStoreNameToSourceTopics( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,1
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private static buildPatternForOffsetResetTopics( Collection, Collection ): Pattern","static buildPatternForOffsetResetTopics( Collection, Collection ): Pattern",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,2,10,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private static nodeNames( Set ): String,static nodeNames( Set ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,1,9,0
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private static updateSize( AbstractNode, int ): void","static updateSize( AbstractNode, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized build( ): ProcessorTopology,synchronized build( ): ProcessorTopology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized build( Integer ): ProcessorTopology,synchronized build( Integer ): ProcessorTopology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,8,0
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized buildGlobalStateTopology( ): ProcessorTopology,synchronized buildGlobalStateTopology( ): ProcessorTopology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,4,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized copartitionGroups( ): Collection,synchronized copartitionGroups( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,5,25,0,10,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized earliestResetTopicsPattern( ): Pattern,synchronized earliestResetTopicsPattern( ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized latestResetTopicsPattern( ): Pattern,synchronized latestResetTopicsPattern( ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized nodeGroups( ): Map,synchronized nodeGroups( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,3
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized sourceTopicNames( ): Set,synchronized sourceTopicNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.synchronized sourceTopicPattern( ): Pattern,synchronized sourceTopicPattern( ): Pattern,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,0,8,7
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized stateStores( ): Map,synchronized stateStores( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.public synchronized topicGroups( ): Map,synchronized topicGroups( ): Map,low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16,6,45,0,37,12
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.synchronized updateSubscriptions( SubscriptionUpdates, String ): void","synchronized updateSubscriptions( SubscriptionUpdates, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,3,2
"<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private validateGlobalStoreArguments( String, String, String, ProcessorSupplier, String, boolean ): void","validateGlobalStoreArguments( String, String, String, ProcessorSupplier, String, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,20,6,9,4
<Method>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder.private validateTopicNotAlreadyRegistered( String ): void,validateTopicNotAlreadyRegistered( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,6,1,5,3
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->applicationId,applicationId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->copartitionSourceGroups,final copartitionSourceGroups : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->earliestResetPatterns,final earliestResetPatterns : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->earliestResetTopics,final earliestResetTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->globalStateBuilders,final globalStateBuilders : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->globalStateStores,final globalStateStores : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->globalTopics,final globalTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->internalTopicNames,final internalTopicNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->latestResetPatterns,final latestResetPatterns : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->latestResetTopics,final latestResetTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeFactories,final nodeFactories : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeGrouper,final nodeGrouper : QuickUnion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeToSinkTopic,final nodeToSinkTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeToSourcePatterns,final nodeToSourcePatterns : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeToSourceTopics,final nodeToSourceTopics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->sourceTopicNames,final sourceTopicNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->stateFactories,final stateFactories : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->stateStoreNameToSourceRegex,final stateStoreNameToSourceRegex : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->stateStoreNameToSourceTopics,final stateStoreNameToSourceTopics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->storeToChangelogTopic,final storeToChangelogTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->topicToPatterns,final topicToPatterns : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->nodeGroups,nodeGroups : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->EMPTY_ZERO_LENGTH_PATTERN,static final EMPTY_ZERO_LENGTH_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->GLOBALSTORE_COMPARATOR,static final GLOBALSTORE_COMPARATOR : GlobalStoreComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->NODE_COMPARATOR,static final NODE_COMPARATOR : NodeComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->NO_PREDECESSORS,static final NO_PREDECESSORS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->SUBTOPOLOGY_COMPARATOR,static final SUBTOPOLOGY_COMPARATOR : SubtopologyComparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->subscriptionUpdates,subscriptionUpdates : SubscriptionUpdates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.InternalTopologyBuilder->topicPattern,topicPattern : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup,PartitionGroup,low-medium,low,low-medium,medium-high,5,85,21,1,0,24,83,68,6,0,12,0,0,0.682,0.75,0.333,0,0,,,,,83,,,,,,24,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup.RecordInfo,RecordInfo,low,low,low,low,3,5,2,1,0,3,8,6,1,0,3,0,0,0,0,0,0,0,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. PartitionGroup( Map, Sensor ): void"," PartitionGroup( Map, Sensor ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,2,6
"<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. addRawRecords( TopicPartition, Iterable ): int"," addRawRecords( TopicPartition, Iterable ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,2,6,6
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. allPartitionsBuffered( ): boolean, allPartitionsBuffered( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. nextRecord( RecordInfo ): StampedRecord, nextRecord( RecordInfo ): StampedRecord,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,18,1,6,9
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. numBuffered( ): int, numBuffered( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. numBuffered( TopicPartition ): int, numBuffered( TopicPartition ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. partitionTimestamp( TopicPartition ): long, partitionTimestamp( TopicPartition ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,1
"<Method>org.apache.kafka.streams.processor.internals.PartitionGroup. setPartitionTime( TopicPartition, long ): void"," setPartitionTime( TopicPartition, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,2,3
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public clear( ): void,clear( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,3
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public partitions( ): Set,partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public streamTime( ): long,streamTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->allBuffered,allBuffered : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->nonEmptyQueuesByTime,final nonEmptyQueuesByTime : PriorityQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->partitionQueues,final partitionQueues : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->recordLatenessSensor,final recordLatenessSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->streamTime,streamTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->totalBuffered,totalBuffered : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorContextImpl,ProcessorContextImpl,low-medium,medium-high,medium-high,high,18,70,26,2,0,30,393,129,3,1,12,0,0,0.893,0.815,0.956,0,0,,,,,393,,,,,,30,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.KeyValueStoreReadOnlyDecorator<K,V>",KeyValueStoreReadOnlyDecorator,low,low,low,low,2,14,5,3,1,9,32,29,0,0,9,0,0,0,0.6,0,0,0,,,,,32,,,,,,9,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.KeyValueStoreReadWriteDecorator<K,V>",KeyValueStoreReadWriteDecorator,low,low,low,low,2,18,9,3,1,9,32,29,0,0,9,0,0,0,0.6,0,0,0,,,,,32,,,,,,9,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.SessionStoreReadOnlyDecorator<K,AGG>",SessionStoreReadOnlyDecorator,low,low,low,low,3,14,6,3,0,8,33,30,0,0,8,0,0,0,0.583,0,0,0,,,,,33,,,,,,8,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.SessionStoreReadWriteDecorator<K,AGG>",SessionStoreReadWriteDecorator,low,low,low,low,3,16,8,3,0,8,35,32,0,0,8,0,0,0,0.583,0,0,0,,,,,35,,,,,,8,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.StateStoreReadOnlyDecorator<T,K,V>",StateStoreReadOnlyDecorator,low,low,low,low,2,4,0,2,3,4,15,12,0,1,4,0,3,0,0.562,0,0,1.5,,,,,15,,,,,,4,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.StateStoreReadWriteDecorator<T,K,V>",StateStoreReadWriteDecorator,low,low,low,low,2,3,0,2,3,3,12,9,0,1,3,0,2,0,0.5,0,0,1.333,,,,,12,,,,,,3,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.TimestampedKeyValueStoreReadOnlyDecorator<K,V>",TimestampedKeyValueStoreReadOnlyDecorator,low,low,low,low,0,1,0,4,0,1,5,2,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.TimestampedKeyValueStoreReadWriteDecorator<K,V>",TimestampedKeyValueStoreReadWriteDecorator,low,low,low,low,0,1,0,4,0,1,5,2,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.TimestampedWindowStoreReadOnlyDecorator<K,V>",TimestampedWindowStoreReadOnlyDecorator,low,low,low,low,0,1,0,4,0,1,5,2,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.TimestampedWindowStoreReadWriteDecorator<K,V>",TimestampedWindowStoreReadWriteDecorator,low,low,low,low,0,1,0,4,0,1,5,2,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.WindowStoreReadOnlyDecorator<K,V>",WindowStoreReadOnlyDecorator,low,low,low,low,3,14,6,3,1,8,40,37,0,0,8,0,0,0,0.475,0,0,0,,,,,40,,,,,,8,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorContextImpl.WindowStoreReadWriteDecorator<K,V>",WindowStoreReadWriteDecorator,low,low,low,low,3,16,8,3,1,8,40,37,0,0,8,0,0,0,0.475,0,0,0,,,,,40,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl. ProcessorContextImpl( TaskId, StreamTask, StreamsConfig, RecordCollector, ProcessorStateManager, StreamsMetricsImpl, ThreadCache ): void"," ProcessorContextImpl( TaskId, StreamTask, StreamsConfig, RecordCollector, ProcessorStateManager, StreamsMetricsImpl, ThreadCache ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,7,0,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,2,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, To ): void","forward( K, V, To ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,30,3,16,11
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,6,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.private forward( ProcessorNode, K, V ): void","forward( ProcessorNode, K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public getStateMgr( ): ProcessorStateManager,getStateMgr( ): ProcessorStateManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low-medium,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,3,38,1,7,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public recordCollector( ): RecordCollector,recordCollector( ): RecordCollector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,3,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,1,1
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->collector,final collector : RecordCollector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->task,final task : StreamTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->toInternal,final toInternal : ToInternal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->SEND_TO_ALL,static final SEND_TO_ALL : To,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>",ProcessorNode,medium-high,low-medium,low-medium,high,10,109,25,1,2,24,104,91,12,0,14,0,0,0.826,0.814,0.621,0,0,,,,,104,,,,,,24,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>. getChild( String ): ProcessorNode", getChild( String ): ProcessorNode,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public ProcessorNode( String ): void",ProcessorNode( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public ProcessorNode( String, Processor, Set ): void","ProcessorNode( String, Processor, Set ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,6
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public addChild( ProcessorNode ): void",addChild( ProcessorNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,3
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public children( ): List",children( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public close( ): void",close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,17,0,6,7
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public final name( ): String",final name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public final processor( ): Processor",final processor( ): Processor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public init( InternalProcessorContext ): void",init( InternalProcessorContext ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,14,1,3,4
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.private initSensors( ): void",initSensors( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,9,15
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,2,6,2
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public punctuate( long, Punctuator ): void","punctuate( long, Punctuator ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,2
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public toString( String ): String",toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,10,1,9,4
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->createSensor",createSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->destroySensor",destroySensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->childByName",final childByName : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->children",final children : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->processor",final processor : Processor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->stateStores",final stateStores : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->internalProcessorContext",internalProcessorContext : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->processSensor",processSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->punctuateSensor",punctuateSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>->threadId",threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorNodePunctuator,ProcessorNodePunctuator,low,low,low,low,3,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNodePunctuator.public abstract punctuate( ProcessorNode, long, PunctuationType, Punctuator ): void","punctuate( ProcessorNode, long, PunctuationType, Punctuator ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.streams.processor.internals.ProcessorRecordContext,ProcessorRecordContext,low-medium,low,low-medium,medium-high,4,27,15,1,0,28,144,138,5,0,11,1,0,0.511,0.786,0.515,0,0,,,,,144,,,,,,28,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public ProcessorRecordContext( long, long, int, String, Headers ): void","ProcessorRecordContext( long, long, int, String, Headers ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,12,1,4,10
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public headers( ): Headers,headers( ): Headers,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public residentMemorySizeEstimate( ): long,residentMemorySizeEstimate( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,0,4,4
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public serialize( ): byte,serialize( ): byte,low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,45,0,19,7
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public static deserialize( ByteBuffer ): ProcessorRecordContext,static deserialize( ByteBuffer ): ProcessorRecordContext,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,29,1,10,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,0,5
<Method>org.apache.kafka.streams.processor.internals.ProcessorRecordContext.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->headers,final headers : Headers,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorRecordContext->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorStateManager,ProcessorStateManager,medium-high,medium-high,low-medium,high,19,121,63,1,0,72,255,234,19,1,20,2,0,0.87,0.864,0.527,0,0,,,,,255,,,,,,72,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. changelogPartitions( ): Collection, changelogPartitions( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. clearCheckpoints( ): void, clearCheckpoints( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,4
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. ensureStoresRegistered( ): void, ensureStoresRegistered( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,0,4,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. putOffsetLimits( Map ): void, putOffsetLimits( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. registerGlobalStateStores( List ): void, registerGlobalStateStores( List ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,4,2
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager. updateStandbyStates( TopicPartition, List, long ): void"," updateStandbyStates( TopicPartition, List, long ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,3,12,4
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public ProcessorStateManager( TaskId, Collection, boolean, StateDirectory, Map, ChangelogReader, boolean, LogContext ): void","ProcessorStateManager( TaskId, Collection, boolean, StateDirectory, Map, ChangelogReader, boolean, LogContext ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,30,8,9,23
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public baseDir( ): File,baseDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public checkpoint( Map ): void,checkpoint( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,5,9
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public checkpointed( ): Map,checkpointed( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,7,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public close( boolean ): void,close( boolean ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,6,25,1,21,10
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public flush( ): void,flush( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,6,19,0,15,6
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public getGlobalStore( String ): StateStore,getGlobalStore( String ): StateStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.private getPartition( String ): int,getPartition( String ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public getStore( String ): StateStore,getStore( String ): StateStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.private offsetLimit( TopicPartition ): long,offsetLimit( TopicPartition ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,1,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,34,2,24,16
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void","reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,2,1,7
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public static storeChangelogTopic( String, String ): String","static storeChangelogTopic( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.private static validCheckpointableOffsets( Map, Set ): Map","static validCheckpointableOffsets( Map, Set ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,2,6,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.private updateCheckpointFileCache( Map ): void,updateCheckpointFileCache( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,20,1,17,11
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.private validCheckpointableTopics( ): Set,validCheckpointableTopics( ): Set,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,10,0,12,5
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->checkpointFile,checkpointFile : OffsetCheckpoint,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->baseDir,final baseDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->changelogPartitions,final changelogPartitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->changelogReader,final changelogReader : ChangelogReader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->checkpointFileCache,final checkpointFileCache : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->eosEnabled,final eosEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->globalStores,final globalStores : FixedOrderMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->initialLoadedCheckpoints,final initialLoadedCheckpoints : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->isStandby,final isStandby : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->offsetLimits,final offsetLimits : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->partitionForTopic,final partitionForTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->recordConverters,final recordConverters : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->registeredStores,final registeredStores : FixedOrderMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->restoreCallbacks,final restoreCallbacks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->standbyRestoredOffsets,final standbyRestoredOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->storeToChangelogTopic,final storeToChangelogTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->taskId,final taskId : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->STATE_CHANGELOG_TOPIC_SUFFIX,static final STATE_CHANGELOG_TOPIC_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorTopology,ProcessorTopology,low-medium,low,low-medium,low-medium,4,38,21,1,0,29,79,71,7,0,18,0,0,0.848,0.689,0.767,0,0,,,,,79,,,,,,29,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology. isRepartitionTopic( String ): boolean, isRepartitionTopic( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public ProcessorTopology( List, Map, Map, List, List, Map, Set ): void","ProcessorTopology( List, Map, Map, List, List, Map, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,7,7,7
"<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.private childrenToString( String, List ): String","childrenToString( String, List ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,2,13,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public globalStateStores( ): List,globalStateStores( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public hasPersistentGlobalStore( ): boolean,hasPersistentGlobalStore( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public hasPersistentLocalStore( ): boolean,hasPersistentLocalStore( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public processorConnectedStateStores( String ): Set,processorConnectedStateStores( String ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,3,2
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public processors( ): List,processors( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public sink( String ): SinkNode,sink( String ): SinkNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public sinkTopics( ): Set,sinkTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public sinks( ): Set,sinks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public source( String ): SourceNode,source( String ): SourceNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public sourceTopics( ): Set,sourceTopics( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public sources( ): Set,sources( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public stateStores( ): List,stateStores( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public storeToChangelogTopic( ): Map,storeToChangelogTopic( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorTopology.public toString( String ): String,toString( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,7,1
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->globalStateStores,final globalStateStores : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->processorNodes,final processorNodes : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->repartitionTopics,final repartitionTopics : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->sinksByTopic,final sinksByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->sourcesByTopic,final sourcesByTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->stateStores,final stateStores : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorTopology->storeToChangelogTopic,final storeToChangelogTopic : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationQueue,PunctuationQueue,low,low,low,low,5,14,10,1,0,7,23,21,1,0,3,0,0,0,0.533,0,1,0,,,,,23,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue. mayPunctuate( long, PunctuationType, ProcessorNodePunctuator ): boolean"," mayPunctuate( long, PunctuationType, ProcessorNodePunctuator ): boolean",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,14,3,10,5
<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue.public schedule( PunctuationSchedule ): Cancellable,schedule( PunctuationSchedule ): Cancellable,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,1,2,2
<Field>org.apache.kafka.streams.processor.internals.PunctuationQueue->pq,final pq : PriorityQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationSchedule,PunctuationSchedule,low-medium,low,low-medium,low-medium,3,15,3,2,0,11,51,39,4,0,10,0,0,0.75,0.683,0.8,0,0,,,,,51,,,,,,11,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationSchedule.RepointableCancellable,RepointableCancellable,low,low,low,low,0,3,1,1,0,2,7,5,1,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule. PunctuationSchedule( ProcessorNode, long, long, Punctuator ): void"," PunctuationSchedule( ProcessorNode, long, long, Punctuator ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule. isCancelled( ): boolean, isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule. markCancelled( ): void, markCancelled( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.private PunctuationSchedule( ProcessorNode, long, long, Punctuator, RepointableCancellable ): void","PunctuationSchedule( ProcessorNode, long, long, Punctuator, RepointableCancellable ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,5,0,3
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public cancellable( ): Cancellable,cancellable( ): Cancellable,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public next( long ): PunctuationSchedule,next( long ): PunctuationSchedule,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,1,11
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public node( ): ProcessorNode,node( ): ProcessorNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public punctuator( ): Punctuator,punctuator( ): Punctuator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->cancellable,final cancellable : RepointableCancellable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->interval,final interval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->punctuator,final punctuator : Punctuator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->isCancelled,isCancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.QuickUnion<T>,QuickUnion,low,low,low,low,0,10,7,1,0,9,26,24,1,0,5,0,0,0,0,0,0,0,,,,,26,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>. unite( T, T ): void"," unite( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,1,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public add( T ): void,add( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public exists( T ): boolean,exists( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public root( T ): T,root( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,5,3
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.private unitePair( T, T ): void","unitePair( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,4,1
<Field>org.apache.kafka.streams.processor.internals.QuickUnion<T>->ids,final ids : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RecordBatchingStateRestoreCallback,RecordBatchingStateRestoreCallback,low,low,low,low,0,3,0,1,2,3,8,3,0,0,3,0,0,0,0.333,0,0,0,,,,,8,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.RecordBatchingStateRestoreCallback.public restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordBatchingStateRestoreCallback.public restoreAll( Collection ): void,restoreAll( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordBatchingStateRestoreCallback.public abstract restoreBatch( Collection ): void,restoreBatch( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.RecordCollector,RecordCollector,low,low,low,low-medium,4,6,0,1,1,6,23,6,0,0,6,0,0,0,0.65,0,0,0,,,,,23,,,,,,6,,,,,,,
org.apache.kafka.streams.processor.internals.RecordCollector.Supplier,Supplier,low,low,low,low,0,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract init( Producer ): void,init( Producer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract offsets( ): Map,offsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract send( String, K, V, Headers, Integer, Long, Serializer, Serializer ): void","send( String, K, V, Headers, Integer, Long, Serializer, Serializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,8,0,0
"<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public abstract send( String, K, V, Headers, Long, Serializer, Serializer, StreamPartitioner ): void","send( String, K, V, Headers, Long, Serializer, Serializer, StreamPartitioner ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,8,0,0
org.apache.kafka.streams.processor.internals.RecordCollectorImpl,RecordCollectorImpl,low-medium,medium-high,low-medium,medium-high,13,32,21,1,0,22,186,166,7,4,11,1,0,0.869,0.789,0.5,0,0,,,,,186,,,,,,22,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$8799;,Lorg.apache.kafka.streams.processor.internals.RecordCollectorImpl$8799;,low,low,low,low,0,0,0,1,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl. producer( ): Producer, producer( ): Producer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public RecordCollectorImpl( String, LogContext, ProductionExceptionHandler, Sensor ): void","RecordCollectorImpl( String, LogContext, ProductionExceptionHandler, Sensor ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,3,5
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.private checkForException( ): void,checkForException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,2
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public close( ): void,close( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,3,4
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public flush( ): void,flush( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,3,2
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public init( Producer ): void,init( Producer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public offsets( ): Map,offsets( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.private productionExceptionIsFatal( Exception ): boolean,productionExceptionIsFatal( Exception ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.private recordSendError( K, V, Long, String, Exception ): void","recordSendError( K, V, Long, String, Exception ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,28,5,6,9
"<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public send( String, K, V, Headers, Integer, Long, Serializer, Serializer ): void","send( String, K, V, Headers, Integer, Long, Serializer, Serializer ): void",low,low-medium,medium-high,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,7,68,8,7,3
"<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public send( String, K, V, Headers, Long, Serializer, Serializer, StreamPartitioner ): void","send( String, K, V, Headers, Long, Serializer, Serializer, StreamPartitioner ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,18,8,5,1
<Method>org.apache.kafka.streams.processor.internals.RecordCollectorImpl.public static isRecoverable( RuntimeException ): boolean,static isRecoverable( RuntimeException ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->droppedRecordsSensor,final droppedRecordsSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->offsets,final offsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->productionExceptionHandler,final productionExceptionHandler : ProductionExceptionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->producer,producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->EXCEPTION_MESSAGE,static final EXCEPTION_MESSAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->LOG_MESSAGE,static final LOG_MESSAGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->PARAMETER_HINT,static final PARAMETER_HINT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->TIMEOUT_HINT_TEMPLATE,static final TIMEOUT_HINT_TEMPLATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordCollectorImpl->sendException,volatile sendException : KafkaException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RecordDeserializer,RecordDeserializer,low,medium-high,low-medium,low,11,48,17,1,0,6,56,51,4,0,3,0,0,0.375,0.571,0,0,0,,,,,56,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.RecordDeserializer. RecordDeserializer( SourceNode, DeserializationExceptionHandler, LogContext, Sensor ): void"," RecordDeserializer( SourceNode, DeserializationExceptionHandler, LogContext, Sensor ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,1,4
"<Method>org.apache.kafka.streams.processor.internals.RecordDeserializer. deserialize( ProcessorContext, ConsumerRecord ): ConsumerRecord"," deserialize( ProcessorContext, ConsumerRecord ): ConsumerRecord",low,medium-high,low-medium,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,41,2,23,6
<Method>org.apache.kafka.streams.processor.internals.RecordDeserializer. sourceNode( ): SourceNode, sourceNode( ): SourceNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.RecordDeserializer->deserializationExceptionHandler,final deserializationExceptionHandler : DeserializationExceptionHandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordDeserializer->droppedRecordsSensor,final droppedRecordsSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordDeserializer->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordDeserializer->sourceNode,final sourceNode : SourceNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RecordQueue,RecordQueue,medium-high,medium-high,low-medium,high,16,112,26,1,0,21,88,76,10,1,12,0,0,0.818,0.815,0.524,0,0,,,,,88,,,,,,21,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.RecordQueue. RecordQueue( TopicPartition, SourceNode, TimestampExtractor, DeserializationExceptionHandler, InternalProcessorContext, LogContext ): void"," RecordQueue( TopicPartition, SourceNode, TimestampExtractor, DeserializationExceptionHandler, InternalProcessorContext, LogContext ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,6,7,9
<Method>org.apache.kafka.streams.processor.internals.RecordQueue. addRawRecords( Iterable ): int, addRawRecords( Iterable ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue. partitionTime( ): long, partitionTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue. setPartitionTime( long ): void, setPartitionTime( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,4
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public headRecordTimestamp( ): long,headRecordTimestamp( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,0,3
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public partition( ): TopicPartition,partition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public poll( ): StampedRecord,poll( ): StampedRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,2
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public source( ): SourceNode,source( ): SourceNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.private updateHead( ): void,updateHead( ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,25,0,14,15
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->droppedRecordsSensor,final droppedRecordsSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->fifoQueue,final fifoQueue : ArrayDeque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->partition,final partition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->processorContext,final processorContext : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->recordDeserializer,final recordDeserializer : RecordDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->source,final source : SourceNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->timestampExtractor,final timestampExtractor : TimestampExtractor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->headRecord,headRecord : StampedRecord,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->partitionTime,partitionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->UNKNOWN,static final UNKNOWN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RecoverableClientException,RecoverableClientException,medium-high,low,low,low,0,1,0,5,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.RecoverableClientException.public RecoverableClientException( String, Throwable ): void","RecoverableClientException( String, Throwable ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.streams.processor.internals.RepartitionTopicConfig,RepartitionTopicConfig,low-medium,low,low,low,0,9,4,2,0,8,33,25,0,1,5,0,0,0,0.6,0,0,0,,,,,33,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig. RepartitionTopicConfig( String, Map ): void"," RepartitionTopicConfig( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
"<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig.public getProperties( Map, long ): Map","getProperties( Map, long ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.processor.internals.RepartitionTopicConfig->REPARTITION_TOPIC_DEFAULT_OVERRIDES,static final REPARTITION_TOPIC_DEFAULT_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.RestoringTasks,RestoringTasks,low,low,low,low,2,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RestoringTasks.public abstract restoringTaskFor( TopicPartition ): StreamTask,restoringTaskFor( TopicPartition ): StreamTask,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.processor.internals.SinkNode<K,V>",SinkNode,low-medium,low-medium,low-medium,medium-high,9,99,21,2,0,14,62,56,5,0,6,0,1,0.467,0.722,0.8,0,0.333,,,,,62,,,,,,14,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>. SinkNode( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner ): void"," SinkNode( String, TopicNameExtractor, Serializer, Serializer, StreamPartitioner ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,4
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public addChild( ProcessorNode ): void",addChild( ProcessorNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public init( InternalProcessorContext ): void",init( InternalProcessorContext ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,9,8
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,21,2,13,10
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public toString( String ): String",toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,1
"<Field>org.apache.kafka.streams.processor.internals.SinkNode<K,V>->context",context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SinkNode<K,V>->partitioner",final partitioner : StreamPartitioner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SinkNode<K,V>->topicExtractor",final topicExtractor : TopicNameExtractor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SinkNode<K,V>->keySerializer",keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SinkNode<K,V>->valSerializer",valSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.SourceNode<K,V>",SourceNode,medium-high,low-medium,low-medium,medium-high,10,104,23,2,0,14,62,55,6,0,9,0,0,0.778,0.711,0.81,0,0,,,,,62,,,,,,14,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>. deserializeKey( String, Headers, byte ): K"," deserializeKey( String, Headers, byte ): K",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>. deserializeValue( String, Headers, byte ): V"," deserializeValue( String, Headers, byte ): V",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public SourceNode( String, List, Deserializer, Deserializer ): void","SourceNode( String, List, Deserializer, Deserializer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,0,0
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public SourceNode( String, List, TimestampExtractor, Deserializer, Deserializer ): void","SourceNode( String, List, TimestampExtractor, Deserializer, Deserializer ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,4
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public getTimestampExtractor( ): TimestampExtractor",getTimestampExtractor( ): TimestampExtractor,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public init( InternalProcessorContext ): void",init( InternalProcessorContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,18,1,17,9
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,2
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public toString( String ): String",toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,9,1
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->context",context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->timestampExtractor",final timestampExtractor : TimestampExtractor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->topics",final topics : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->keyDeserializer",keyDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->processAtSourceSensor",processAtSourceSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.processor.internals.SourceNode<K,V>->valDeserializer",valDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.Stamped<V>,Stamped,low,low,low,low,1,6,2,1,2,8,23,20,2,0,4,0,0,0.5,0.5,0,0,0,,,,,23,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.Stamped<V>. Stamped( V, long ): void"," Stamped( V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public compareTo( Object ): int,compareTo( Object ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,3
<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,2
<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->value,final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StampedRecord,StampedRecord,low-medium,low,low,low,2,16,7,2,0,8,18,17,0,0,8,0,0,0,0.583,0,0,0,,,,,18,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public StampedRecord( ConsumerRecord, long ): void","StampedRecord( ConsumerRecord, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public headers( ): Headers,headers( ): Headers,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public key( ): Object,key( ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public offset( ): long,offset( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public partition( ): int,partition( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public topic( ): String,topic( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public value( ): Object,value( ): Object,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
org.apache.kafka.streams.processor.internals.StandbyContextImpl,StandbyContextImpl,low-medium,medium-high,low-medium,high,15,22,3,2,0,19,71,70,0,0,19,0,8,0,0.859,0,0,0.842,,,,,71,,,,,,19,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl. StandbyContextImpl( TaskId, StreamsConfig, ProcessorStateManager, StreamsMetricsImpl ): void"," StandbyContextImpl( TaskId, StreamsConfig, ProcessorStateManager, StreamsMetricsImpl ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,4,3,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl. getStateMgr( ): StateManager, getStateMgr( ): StateManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public currentNode( ): ProcessorNode,currentNode( ): ProcessorNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, String ): void","forward( K, V, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, To ): void","forward( K, V, To ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public getStateStore( String ): StateStore,getStateStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public recordCollector( ): RecordCollector,recordCollector( ): RecordCollector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public recordContext( ): ProcessorRecordContext,recordContext( ): ProcessorRecordContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public schedule( Duration, PunctuationType, Punctuator ): Cancellable","schedule( Duration, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public setCurrentNode( ProcessorNode ): void,setCurrentNode( ProcessorNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public setRecordContext( ProcessorRecordContext ): void,setRecordContext( ProcessorRecordContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public topic( ): String,topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.streams.processor.internals.StandbyTask,StandbyTask,high,medium-high,low-medium,high,19,172,43,2,0,29,104,100,3,0,13,0,0,0.833,0.833,0.524,0,0,,,,,104,,,,,,29,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StandbyTask. StandbyTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory ): void"," StandbyTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,8,4
<Method>org.apache.kafka.streams.processor.internals.StandbyTask. allowUpdateOfOffsetLimit( ): void, allowUpdateOfOffsetLimit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StandbyTask. checkpointedOffsets( ): Map, checkpointedOffsets( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,4,4
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public commit( ): void,commit( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,2
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.private committedOffsetForPartitions( Set ): Map,committedOffsetForPartitions( Set ): Map,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,10,1,7,3
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.private flushAndCheckpointState( ): void,flushAndCheckpointState( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,2
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public initializeMetadata( ): void,initializeMetadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public initializeStateStores( ): boolean,initializeStateStores( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,3,3
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public initializeTopology( ): void,initializeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public resume( ): void,resume( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public update( TopicPartition, List ): List","update( TopicPartition, List ): List",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,21,2,13,5
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.private updateOffsetLimits( TopicPartition ): long,updateOffsetLimits( TopicPartition ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,1,10,6
<Field>org.apache.kafka.streams.processor.internals.StandbyTask->closeTaskSensor,final closeTaskSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StandbyTask->offsetLimits,final offsetLimits : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StandbyTask->updateOffsetLimits,updateOffsetLimits : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StateDirectory,StateDirectory,medium-high,low-medium,low-medium,medium-high,7,57,42,1,0,62,179,162,7,3,14,0,0,0.81,0.768,0.5,0,0,,,,,179,,,,,,62,,,,,,,
org.apache.kafka.streams.processor.internals.StateDirectory.LockAndOwner,LockAndOwner,low,low,low,low,0,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateDirectory. globalStateDir( ): File, globalStateDir( ): File,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,0,4,2
<Method>org.apache.kafka.streams.processor.internals.StateDirectory. listTaskDirectories( ): File, listTaskDirectories( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,2,2
"<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public StateDirectory( StreamsConfig, Time, boolean ): void","StateDirectory( StreamsConfig, Time, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,14,3,9,8
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public directoryForTask( TaskId ): File,directoryForTask( TaskId ): File,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,1,5,2
"<Method>org.apache.kafka.streams.processor.internals.StateDirectory.private getOrCreateFileChannel( TaskId, Path ): FileChannel","getOrCreateFileChannel( TaskId, Path ): FileChannel",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,4,3
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.private logPrefix( ): String,logPrefix( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,3,0
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public synchronized clean( ): void,synchronized clean( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,7,2
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.public synchronized cleanRemovedTasks( long ): void,synchronized cleanRemovedTasks( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.StateDirectory.private synchronized cleanRemovedTasks( long, boolean ): void","synchronized cleanRemovedTasks( long, boolean ): void",low-medium,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,7,44,2,19,7
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized lock( TaskId ): boolean,synchronized lock( TaskId ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,24,1,15,6
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized lockGlobalState( ): boolean,synchronized lockGlobalState( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,20,0,9,7
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized unlock( TaskId ): void,synchronized unlock( TaskId ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,10,4
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.synchronized unlockGlobalState( ): void,synchronized unlockGlobalState( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,4,6
<Method>org.apache.kafka.streams.processor.internals.StateDirectory.private tryLock( FileChannel ): FileLock,tryLock( FileChannel ): FileLock,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->channels,final channels : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->createStateDirectory,final createStateDirectory : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->locks,final locks : HashMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->stateDir,final stateDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->globalStateChannel,globalStateChannel : FileChannel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->globalStateLock,globalStateLock : FileLock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->LOCK_FILE_NAME,static final LOCK_FILE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->PATH_NAME,static final PATH_NAME : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateDirectory->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StateManager,StateManager,low,low,low,medium-high,3,7,0,1,2,7,9,7,0,0,7,0,0,0,0.714,0,0,0,,,,,9,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract baseDir( ): File,baseDir( ): File,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract close( boolean ): void,close( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract getGlobalStore( String ): StateStore,getGlobalStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract getStore( String ): StateStore,getStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract register( StateStore, StateRestoreCallback ): void","register( StateStore, StateRestoreCallback ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StateManager.public abstract reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void","reinitializeStateStoresForPartitions( Collection, InternalProcessorContext ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.internals.StateManagerUtil,StateManagerUtil,low-medium,medium-high,low-medium,low-medium,11,52,25,1,0,14,59,57,0,1,1,3,0,0,0.65,0,0,0,,,,,59,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateManagerUtil.private StateManagerUtil( ): void,StateManagerUtil( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StateManagerUtil.static converterForStore( StateStore ): RecordConverter,static converterForStore( StateStore ): RecordConverter,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,3,0
<Method>org.apache.kafka.streams.processor.internals.StateManagerUtil.private static inverseOneToOneMap( Map ): Map,static inverseOneToOneMap( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,0
"<Method>org.apache.kafka.streams.processor.internals.StateManagerUtil.public static reinitializeStateStoresForPartitions( Logger, boolean, File, FixedOrderMap, Map, Collection, InternalProcessorContext, OffsetCheckpoint, Map ): void","static reinitializeStateStoresForPartitions( Logger, boolean, File, FixedOrderMap, Map, Collection, InternalProcessorContext, OffsetCheckpoint, Map ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,49,9,21,0
<Field>org.apache.kafka.streams.processor.internals.StateManagerUtil->CHECKPOINT_FILE_NAME,static final CHECKPOINT_FILE_NAME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StateRestoreCallbackAdapter,StateRestoreCallbackAdapter,low,low,low,low,2,3,1,1,0,6,18,17,0,0,1,1,0,0,0.25,0,0,0,,,,,18,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StateRestoreCallbackAdapter.private StateRestoreCallbackAdapter( ): void,StateRestoreCallbackAdapter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StateRestoreCallbackAdapter.public static adapt( StateRestoreCallback ): RecordBatchingStateRestoreCallback,static adapt( StateRestoreCallback ): RecordBatchingStateRestoreCallback,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,1,1,0
org.apache.kafka.streams.processor.internals.StateRestorer,StateRestorer,low-medium,low,low-medium,high,5,33,11,1,0,23,67,55,10,1,20,0,0,0.859,0.832,1,0,0,,,,,67,,,,,,23,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StateRestorer. StateRestorer( TopicPartition, CompositeRestoreListener, Long, long, boolean, String, RecordConverter ): void"," StateRestorer( TopicPartition, CompositeRestoreListener, Long, long, boolean, String, RecordConverter ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,14,7,0,8
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. checkpoint( ): long, checkpoint( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StateRestorer. hasCompleted( long, long ): boolean"," hasCompleted( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,0
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. isPersistent( ): boolean, isPersistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. offsetLimit( ): long, offsetLimit( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restore( Collection ): void, restore( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,2
"<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreBatchCompleted( long, int ): void"," restoreBatchCompleted( long, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,3
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreDone( ): void, restoreDone( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,3
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoreStarted( ): void, restoreStarted( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,5
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoredNumRecords( ): long, restoredNumRecords( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. restoredOffset( ): Long, restoredOffset( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setCheckpointOffset( long ): void, setCheckpointOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setEndingOffset( long ): void, setEndingOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setRestoredOffset( long ): void, setRestoredOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setStartingOffset( long ): void, setStartingOffset( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. setUserRestoreListener( StateRestoreListener ): void, setUserRestoreListener( StateRestoreListener ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer. startingOffset( ): long, startingOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer.public partition( ): TopicPartition,partition( ): TopicPartition,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StateRestorer.private readTo( long ): Long,readTo( long ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.internals.StateRestorer.public storeName( ): String,storeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->checkpointOffset,checkpointOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->endingOffset,endingOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->compositeRestoreListener,final compositeRestoreListener : CompositeRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->offsetLimit,final offsetLimit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->partition,final partition : TopicPartition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->persistent,final persistent : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->recordConverter,final recordConverter : RecordConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->storeName,final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->restoredOffset,restoredOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->startingOffset,startingOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StateRestorer->NO_CHECKPOINT,static final NO_CHECKPOINT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.StaticTopicNameExtractor<K,V>",StaticTopicNameExtractor,low,low,low,low,1,3,0,1,0,3,9,7,1,0,3,0,0,0,0.533,0,0,0,,,,,9,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StaticTopicNameExtractor<K,V>.public StaticTopicNameExtractor( String ): void",StaticTopicNameExtractor( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.processor.internals.StaticTopicNameExtractor<K,V>.public extract( K, V, RecordContext ): String","extract( K, V, RecordContext ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,0,1
"<Method>org.apache.kafka.streams.processor.internals.StaticTopicNameExtractor<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.streams.processor.internals.StaticTopicNameExtractor<K,V>->topicName",final topicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StoreChangelogReader,StoreChangelogReader,medium-high,medium-high,low-medium,high,15,141,81,1,0,50,230,219,10,0,15,0,0,0.636,0.822,0.179,2,0,,,,,230,,,,,,50,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public StoreChangelogReader( Consumer, Duration, StateRestoreListener, LogContext ): void","StoreChangelogReader( Consumer, Duration, StateRestoreListener, LogContext ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,2,4
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private checkForCompletedRestoration( ): boolean,checkForCompletedRestoration( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,3
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,6,6
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private hasPartition( TopicPartition ): boolean,hasPartition( TopicPartition ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,1,4,1
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private initialize( RestoringTasks ): void,initialize( RestoringTasks ): void,low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,41,1,26,10
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,5,5
"<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private logRestoreOffsets( TopicPartition, long, Long ): void","logRestoreOffsets( TopicPartition, long, Long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private processNext( List, StateRestorer, Long ): long","processNext( List, StateRestorer, Long ): long",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,25,3,17,2
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private refreshChangelogInfo( ): void,refreshChangelogInfo( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,3
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public register( StateRestorer ): void,register( StateRestorer ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,11,6
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public remove( List ): void,remove( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,7,6
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public restore( RestoringTasks ): Collection,restore( RestoringTasks ): Collection,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,30,1,27,19
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public restoredOffsets( ): Map,restoredOffsets( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,6,1
"<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.private startRestoration( Set, RestoringTasks ): void","startRestoration( Set, RestoringTasks ): void",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,41,2,45,18
<Method>org.apache.kafka.streams.processor.internals.StoreChangelogReader.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,5
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->completedRestorers,final completedRestorers : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->needsInitializing,final needsInitializing : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->needsRestoring,final needsRestoring : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->partitionInfo,final partitionInfo : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->pollTime,final pollTime : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->restoreConsumer,final restoreConsumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->restoreToOffsets,final restoreToOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->stateRestorers,final stateRestorers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StoreChangelogReader->userStateRestoreListener,final userStateRestoreListener : StateRestoreListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamTask,StreamTask,very-high,very-high,high,very-high,49,392,144,2,0,114,491,464,22,2,41,0,0,0.94,0.91,0.6,1,0,,,,,491,,,,,,114,,,,,,,
org.apache.kafka.streams.processor.internals.StreamTask.ProducerSupplier,ProducerSupplier,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StreamTask. closeSuspended( boolean, RuntimeException ): void"," closeSuspended( boolean, RuntimeException ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,2,6,6
"<Method>org.apache.kafka.streams.processor.internals.StreamTask. commit( boolean, Map ): void"," commit( boolean, Map ): void",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,27,2,18,18
<Method>org.apache.kafka.streams.processor.internals.StreamTask. commitRequested( ): boolean, commitRequested( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. decodeTimestamp( String ): long, decodeTimestamp( String ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,7,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask. encodeTimestamp( long ): String, encodeTimestamp( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,6,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. getProducer( ): Producer, getProducer( ): Producer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. isProcessable( long ): boolean, isProcessable( long ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,1,3,9
<Method>org.apache.kafka.streams.processor.internals.StreamTask. numBuffered( ): int, numBuffered( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. partitionTime( TopicPartition ): long, partitionTime( TopicPartition ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. purgableOffsets( ): Map, purgableOffsets( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,6,2
<Method>org.apache.kafka.streams.processor.internals.StreamTask. recordCollector( ): RecordCollector, recordCollector( ): RecordCollector,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask. requestCommit( ): void, requestCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamTask. schedule( long, long, PunctuationType, Punctuator ): Cancellable"," schedule( long, long, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,4,5,5
<Method>org.apache.kafka.streams.processor.internals.StreamTask. streamTime( ): long, streamTime( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.processor.internals.StreamTask. suspend( boolean, boolean ): void"," suspend( boolean, boolean ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,27,2,8,5
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public StreamTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory, ThreadCache, Time, ProducerSupplier ): void","StreamTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory, ThreadCache, Time, ProducerSupplier ): void",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,11,0,0
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public StreamTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory, ThreadCache, Time, ProducerSupplier, RecordCollector ): void","StreamTask( TaskId, Set, ProcessorTopology, Consumer, ChangelogReader, StreamsConfig, StreamsMetricsImpl, StateDirectory, ThreadCache, Time, ProducerSupplier, RecordCollector ): void",low,very-high,medium-high,low,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,68,12,30,44
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private activeTaskCheckpointableOffsets( ): Map,activeTaskCheckpointableOffsets( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,2
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public addRecords( TopicPartition, Iterable ): void","addRecords( TopicPartition, Iterable ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,5,5
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,4,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private closeTopology( ): void,closeTopology( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,0,6,6
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private extractPartitionTimes( ): Map,extractPartitionTimes( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.protected flushState( ): void,flushState( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,3,2
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private getStacktraceString( KafkaException ): String,getStacktraceString( KafkaException ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,3,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private initTopology( ): void,initTopology( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,8,0,5,5
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private initializeCommittedOffsets( Map ): void,initializeCommittedOffsets( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,9,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public initializeMetadata( ): void,initializeMetadata( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,10,6
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public initializeStateStores( ): boolean,initializeStateStores( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,4,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private initializeTaskTime( Map ): void,initializeTaskTime( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,1,11,6
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public initializeTopology( ): void,initializeTopology( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,0,4,7
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private initializeTransactions( ): void,initializeTransactions( ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,0,3,5
<Method>org.apache.kafka.streams.processor.internals.StreamTask.private maybeAbortTransactionAndCloseRecordCollector( boolean ): void,maybeAbortTransactionAndCloseRecordCollector( boolean ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,1,3,6
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public maybePunctuateStreamTime( ): boolean,maybePunctuateStreamTime( ): boolean,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,2,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public maybePunctuateSystemTime( ): boolean,maybePunctuateSystemTime( ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,2,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public process( ): boolean,process( ): boolean,low,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,32,0,22,15
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public punctuate( ProcessorNode, long, PunctuationType, Punctuator ): void","punctuate( ProcessorNode, long, PunctuationType, Punctuator ): void",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,15,4,10,9
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public resume( ): void,resume( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,14,0,7,9
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public schedule( long, PunctuationType, Punctuator ): Cancellable","schedule( long, PunctuationType, Punctuator ): Cancellable",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,3,3,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public suspend( ): void,suspend( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.private updateProcessorContext( StampedRecord, ProcessorNode ): void","updateProcessorContext( StampedRecord, ProcessorNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,6,2
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->closeTaskSensor,final closeTaskSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitSensor,final commitSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->consumedOffsets,final consumedOffsets : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->enforcedProcessingSensor,final enforcedProcessingSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->maxBufferedSize,final maxBufferedSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->maxTaskIdleMs,final maxTaskIdleMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->partitionGroup,final partitionGroup : PartitionGroup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->processLatencySensor,final processLatencySensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->producerSupplier,final producerSupplier : ProducerSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->punctuateLatencySensor,final punctuateLatencySensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->recordCollector,final recordCollector : RecordCollector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->recordInfo,final recordInfo : RecordInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->recordLatenessSensor,final recordLatenessSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->streamTimePunctuationQueue,final streamTimePunctuationQueue : PunctuationQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->streamsMetrics,final streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->systemTimePunctuationQueue,final systemTimePunctuationQueue : PunctuationQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->threadId,final threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->idleStartTime,idleStartTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->producer,producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->DUMMY_RECORD,static final DUMMY_RECORD : ConsumerRecord,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->LATEST_MAGIC_BYTE,static final LATEST_MAGIC_BYTE : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->transactionInFlight,transactionInFlight : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread,StreamThread,very-high,very-high,medium-high,very-high,38,520,141,2,0,132,700,503,30,0,37,6,1,0.921,0.935,0.86,2,0.054,,,,,700,,,,,,132,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.AbstractTaskCreator<T>,AbstractTaskCreator,low,low,low,low,9,17,7,1,2,8,41,32,8,0,6,0,0,0.875,0.75,1,0,0,,,,,41,,,,,,8,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.InternalConsumerConfig,InternalConsumerConfig,low,low,low,low,1,3,1,3,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StandbyTaskCreator,StandbyTaskCreator,low,low,low,low,13,102,8,2,0,4,42,40,1,0,2,0,0,0,0.458,0,0,0,,,,,42,,,,,,4,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.State,State,low,low,low,low,0,8,5,2,0,3,17,8,1,7,3,0,0,1.125,0.444,1,0,0,,,,,17,,,,,,3,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StateListener,StateListener,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.TaskCreator,TaskCreator,low,low,low,low,16,126,10,2,0,7,61,55,5,0,4,0,1,0.6,0.683,0,0,0.5,,,,,61,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamThread. clearStandbyRecords( List ): void, clearStandbyRecords( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. currentNumIterations( ): int, currentNumIterations( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. getAssignmentErrorCode( ): int, getAssignmentErrorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. maybeCommit( ): boolean, maybeCommit( ): boolean,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,25,0,16,25
<Method>org.apache.kafka.streams.processor.internals.StreamThread. runOnce( ): void, runOnce( ): void,high,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,6,49,0,26,38
<Method>org.apache.kafka.streams.processor.internals.StreamThread. setNow( long ): void, setNow( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. setRebalanceException( Throwable ): void, setRebalanceException( Throwable ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. setState( State ): State, setState( State ): State,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,25,1,12,16
<Method>org.apache.kafka.streams.processor.internals.StreamThread. standbyRecords( ): Map, standbyRecords( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. taskManager( ): TaskManager, taskManager( ): TaskManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread. updateThreadMetadata( String ): StreamThread, updateThreadMetadata( String ): StreamThread,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,1,13,2
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.public StreamThread( Time, StreamsConfig, Producer, Consumer, Consumer, String, TaskManager, StreamsMetricsImpl, InternalTopologyBuilder, String, LogContext, AtomicInteger ): void","StreamThread( Time, StreamsConfig, Producer, Consumer, Consumer, String, TaskManager, StreamsMetricsImpl, InternalTopologyBuilder, String, LogContext, AtomicInteger ): void",low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,42,12,16,23
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private addRecordsToTasks( ConsumerRecords ): void,addRecordsToTasks( ConsumerRecords ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,1,9,4
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.private addToResetList( TopicPartition, Set, String, String, Set ): void","addToResetList( TopicPartition, Set, String, String, Set ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,5,4,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public adminClientMetrics( ): Map,adminClientMetrics( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private advanceNowAndComputeLatency( ): long,advanceNowAndComputeLatency( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,4
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private completeShutdown( boolean ): void,completeShutdown( boolean ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,1,12,9
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public consumerMetrics( ): Map,consumerMetrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,4,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private enforceRebalance( ): void,enforceRebalance( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,4
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public final threadMetadata( ): ThreadMetadata,final threadMetadata( ): ThreadMetadata,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public isRunning( ): boolean,isRunning( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public isRunningAndNotRebalancing( ): boolean,isRunningAndNotRebalancing( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybePunctuate( ): boolean,maybePunctuate( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybeUpdateStandbyTasks( ): void,maybeUpdateStandbyTasks( ): void,medium-high,very-high,medium-high,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,7,51,0,43,26
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private pollRequests( Duration ): ConsumerRecords,pollRequests( Duration ): ConsumerRecords,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,1,2,8
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public producerMetrics( ): Map,producerMetrics( ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,0,7,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private resetInvalidOffsets( InvalidOffsetException ): void,resetInvalidOffsets( InvalidOffsetException ): void,low-medium,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,24,1,24,9
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public run( ): void,run( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,7,4
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private runLoop( ): void,runLoop( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,15,0,16,7
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public setStateListener( StateListener ): void,setStateListener( StateListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public shutdown( ): void,shutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public state( ): State,state( ): State,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public stateListener( ): StateListener,stateListener( ): StateListener,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.public static create( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier, Admin, UUID, String, StreamsMetricsImpl, Time, StreamsMetadataState, long, StateDirectory, StateRestoreListener, int ): StreamThread","static create( InternalTopologyBuilder, StreamsConfig, KafkaClientSupplier, Admin, UUID, String, StreamsMetricsImpl, Time, StreamsMetadataState, long, StateDirectory, StateRestoreListener, int ): StreamThread",low,very-high,medium-high,low,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,87,13,32,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private static getConsumerClientId( String ): String,static getConsumerClientId( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private static getRestoreConsumerClientId( String ): String,static getRestoreConsumerClientId( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public static getSharedAdminClientId( String ): String,static getSharedAdminClientId( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.private static getTaskProducerClientId( String, TaskId ): String","static getTaskProducerClientId( String, TaskId ): String",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private static getThreadProducerClientId( String ): String,static getThreadProducerClientId( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public tasks( ): Map,tasks( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public toString( String ): String,toString( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.streams.processor.internals.StreamThread.private updateThreadMetadata( Map, Map ): void","updateThreadMetadata( Map, Map ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,20,2,27,3
<Field>org.apache.kafka.streams.processor.internals.StreamThread->assignmentErrorCode,final assignmentErrorCode : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->builder,final builder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->commitSensor,final commitSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->commitTimeMs,final commitTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->consumer,final consumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->maxPollTimeMs,final maxPollTimeMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->originalReset,final originalReset : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->pollSensor,final pollSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->pollTime,final pollTime : Duration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->processSensor,final processSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->producer,final producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->punctuateSensor,final punctuateSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->rebalanceListener,final rebalanceListener : ConsumerRebalanceListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->restoreConsumer,final restoreConsumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->stateLock,final stateLock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->streamsMetrics,final streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->taskManager,final taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastCommitMs,lastCommitMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastPollMs,lastPollMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->now,now : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->numIterations,numIterations : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->processStandbyRecords,processStandbyRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->rebalanceException,rebalanceException : Throwable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->standbyRecords,standbyRecords : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->stateListener,stateListener : StateListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->state,volatile state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->threadMetadata,volatile threadMetadata : ThreadMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState,StreamsMetadataState,low-medium,low-medium,low-medium,medium-high,8,49,36,1,0,39,133,114,6,1,13,0,0,0.657,0.788,0.333,0,0,,,,,133,,,,,,39,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsMetadataState.SourceTopicsInfo,SourceTopicsInfo,low,low,low,low,2,7,4,1,0,3,11,7,3,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public StreamsMetadataState( InternalTopologyBuilder, HostInfo ): void","StreamsMetadataState( InternalTopologyBuilder, HostInfo ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,3
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private getSourceTopicsInfo( String ): SourceTopicsInfo,getSourceTopicsInfo( String ): SourceTopicsInfo,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,3,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private getStreamsMetadataForKey( String, K, StreamPartitioner, SourceTopicsInfo ): StreamsMetadata","getStreamsMetadataForKey( String, K, StreamPartitioner, SourceTopicsInfo ): StreamsMetadata",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,4,7,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private hasPartitionsForAnyTopics( List, Set ): boolean","hasPartitionsForAnyTopics( List, Set ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,2,2,0
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private isInitialized( ): boolean,isInitialized( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.private rebuildMetadata( Map ): void,rebuildMetadata( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,18,1,14,6
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public synchronized getAllMetadata( ): Collection,synchronized getAllMetadata( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public synchronized getAllMetadataForStore( String ): Collection,synchronized getAllMetadataForStore( String ): Collection,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,14,1,10,4
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public synchronized getMetadataWithKey( String, K, Serializer ): StreamsMetadata","synchronized getMetadataWithKey( String, K, Serializer ): StreamsMetadata",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,3,8,6
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public synchronized getMetadataWithKey( String, K, StreamPartitioner ): StreamsMetadata","synchronized getMetadataWithKey( String, K, StreamPartitioner ): StreamsMetadata",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,3,8,5
"<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.synchronized onChange( Map, Cluster ): void","synchronized onChange( Map, Cluster ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StreamsMetadataState.public toString( String ): String,toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,16,4
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->clusterMetadata,clusterMetadata : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->allMetadata,final allMetadata : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->builder,final builder : InternalTopologyBuilder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->globalStores,final globalStores : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->thisHost,final thisHost : HostInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->myMetadata,myMetadata : StreamsMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsMetadataState->UNKNOWN_HOST,static final UNKNOWN_HOST : HostInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor,StreamsPartitionAssignor,very-high,high,medium-high,high,30,342,150,1,0,136,722,658,11,1,24,5,0,0.863,0.839,0.619,1,0,,,,,722,,,,,,136,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.AssignedPartition,AssignedPartition,low,low,low,low,2,7,3,1,0,5,18,15,2,0,4,0,0,0.5,0.6,0.667,0,0,,,,,18,,,,,,5,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.ClientMetadata,ClientMetadata,low,low,low,low,5,22,10,1,0,7,31,27,3,0,4,0,0,0.333,0.5,0,0,0,,,,,31,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor. previousConsumersOfTaskPartitions( Set, Map, Set ): Set"," previousConsumersOfTaskPartitions( Set, Map, Set ): Set",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,3,4,0
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor. setInternalTopicManager( InternalTopicManager ): void, setInternalTopicManager( InternalTopicManager ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor. setRebalanceProtocol( RebalanceProtocol ): void, setRebalanceProtocol( RebalanceProtocol ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor. tryStickyAndBalancedTaskAssignmentWithinClient( ClientState, Set, Map, Set ): Map"," tryStickyAndBalancedTaskAssignmentWithinClient( ClientState, Set, Map, Set ): Map",low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,4,49,4,39,4
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private addClientAssignments( Map, ClientMetadata, Map, Map, Set, Map, Map, int, int ): void","addClientAssignments( Map, ClientMetadata, Map, Map, Set, Map, Map, int, int ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,36,9,7,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public assign( Cluster, GroupSubscription ): GroupAssignment","assign( Cluster, GroupSubscription ): GroupAssignment",very-high,very-high,very-high,low,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,50,10,219,2,141,21
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private buildAssignedActiveTaskAndPartitionsList( String, ClientState, List, Map, Set, List, List ): void","buildAssignedActiveTaskAndPartitionsList( String, ClientState, List, Map, Set, List, List ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,25,7,13,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private computeNewAssignment( Map, Map, Map, Set, int, int ): Map","computeNewAssignment( Map, Map, Map, Set, int, int ): Map",low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,31,6,13,0
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public configure( Map ): void,configure( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,1,12,13
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private ensureCopartitioning( Collection, Map, Cluster ): void","ensureCopartitioning( Collection, Map, Cluster ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private errorAssignment( Map, String, int ): Map","errorAssignment( Map, String, int ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,17,3,8,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.protected maybeUpdateSubscriptionVersion( int, int ): boolean","maybeUpdateSubscriptionVersion( int, int ): boolean",low,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,31,2,3,9
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public onAssignment( Assignment, ConsumerGroupMetadata ): void","onAssignment( Assignment, ConsumerGroupMetadata ): void",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,40,2,27,9
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private prepareTopic( Map ): void,prepareTopic( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,1,13,4
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.protected setAssignmentErrorCode( Integer ): void,setAssignmentErrorCode( Integer ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private static buildStandbyTaskMap( Collection, Map ): Map","static buildStandbyTaskMap( Collection, Map ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.static interleaveConsumerTasksByGroupId( Collection, Set ): Map","static interleaveConsumerTasksByGroupId( Collection, Set ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,2,7,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.protected static prepareForSubscription( TaskManager, Set, Set, RebalanceProtocol ): Set","static prepareForSubscription( TaskManager, Set, Set, RebalanceProtocol ): Set",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,4,7,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private static processVersionOneAssignment( String, AssignmentInfo, List, Map, Map ): void","static processVersionOneAssignment( String, AssignmentInfo, List, Map, Map ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,5,15,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public static processVersionTwoAssignment( String, AssignmentInfo, List, Map, Map, Map ): void","static processVersionTwoAssignment( String, AssignmentInfo, List, Map, Map, Map ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,6,6,0
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public subscriptionUserData( Set ): ByteBuffer,subscriptionUserData( Set ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,1,4,6
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.public supportedProtocols( ): List,supportedProtocols( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,2,2
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.protected taskManger( ): TaskManager,taskManger( ): TaskManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private updateMinReceivedVersion( int, int ): int","updateMinReceivedVersion( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private updateMinSupportedVersion( int, int ): int","updateMinSupportedVersion( int, int ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,2,2,2
<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.protected userEndPoint( ): String,userEndPoint( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private validateMetadataVersions( int, int ): void","validateMetadataVersions( int, int ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,2,2,5
"<Method>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.private versionProbingAssignment( Map, Map, Map, Set, int, int ): Map","versionProbingAssignment( Map, Map, Map, Set, int, int ): Map",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,24,6,6,0
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->assignmentErrorCode,assignmentErrorCode : AtomicInteger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->copartitionedTopicsEnforcer,copartitionedTopicsEnforcer : CopartitionedTopicsEnforcer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->internalTopicManager,internalTopicManager : InternalTopicManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->log,log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->logPrefix,logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->numStandbyReplicas,numStandbyReplicas : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->partitionGrouper,partitionGrouper : PartitionGrouper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->rebalanceProtocol,rebalanceProtocol : RebalanceProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->PARTITION_COMPARATOR,static final PARTITION_COMPARATOR : Comparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->taskManager,taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->usedSubscriptionMetadataVersion,usedSubscriptionMetadataVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor->userEndPoint,userEndPoint : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamsRebalanceListener,StreamsRebalanceListener,very-high,low-medium,low-medium,low,6,323,26,1,0,12,106,101,4,0,4,0,0,0,0.542,0,0,0,,,,,106,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener. StreamsRebalanceListener( Time, TaskManager, StreamThread, Logger ): void"," StreamsRebalanceListener( Time, TaskManager, StreamThread, Logger ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener.public onPartitionsAssigned( Collection ): void,onPartitionsAssigned( Collection ): void,low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,42,1,25,24
<Method>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener.public onPartitionsLost( Collection ): void,onPartitionsLost( Collection ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,25,1,10,10
<Method>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener.public onPartitionsRevoked( Collection ): void,onPartitionsRevoked( Collection ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,26,1,12,11
<Field>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener->streamThread,final streamThread : StreamThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener->taskManager,final taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamsRebalanceListener->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.Task,Task,low,low,low,low-medium,4,16,0,1,1,16,18,16,0,0,16,0,0,0,0.604,0,0,0,,,,,18,,,,,,16,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract applicationId( ): String,applicationId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract changelogPartitions( ): Collection,changelogPartitions( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.Task.public abstract close( boolean, boolean ): void","close( boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract commitNeeded( ): boolean,commitNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract context( ): ProcessorContext,context( ): ProcessorContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract getStore( String ): StateStore,getStore( String ): StateStore,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract hasStateStores( ): boolean,hasStateStores( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract id( ): TaskId,id( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract initializeMetadata( ): void,initializeMetadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract initializeStateStores( ): boolean,initializeStateStores( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract initializeTopology( ): void,initializeTopology( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract partitions( ): Set,partitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract resume( ): void,resume( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract toString( String ): String,toString( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.Task.public abstract topology( ): ProcessorTopology,topology( ): ProcessorTopology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.TaskAction<T>,TaskAction,low,low,low,low,0,2,0,1,0,2,3,2,0,0,2,0,0,0,0.25,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TaskAction<T>.public abstract apply( T ): void,apply( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.internals.TaskAction<T>.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.internals.TaskManager,TaskManager,very-high,high,high,very-high,23,499,103,1,0,102,321,297,23,0,49,0,0,0.914,0.91,0.934,0,0,,,,,321,,,,,,102,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.TaskManager. TaskManager( ChangelogReader, UUID, String, Consumer, StreamsMetadataState, AbstractTaskCreator, AbstractTaskCreator, Admin, AssignedStreamsTasks, AssignedStandbyTasks ): void"," TaskManager( ChangelogReader, UUID, String, Consumer, StreamsMetadataState, AbstractTaskCreator, AbstractTaskCreator, Admin, AssignedStreamsTasks, AssignedStandbyTasks ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,22,10,2,11
<Method>org.apache.kafka.streams.processor.internals.TaskManager. activeTask( TopicPartition ): StreamTask, activeTask( TopicPartition ): StreamTask,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. activeTasks( ): Map, activeTasks( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. assignedActiveTasks( ): Map, assignedActiveTasks( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. assignedStandbyTasks( ): Map, assignedStandbyTasks( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. builder( ): InternalTopologyBuilder, builder( ): InternalTopologyBuilder,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. closeLostTasks( ): Set, closeLostTasks( ): Set,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,0,10,13
<Method>org.apache.kafka.streams.processor.internals.TaskManager. closeRevokedStandbyTasks( ): List, closeRevokedStandbyTasks( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.streams.processor.internals.TaskManager. closeRevokedSuspendedTasks( ): void, closeRevokedSuspendedTasks( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,2
<Method>org.apache.kafka.streams.processor.internals.TaskManager. commitAll( ): int, commitAll( ): int,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,2,3
<Method>org.apache.kafka.streams.processor.internals.TaskManager. createTasks( Collection ): void, createTasks( Collection ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,14,1,11,12
<Method>org.apache.kafka.streams.processor.internals.TaskManager. hasActiveRunningTasks( ): boolean, hasActiveRunningTasks( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. hasStandbyRunningTasks( ): boolean, hasStandbyRunningTasks( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. maybeCommitActiveTasksPerUserRequested( ): int, maybeCommitActiveTasksPerUserRequested( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.TaskManager. maybePurgeCommitedRecords( ): void, maybePurgeCommitedRecords( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,11,0,15,10
<Method>org.apache.kafka.streams.processor.internals.TaskManager. pausePartitions( ): void, pausePartitions( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,4,4
<Method>org.apache.kafka.streams.processor.internals.TaskManager. previousActiveTaskIds( ): Set, previousActiveTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,3
<Method>org.apache.kafka.streams.processor.internals.TaskManager. previousStandbyTaskIds( ): Set, previousStandbyTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,5,3
<Method>org.apache.kafka.streams.processor.internals.TaskManager. process( long ): int, process( long ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. punctuate( ): int, punctuate( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. revokedActiveTaskIds( ): Set, revokedActiveTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. revokedStandbyTaskIds( ): Set, revokedStandbyTaskIds( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. setConsumer( Consumer ): void, setConsumer( Consumer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. shutdown( boolean ): void, shutdown( boolean ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,1,8,5
<Method>org.apache.kafka.streams.processor.internals.TaskManager. standbyTask( TopicPartition ): StandbyTask, standbyTask( TopicPartition ): StandbyTask,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. standbyTaskIds( ): Set, standbyTaskIds( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. standbyTasks( ): Map, standbyTasks( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager. suspendActiveTasksAndState( Collection ): Set, suspendActiveTasksAndState( Collection ): Set,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,7,4
<Method>org.apache.kafka.streams.processor.internals.TaskManager. updateNewAndRestoringTasks( ): boolean, updateNewAndRestoringTasks( ): boolean,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,16,0,13,12
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public activeTaskIds( ): Set,activeTaskIds( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private addNewActiveTasks( Map ): void,addNewActiveTasks( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,3,4
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private addNewStandbyTasks( Map ): void,addNewStandbyTasks( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,3,4
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public adminClient( ): Admin,adminClient( ): Admin,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private assignStandbyPartitions( ): void,assignStandbyPartitions( ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,12,6
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public cachedTasksIds( ): Set,cachedTasksIds( ): Set,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,11,0,6,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private partitionsToTaskSet( Collection ): Set,partitionsToTaskSet( Collection ): Set,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,3,2
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public previousRunningTaskIds( ): Set,previousRunningTaskIds( ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public processId( ): UUID,processId( ): UUID,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.TaskManager.private removeChangelogsFromRestoreConsumer( Collection, boolean ): void","removeChangelogsFromRestoreConsumer( Collection, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,2,4,3
<Method>org.apache.kafka.streams.processor.internals.TaskManager.private resumeSuspended( Collection ): void,resumeSuspended( Collection ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,8,6
"<Method>org.apache.kafka.streams.processor.internals.TaskManager.public setAssignmentMetadata( Map, Map ): void","setAssignmentMetadata( Map, Map ): void",low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,34,2,29,21
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public setClusterMetadata( Cluster ): void,setClusterMetadata( Cluster ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public setPartitionsByHostState( Map ): void,setPartitionsByHostState( Map ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public setPartitionsToTaskId( Map ): void,setPartitionsToTaskId( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public setRebalanceInProgress( boolean ): void,setRebalanceInProgress( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public toString( String ): String,toString( String ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,14,3
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public updateSubscriptionsFromAssignment( List ): void,updateSubscriptionsFromAssignment( List ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,11,1
<Method>org.apache.kafka.streams.processor.internals.TaskManager.public updateSubscriptionsFromMetadata( Set ): void,updateSubscriptionsFromMetadata( Set ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,8,1
<Field>org.apache.kafka.streams.processor.internals.TaskManager->addedActiveTasks,addedActiveTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->addedStandbyTasks,addedStandbyTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->assignedActiveTasks,assignedActiveTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->assignedStandbyTasks,assignedStandbyTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->cluster,cluster : Cluster,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->consumer,consumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->deleteRecordsResult,deleteRecordsResult : DeleteRecordsResult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->active,final active : AssignedStreamsTasks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->adminClient,final adminClient : Admin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->changelogReader,final changelogReader : ChangelogReader,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->processId,final processId : UUID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->restoreConsumer,final restoreConsumer : Consumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->standby,final standby : AssignedStandbyTasks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->standbyTaskCreator,final standbyTaskCreator : AbstractTaskCreator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->streamsMetadataState,final streamsMetadataState : StreamsMetadataState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->taskCreator,final taskCreator : AbstractTaskCreator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->partitionsToTaskId,partitionsToTaskId : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->rebalanceInProgress,rebalanceInProgress : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->restoreConsumerAssignedStandbys,restoreConsumerAssignedStandbys : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->revokedActiveTasks,revokedActiveTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.TaskManager->revokedStandbyTasks,revokedStandbyTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ThreadStateTransitionValidator,ThreadStateTransitionValidator,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ThreadStateTransitionValidator.public abstract isValidTransition( ThreadStateTransitionValidator ): boolean,isValidTransition( ThreadStateTransitionValidator ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.internals.ToInternal,ToInternal,low-medium,low,low,low,0,7,2,2,0,5,11,10,0,0,5,0,0,0,0.4,0,0,0,,,,,11,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ToInternal.public ToInternal( ): void,ToInternal( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.processor.internals.ToInternal.public child( ): String,child( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ToInternal.public hasTimestamp( ): boolean,hasTimestamp( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ToInternal.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ToInternal.public update( To ): void,update( To ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig,UnwindowedChangelogTopicConfig,low-medium,low,low,low,0,9,4,2,0,8,31,25,0,1,5,0,0,0,0.6,0,0,0,,,,,31,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig. UnwindowedChangelogTopicConfig( String, Map ): void"," UnwindowedChangelogTopicConfig( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
"<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig.public getProperties( Map, long ): Map","getProperties( Map, long ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.processor.internals.UnwindowedChangelogTopicConfig->UNWINDOWED_STORE_CHANGELOG_TOPIC_DEFAULT_OVERRIDES,static final UNWINDOWED_STORE_CHANGELOG_TOPIC_DEFAULT_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig,WindowedChangelogTopicConfig,low-medium,low,low,low,1,14,8,2,0,12,44,37,1,1,6,0,0,0.5,0.6,0,0,0,,,,,44,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig. WindowedChangelogTopicConfig( String, Map ): void"," WindowedChangelogTopicConfig( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig. setRetentionMs( long ): void, setRetentionMs( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,2
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,5,6
"<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig.public getProperties( Map, long ): Map","getProperties( Map, long ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,2,5,4
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,3
<Method>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Field>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig->retentionMs,retentionMs : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.WindowedChangelogTopicConfig->WINDOWED_STORE_CHANGELOG_TOPIC_DEFAULT_OVERRIDES,static final WINDOWED_STORE_CHANGELOG_TOPIC_DEFAULT_OVERRIDES : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.processor.internals.assignment,org.apache.kafka.streams.processor.internals.assignment,low-medium,low-medium,medium-high,low,,,,,,238,869,,,,,,,,,,,,,11,10,1,869,3,6,0.091,0.667,0.242,238,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo,AssignmentInfo,medium-high,low-medium,low-medium,high,7,59,45,1,0,57,249,241,6,1,18,7,0,0.714,0.811,0.527,0,0,,,,,249,,,,,,57,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public AssignmentInfo( int, List, Map, Map, int ): void","AssignmentInfo( int, List, Map, Map, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public AssignmentInfo( int, int ): void","AssignmentInfo( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,3,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public AssignmentInfo( int, int, List, Map, Map, int ): void","AssignmentInfo( int, int, List, Map, Map, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,6,0,6
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public activeTasks( ): List,activeTasks( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public commonlySupportedVersion( ): int,commonlySupportedVersion( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public encode( ): ByteBuffer,encode( ): ByteBuffer,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,41,0,23,13
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private encodeActiveAndStandbyTaskAssignment( DataOutputStream ): void,encodeActiveAndStandbyTaskAssignment( DataOutputStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,10,4
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private encodePartitionsByHost( DataOutputStream ): void,encodePartitionsByHost( DataOutputStream ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,7,2
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private encodePartitionsByHostAsDictionary( DataOutputStream ): void,encodePartitionsByHostAsDictionary( DataOutputStream ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,18,1,27,3
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,3,12
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public errCode( ): int,errCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,6
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public partitionsByHost( ): Map,partitionsByHost( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public standbyTasks( ): Map,standbyTasks( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public static decode( ByteBuffer ): AssignmentInfo,static decode( ByteBuffer ): AssignmentInfo,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,50,1,23,4
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static decodeActiveTasks( AssignmentInfo, DataInputStream ): void","static decodeActiveTasks( AssignmentInfo, DataInputStream ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static decodePartitionsByHost( AssignmentInfo, DataInputStream ): void","static decodePartitionsByHost( AssignmentInfo, DataInputStream ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,5,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static decodePartitionsByHostUsingDictionary( AssignmentInfo, DataInputStream ): void","static decodePartitionsByHostUsingDictionary( AssignmentInfo, DataInputStream ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,2,9,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static decodeStandbyTasks( AssignmentInfo, DataInputStream ): void","static decodeStandbyTasks( AssignmentInfo, DataInputStream ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,2
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static readTopicPartitions( DataInputStream ): Set,static readTopicPartitions( DataInputStream ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,4,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private static readTopicPartitions( DataInputStream, Map ): Set","static readTopicPartitions( DataInputStream, Map ): Set",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,5,0
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,5
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public version( ): int,version( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private writeHostInfo( DataOutputStream, HostInfo ): void","writeHostInfo( DataOutputStream, HostInfo ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,4,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.private writeTopicPartitions( DataOutputStream, Set ): void","writeTopicPartitions( DataOutputStream, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,6,0
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->activeTasks,activeTasks : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->errCode,errCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->commonlySupportedVersion,final commonlySupportedVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->usedVersion,final usedVersion : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->partitionsByHost,partitionsByHost : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->standbyTasks,standbyTasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration,AssignorConfiguration,low-medium,medium-high,low-medium,low,15,55,17,1,0,42,135,124,9,0,11,0,0,0.867,0.576,0.764,0,0,,,,,135,,,,,,42,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public AssignorConfiguration( Map ): void,AssignorConfiguration( Map ): void,low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,45,1,22,22
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public configuredMetadataVersion( int ): int,configuredMetadataVersion( int ): int,low-medium,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,31,1,3,3
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getAssignmentErrorCode( Map ): AtomicInteger,getAssignmentErrorCode( Map ): AtomicInteger,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,9,2
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getCopartitionedTopicsEnforcer( ): CopartitionedTopicsEnforcer,getCopartitionedTopicsEnforcer( ): CopartitionedTopicsEnforcer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getInternalTopicManager( ): InternalTopicManager,getInternalTopicManager( ): InternalTopicManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getNumStandbyReplicas( ): int,getNumStandbyReplicas( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getPartitionGrouper( ): PartitionGrouper,getPartitionGrouper( ): PartitionGrouper,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getTaskManager( ): TaskManager,getTaskManager( ): TaskManager,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public getUserEndPoint( ): String,getUserEndPoint( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public logPrefix( ): String,logPrefix( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration.public rebalanceProtocol( ): RebalanceProtocol,rebalanceProtocol( ): RebalanceProtocol,low-medium,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12,3,20,0,3,3
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->copartitionedTopicsEnforcer,final copartitionedTopicsEnforcer : CopartitionedTopicsEnforcer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->internalTopicManager,final internalTopicManager : InternalTopicManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->numStandbyReplicas,final numStandbyReplicas : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->partitionGrouper,final partitionGrouper : PartitionGrouper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->streamsConfig,final streamsConfig : StreamsConfig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->taskManager,final taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration->userEndPoint,final userEndPoint : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignorError,AssignorError,low-medium,low,low,low,0,2,0,2,0,2,9,4,1,3,2,0,0,1.5,0.25,0,0,0,,,,,9,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorError.private AssignorError( int ): void,AssignorError( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignorError.public code( ): int,code( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorError->code,final code : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorError->INCOMPLETE_SOURCE_TOPIC_METADATA,static final INCOMPLETE_SOURCE_TOPIC_METADATA : AssignorError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorError->NONE,static final NONE : AssignorError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignorError->VERSION_PROBING,static final VERSION_PROBING : AssignorError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.ClientState,ClientState,low-medium,low,low-medium,high,2,33,8,1,0,32,120,111,8,0,26,0,0,0.761,0.825,0.662,0,0,,,,,120,,,,,,32,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. ClientState( int ): void, ClientState( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. assignedTasks( ): Set, assignedTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. capacity( ): int, capacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. hasAssignedTask( TaskId ): boolean, hasAssignedTask( TaskId ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. hasMoreAvailableCapacityThan( ClientState ): boolean, hasMoreAvailableCapacityThan( ClientState ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,2,6
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. hasUnfulfilledQuota( int ): boolean, hasUnfulfilledQuota( int ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,2
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. previousAssignedTasks( ): Set, previousAssignedTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState. reachedCapacity( ): boolean, reachedCapacity( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public ClientState( ): void,ClientState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.private ClientState( Set, Set, Set, Set, Set, Set, Map, int ): void","ClientState( Set, Set, Set, Set, Set, Set, Map, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,8,0,8
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public activeTaskCount( ): int,activeTaskCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public activeTasks( ): Set,activeTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public addOwnedPartitions( Collection, String ): void","addOwnedPartitions( Collection, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,1,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public addPreviousActiveTasks( Set ): void,addPreviousActiveTasks( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public addPreviousStandbyTasks( Set ): void,addPreviousStandbyTasks( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public assign( TaskId, boolean ): void","assign( TaskId, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,3
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public assignActiveTasks( Collection ): void,assignActiveTasks( Collection ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public assignedTaskCount( ): int,assignedTaskCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public copy( ): ClientState,copy( ): ClientState,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,0,8
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public incrementCapacity( ): void,incrementCapacity( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public ownedPartitions( ): Map,ownedPartitions( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public prevActiveTasks( ): Set,prevActiveTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public prevStandbyTasks( ): Set,prevStandbyTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public removeFromAssignment( TaskId ): void,removeFromAssignment( TaskId ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public standbyTasks( ): Set,standbyTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,0,1,8
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->capacity,capacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->activeTasks,final activeTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->assignedTasks,final assignedTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->ownedPartitions,final ownedPartitions : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->prevActiveTasks,final prevActiveTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->prevAssignedTasks,final prevAssignedTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->prevStandbyTasks,final prevStandbyTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState->standbyTasks,final standbyTasks : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer,CopartitionedTopicsEnforcer,low,low,low-medium,low,5,25,21,1,0,12,52,49,2,0,4,0,0,0.5,0.5,1,0,0,,,,,52,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer.public CopartitionedTopicsEnforcer( String ): void,CopartitionedTopicsEnforcer( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer.public enforce( Set, Map, Cluster ): void","enforce( Set, Map, Cluster ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,27,3,15,0
<Method>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer.private getMaxPartitions( Map ): int,getMaxPartitions( Map ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,5,1
<Method>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer.private getSamePartitions( Map ): int,getSamePartitions( Map ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,6,1
<Field>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.CopartitionedTopicsEnforcer->logPrefix,final logPrefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>,StickyTaskAssignor,low-medium,low,low-medium,low-medium,3,51,46,1,0,50,172,126,5,1,16,0,0,0.773,0.672,1,0,0,,,,,172,,,,,,50,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor.TaskPairs,TaskPairs,low,low,low,low,1,9,5,1,0,9,39,18,2,0,4,0,0,0.25,0.375,0,0,0,,,,,39,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.public StickyTaskAssignor( Map, Set ): void","StickyTaskAssignor( Map, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,3
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private allocateTaskWithClientCandidates( TaskId, Set, boolean ): void","allocateTaskWithClientCandidates( TaskId, Set, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,4,1
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.public assign( int ): void,assign( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private assignActive( ): void,assignActive( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,26,0,22,9
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private assignStandby( int ): void,assignStandby( int ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,1,4,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private assignTaskToClient( Set, TaskId, ClientState ): void","assignTaskToClient( Set, TaskId, ClientState ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,4,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private findClient( TaskId, Set ): ClientState","findClient( TaskId, Set ): ClientState",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,13,2,10,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private findClientsWithPreviousAssignedTask( TaskId, Set ): ClientState","findClientsWithPreviousAssignedTask( TaskId, Set ): ClientState",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,4,2
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private findClientsWithoutAssignedTask( TaskId ): Set,findClientsWithoutAssignedTask( TaskId ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,5,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private findLeastLoaded( TaskId, Set, boolean ): ClientState","findLeastLoaded( TaskId, Set, boolean ): ClientState",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,14,3,5,2
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private findLeastLoadedClientWithPreviousStandByTask( TaskId, Set ): ClientState","findLeastLoadedClientWithPreviousStandByTask( TaskId, Set ): ClientState",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,1
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private hasClientsWithMoreAvailableCapacity( ClientState ): boolean,hasClientsWithMoreAvailableCapacity( ClientState ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,1,2,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private leastLoaded( TaskId, Set ): ClientState","leastLoaded( TaskId, Set ): ClientState",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private mapPreviousTaskAssignment( Map ): void,mapPreviousTaskAssignment( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,1,11,3
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private shouldBalanceLoad( ClientState ): boolean,shouldBalanceLoad( ClientState ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,0
<Method>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>.private sumCapacity( Collection ): int,sumCapacity( Collection ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->clients,final clients : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->previousActiveTaskAssignment,final previousActiveTaskAssignment : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->previousStandbyTaskAssignment,final previousStandbyTaskAssignment : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->taskIds,final taskIds : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->taskPairs,final taskPairs : TaskPairs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor<ID>->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions,StreamsAssignmentProtocolVersions,low,low,low,low,0,1,0,1,0,1,5,1,0,3,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.private StreamsAssignmentProtocolVersions( ): void,StreamsAssignmentProtocolVersions( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions->EARLIEST_PROBEABLE_VERSION,static final EARLIEST_PROBEABLE_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions->LATEST_SUPPORTED_VERSION,static final LATEST_SUPPORTED_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions->UNKNOWN,static final UNKNOWN : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo,SubscriptionInfo,low-medium,low,low-medium,medium-high,4,24,12,1,0,29,125,109,2,2,11,2,0,1,0.78,1,0,0,,,,,125,,,,,,29,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public SubscriptionInfo( int, int, UUID, Set, Set, String ): void","SubscriptionInfo( int, int, UUID, Set, Set, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,29,6,10,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public encode( ): ByteBuffer,encode( ): ByteBuffer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,0,2,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public latestSupportedVersion( ): int,latestSupportedVersion( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public prevTasks( ): Set,prevTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,2,3
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public processId( ): UUID,processId( ): UUID,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public standbyTasks( ): Set,standbyTasks( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,2,3
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public static decode( ByteBuffer ): SubscriptionInfo,static decode( ByteBuffer ): SubscriptionInfo,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,5,1
"<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.private static validateVersions( int, int ): void","static validateVersions( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,10,2,0,2
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public userEndPoint( ): String,userEndPoint( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public version( ): int,version( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->prevTasksCache,prevTasksCache : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->standbyTasksCache,standbyTasksCache : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->UNKNOWN,static final UNKNOWN : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>",TaskAssignor,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.public abstract assign( int ): void",assign( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.streams.processor.internals.metrics,org.apache.kafka.streams.processor.internals.metrics,low,low,low-medium,low,,,,,,147,1353,,,,,,,,,,,,,6,6,0,1353,44,4,0,0.083,0.917,147,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics,ProcessorNodeMetrics,low-medium,low,medium-high,low,4,53,14,1,0,21,344,292,0,44,1,15,0,1.039,0.325,0.972,0,0,,,,,344,,,,,,21,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private ProcessorNodeMetrics( ): void,ProcessorNodeMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static createSensor( String, String, String, StreamsMetricsImpl ): Sensor","static createSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,4,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static destroySensor( String, String, String, StreamsMetricsImpl ): Sensor","static destroySensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,4,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static emptySensor( String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static emptySensor( String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,6,1,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static forwardSensor( String, String, String, StreamsMetricsImpl ): Sensor","static forwardSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,4,2,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static lateRecordDropSensor( String, String, String, StreamsMetricsImpl ): Sensor","static lateRecordDropSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,4,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static processAtSourceSensor( String, String, String, StreamsMetricsImpl ): Sensor","static processAtSourceSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,4,4,7
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static processSensor( String, String, String, StreamsMetricsImpl ): Sensor","static processSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,4,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static processorAtSourceSensorOrForwardSensor( String, String, String, StreamsMetricsImpl ): Sensor","static processorAtSourceSensorOrForwardSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static punctuateSensor( String, String, String, StreamsMetricsImpl ): Sensor","static punctuateSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,4,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.public static suppressionEmitSensor( String, String, String, StreamsMetricsImpl ): Sensor","static suppressionEmitSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,4,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static throughputAndLatencyParentSensor( String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static throughputAndLatencyParentSensor( String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,28,9,4,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static throughputAndLatencySensor( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static throughputAndLatencySensor( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,31,11,4,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static throughputAndLatencySensorWithParent( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static throughputAndLatencySensorWithParent( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,34,10,2,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static throughputParentSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static throughputParentSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,7,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics.private static throughputSensor( String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static throughputSensor( String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,9,3,0
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->AVG_DESCRIPTION_PREFIX,static final AVG_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->AVG_LATENCY_DESCRIPTION_PREFIX,static final AVG_LATENCY_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE,static final CREATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_AVG_LATENCY_DESCRIPTION,static final CREATE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_DESCRIPTION1,static final CREATE_DESCRIPTION1 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_DESCRIPTION2,static final CREATE_DESCRIPTION2 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_MAX_LATENCY_DESCRIPTION,static final CREATE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_RATE_DESCRIPTION,static final CREATE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->CREATE_TOTAL_DESCRIPTION,static final CREATE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY,static final DESTROY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY_AVG_LATENCY_DESCRIPTION,static final DESTROY_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY_DESCRIPTION,static final DESTROY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY_MAX_LATENCY_DESCRIPTION,static final DESTROY_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY_RATE_DESCRIPTION,static final DESTROY_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->DESTROY_TOTAL_DESCRIPTION,static final DESTROY_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->FORWARD,static final FORWARD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->FORWARD_DESCRIPTION,static final FORWARD_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->FORWARD_RATE_DESCRIPTION,static final FORWARD_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->FORWARD_TOTAL_DESCRIPTION,static final FORWARD_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->LATENCY_DESCRIPTION,static final LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->LATE_RECORD_DROP,static final LATE_RECORD_DROP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->LATE_RECORD_DROP_DESCRIPTION,static final LATE_RECORD_DROP_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->LATE_RECORD_DROP_RATE_DESCRIPTION,static final LATE_RECORD_DROP_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->LATE_RECORD_DROP_TOTAL_DESCRIPTION,static final LATE_RECORD_DROP_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->MAX_DESCRIPTION_PREFIX,static final MAX_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->MAX_LATENCY_DESCRIPTION_PREFIX,static final MAX_LATENCY_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS,static final PROCESS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS_AVG_LATENCY_DESCRIPTION,static final PROCESS_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS_DESCRIPTION,static final PROCESS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS_MAX_LATENCY_DESCRIPTION,static final PROCESS_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS_RATE_DESCRIPTION,static final PROCESS_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PROCESS_TOTAL_DESCRIPTION,static final PROCESS_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE,static final PUNCTUATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE_AVG_LATENCY_DESCRIPTION,static final PUNCTUATE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE_DESCRIPTION,static final PUNCTUATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE_MAX_LATENCY_DESCRIPTION,static final PUNCTUATE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE_RATE_DESCRIPTION,static final PUNCTUATE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->PUNCTUATE_TOTAL_DESCRIPTION,static final PUNCTUATE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->RATE_DESCRIPTION_PREFIX,static final RATE_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->RATE_DESCRIPTION_SUFFIX,static final RATE_DESCRIPTION_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->SUPPRESSION_EMIT,static final SUPPRESSION_EMIT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->SUPPRESSION_EMIT_DESCRIPTION,static final SUPPRESSION_EMIT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->SUPPRESSION_EMIT_RATE_DESCRIPTION,static final SUPPRESSION_EMIT_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ProcessorNodeMetrics->SUPPRESSION_EMIT_TOTAL_DESCRIPTION,static final SUPPRESSION_EMIT_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,StreamsMetricsImpl,medium-high,medium-high,high,medium-high,18,134,51,1,0,87,596,518,11,45,44,16,0,0.983,0.799,0.818,0,0,,,,,596,,,,,,87,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.ImmutableMetricValue<T>,ImmutableMetricValue,low,low,low,low,2,7,3,1,0,7,18,16,1,0,4,0,0,0,0.6,0,0,0,,,,,18,,,,,,7,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.Version,Version,low,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl. parentSensors( ): Map, parentSensors( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public StreamsMetricsImpl( Metrics, String, String ): void","StreamsMetricsImpl( Metrics, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,3,4
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addClientLevelImmutableMetric( String, String, RecordingLevel, T ): void","addClientLevelImmutableMetric( String, String, RecordingLevel, T ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,4,5,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addClientLevelMutableMetric( String, String, RecordingLevel, Gauge ): void","addClientLevelMutableMetric( String, String, RecordingLevel, Gauge ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,4,5,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addLatencyAndThroughputSensor( String, String, String, RecordingLevel, String ): Sensor","addLatencyAndThroughputSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,23,5,14,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addLatencyRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor","addLatencyRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,20,5,6,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor","addRateTotalSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,5,5,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addSensor( String, RecordingLevel ): Sensor","addSensor( String, RecordingLevel ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addSensor( String, RecordingLevel, Sensor ): Sensor","addSensor( String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public addThroughputSensor( String, String, String, RecordingLevel, String ): Sensor","addThroughputSensor( String, String, String, RecordingLevel, String ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,24,5,12,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public bufferLevelTagMap( String, String, String ): Map","bufferLevelTagMap( String, String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public cacheLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor","cacheLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,14,6,6,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public cacheLevelTagMap( String, String, String ): Map","cacheLevelTagMap( String, String, String ): Map",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,3,4,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private cacheSensorPrefix( String, String, String ): String","cacheSensorPrefix( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public clientLevelTagMap( ): Map,clientLevelTagMap( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private customInvocationRateAndCountSensor( String, String, String, String, Map, RecordingLevel ): Sensor","customInvocationRateAndCountSensor( String, String, String, String, Map, RecordingLevel ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,6,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private customizedTags( String, String, String, String ): Map","customizedTags( String, String, String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,4,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private externalChildSensorName( String, String, String ): String","externalChildSensorName( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private externalParentSensorName( String, String ): String","externalParentSensorName( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllCacheLevelSensors( String, String, String ): void","final removeAllCacheLevelSensors( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,3,5,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllClientLevelMetrics( ): void,final removeAllClientLevelMetrics( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,4,0,3,4
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllNodeLevelSensors( String, String, String ): void","final removeAllNodeLevelSensors( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,3,5,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllStoreLevelSensors( String, String, String ): void","final removeAllStoreLevelSensors( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,3,5,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllTaskLevelSensors( String, String ): void","final removeAllTaskLevelSensors( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,2,5,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final removeAllThreadLevelSensors( String ): void,final removeAllThreadLevelSensors( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,5,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final storeLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor","final storeLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,14,6,6,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final taskLevelSensor( String, String, String, RecordingLevel, Sensor ): Sensor","final taskLevelSensor( String, String, String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,5,6,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public final threadLevelSensor( String, String, RecordingLevel, Sensor ): Sensor","final threadLevelSensor( String, String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,4,5,5
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public metrics( ): Map,metrics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public nodeLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor","nodeLevelSensor( String, String, String, String, RecordingLevel, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,14,6,6,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public nodeLevelTagMap( String, String, String ): Map","nodeLevelTagMap( String, String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private nodeSensorPrefix( String, String, String ): String","nodeSensorPrefix( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public recordLatency( Sensor, long, long ): void","recordLatency( Sensor, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public recordThroughput( Sensor, long ): void","recordThroughput( Sensor, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public removeSensor( Sensor ): void,removeSensor( Sensor ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,6,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public rocksDBMetricsRecordingTrigger( ): RocksDBMetricsRecordingTrigger,rocksDBMetricsRecordingTrigger( ): RocksDBMetricsRecordingTrigger,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public setRocksDBMetricsRecordingTrigger( RocksDBMetricsRecordingTrigger ): void,setRocksDBMetricsRecordingTrigger( RocksDBMetricsRecordingTrigger ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addAvgAndMaxLatencyToSensor( Sensor, String, Map, String ): void","static addAvgAndMaxLatencyToSensor( Sensor, String, Map, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,20,4,2,2
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addAvgAndMaxToSensor( Sensor, String, Map, String, String, String ): void","static addAvgAndMaxToSensor( Sensor, String, Map, String, String, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,22,6,2,2
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addAvgAndMinAndMaxToSensor( Sensor, String, Map, String, String, String, String ): void","static addAvgAndMinAndMaxToSensor( Sensor, String, Map, String, String, String, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,7,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addAvgAndSumMetricsToSensor( Sensor, String, Map, String, String, String ): void","static addAvgAndSumMetricsToSensor( Sensor, String, Map, String, String, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,6,2,2
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addInvocationRateAndCountToSensor( Sensor, String, Map, String ): void","static addInvocationRateAndCountToSensor( Sensor, String, Map, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,4,1,2
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addInvocationRateAndCountToSensor( Sensor, String, Map, String, String, String ): void","static addInvocationRateAndCountToSensor( Sensor, String, Map, String, String, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,6,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addInvocationRateToSensor( Sensor, String, Map, String, String ): void","static addInvocationRateToSensor( Sensor, String, Map, String, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,5,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addRateOfSumAndSumMetricsToSensor( Sensor, String, Map, String, String, String ): void","static addRateOfSumAndSumMetricsToSensor( Sensor, String, Map, String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,6,2,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addRateOfSumMetricToSensor( Sensor, String, Map, String, String ): void","static addRateOfSumMetricToSensor( Sensor, String, Map, String, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addSumMetricToSensor( Sensor, String, Map, String, String ): void","static addSumMetricToSensor( Sensor, String, Map, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,1,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addSumMetricToSensor( Sensor, String, Map, String, boolean, String ): void","static addSumMetricToSensor( Sensor, String, Map, String, boolean, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,15,6,1,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static addValueMetricToSensor( Sensor, String, Map, String, String ): void","static addValueMetricToSensor( Sensor, String, Map, String, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,1,0
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private static groupNameFromScope( String ): String,static groupNameFromScope( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static maybeMeasureLatency( Runnable, Time, Sensor ): void","static maybeMeasureLatency( Runnable, Time, Sensor ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,3,7,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public static maybeMeasureLatency( Supplier, Time, Sensor ): T","static maybeMeasureLatency( Supplier, Time, Sensor ): T",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,3,7,0
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private static parseBuiltInMetricsVersion( String ): Version,static parseBuiltInMetricsVersion( String ): Version,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public storeLevelTagMap( String, String, String, String ): Map","storeLevelTagMap( String, String, String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private storeSensorPrefix( String, String, String ): String","storeSensorPrefix( String, String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public taskLevelTagMap( String, String ): Map","taskLevelTagMap( String, String ): Map",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private taskSensorPrefix( String, String ): String","taskSensorPrefix( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public threadLevelTagMap( String ): Map,threadLevelTagMap( String ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,3
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.private threadSensorPrefix( String ): String,threadSensorPrefix( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,2
<Method>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl.public version( ): Version,version( ): Version,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->cacheLevelSensors,final cacheLevelSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->clientId,final clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->clientLevelMetrics,final clientLevelMetrics : Deque,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->metrics,final metrics : Metrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->nodeLevelSensors,final nodeLevelSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->parentSensors,final parentSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->storeLevelSensors,final storeLevelSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->taskLevelSensors,final taskLevelSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->threadLevelSensors,final threadLevelSensors : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->version,final version : Version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->rocksDBMetricsRecordingTrigger,rocksDBMetricsRecordingTrigger : RocksDBMetricsRecordingTrigger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->AVG_LATENCY_DESCRIPTION,static final AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->AVG_SUFFIX,static final AVG_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->AVG_VALUE_DOC,static final AVG_VALUE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->BUFFER_ID_TAG,static final BUFFER_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->BUFFER_LEVEL_GROUP_0100_TO_24,static final BUFFER_LEVEL_GROUP_0100_TO_24 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->CACHE_LEVEL_GROUP,static final CACHE_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->CLIENT_ID_TAG,static final CLIENT_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->CLIENT_LEVEL_GROUP,static final CLIENT_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->GROUP_PREFIX,static final GROUP_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->GROUP_PREFIX_WO_DELIMITER,static final GROUP_PREFIX_WO_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->GROUP_SUFFIX,static final GROUP_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->LATENCY_SUFFIX,static final LATENCY_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->MAX_LATENCY_DESCRIPTION,static final MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->MAX_SUFFIX,static final MAX_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->MAX_VALUE_DOC,static final MAX_VALUE_DOC : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->MIN_SUFFIX,static final MIN_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->OPERATIONS,static final OPERATIONS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->PROCESSOR_NODE_ID_TAG,static final PROCESSOR_NODE_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->PROCESSOR_NODE_LEVEL_GROUP,static final PROCESSOR_NODE_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RATE_DESCRIPTION,static final RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RATE_DESCRIPTION_PREFIX,static final RATE_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RATE_DESCRIPTION_SUFFIX,static final RATE_DESCRIPTION_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RATE_SUFFIX,static final RATE_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RATIO_SUFFIX,static final RATIO_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->RECORD_CACHE_ID_TAG,static final RECORD_CACHE_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->ROLLUP_VALUE,static final ROLLUP_VALUE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_CACHE_LABEL,static final SENSOR_CACHE_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_ENTITY_LABEL,static final SENSOR_ENTITY_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_EXTERNAL_LABEL,static final SENSOR_EXTERNAL_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_INTERNAL_LABEL,static final SENSOR_INTERNAL_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_NAME_DELIMITER,static final SENSOR_NAME_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_NODE_LABEL,static final SENSOR_NODE_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_PREFIX_DELIMITER,static final SENSOR_PREFIX_DELIMITER : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_STORE_LABEL,static final SENSOR_STORE_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->SENSOR_TASK_LABEL,static final SENSOR_TASK_LABEL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->STATE_STORE_LEVEL_GROUP,static final STATE_STORE_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->STORE_ID_TAG,static final STORE_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->TASK_ID_TAG,static final TASK_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->TASK_LEVEL_GROUP,static final TASK_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->THREAD_ID_TAG,static final THREAD_ID_TAG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->THREAD_ID_TAG_0100_TO_24,static final THREAD_ID_TAG_0100_TO_24 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->THREAD_LEVEL_GROUP,static final THREAD_LEVEL_GROUP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->THREAD_LEVEL_GROUP_0100_TO_24,static final THREAD_LEVEL_GROUP_0100_TO_24 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->TOTAL_DESCRIPTION,static final TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl->TOTAL_SUFFIX,static final TOTAL_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.TaskMetrics,TaskMetrics,low-medium,low-medium,low-medium,low,7,62,13,1,0,19,220,179,0,31,1,13,0,1.058,0.286,1,0,0,,,,,220,,,,,,19,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.private TaskMetrics( ): void,TaskMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.private static avgAndMaxSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static avgAndMaxSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,8,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static commitSensor( String, String, StreamsMetricsImpl, Sensor ): Sensor","static commitSensor( String, String, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,4,1,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static droppedRecordsSensor( String, String, StreamsMetricsImpl ): Sensor","static droppedRecordsSensor( String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static droppedRecordsSensorOrExpiredWindowRecordDropSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static droppedRecordsSensorOrExpiredWindowRecordDropSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,5,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static droppedRecordsSensorOrLateRecordDropSensor( String, String, String, StreamsMetricsImpl ): Sensor","static droppedRecordsSensorOrLateRecordDropSensor( String, String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,4,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static droppedRecordsSensorOrSkippedRecordsSensor( String, String, StreamsMetricsImpl ): Sensor","static droppedRecordsSensorOrSkippedRecordsSensor( String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.private static emptySensor( String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static emptySensor( String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,6,1,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static enforcedProcessingSensor( String, String, StreamsMetricsImpl, Sensor ): Sensor","static enforcedProcessingSensor( String, String, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,4,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.private static invocationRateAndCountAndAvgAndMaxLatencySensor( String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static invocationRateAndCountAndAvgAndMaxLatencySensor( String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,29,10,4,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.private static invocationRateAndCountSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor","static invocationRateAndCountSensor( String, String, String, String, String, RecordingLevel, StreamsMetricsImpl, Sensor ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,8,3,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static processLatencySensor( String, String, StreamsMetricsImpl ): Sensor","static processLatencySensor( String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,3,4
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static punctuateSensor( String, String, StreamsMetricsImpl ): Sensor","static punctuateSensor( String, String, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,3,3,6
"<Method>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics.public static recordLatenessSensor( String, String, StreamsMetricsImpl ): Sensor","static recordLatenessSensor( String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,1,3
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->AVG_LATENCY_DESCRIPTION,static final AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT,static final COMMIT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT_AVG_LATENCY_DESCRIPTION,static final COMMIT_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT_DESCRIPTION,static final COMMIT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT_MAX_LATENCY_DESCRIPTION,static final COMMIT_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT_RATE_DESCRIPTION,static final COMMIT_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->COMMIT_TOTAL_DESCRIPTION,static final COMMIT_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->DROPPED_RECORDS,static final DROPPED_RECORDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->DROPPED_RECORDS_DESCRIPTION,static final DROPPED_RECORDS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->DROPPED_RECORDS_RATE_DESCRIPTION,static final DROPPED_RECORDS_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->DROPPED_RECORDS_TOTAL_DESCRIPTION,static final DROPPED_RECORDS_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->ENFORCED_PROCESSING,static final ENFORCED_PROCESSING : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->ENFORCED_PROCESSING_RATE_DESCRIPTION,static final ENFORCED_PROCESSING_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->ENFORCED_PROCESSING_TOTAL_DESCRIPTION,static final ENFORCED_PROCESSING_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->MAX_LATENCY_DESCRIPTION,static final MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PROCESS,static final PROCESS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PROCESS_AVG_LATENCY_DESCRIPTION,static final PROCESS_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PROCESS_DESCRIPTION,static final PROCESS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PROCESS_LATENCY,static final PROCESS_LATENCY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PROCESS_MAX_LATENCY_DESCRIPTION,static final PROCESS_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE,static final PUNCTUATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE_AVG_LATENCY_DESCRIPTION,static final PUNCTUATE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE_DESCRIPTION,static final PUNCTUATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE_MAX_LATENCY_DESCRIPTION,static final PUNCTUATE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE_RATE_DESCRIPTION,static final PUNCTUATE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->PUNCTUATE_TOTAL_DESCRIPTION,static final PUNCTUATE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->RATE_DESCRIPTION_PREFIX,static final RATE_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->RATE_DESCRIPTION_SUFFIX,static final RATE_DESCRIPTION_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->RECORD_LATENESS,static final RECORD_LATENESS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->RECORD_LATENESS_AVG_DESCRIPTION,static final RECORD_LATENESS_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.TaskMetrics->RECORD_LATENESS_MAX_DESCRIPTION,static final RECORD_LATENESS_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics,ThreadMetrics,low,low,low-medium,low,4,46,9,1,0,13,193,147,0,42,1,11,0,1.024,0.271,0.964,0,0,,,,,193,,,,,,13,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.private ThreadMetrics( ): void,ThreadMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static closeTaskSensor( String, StreamsMetricsImpl ): Sensor","static closeTaskSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static commitOverTasksSensor( String, StreamsMetricsImpl ): Sensor","static commitOverTasksSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,22,2,4,7
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static commitSensor( String, StreamsMetricsImpl ): Sensor","static commitSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,1,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static createTaskSensor( String, StreamsMetricsImpl ): Sensor","static createTaskSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,1,3
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.private static invocationRateAndCountAndAvgAndMaxLatencySensor( String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static invocationRateAndCountAndAvgAndMaxLatencySensor( String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,28,8,5,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.private static invocationRateAndCountSensor( String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static invocationRateAndCountSensor( String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,6,4,0
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static pollSensor( String, StreamsMetricsImpl ): Sensor","static pollSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,1,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static processSensor( String, StreamsMetricsImpl ): Sensor","static processSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,1,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static punctuateSensor( String, StreamsMetricsImpl ): Sensor","static punctuateSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,1,5
"<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.public static skipRecordSensor( String, StreamsMetricsImpl ): Sensor","static skipRecordSensor( String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,1,3
<Method>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics.private static threadLevelGroup( StreamsMetricsImpl ): String,static threadLevelGroup( StreamsMetricsImpl ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CLOSE_TASK,static final CLOSE_TASK : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CLOSE_TASK_DESCRIPTION,static final CLOSE_TASK_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CLOSE_TASK_RATE_DESCRIPTION,static final CLOSE_TASK_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CLOSE_TASK_TOTAL_DESCRIPTION,static final CLOSE_TASK_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT,static final COMMIT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_AVG_LATENCY_DESCRIPTION,static final COMMIT_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_DESCRIPTION,static final COMMIT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_LATENCY,static final COMMIT_LATENCY : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_MAX_LATENCY_DESCRIPTION,static final COMMIT_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_OVER_TASKS_AVG_LATENCY_DESCRIPTION,static final COMMIT_OVER_TASKS_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_OVER_TASKS_DESCRIPTION,static final COMMIT_OVER_TASKS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_OVER_TASKS_MAX_LATENCY_DESCRIPTION,static final COMMIT_OVER_TASKS_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_OVER_TASKS_RATE_DESCRIPTION,static final COMMIT_OVER_TASKS_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_OVER_TASKS_TOTAL_DESCRIPTION,static final COMMIT_OVER_TASKS_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_RATE_DESCRIPTION,static final COMMIT_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->COMMIT_TOTAL_DESCRIPTION,static final COMMIT_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CREATE_TASK,static final CREATE_TASK : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CREATE_TASK_DESCRIPTION,static final CREATE_TASK_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CREATE_TASK_RATE_DESCRIPTION,static final CREATE_TASK_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->CREATE_TASK_TOTAL_DESCRIPTION,static final CREATE_TASK_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL,static final POLL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL_AVG_LATENCY_DESCRIPTION,static final POLL_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL_DESCRIPTION,static final POLL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL_MAX_LATENCY_DESCRIPTION,static final POLL_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL_RATE_DESCRIPTION,static final POLL_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->POLL_TOTAL_DESCRIPTION,static final POLL_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS,static final PROCESS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS_AVG_LATENCY_DESCRIPTION,static final PROCESS_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS_DESCRIPTION,static final PROCESS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS_MAX_LATENCY_DESCRIPTION,static final PROCESS_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS_RATE_DESCRIPTION,static final PROCESS_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PROCESS_TOTAL_DESCRIPTION,static final PROCESS_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE,static final PUNCTUATE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE_AVG_LATENCY_DESCRIPTION,static final PUNCTUATE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE_DESCRIPTION,static final PUNCTUATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE_MAX_LATENCY_DESCRIPTION,static final PUNCTUATE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE_RATE_DESCRIPTION,static final PUNCTUATE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->PUNCTUATE_TOTAL_DESCRIPTION,static final PUNCTUATE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->SKIP_RECORD,static final SKIP_RECORD : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->SKIP_RECORDS_DESCRIPTION,static final SKIP_RECORDS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->SKIP_RECORD_RATE_DESCRIPTION,static final SKIP_RECORD_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.metrics.ThreadMetrics->SKIP_RECORD_TOTAL_DESCRIPTION,static final SKIP_RECORD_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.state,org.apache.kafka.streams.state,low,low-medium,medium-high,low,,,,,,160,517,,,,,,,,,,,,,30,12,18,517,132,10,0.6,0.07,0.33,160,,,,,,,
org.apache.kafka.streams.state.HostInfo,HostInfo,low,low,low,low-medium,0,9,3,1,0,9,30,27,2,0,6,0,0,0.2,0.625,0.067,0,0,,,,,30,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.state.HostInfo.public HostInfo( String, int ): void","HostInfo( String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.HostInfo.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,1,3,4
<Method>org.apache.kafka.streams.state.HostInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,2
<Method>org.apache.kafka.streams.state.HostInfo.public host( ): String,host( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.HostInfo.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.HostInfo.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.state.HostInfo->host,final host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.HostInfo->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.KeyValueBytesStoreSupplier,KeyValueBytesStoreSupplier,low,low,low,low,0,0,0,1,3,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.KeyValueIterator<K,V>",KeyValueIterator,low,low,low,low,0,2,0,1,19,2,4,2,0,0,2,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.KeyValueStore<K,V>",KeyValueStore,low,low,low,low,0,4,0,1,13,4,5,4,0,0,4,0,0,0,0.375,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract putAll( List ): void",putAll( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.QueryableStoreType<T>,QueryableStoreType,low,low,low,low,2,2,0,1,1,2,4,2,0,0,2,0,0,0,0.375,0,0,0,,,,,4,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.QueryableStoreType<T>.public abstract accepts( StateStore ): boolean,accepts( StateStore ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.QueryableStoreType<T>.public abstract create( StateStoreProvider, String ): T","create( StateStoreProvider, String ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.QueryableStoreTypes,QueryableStoreTypes,low,low,low-medium,low,1,5,0,1,0,5,63,10,0,0,0,5,0,0,0,0,0,0,,,,,63,,,,,,5,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.KeyValueStoreType<K,V>",KeyValueStoreType,low,low,low,low,3,3,1,2,0,2,7,6,0,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.streams.state.QueryableStoreTypes.QueryableStoreTypeMatcher<T>,QueryableStoreTypeMatcher,low,low,low,low,1,3,1,1,5,4,11,9,1,0,2,0,0,0,0.333,0,0,0,,,,,11,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.SessionStoreType<K,V>",SessionStoreType,low,low,low,low,3,3,1,2,0,2,7,6,0,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.TimestampedKeyValueStoreType<K,V>",TimestampedKeyValueStoreType,low,low,low,low,3,3,1,2,0,2,10,8,0,0,2,0,0,0,0.333,0,0,0,,,,,10,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.TimestampedWindowStoreType<K,V>",TimestampedWindowStoreType,low,low,low,low,3,3,1,2,0,2,10,8,0,0,2,0,0,0,0.333,0,0,0,,,,,10,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.QueryableStoreTypes.WindowStoreType<K,V>",WindowStoreType,low,low,low,low,3,3,1,2,0,2,7,6,0,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.QueryableStoreTypes.public static keyValueStore( ): QueryableStoreType,static keyValueStore( ): QueryableStoreType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.QueryableStoreTypes.public static sessionStore( ): QueryableStoreType,static sessionStore( ): QueryableStoreType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.QueryableStoreTypes.public static timestampedKeyValueStore( ): QueryableStoreType,static timestampedKeyValueStore( ): QueryableStoreType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.QueryableStoreTypes.public static timestampedWindowStore( ): QueryableStoreType,static timestampedWindowStore( ): QueryableStoreType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.QueryableStoreTypes.public static windowStore( ): QueryableStoreType,static windowStore( ): QueryableStoreType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>",ReadOnlyKeyValueStore,low,low,low,low,1,4,0,1,3,4,5,4,0,0,4,0,0,0,0.25,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyKeyValueStore<K,V>.public abstract range( K, K ): KeyValueIterator","range( K, K ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.state.ReadOnlySessionStore<K,AGG>",ReadOnlySessionStore,low,low,low,low,1,2,0,1,2,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.ReadOnlySessionStore<K,AGG>.public abstract fetch( K ): KeyValueIterator",fetch( K ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlySessionStore<K,AGG>.public abstract fetch( K, K ): KeyValueIterator","fetch( K, K ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>",ReadOnlyWindowStore,low,low,low,low,2,8,0,1,3,8,13,8,0,0,8,0,0,0,0.375,0,0,0,,,,,13,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetch( K, Instant, Instant ): WindowStoreIterator","fetch( K, Instant, Instant ): WindowStoreIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetch( K, K, Instant, Instant ): KeyValueIterator","fetch( K, K, Instant, Instant ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetch( K, K, long, long ): KeyValueIterator","fetch( K, K, long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetch( K, long ): V","fetch( K, long ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetch( K, long, long ): WindowStoreIterator","fetch( K, long, long ): WindowStoreIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetchAll( Instant, Instant ): KeyValueIterator","fetchAll( Instant, Instant ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.ReadOnlyWindowStore<K,V>.public abstract fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.RocksDBConfigSetter,RocksDBConfigSetter,low,low,low,low,2,3,1,1,0,2,5,2,0,1,2,0,0,0,0.125,1,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.RocksDBConfigSetter.public close( String, Options ): void","close( String, Options ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,1,1
"<Method>org.apache.kafka.streams.state.RocksDBConfigSetter.public abstract setConfig( String, Options, Map ): void","setConfig( String, Options, Map ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Field>org.apache.kafka.streams.state.RocksDBConfigSetter->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.SessionBytesStoreSupplier,SessionBytesStoreSupplier,low,low,low,low,0,2,0,1,2,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.SessionBytesStoreSupplier.public abstract retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.SessionBytesStoreSupplier.public abstract segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.SessionStore<K,AGG>",SessionStore,low,low,low,low,2,5,0,1,7,5,6,5,0,0,5,0,0,0,0.44,0,0,0,,,,,6,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.SessionStore<K,AGG>.public abstract fetchSession( K, long, long ): AGG","fetchSession( K, long, long ): AGG",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.SessionStore<K,AGG>.public abstract findSessions( K, K, long, long ): KeyValueIterator","findSessions( K, K, long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.SessionStore<K,AGG>.public abstract findSessions( K, long, long ): KeyValueIterator","findSessions( K, long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.SessionStore<K,AGG>.public abstract put( Windowed, AGG ): void","put( Windowed, AGG ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.SessionStore<K,AGG>.public abstract remove( Windowed ): void",remove( Windowed ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.state.StateSerdes<K,V>",StateSerdes,low,low-medium,low-medium,medium-high,7,36,14,1,0,19,67,63,3,0,12,1,0,0.545,0.769,0.5,0,0,,,,,67,,,,,,19,,,,,,,
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public StateSerdes( String, Serde, Serde ): void","StateSerdes( String, Serde, Serde ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,3,3
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keyDeserializer( ): Deserializer",keyDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keyFrom( byte ): K",keyFrom( byte ): K,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keySerde( ): Serde",keySerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public keySerializer( ): Serializer",keySerializer( ): Serializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawKey( K ): byte",rawKey( K ): byte,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,7,2
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public rawValue( V ): byte",rawValue( V ): byte,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,19,1,12,2
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public static withBuiltinTypes( String, Class, Class ): StateSerdes","static withBuiltinTypes( String, Class, Class ): StateSerdes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public topic( ): String",topic( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueDeserializer( ): Deserializer",valueDeserializer( ): Deserializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueFrom( byte ): V",valueFrom( byte ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueSerde( ): Serde",valueSerde( ): Serde,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.StateSerdes<K,V>.public valueSerializer( ): Serializer",valueSerializer( ): Serializer,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Field>org.apache.kafka.streams.state.StateSerdes<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.StateSerdes<K,V>->topic",final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.StateSerdes<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.StoreBuilder<T>,StoreBuilder,low,low,low,low,0,8,0,1,2,8,9,8,0,0,8,0,0,0,0.437,0,0,0,,,,,9,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract build( ): T,build( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract logConfig( ): Map,logConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract loggingEnabled( ): boolean,loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withCachingDisabled( ): StoreBuilder,withCachingDisabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withCachingEnabled( ): StoreBuilder,withCachingEnabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withLoggingDisabled( ): StoreBuilder,withLoggingDisabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreBuilder<T>.public abstract withLoggingEnabled( Map ): StoreBuilder,withLoggingEnabled( Map ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.state.StoreSupplier<T>,StoreSupplier,low,low,low,low,0,3,0,1,3,3,4,3,0,0,3,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.StoreSupplier<T>.public abstract get( ): T,get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreSupplier<T>.public abstract metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.StoreSupplier<T>.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.Stores,Stores,low-medium,medium-high,low-medium,low-medium,17,24,7,1,0,29,160,159,0,0,0,18,0,0,0.678,0,0,0,,,,,160,,,,,,29,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$6206;,Lorg.apache.kafka.streams.state.Stores$6206;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$7508;,Lorg.apache.kafka.streams.state.Stores$7508;,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.state.Stores.public static inMemoryKeyValueStore( String ): KeyValueBytesStoreSupplier,static inMemoryKeyValueStore( String ): KeyValueBytesStoreSupplier,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,13,1,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static inMemorySessionStore( String, Duration ): SessionBytesStoreSupplier","static inMemorySessionStore( String, Duration ): SessionBytesStoreSupplier",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
"<Method>org.apache.kafka.streams.state.Stores.public static inMemoryWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier","static inMemoryWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,4,5,0
"<Method>org.apache.kafka.streams.state.Stores.public static keyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde ): StoreBuilder","static keyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static lruMap( String, int ): KeyValueBytesStoreSupplier","static lruMap( String, int ): KeyValueBytesStoreSupplier",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,2,1,0
<Method>org.apache.kafka.streams.state.Stores.public static persistentKeyValueStore( String ): KeyValueBytesStoreSupplier,static persistentKeyValueStore( String ): KeyValueBytesStoreSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static persistentSessionStore( String, Duration ): SessionBytesStoreSupplier","static persistentSessionStore( String, Duration ): SessionBytesStoreSupplier",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.streams.state.Stores.public static persistentSessionStore( String, long ): SessionBytesStoreSupplier","static persistentSessionStore( String, long ): SessionBytesStoreSupplier",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,0
<Method>org.apache.kafka.streams.state.Stores.public static persistentTimestampedKeyValueStore( String ): KeyValueBytesStoreSupplier,static persistentTimestampedKeyValueStore( String ): KeyValueBytesStoreSupplier,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static persistentTimestampedWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier","static persistentTimestampedWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static persistentWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier","static persistentWindowStore( String, Duration, Duration, boolean ): WindowBytesStoreSupplier",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,4,1,0
"<Method>org.apache.kafka.streams.state.Stores.private static persistentWindowStore( String, Duration, Duration, boolean, boolean ): WindowBytesStoreSupplier","static persistentWindowStore( String, Duration, Duration, boolean, boolean ): WindowBytesStoreSupplier",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,5,7,0
"<Method>org.apache.kafka.streams.state.Stores.public static persistentWindowStore( String, long, int, long, boolean ): WindowBytesStoreSupplier","static persistentWindowStore( String, long, int, long, boolean ): WindowBytesStoreSupplier",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,17,5,2,0
"<Method>org.apache.kafka.streams.state.Stores.private static persistentWindowStore( String, long, long, boolean, long, boolean ): WindowBytesStoreSupplier","static persistentWindowStore( String, long, long, boolean, long, boolean ): WindowBytesStoreSupplier",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,24,6,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static sessionStoreBuilder( SessionBytesStoreSupplier, Serde, Serde ): StoreBuilder","static sessionStoreBuilder( SessionBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static timestampedKeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde ): StoreBuilder","static timestampedKeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static timestampedWindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder","static timestampedWindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.state.Stores.public static windowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder","static windowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde ): StoreBuilder",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
org.apache.kafka.streams.state.StreamsMetadata,StreamsMetadata,low,low,low,low-medium,1,18,7,1,0,14,49,42,3,1,9,0,0,0.594,0.667,0.194,0,0,,,,,49,,,,,,14,,,,,,,
"<Method>org.apache.kafka.streams.state.StreamsMetadata.public StreamsMetadata( HostInfo, Set, Set ): void","StreamsMetadata( HostInfo, Set, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.streams.state.StreamsMetadata.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,12,1,5,6
<Method>org.apache.kafka.streams.state.StreamsMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,3
<Method>org.apache.kafka.streams.state.StreamsMetadata.public host( ): String,host( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.StreamsMetadata.public hostInfo( ): HostInfo,hostInfo( ): HostInfo,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.StreamsMetadata.public port( ): int,port( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.StreamsMetadata.public stateStoreNames( ): Set,stateStoreNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.StreamsMetadata.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,3
<Method>org.apache.kafka.streams.state.StreamsMetadata.public topicPartitions( ): Set,topicPartitions( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.StreamsMetadata->hostInfo,final hostInfo : HostInfo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.StreamsMetadata->stateStoreNames,final stateStoreNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.StreamsMetadata->topicPartitions,final topicPartitions : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.StreamsMetadata->NOT_AVAILABLE,static final NOT_AVAILABLE : StreamsMetadata,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.TimestampedBytesStore,TimestampedBytesStore,low,low,low,low,1,5,4,1,4,1,9,1,0,0,0,1,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.TimestampedBytesStore.public static convertToTimestampedFormat( byte ): byte,static convertToTimestampedFormat( byte ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,4,0
"org.apache.kafka.streams.state.TimestampedKeyValueStore<K,V>",TimestampedKeyValueStore,low,low,low,low,0,0,0,1,3,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.TimestampedWindowStore<K,V>",TimestampedWindowStore,low,low,low,low,0,0,0,1,3,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.streams.state.ValueAndTimestamp<V>,ValueAndTimestamp,low,low,low,low-medium,1,12,5,1,0,13,32,29,2,0,6,2,0,0.2,0.65,0.571,0,0,,,,,32,,,,,,13,,,,,,,
"<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.private ValueAndTimestamp( V, long ): void","ValueAndTimestamp( V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,2
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,3,4
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public static getValueOrNull( ValueAndTimestamp ): V,static getValueOrNull( ValueAndTimestamp ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
"<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public static make( V, long ): ValueAndTimestamp","static make( V, long ): ValueAndTimestamp",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,0,0
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.state.ValueAndTimestamp<V>.public value( ): V,value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.ValueAndTimestamp<V>->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.ValueAndTimestamp<V>->value,final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.WindowBytesStoreSupplier,WindowBytesStoreSupplier,low,low,low,low,0,5,0,1,2,5,7,5,0,0,5,0,0,0,0,0,0,0,,,,,7,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract retainDuplicates( ): boolean,retainDuplicates( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract segments( ): int,segments( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.WindowBytesStoreSupplier.public abstract windowSize( ): long,windowSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.WindowStore<K,V>",WindowStore,low,low,low,low,3,12,5,1,11,8,33,8,0,0,8,0,0,0,0.425,0,0,0,,,,,33,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public fetch( K, Instant, Instant ): WindowStoreIterator","fetch( K, Instant, Instant ): WindowStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,5,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public fetch( K, K, Instant, Instant ): KeyValueIterator","fetch( K, K, Instant, Instant ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,5,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract fetch( K, K, long, long ): KeyValueIterator","fetch( K, K, long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract fetch( K, long, long ): WindowStoreIterator","fetch( K, long, long ): WindowStoreIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public fetchAll( Instant, Instant ): KeyValueIterator","fetchAll( Instant, Instant ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,5,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.WindowStore<K,V>.public abstract put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
org.apache.kafka.streams.state.WindowStoreIterator<V>,WindowStoreIterator,low,low,low,low,0,1,0,1,7,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.WindowStoreIterator<V>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.streams.state.internals,org.apache.kafka.streams.state.internals,high,high,very-high,low,,,,,,1872,7646,,,,,,,,,,,,,141,122,19,7646,34,100,0.149,0.746,0.105,1872,,,,,,,
"org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>",AbstractMergedSortedCacheStoreIterator,low-medium,low,low-medium,medium-high,4,28,18,1,4,33,73,70,2,0,13,0,0,0.167,0.736,0,0,0,,,,,73,,,,,,33,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>. AbstractMergedSortedCacheStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void"," AbstractMergedSortedCacheStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract compare( Bytes, KS ): int","abstract compare( Bytes, KS ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,2,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract deserializeCacheKey( Bytes ): K",abstract deserializeCacheKey( Bytes ): K,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract deserializeCacheValue( LRUCacheEntry ): V",abstract deserializeCacheValue( LRUCacheEntry ): V,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract deserializeStoreKey( KS ): K",abstract deserializeStoreKey( KS ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.abstract deserializeStorePair( KeyValue ): KeyValue",abstract deserializeStorePair( KeyValue ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,9,0,11,9
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.private isDeletedCacheEntry( KeyValue ): boolean",isDeletedCacheEntry( KeyValue ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public next( ): KeyValue",next( ): KeyValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,0,12,5
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.private nextCacheValue( Bytes ): KeyValue",nextCacheValue( Bytes ): KeyValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,5,1
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.private nextStoreValue( KS ): KeyValue",nextStoreValue( KS ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,1
"<Method>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,0,12,5
"<Field>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>->cacheIterator",final cacheIterator : PeekingKeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<K,KS,V,VS>->storeIterator",final storeIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>,AbstractRocksDBSegmentedBytesStore,medium-high,medium-high,low-medium,high,18,149,43,1,2,30,175,149,9,1,18,0,0,0.781,0.823,0.397,0,0,,,,,175,,,,,,30,,,,,,,
org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.RocksDBSegmentsBatchingRestoreCallback,RocksDBSegmentsBatchingRestoreCallback,low,low,low,low,1,35,2,2,0,3,15,14,0,0,3,0,2,0,0.333,0,0,1.333,,,,,15,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>. AbstractRocksDBSegmentedBytesStore( String, String, KeySchema, AbstractSegments ): void"," AbstractRocksDBSegmentedBytesStore( String, String, KeySchema, AbstractSegments ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>. getSegments( ): List, getSegments( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>. getWriteBatches( Collection ): Map, getWriteBatches( Collection ): Map,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,19,1,12,12
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>. restoreAllInternal( Collection ): void, restoreAllInternal( Collection ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,6,1
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,3,2
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,4,8,6
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public fetch( Bytes, long, long ): KeyValueIterator","fetch( Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,5,5
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,3,2
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public flush( ): void,flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public get( Bytes ): byte,get( Bytes ): byte,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,3,2
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,2,10,10
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,2,7,9
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.public remove( Bytes ): void,remove( Bytes ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,4
<Method>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>.private toggleForBulkLoading( boolean ): void,toggleForBulkLoading( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,1
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->bulkLoadSegments,bulkLoadSegments : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->context,context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->expiredRecordSensor,expiredRecordSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->keySchema,final keySchema : KeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->metricScope,final metricScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->segments,final segments : AbstractSegments,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->observedStreamTime,observedStreamTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore<S>->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.AbstractSegments<S>,AbstractSegments,low-medium,low,low-medium,low,3,47,39,1,2,34,125,118,5,1,13,0,0,0.773,0.554,0.639,0,0,,,,,125,,,,,,34,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>. AbstractSegments( String, long, long ): void"," AbstractSegments( String, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,5
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public allSegments( ): List,allSegments( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,1
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.private cleanupEarlierThan( long ): void,cleanupEarlierThan( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,1,10,2
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,3,2
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,1
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public getOrCreateSegmentIfLive( long, InternalProcessorContext, long ): S","getOrCreateSegmentIfLive( long, InternalProcessorContext, long ): S",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,3,3,1
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public getSegmentForTimestamp( long ): S,getSegmentForTimestamp( long ): S,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public openExisting( InternalProcessorContext, long ): void","openExisting( InternalProcessorContext, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,6,20,2,10,3
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.private renameSegmentFile( File, String, long ): void","renameSegmentFile( File, String, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,2,0
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public segmentId( long ): long,segmentId( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.private segmentIdFromSegmentName( String, File ): long","segmentIdFromSegmentName( String, File ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,21,2,9,5
<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public segmentName( long ): String,segmentName( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
"<Method>org.apache.kafka.streams.state.internals.AbstractSegments<S>.public segments( long, long ): List","segments( long, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,11,2,6,1
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->formatter,final formatter : SimpleDateFormat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->segmentInterval,final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->segments,final segments : TreeMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.AbstractSegments<S>->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>",AbstractStoreBuilder,low,low,low,low-medium,2,10,2,1,5,8,46,38,7,0,8,0,0,0.878,0.7,0.75,0,0,,,,,46,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public AbstractStoreBuilder( String, Serde, Serde, Time ): void","AbstractStoreBuilder( String, Serde, Serde, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,2,4
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public logConfig( ): Map",logConfig( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public loggingEnabled( ): boolean",loggingEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public withCachingDisabled( ): StoreBuilder",withCachingDisabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public withCachingEnabled( ): StoreBuilder",withCachingEnabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public withLoggingDisabled( ): StoreBuilder",withLoggingDisabled( ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,2
"<Method>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>.public withLoggingEnabled( Map ): StoreBuilder",withLoggingEnabled( Map ): StoreBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,1,2
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->enableCaching", enableCaching : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->enableLogging", enableLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->name",final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K,V,T>->logConfig",logConfig : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.BufferKey,BufferKey,low,low,low,low-medium,1,13,5,1,0,11,32,29,2,0,7,0,0,0.167,0.686,0,0,0,,,,,32,,,,,,11,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.BufferKey. BufferKey( long, Bytes ): void"," BufferKey( long, Bytes ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.state.internals.BufferKey. key( ): Bytes, key( ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferKey. time( ): long, time( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferKey.public compareTo( BufferKey ): int,compareTo( BufferKey ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,2,4
<Method>org.apache.kafka.streams.state.internals.BufferKey.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,3,4
<Method>org.apache.kafka.streams.state.internals.BufferKey.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.state.internals.BufferKey.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Field>org.apache.kafka.streams.state.internals.BufferKey->key,final key : Bytes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferKey->time,final time : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.BufferValue,BufferValue,low-medium,low,low-medium,medium-high,1,35,16,1,0,31,107,100,4,2,10,3,0,0.611,0.731,0,0,0,,,,,107,,,,,,31,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.BufferValue. BufferValue( byte, byte, byte, ProcessorRecordContext ): void"," BufferValue( byte, byte, byte, ProcessorRecordContext ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,4,1,5
<Method>org.apache.kafka.streams.state.internals.BufferValue. context( ): ProcessorRecordContext, context( ): ProcessorRecordContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferValue. newValue( ): byte, newValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferValue. oldValue( ): byte, oldValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferValue. priorValue( ): byte, priorValue( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.BufferValue. residentMemorySizeEstimate( ): long, residentMemorySizeEstimate( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,5,0,1,9
<Method>org.apache.kafka.streams.state.internals.BufferValue. serialize( int ): ByteBuffer, serialize( int ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,2,24,1,9,17
<Method>org.apache.kafka.streams.state.internals.BufferValue.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,6,8
<Method>org.apache.kafka.streams.state.internals.BufferValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,4,4
"<Method>org.apache.kafka.streams.state.internals.BufferValue.private static addValue( ByteBuffer, byte ): void","static addValue( ByteBuffer, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,1
<Method>org.apache.kafka.streams.state.internals.BufferValue.static deserialize( ByteBuffer ): BufferValue,static deserialize( ByteBuffer ): BufferValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,5,2
<Method>org.apache.kafka.streams.state.internals.BufferValue.private static extractValue( ByteBuffer ): byte,static extractValue( ByteBuffer ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,2,1
<Method>org.apache.kafka.streams.state.internals.BufferValue.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,3,4
<Field>org.apache.kafka.streams.state.internals.BufferValue->newValue,final newValue : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferValue->oldValue,final oldValue : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferValue->priorValue,final priorValue : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferValue->recordContext,final recordContext : ProcessorRecordContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferValue->NULL_VALUE_SENTINEL,static final NULL_VALUE_SENTINEL : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.BufferValue->OLD_PREV_DUPLICATE_VALUE_SENTINEL,static final OLD_PREV_DUPLICATE_VALUE_SENTINEL : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.BulkLoadingStore,BulkLoadingStore,low,low,low,low,2,3,0,1,2,3,5,3,0,0,3,0,0,0,0.417,0,0,0,,,,,5,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.BulkLoadingStore.public abstract addToBatch( KeyValue, WriteBatch ): void","addToBatch( KeyValue, WriteBatch ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.state.internals.BulkLoadingStore.public abstract toggleDbForBulkLoading( boolean ): void,toggleDbForBulkLoading( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.state.internals.BulkLoadingStore.public abstract write( WriteBatch ): void,write( WriteBatch ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.state.internals.CacheFlushListener<K,V>",CacheFlushListener,low,low,low,low,0,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CacheFlushListener<K,V>.public abstract apply( K, V, V, long ): void","apply( K, V, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
org.apache.kafka.streams.state.internals.CacheFunction,CacheFunction,low,low,low,low,1,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.state.internals.CacheFunction.public abstract cacheKey( Bytes ): Bytes,cacheKey( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.state.internals.CacheFunction.public abstract key( Bytes ): Bytes,key( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.state.internals.CachedStateStore<K,V>",CachedStateStore,low,low,low,low,1,1,0,1,4,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachedStateStore<K,V>.public abstract setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.internals.CachingKeyValueStore,CachingKeyValueStore,high,medium-high,low-medium,high,17,174,53,2,0,33,183,172,7,1,18,0,0,0.808,0.808,0.576,0,0,,,,,183,,,,,,33,,,,,,,
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore. CachingKeyValueStore( KeyValueStore ): void, CachingKeyValueStore( KeyValueStore ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,5,2
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,0,7,2
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,9,0,3,2
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public delete( Bytes ): byte,delete( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,7,2
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.private deleteInternal( Bytes ): byte,deleteInternal( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public flush( ): void,flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,8,0,6,4
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public get( Bytes ): byte,get( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,1,9,3
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.private getInternal( Bytes ): byte,getInternal( Bytes ): byte,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,7,6
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,3,1
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.private initInternal( ProcessorContext ): void,initInternal( ProcessorContext ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,1,6,6
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,10,2,7,2
<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public putAll( List ): void,putAll( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,1,7,2
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.private putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void","putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,19,2,23,4
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public putIfAbsent( Bytes, byte ): byte","putIfAbsent( Bytes, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,2,8,2
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.private putInternal( Bytes, byte ): void","putInternal( Bytes, byte ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,2,6,7
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,2,7,3
"<Method>org.apache.kafka.streams.state.internals.CachingKeyValueStore.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,2
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->cache,cache : ThreadCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->cacheName,cacheName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->context,context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->lock,final lock : ReadWriteLock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->flushListener,flushListener : CacheFlushListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->sendOldValues,sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingKeyValueStore->streamThread,streamThread : Thread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.CachingSessionStore,CachingSessionStore,high,high,low-medium,medium-high,22,199,59,2,0,25,236,141,8,1,14,0,0,0.704,0.798,0.727,0,0,,,,,236,,,,,,25,,,,,,,
org.apache.kafka.streams.state.internals.CachingSessionStore.CacheIteratorWrapper,CacheIteratorWrapper,low,low,low,low,8,83,22,1,0,23,83,73,9,0,13,0,0,0.778,0.436,0,1,0,,,,,83,,,,,,23,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore. CachingSessionStore( SessionStore, long ): void"," CachingSessionStore( SessionStore, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,4
<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,2
<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public fetch( Bytes ): KeyValueIterator,fetch( Bytes ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public fetch( Bytes, Bytes ): KeyValueIterator","fetch( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,3,0
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public fetchSession( Bytes, long, long ): byte","fetchSession( Bytes, long, long ): byte",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,3,10,4
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public findSessions( Bytes, Bytes, long, long ): KeyValueIterator","findSessions( Bytes, Bytes, long, long ): KeyValueIterator",low,very-high,low,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,24,4,12,10
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public findSessions( Bytes, long, long ): KeyValueIterator","findSessions( Bytes, long, long ): KeyValueIterator",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,21,3,11,9
<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public flush( ): void,flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.private initInternal( InternalProcessorContext ): void,initInternal( InternalProcessorContext ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,1,4,5
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public put( Windowed, byte ): void","put( Windowed, byte ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,2,11,11
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.private putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void","putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,21,2,27,5
<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public remove( Windowed ): void,remove( Windowed ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
"<Method>org.apache.kafka.streams.state.internals.CachingSessionStore.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,2
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->cache,cache : ThreadCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->cacheName,cacheName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->context,context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->cacheFunction,final cacheFunction : SegmentedCacheFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->keySchema,final keySchema : SessionKeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->flushListener,flushListener : CacheFlushListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->maxObservedTimestamp,maxObservedTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->sendOldValues,sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingSessionStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.CachingWindowStore,CachingWindowStore,high,high,low-medium,medium-high,28,197,61,2,0,28,274,179,10,1,14,0,2,0.705,0.773,0.473,0,0.286,,,,,274,,,,,,28,,,,,,,
org.apache.kafka.streams.state.internals.CachingWindowStore.CacheIteratorWrapper,CacheIteratorWrapper,low,low,low,low,7,73,22,1,0,23,81,71,9,0,13,0,0,0.741,0.436,0,1,0,,,,,81,,,,,,23,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore. CachingWindowStore( WindowStore, long, long ): void"," CachingWindowStore( WindowStore, long, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,4
<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,4,5
<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,4,2
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,very-high,low-medium,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,31,4,14,13
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public fetch( Bytes, long ): byte","fetch( Bytes, long ): byte",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,2,9,4
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,5,7
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.private initInternal( InternalProcessorContext ): void,initInternal( InternalProcessorContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,14,1,9,7
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.private putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void","putAndMaybeForward( DirtyEntry, InternalProcessorContext ): void",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,24,2,25,6
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,2
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public synchronized fetch( Bytes, long, long ): WindowStoreIterator","synchronized fetch( Bytes, long, long ): WindowStoreIterator",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,20,3,11,9
<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public synchronized flush( ): void,synchronized flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,2
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public synchronized put( Bytes, byte ): void","synchronized put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,1
"<Method>org.apache.kafka.streams.state.internals.CachingWindowStore.public synchronized put( Bytes, byte, long ): void","synchronized put( Bytes, byte, long ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,3,11,11
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->bytesSerdes,bytesSerdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->cache,cache : ThreadCache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->context,context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->cacheFunction,final cacheFunction : SegmentedCacheFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->keySchema,final keySchema : KeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->flushListener,flushListener : CacheFlushListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->maxObservedTimestamp,maxObservedTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->name,name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->sendOldValues,sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.CachingWindowStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore,ChangeLoggingKeyValueBytesStore,low-medium,medium-high,low-medium,low-medium,10,33,18,2,1,14,57,53,1,0,11,0,0,0,0.688,1,0,0,,,,,57,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore. ChangeLoggingKeyValueBytesStore( KeyValueStore ): void, ChangeLoggingKeyValueBytesStore( KeyValueStore ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore. log( Bytes, byte ): void"," log( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public delete( Bytes ): byte,delete( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public get( Bytes ): byte,get( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,2,10,1
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public putAll( List ): void,putAll( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public putIfAbsent( Bytes, byte ): byte","putIfAbsent( Bytes, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore.public range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore->changeLogger, changeLogger : StoreChangeLogger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore,ChangeLoggingSessionBytesStore,low-medium,low-medium,low,low-medium,10,41,16,2,0,9,39,35,1,0,9,0,0,0,0.681,0.893,0,0,,,,,39,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore. ChangeLoggingSessionBytesStore( SessionStore ): void, ChangeLoggingSessionBytesStore( SessionStore ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public fetch( Bytes ): KeyValueIterator,fetch( Bytes ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public fetch( Bytes, Bytes ): KeyValueIterator","fetch( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public fetchSession( Bytes, long, long ): byte","fetchSession( Bytes, long, long ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public findSessions( Bytes, Bytes, long, long ): KeyValueIterator","findSessions( Bytes, Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,4,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public findSessions( Bytes, long, long ): KeyValueIterator","findSessions( Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,7,1
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public put( Windowed, byte ): void","put( Windowed, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,4,1
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore.public remove( Windowed ): void,remove( Windowed ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,1
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingSessionBytesStore->changeLogger,changeLogger : StoreChangeLogger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedKeyValueBytesStore,ChangeLoggingTimestampedKeyValueBytesStore,low-medium,low,low,low,4,13,4,3,0,3,10,9,0,0,2,0,1,0,0.375,0,0,1.5,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedKeyValueBytesStore. ChangeLoggingTimestampedKeyValueBytesStore( KeyValueStore ): void, ChangeLoggingTimestampedKeyValueBytesStore( KeyValueStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedKeyValueBytesStore. log( Bytes, byte ): void"," log( Bytes, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,2
org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedWindowBytesStore,ChangeLoggingTimestampedWindowBytesStore,low-medium,low,low,low,4,13,4,3,0,3,11,10,0,0,2,0,1,0,0.4,0,0,1.5,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedWindowBytesStore. ChangeLoggingTimestampedWindowBytesStore( WindowStore, boolean ): void"," ChangeLoggingTimestampedWindowBytesStore( WindowStore, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingTimestampedWindowBytesStore. log( Bytes, byte ): void"," log( Bytes, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,2
org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore,ChangeLoggingWindowBytesStore,low-medium,low-medium,low-medium,low-medium,10,39,19,2,1,12,63,56,4,0,11,0,0,0.813,0.67,0.964,0,0,,,,,63,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore. ChangeLoggingWindowBytesStore( WindowStore, boolean ): void"," ChangeLoggingWindowBytesStore( WindowStore, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,1
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore. log( Bytes, byte ): void"," log( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public fetch( Bytes, long ): byte","fetch( Bytes, long ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public fetch( Bytes, long, long ): WindowStoreIterator","fetch( Bytes, long, long ): WindowStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,0
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,7,2
<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.private maybeUpdateSeqnumForDups( ): int,maybeUpdateSeqnumForDups( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,4
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore.public put( Bytes, byte, long ): void","put( Bytes, byte, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,5,0
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->changeLogger, changeLogger : StoreChangeLogger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->context,context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ChangeLoggingWindowBytesStore->seqnum,seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>",CompositeKeyValueIterator,low,low,low,low,2,9,6,1,0,10,28,24,3,0,5,0,0,0.556,0.533,0.5,0,0,,,,,28,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>. CompositeKeyValueIterator( Iterator, NextIteratorFunction ): void"," CompositeKeyValueIterator( Iterator, NextIteratorFunction ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,3
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,0,6,8
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public next( ): KeyValue",next( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
"<Method>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>->current",current : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>->nextIteratorFunction",final nextIteratorFunction : NextIteratorFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeKeyValueIterator<K,V,StoreType>->storeIterator",final storeIterator : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>",CompositeReadOnlyKeyValueStore,low,low-medium,low-medium,low,7,10,5,1,0,10,57,53,3,0,5,0,0,0,0.6,0,0,0,,,,,57,,,,,,10,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2961;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$2961;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3917;,Lorg.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore$3917;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public CompositeReadOnlyKeyValueStore( StateStoreProvider, QueryableStoreType, String ): void","CompositeReadOnlyKeyValueStore( StateStoreProvider, QueryableStoreType, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,12,0,2,4
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,2,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,3,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>.public range( K, K ): KeyValueIterator","range( K, K ): KeyValueIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,14,2,4,4
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>->storeProvider",final storeProvider : StateStoreProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyKeyValueStore<K,V>->storeType",final storeType : QueryableStoreType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>",CompositeReadOnlySessionStore,low,low-medium,low,low,8,11,8,1,0,6,36,32,3,0,3,0,0,0,0.467,0,0,0,,,,,36,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>.public CompositeReadOnlySessionStore( StateStoreProvider, QueryableStoreType, String ): void","CompositeReadOnlySessionStore( StateStoreProvider, QueryableStoreType, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>.public fetch( K ): KeyValueIterator",fetch( K ): KeyValueIterator,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,17,1,7,4
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>.public fetch( K, K ): KeyValueIterator","fetch( K, K ): KeyValueIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,4,4
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>->queryableStoreType",final queryableStoreType : QueryableStoreType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlySessionStore<K,V>->storeProvider",final storeProvider : StateStoreProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>",CompositeReadOnlyWindowStore,low,low-medium,low-medium,low-medium,10,21,13,1,0,15,104,100,3,0,9,0,0,0,0.619,0.583,0,0,,,,,104,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public CompositeReadOnlyWindowStore( StateStoreProvider, QueryableStoreType, String ): void","CompositeReadOnlyWindowStore( StateStoreProvider, QueryableStoreType, String ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,2,4
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetch( K, Instant, Instant ): WindowStoreIterator","fetch( K, Instant, Instant ): WindowStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,5,0
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetch( K, K, Instant, Instant ): KeyValueIterator","fetch( K, K, Instant, Instant ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,5,0
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetch( K, K, long, long ): KeyValueIterator","fetch( K, K, long, long ): KeyValueIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,4,4,4
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetch( K, long ): V","fetch( K, long ): V",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,14,2,3,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetch( K, long, long ): WindowStoreIterator","fetch( K, long, long ): WindowStoreIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,19,3,6,3
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetchAll( Instant, Instant ): KeyValueIterator","fetchAll( Instant, Instant ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,5,0
"<Method>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,2,4
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>->provider",final provider : StateStoreProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.CompositeReadOnlyWindowStore<K,V>->windowStoreType",final windowStoreType : QueryableStoreType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ContextualRecord,ContextualRecord,low,low,low-medium,medium-high,1,31,14,1,0,16,52,49,2,0,8,1,0,0.143,0.741,0.067,0,0,,,,,52,,,,,,16,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ContextualRecord. residentMemorySizeEstimate( ): long, residentMemorySizeEstimate( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,0,1,3
<Method>org.apache.kafka.streams.state.internals.ContextualRecord. serialize( int ): ByteBuffer, serialize( int ): ByteBuffer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,6,6
"<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public ContextualRecord( byte, ProcessorRecordContext ): void","ContextualRecord( byte, ProcessorRecordContext ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,2
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,4,4
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public recordContext( ): ProcessorRecordContext,recordContext( ): ProcessorRecordContext,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.static deserialize( ByteBuffer ): ContextualRecord,static deserialize( ByteBuffer ): ContextualRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,3,0
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,1,2
<Method>org.apache.kafka.streams.state.internals.ContextualRecord.public value( ): byte,value( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.internals.ContextualRecord->recordContext,final recordContext : ProcessorRecordContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ContextualRecord->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>",DelegatingPeekingKeyValueIterator,low,low,low,low,2,10,5,1,0,12,39,34,4,0,6,0,0,0.65,0.556,0.4,0,0,,,,,39,,,,,,12,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public DelegatingPeekingKeyValueIterator( String, KeyValueIterator ): void","DelegatingPeekingKeyValueIterator( String, KeyValueIterator ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public peekNext( ): KeyValue",peekNext( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized close( ): void",synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,2
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized hasNext( ): boolean",synchronized hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,3,6
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized next( ): KeyValue",synchronized next( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,1,2
"<Method>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>.public synchronized peekNextKey( ): K",synchronized peekNextKey( ): K,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
"<Field>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>->underlying",final underlying : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>->next",next : KeyValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.FilteredCacheIterator,FilteredCacheIterator,low,low,low,low-medium,4,10,5,1,0,9,48,44,3,0,6,0,0,0.583,0.625,0.7,0,0,,,,,48,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.FilteredCacheIterator$1632;,Lorg.apache.kafka.streams.state.internals.FilteredCacheIterator$1632;,low,low,low,low,0,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,,,,,18,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator. FilteredCacheIterator( PeekingKeyValueIterator, HasNextCondition, CacheFunction ): void"," FilteredCacheIterator( PeekingKeyValueIterator, HasNextCondition, CacheFunction ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,24,3,0,3
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public next( ): KeyValue,next( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public peekNext( ): KeyValue,peekNext( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Method>org.apache.kafka.streams.state.internals.FilteredCacheIterator.public peekNextKey( ): Bytes,peekNextKey( ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Field>org.apache.kafka.streams.state.internals.FilteredCacheIterator->cacheIterator,final cacheIterator : PeekingKeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.FilteredCacheIterator->hasNextCondition,final hasNextCondition : HasNextCondition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.FilteredCacheIterator->wrappedIterator,final wrappedIterator : PeekingKeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.GlobalStateStoreProvider,GlobalStateStoreProvider,low,low,low,low,5,7,5,1,0,9,17,15,1,0,2,0,0,0,0.375,0,0,0,,,,,17,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.state.internals.GlobalStateStoreProvider.public GlobalStateStoreProvider( Map ): void,GlobalStateStoreProvider( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.GlobalStateStoreProvider.public stores( String, QueryableStoreType ): List","stores( String, QueryableStoreType ): List",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,13,2,7,1
<Field>org.apache.kafka.streams.state.internals.GlobalStateStoreProvider->globalStateStores,final globalStateStores : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.HasNextCondition,HasNextCondition,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.HasNextCondition.public abstract hasNext( KeyValueIterator ): boolean,hasNext( KeyValueIterator ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.state.internals.InMemoryKeyValueStore,InMemoryKeyValueStore,low-medium,low-medium,low-medium,medium-high,8,26,12,1,0,23,89,67,4,1,15,0,0,0.72,0.752,0.724,0,0,,,,,89,,,,,,23,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.InMemoryKeyValueIterator,InMemoryKeyValueIterator,low,low,low,low,2,11,6,1,0,5,16,14,1,0,5,0,0,0,0.4,0.833,0,0,,,,,16,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public InMemoryKeyValueStore( String ): void,InMemoryKeyValueStore( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,3
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,2
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public putAll( List ): void,putAll( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,0
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized all( ): KeyValueIterator,synchronized all( ): KeyValueIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,2
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized delete( Bytes ): byte,synchronized delete( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,1,2
<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized get( Bytes ): byte,synchronized get( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized put( Bytes, byte ): void","synchronized put( Bytes, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,6,2,2,4
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized putIfAbsent( Bytes, byte ): byte","synchronized putIfAbsent( Bytes, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,2,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore.public synchronized range( Bytes, Bytes ): KeyValueIterator","synchronized range( Bytes, Bytes ): KeyValueIterator",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,5,3
<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore->map,final map : NavigableMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore->size,size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryKeyValueStore->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier,InMemorySessionBytesStoreSupplier,low,low,low,low,2,6,1,1,0,6,22,19,2,0,6,0,0,0.333,0.556,0.667,0,0,,,,,22,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public InMemorySessionBytesStoreSupplier( String, long ): void","InMemorySessionBytesStoreSupplier( String, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public get( ): SessionStore,get( ): SessionStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier.public segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.InMemorySessionStore,InMemorySessionStore,medium-high,medium-high,low-medium,medium-high,13,106,37,1,0,30,227,133,8,1,16,0,0,0.795,0.764,0.564,0,0,,,,,227,,,,,,30,,,,,,,
org.apache.kafka.streams.state.internals.InMemorySessionStore.ClosingCallback,ClosingCallback,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.InMemorySessionStore.InMemorySessionStoreIterator,InMemorySessionStoreIterator,low,low,low,low,5,19,14,1,0,22,82,71,10,0,10,0,0,0.8,0.72,0,0,0,,,,,82,,,,,,22,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore. InMemorySessionStore( String, long, String ): void"," InMemorySessionStore( String, long, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,0,6,8
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public fetch( Bytes ): KeyValueIterator,fetch( Bytes ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,5,1
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public fetch( Bytes, Bytes ): KeyValueIterator","fetch( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,6,1
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public fetchSession( Bytes, long, long ): byte","fetchSession( Bytes, long, long ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,3,5,3
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public findSessions( Bytes, Bytes, long, long ): KeyValueIterator","findSessions( Bytes, Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,18,4,10,2
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public findSessions( Bytes, long, long ): KeyValueIterator","findSessions( Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,3,6,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,2,7,4
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public put( Windowed, byte ): void","put( Windowed, byte ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,16,2,16,8
"<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.private registerNewIterator( Bytes, Bytes, long, Iterator ): InMemorySessionStoreIterator","registerNewIterator( Bytes, Bytes, long, Iterator ): InMemorySessionStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,1,1
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.public remove( Windowed ): void,remove( Windowed ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,1,15,2
<Method>org.apache.kafka.streams.state.internals.InMemorySessionStore.private removeExpiredSegments( ): void,removeExpiredSegments( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,4
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->expiredRecordSensor,expiredRecordSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->endTimeMap,final endTimeMap : ConcurrentNavigableMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->metricScope,final metricScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->openIterators,final openIterators : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->observedStreamTime,observedStreamTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemorySessionStore->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>",InMemoryTimeOrderedKeyValueBuffer,high,high,medium-high,high,29,184,88,1,0,58,359,299,18,5,22,1,0,0.85,0.87,0.549,0,0,,,,,359,,,,,,58,,,,,,,
"org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer.Builder<K,V>",Builder,low,low,low,low,1,10,1,1,0,9,34,29,4,0,9,0,0,0.625,0.667,0.833,0,0,,,,,34,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private InMemoryTimeOrderedKeyValueBuffer( String, boolean, Serde, Serde ): void","InMemoryTimeOrderedKeyValueBuffer( String, boolean, Serde, Serde ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,1,4
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public bufferSize( ): long",bufferSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private cleanPut( long, Bytes, BufferValue ): void","cleanPut( long, Bytes, BufferValue ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,3,8,9
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,0,5,10
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public evictWhile( Supplier, Consumer ): void","evictWhile( Supplier, Consumer ): void",low,medium-high,low-medium,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,35,2,36,12
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public flush( ): void",flush( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,5,5
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private getBuffered( Bytes ): BufferValue",getBuffered( Bytes ): BufferValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,2,2
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,27,2,13,22
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private internalPriorValueForBuffered( Bytes ): byte",internalPriorValueForBuffered( Bytes ): byte,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,2
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private logTombstone( Bytes ): void",logTombstone( Bytes ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,1,1,5
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private logValue( Bytes, BufferKey, BufferValue ): void","logValue( Bytes, BufferKey, BufferValue ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,14,3,5,6
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public minTimestamp( ): long",minTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public numRecords( ): int",numRecords( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public priorValueForBuffered( K ): Maybe",priorValueForBuffered( K ): Maybe,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,1,11,5
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public put( long, K, Change, ProcessorRecordContext ): void","put( long, K, Change, ProcessorRecordContext ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,23,4,14,7
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private restoreBatch( Collection ): void",restoreBatch( Collection ): void,low-medium,medium-high,medium-high,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,5,80,1,60,15
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public setSerdesIfNull( Serde, Serde ): void","setSerdesIfNull( Serde, Serde ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,2,1,6
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private static computeRecordSize( Bytes, BufferValue ): long","static computeRecordSize( Bytes, BufferValue ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,2,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.public toString( ): String",toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,0,0,9
"<Method>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>.private updateBufferMetrics( ): void",updateBufferMetrics( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,3,4
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->bufferCountSensor",bufferCountSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->bufferSizeSensor",bufferSizeSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->changelogTopic",changelogTopic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->collector",collector : RecordCollector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->dirtyKeys",final dirtyKeys : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->index",final index : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->loggingEnabled",final loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->sortedMap",final sortedMap : TreeMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->storeName",final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->keySerde",keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->memBufferSize",memBufferSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->minTimestamp",minTimestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->partition",partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->KEY_SERIALIZER",static final KEY_SERIALIZER : BytesSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->METRIC_SCOPE",static final METRIC_SCOPE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->VALUE_SERIALIZER",static final VALUE_SERIALIZER : ByteArraySerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->V_1_CHANGELOG_HEADERS",static final V_1_CHANGELOG_HEADERS : RecordHeaders,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->V_2_CHANGELOG_HEADERS",static final V_2_CHANGELOG_HEADERS : RecordHeaders,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->streamsMetrics",streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->taskId",taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->threadId",threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->valueSerde",valueSerde : FullChangeSerde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.InMemoryTimeOrderedKeyValueBuffer<K,V>->open",volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier,InMemoryWindowBytesStoreSupplier,low,low,low,low-medium,2,10,1,1,0,10,50,45,4,0,10,0,0,0.5,0.675,0.667,0,0,,,,,50,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public InMemoryWindowBytesStoreSupplier( String, long, long, boolean ): void","InMemoryWindowBytesStoreSupplier( String, long, long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public get( ): WindowStore,get( ): WindowStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,1,4
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public retainDuplicates( ): boolean,retainDuplicates( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public segments( ): int,segments( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,4
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier.public windowSize( ): long,windowSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowBytesStoreSupplier->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowStore,InMemoryWindowStore,medium-high,medium-high,low-medium,medium-high,12,114,44,1,0,41,291,165,12,2,18,2,0,0.832,0.78,0.641,0,0,,,,,291,,,,,,41,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowStore.ClosingCallback,ClosingCallback,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowStore.InMemoryWindowStoreIteratorWrapper,InMemoryWindowStoreIteratorWrapper,low,low,low,low,3,20,13,1,2,20,60,50,9,0,6,0,0,0.667,0.667,0,0,0,,,,,60,,,,,,20,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowStore.WrappedInMemoryWindowStoreIterator,WrappedInMemoryWindowStoreIterator,low,low,low,low,3,20,1,2,0,6,21,20,0,0,3,1,0,0,0.6,0,0,0,,,,,21,,,,,,6,,,,,,,
org.apache.kafka.streams.state.internals.InMemoryWindowStore.WrappedWindowedKeyValueIterator,WrappedWindowedKeyValueIterator,low,low,low,low,6,21,4,2,0,8,28,26,1,0,4,0,0,0,0.625,1,0,0,,,,,28,,,,,,8,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore. InMemoryWindowStore( String, long, long, boolean, String ): void"," InMemoryWindowStore( String, long, long, boolean, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,5,0,5
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,5,3
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,5,7
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,19,4,12,4
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public fetch( Bytes, long ): byte","fetch( Bytes, long ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,2,4,3
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public fetch( Bytes, long, long ): WindowStoreIterator","fetch( Bytes, long, long ): WindowStoreIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,3,8,3
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,2,7,3
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,18,2,7,6
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private maybeUpdateSeqnumForDups( ): void,maybeUpdateSeqnumForDups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,3
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.public put( Bytes, byte, long ): void","put( Bytes, byte, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,20,3,10,11
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private registerNewWindowStoreIterator( Bytes, Iterator ): WrappedInMemoryWindowStoreIterator","registerNewWindowStoreIterator( Bytes, Iterator ): WrappedInMemoryWindowStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,2,3,5
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private registerNewWindowedKeyValueIterator( Bytes, Bytes, Iterator ): WrappedWindowedKeyValueIterator","registerNewWindowedKeyValueIterator( Bytes, Bytes, Iterator ): WrappedWindowedKeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,14,3,3,6
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private removeExpiredSegments( ): void,removeExpiredSegments( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,5,4
<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private static getKey( Bytes ): Bytes,static getKey( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,1
"<Method>org.apache.kafka.streams.state.internals.InMemoryWindowStore.private static wrapForDups( Bytes, int ): Bytes","static wrapForDups( Bytes, int ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,7,1
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->context,context : InternalProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->expiredRecordSensor,expiredRecordSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->metricScope,final metricScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->openIterators,final openIterators : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->segmentMap,final segmentMap : ConcurrentNavigableMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->observedStreamTime,observedStreamTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->seqnum,seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->SEQNUM_SIZE,static final SEQNUM_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.InMemoryWindowStore->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>",KeyValueIteratorFacade,low,low,low,low,2,12,6,1,0,5,17,15,1,0,5,0,0,0,0.4,0,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>.public KeyValueIteratorFacade( KeyValueIterator ): void",KeyValueIteratorFacade( KeyValueIterator ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>.public next( ): KeyValue",next( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>.public peekNextKey( ): K",peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Field>org.apache.kafka.streams.state.internals.KeyValueIteratorFacade<K,V>->innerIterator",final innerIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueIterators,KeyValueIterators,low,low,low,low,2,2,0,1,0,2,23,6,0,2,0,2,0,1,0,0,0,0,,,,,23,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.internals.KeyValueIterators.EmptyKeyValueIterator<K,V>",EmptyKeyValueIterator,low,low,low,low,1,4,0,1,1,4,12,11,0,0,4,0,0,0,0,0,0,0,,,,,12,,,,,,4,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueIterators.EmptyWindowStoreIterator<V>,EmptyWindowStoreIterator,low,low,low,low,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.state.internals.KeyValueIterators.static emptyIterator( ): KeyValueIterator,static emptyIterator( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.KeyValueIterators.static emptyWindowStoreIterator( ): WindowStoreIterator,static emptyWindowStoreIterator( ): WindowStoreIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.KeyValueIterators->EMPTY_ITERATOR,static final EMPTY_ITERATOR : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.KeyValueIterators->EMPTY_WINDOW_STORE_ITERATOR,static final EMPTY_WINDOW_STORE_ITERATOR : WindowStoreIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueSegment,KeyValueSegment,medium-high,low,low,medium-high,3,141,6,2,0,9,30,28,1,0,7,0,0,0,0.735,0.6,0,0,,,,,30,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.KeyValueSegment. KeyValueSegment( String, String, long, RocksDBMetricsRecorder ): void"," KeyValueSegment( String, String, long, RocksDBMetricsRecorder ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,1
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public compareTo( KeyValueSegment ): int,compareTo( KeyValueSegment ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public destroy( ): void,destroy( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,2
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public openDB( ProcessorContext ): void,openDB( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueSegment.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.KeyValueSegment->id,final id : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueSegments,KeyValueSegments,medium-high,low,low,low,3,137,7,2,0,4,20,18,1,0,2,0,0,0,0.25,0,0,0,,,,,20,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.KeyValueSegments. KeyValueSegments( String, String, long, long ): void"," KeyValueSegments( String, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueSegments.public getOrCreateSegment( long, InternalProcessorContext ): KeyValueSegment","getOrCreateSegment( long, InternalProcessorContext ): KeyValueSegment",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,2,5,5
<Field>org.apache.kafka.streams.state.internals.KeyValueSegments->metricsRecorder,final metricsRecorder : RocksDBMetricsRecorder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>",KeyValueStoreBuilder,low-medium,low-medium,low,low,7,8,6,2,0,6,25,23,1,0,4,0,0,0,0.55,0,0,0,,,,,25,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>.public KeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde, Time ): void","KeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde, Time ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>.public build( ): KeyValueStore",build( ): KeyValueStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,4,5
"<Method>org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>.private maybeWrapCaching( KeyValueStore ): KeyValueStore",maybeWrapCaching( KeyValueStore ): KeyValueStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>.private maybeWrapLogging( KeyValueStore ): KeyValueStore",maybeWrapLogging( KeyValueStore ): KeyValueStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Field>org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K,V>->storeSupplier",final storeSupplier : KeyValueBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter,KeyValueToTimestampedKeyValueByteStoreAdapter,low,low-medium,low-medium,medium-high,8,35,15,1,0,20,56,54,1,0,15,0,0,0,0.752,0.143,0,0,,,,,56,,,,,,20,,,,,,,
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter. KeyValueToTimestampedKeyValueByteStoreAdapter( KeyValueStore ): void, KeyValueToTimestampedKeyValueByteStoreAdapter( KeyValueStore ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public delete( Bytes ): byte,delete( Bytes ): byte,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public get( Bytes ): byte,get( Bytes ): byte,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,2,2,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public putAll( List ): void,putAll( List ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,1,2,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public putIfAbsent( Bytes, byte ): byte","putIfAbsent( Bytes, byte ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,3,1
"<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter.public range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Field>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter->store,final store : KeyValueStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>,KeyValueToTimestampedKeyValueIteratorAdapter,low,low,low,low,2,15,6,1,1,5,17,15,1,0,5,0,0,0,0.4,0,0,0,,,,,17,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>. KeyValueToTimestampedKeyValueIteratorAdapter( KeyValueIterator ): void, KeyValueToTimestampedKeyValueIteratorAdapter( KeyValueIterator ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>.public next( ): KeyValue,next( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
<Method>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>.public peekNextKey( ): K,peekNextKey( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueIteratorAdapter<K>->innerIterator,final innerIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.LRUCacheEntry,LRUCacheEntry,low,low,low,medium-high,3,19,7,1,0,12,44,40,3,0,9,0,0,0.571,0.764,0,0,0,,,,,44,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. LRUCacheEntry( byte ): void, LRUCacheEntry( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. LRUCacheEntry( byte, Headers, boolean, long, long, int, String ): void"," LRUCacheEntry( byte, Headers, boolean, long, long, int, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,7,1,4
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. isDirty( ): boolean, isDirty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. markClean( ): void, markClean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. size( ): long, size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry. value( ): byte, value( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public context( ): ProcessorRecordContext,context( ): ProcessorRecordContext,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,5,4
<Method>org.apache.kafka.streams.state.internals.LRUCacheEntry.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->record,final record : ContextualRecord,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->sizeBytes,final sizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.LRUCacheEntry->isDirty,isDirty : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Maybe<T>,Maybe,low,low,low,low,1,12,3,1,0,16,36,33,2,0,7,2,0,0.083,0.556,0.524,0,0,,,,,36,,,,,,16,,,,,,,
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.private Maybe( ): void,Maybe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.private Maybe( T ): void,Maybe( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,3,5
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public getNullableValue( ): T,getNullableValue( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,2
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,0,1,3
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public isDefined( ): boolean,isDefined( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public static defined( T ): Maybe,static defined( T ): Maybe,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public static undefined( ): Maybe,static undefined( ): Maybe,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.state.internals.Maybe<T>.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,2
<Field>org.apache.kafka.streams.state.internals.Maybe<T>->defined,final defined : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Maybe<T>->nullableValue,final nullableValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.MemoryLRUCache,MemoryLRUCache,low,low-medium,low-medium,high,5,23,9,1,1,20,79,71,5,0,17,0,0,0.867,0.804,0.895,0,0,,,,,79,,,,,,20,,,,,,,
org.apache.kafka.streams.state.internals.MemoryLRUCache.EldestEntryRemovalListener,EldestEntryRemovalListener,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$2150;,Lorg.apache.kafka.streams.state.internals.MemoryLRUCache$2150;,low,low,low,low,0,0,0,4,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache. MemoryLRUCache( String, int ): void"," MemoryLRUCache( String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,11,2,0,2
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache. setWhenEldestRemoved( EldestEntryRemovalListener ): void, setWhenEldestRemoved( EldestEntryRemovalListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,2,1,0
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public putAll( List ): void,putAll( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,0
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public synchronized delete( Bytes ): byte,synchronized delete( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public synchronized get( Bytes ): byte,synchronized get( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public synchronized put( Bytes, byte ): void","synchronized put( Bytes, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,1
"<Method>org.apache.kafka.streams.state.internals.MemoryLRUCache.public synchronized putIfAbsent( Bytes, byte ): byte","synchronized putIfAbsent( Bytes, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache->map,final map : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache->listener,listener : EldestEntryRemovalListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache->restoring,restoring : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MemoryLRUCache->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache,MemoryNavigableLRUCache,low-medium,low,low,low,5,12,8,2,0,5,40,19,0,1,4,0,2,0,0.562,1,0,1,,,,,40,,,,,,5,,,,,,,
org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.CacheIterator,CacheIterator,low,low,low,low,2,8,3,1,0,5,19,15,3,0,5,0,0,0.5,0.533,0.833,0,0,,,,,19,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.public MemoryNavigableLRUCache( String, int ): void","MemoryNavigableLRUCache( String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
"<Method>org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.public range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,2,8,1
<Method>org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache.private synchronized toTreeMap( ): TreeMap,synchronized toTreeMap( ): TreeMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator,MergedSortedCacheKeyValueBytesStoreIterator,low-medium,low,low,low-medium,5,10,2,2,0,6,19,18,0,0,6,0,0,0,0.639,0,0,0,,,,,19,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator. MergedSortedCacheKeyValueBytesStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void"," MergedSortedCacheKeyValueBytesStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator. deserializeCacheKey( Bytes ): Bytes, deserializeCacheKey( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator. deserializeCacheValue( LRUCacheEntry ): byte, deserializeCacheValue( LRUCacheEntry ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator.public compare( Bytes, Bytes ): int","compare( Bytes, Bytes ): int",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator.public deserializeStoreKey( Bytes ): Bytes,deserializeStoreKey( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheKeyValueBytesStoreIterator.public deserializeStorePair( KeyValue ): KeyValue,deserializeStorePair( KeyValue ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator,MergedSortedCacheSessionStoreIterator,low-medium,low-medium,low,low-medium,9,34,8,2,0,6,26,24,1,0,6,0,0,0,0.687,1,0,0,,,,,26,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator. MergedSortedCacheSessionStoreIterator( PeekingKeyValueIterator, KeyValueIterator, SegmentedCacheFunction ): void"," MergedSortedCacheSessionStoreIterator( PeekingKeyValueIterator, KeyValueIterator, SegmentedCacheFunction ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,1
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator. deserializeCacheKey( Bytes ): Windowed, deserializeCacheKey( Bytes ): Windowed,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,5,1
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator. deserializeCacheValue( LRUCacheEntry ): byte, deserializeCacheValue( LRUCacheEntry ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator.public compare( Bytes, Windowed ): int","compare( Bytes, Windowed ): int",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator.public deserializeStoreKey( Windowed ): Windowed,deserializeStoreKey( Windowed ): Windowed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator.public deserializeStorePair( KeyValue ): KeyValue,deserializeStorePair( KeyValue ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.streams.state.internals.MergedSortedCacheSessionStoreIterator->cacheFunction,final cacheFunction : SegmentedCacheFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator,MergedSortedCacheWindowStoreIterator,low-medium,low-medium,low,low-medium,7,15,4,2,0,6,22,21,0,0,6,0,0,0,0.667,0,0,0,,,,,22,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator. MergedSortedCacheWindowStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void"," MergedSortedCacheWindowStoreIterator( PeekingKeyValueIterator, KeyValueIterator ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator. deserializeCacheKey( Bytes ): Long, deserializeCacheKey( Bytes ): Long,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator. deserializeCacheValue( LRUCacheEntry ): byte, deserializeCacheValue( LRUCacheEntry ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator.public compare( Bytes, Long ): int","compare( Bytes, Long ): int",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator.public deserializeStoreKey( Long ): Long,deserializeStoreKey( Long ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator.public deserializeStorePair( KeyValue ): KeyValue,deserializeStorePair( KeyValue ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator,MergedSortedCacheWindowStoreKeyValueIterator,low-medium,low-medium,low,medium-high,10,41,11,2,0,6,33,28,3,0,6,0,0,0.333,0.717,0,0,0,,,,,33,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. MergedSortedCacheWindowStoreKeyValueIterator( PeekingKeyValueIterator, KeyValueIterator, StateSerdes, long, SegmentedCacheFunction ): void"," MergedSortedCacheWindowStoreKeyValueIterator( PeekingKeyValueIterator, KeyValueIterator, StateSerdes, long, SegmentedCacheFunction ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,0,3
"<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. compare( Bytes, Windowed ): int"," compare( Bytes, Windowed ): int",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,5,1
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. deserializeCacheKey( Bytes ): Windowed, deserializeCacheKey( Bytes ): Windowed,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,5,4
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. deserializeCacheValue( LRUCacheEntry ): byte, deserializeCacheValue( LRUCacheEntry ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. deserializeStoreKey( Windowed ): Windowed, deserializeStoreKey( Windowed ): Windowed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator. deserializeStorePair( KeyValue ): KeyValue, deserializeStorePair( KeyValue ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator->cacheFunction,final cacheFunction : SegmentedCacheFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator->serdes,final serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>",MeteredKeyValueStore,medium-high,medium-high,low-medium,high,16,140,37,2,1,28,157,111,16,0,17,0,1,0.884,0.833,0.636,0,0.118,,,,,157,,,,,,28,,,,,,,
org.apache.kafka.streams.state.internals.MeteredKeyValueStore.MeteredKeyValueIterator,MeteredKeyValueIterator,low,low,low,low,5,35,10,1,0,5,27,23,3,0,5,0,0,0.5,0.533,0,0,0,,,,,27,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>. MeteredKeyValueStore( KeyValueStore, String, Time, Serde, Serde ): void"," MeteredKeyValueStore( KeyValueStore, String, Time, Serde, Serde ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,5,2,5
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>. initStoreSerde( ProcessorContext ): void", initStoreSerde( ProcessorContext ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,5
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,23,47
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.private innerEntries( List ): List",innerEntries( List ): List,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,5,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.private keyBytes( K ): Bytes",keyBytes( K ): Bytes,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.private outerValue( byte ): V",outerValue( byte ): V,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,1
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,3,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public putAll( List ): void",putAll( List ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public putIfAbsent( K, V ): V","putIfAbsent( K, V ): V",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public range( K, K ): KeyValueIterator","range( K, K ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,6,3
"<Method>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,2,2,0
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->serdes", serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->allSensor",allSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->deleteSensor",deleteSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->metricsScope",final metricsScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->threadId",final threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->flushSensor",flushSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->getSensor",getSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->putAllSensor",putAllSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->putIfAbsentSensor",putIfAbsentSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->putSensor",putSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->rangeSensor",rangeSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->streamsMetrics",streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K,V>->taskId",taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>",MeteredSessionStore,medium-high,medium-high,low-medium,high,17,126,32,2,0,21,166,151,12,0,13,0,1,0.75,0.805,0.255,0,0.154,,,,,166,,,,,,21,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>. MeteredSessionStore( SessionStore, String, Serde, Serde, Time ): void"," MeteredSessionStore( SessionStore, String, Serde, Serde, Time ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,2,5
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public fetch( K ): KeyValueIterator",fetch( K ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,1,4,4
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public fetch( K, K ): KeyValueIterator","fetch( K, K ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,6,4
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public fetchSession( K, long, long ): V","fetchSession( K, long, long ): V",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,14,3,2,2
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public findSessions( K, K, long, long ): KeyValueIterator","findSessions( K, K, long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,19,4,6,4
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public findSessions( K, long, long ): KeyValueIterator","findSessions( K, long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,3,4,4
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,17,2,19,32
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.private keyBytes( K ): Bytes",keyBytes( K ): Bytes,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public put( Windowed, V ): void","put( Windowed, V ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,16,2,5,2
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public remove( Windowed ): void",remove( Windowed ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,15,1,5,2
"<Method>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,2,2,0
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->fetchSensor",fetchSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->metricsScope",final metricsScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->threadId",final threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->flushSensor",flushSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->putSensor",putSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->removeSensor",removeSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->serdes",serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->streamsMetrics",streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredSessionStore<K,V>->taskId",taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore<K,V>",MeteredTimestampedKeyValueStore,low-medium,low-medium,low,low,8,8,5,3,0,4,15,12,0,0,2,0,1,0,0.417,0,0,1.5,,,,,15,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore<K,V>. MeteredTimestampedKeyValueStore( KeyValueStore, String, Time, Serde, Serde ): void"," MeteredTimestampedKeyValueStore( KeyValueStore, String, Time, Serde, Serde ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore<K,V>. initStoreSerde( ProcessorContext ): void", initStoreSerde( ProcessorContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,5
"org.apache.kafka.streams.state.internals.MeteredTimestampedWindowStore<K,V>",MeteredTimestampedWindowStore,low-medium,low-medium,low,low,8,8,5,3,0,4,17,14,0,0,2,0,1,0,0.429,0,0,1.5,,,,,17,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredTimestampedWindowStore<K,V>. MeteredTimestampedWindowStore( WindowStore, long, String, Time, Serde, Serde ): void"," MeteredTimestampedWindowStore( WindowStore, long, String, Time, Serde, Serde ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,6,0,0
"<Method>org.apache.kafka.streams.state.internals.MeteredTimestampedWindowStore<K,V>. initStoreSerde( ProcessorContext ): void", initStoreSerde( ProcessorContext ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,5,5
"org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>",MeteredWindowStore,medium-high,medium-high,low-medium,medium-high,18,125,32,2,1,21,140,124,13,0,14,0,1,0.795,0.78,0.382,0,0.143,,,,,140,,,,,,21,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>. MeteredWindowStore( WindowStore, long, String, Time, Serde, Serde ): void"," MeteredWindowStore( WindowStore, long, String, Time, Serde, Serde ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,6,2,6
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>. initStoreSerde( ProcessorContext ): void", initStoreSerde( ProcessorContext ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,1,5,5
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,4
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public close( ): void",close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,3
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public fetch( K, K, long, long ): KeyValueIterator","fetch( K, K, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,4,4,4
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public fetch( K, long ): V","fetch( K, long ): V",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,13,2,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public fetch( K, long, long ): WindowStoreIterator","fetch( K, long, long ): WindowStoreIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,3,3,4
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,2,2,4
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,2,13,23
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.private keyBytes( K ): Bytes",keyBytes( K ): Bytes,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,3,3,2
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,15,2,2,0
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->serdes", serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->context",context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->fetchSensor",fetchSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->keySerde",final keySerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->metricsScope",final metricsScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->threadId",final threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->valueSerde",final valueSerde : Serde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->windowSizeMs",final windowSizeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->flushSensor",flushSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->putSensor",putSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->streamsMetrics",streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowStore<K,V>->taskId",taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>,MeteredWindowStoreIterator,low,low,low,low-medium,5,32,8,1,0,5,34,27,6,0,5,0,0,0.667,0.667,0,0,0,,,,,34,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>. MeteredWindowStoreIterator( WindowStoreIterator, Sensor, StreamsMetrics, StateSerdes, Time ): void"," MeteredWindowStoreIterator( WindowStoreIterator, Sensor, StreamsMetrics, StateSerdes, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,1,6
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,3,4
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public next( ): KeyValue,next( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,2
<Method>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>.public peekNextKey( ): Long,peekNextKey( ): Long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->iter,final iter : WindowStoreIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->metrics,final metrics : StreamsMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->sensor,final sensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->serdes,final serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->startNs,final startNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator<V>->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>",MeteredWindowedKeyValueIterator,low,low-medium,low,medium-high,7,37,13,1,0,6,37,30,6,0,6,0,0,0.7,0.714,0,0,0,,,,,37,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>. MeteredWindowedKeyValueIterator( KeyValueIterator, Sensor, StreamsMetrics, StateSerdes, Time ): void"," MeteredWindowedKeyValueIterator( KeyValueIterator, Sensor, StreamsMetrics, StateSerdes, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,5,1,6
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public close( ): void",close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,3,4
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public next( ): KeyValue",next( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,4,2
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.public peekNextKey( ): Windowed",peekNextKey( ): Windowed,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
"<Method>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>.private windowedKey( Windowed ): Windowed",windowedKey( Windowed ): Windowed,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,4,1
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->iter",final iter : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->metrics",final metrics : StreamsMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->sensor",final sensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->serdes",final serdes : StateSerdes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->startNs",final startNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K,V>->time",final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Murmur3,Murmur3,low-medium,low,medium-high,low,0,24,12,1,0,48,330,242,0,16,0,20,0,0.861,0.52,0.567,0,0,,,,,330,,,,,,48,,,,,,,
org.apache.kafka.streams.state.internals.Murmur3.IncrementalHash32,IncrementalHash32,low,low,low,low,0,6,3,1,0,14,70,65,4,0,3,0,0,0.125,0.333,0,0,0,,,,,70,,,,,,14,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.Murmur3.private static fmix32( int, int ): int","static fmix32( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,2,0,0
<Method>org.apache.kafka.streams.state.internals.Murmur3.private static fmix64( long ): long,static fmix64( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,0,0
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash128( byte ): long,static hash128( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash128( byte, int, int, int ): long","static hash128( byte, int, int, int ): long",low-medium,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,17,2,87,4,8,18
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( byte ): int,static hash32( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( byte, int ): int","static hash32( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( byte, int, int ): int","static hash32( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,0
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( byte, int, int, int ): int","static hash32( byte, int, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,24,4,3,3
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( long ): int,static hash32( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( long, int ): int","static hash32( long, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,4,0
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( long, long ): int","static hash32( long, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash32( long, long, int ): int","static hash32( long, long, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,7,0
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( byte ): long,static hash64( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( byte, int, int ): long","static hash64( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
"<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( byte, int, int, int ): long","static hash64( byte, int, int, int ): long",low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,42,4,4,9
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( int ): long,static hash64( int ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,1,3,4
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( long ): long,static hash64( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,4,7
<Method>org.apache.kafka.streams.state.internals.Murmur3.public static hash64( short ): long,static hash64( short ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,1,2,4
"<Method>org.apache.kafka.streams.state.internals.Murmur3.private static mix32( int, int ): int","static mix32( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,6
"<Method>org.apache.kafka.streams.state.internals.Murmur3.private static orBytes( byte, byte, byte, byte ): int","static orBytes( byte, byte, byte, byte ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,4,0,0
<Field>org.apache.kafka.streams.state.internals.Murmur3->C1,static final C1 : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->C1_32,static final C1_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->C2,static final C2 : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->C2_32,static final C2_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->DEFAULT_SEED,static final DEFAULT_SEED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->M,static final M : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->M_32,static final M_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->N1,static final N1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->N2,static final N2 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->NULL_HASHCODE,static final NULL_HASHCODE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->N_32,static final N_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->R1,static final R1 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->R1_32,static final R1_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->R2,static final R2 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->R2_32,static final R2_32 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.Murmur3->R3,static final R3 : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache,NamedCache,medium-high,low-medium,low-medium,high,10,130,46,1,0,56,207,166,15,1,30,0,0,0.899,0.826,0,1,0,,,,,207,,,,,,56,,,,,,,
org.apache.kafka.streams.state.internals.NamedCache.LRUNode,LRUNode,low,low,low,low,2,9,2,1,0,7,24,19,4,0,7,0,0,0.792,0.524,0,0,0,,,,,24,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.NamedCache. NamedCache( String, StreamsMetricsImpl ): void"," NamedCache( String, StreamsMetricsImpl ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,5,7
<Method>org.apache.kafka.streams.state.internals.NamedCache.final synchronized name( ): String,final synchronized name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private flush( LRUNode ): void,flush( LRUNode ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,26,1,19,11
<Method>org.apache.kafka.streams.state.internals.NamedCache.private getInternal( Bytes ): LRUNode,getInternal( Bytes ): LRUNode,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,2,7
<Method>org.apache.kafka.streams.state.internals.NamedCache.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private keySetIterator( Set ): Iterator,keySetIterator( Set ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.private putHead( LRUNode ): void,putHead( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,0,7
<Method>org.apache.kafka.streams.state.internals.NamedCache.private remove( LRUNode ): void,remove( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,1,0,2
<Method>org.apache.kafka.streams.state.internals.NamedCache.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized allKeys( ): Iterator,synchronized allKeys( ): Iterator,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized close( ): void,synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,5,9
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized delete( Bytes ): LRUCacheEntry,synchronized delete( Bytes ): LRUCacheEntry,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,5,3
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized evict( ): void,synchronized evict( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,5,4
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized first( ): LRUCacheEntry,synchronized first( ): LRUCacheEntry,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,2
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flush( ): void,synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized flushes( ): long,synchronized flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized get( Bytes ): LRUCacheEntry,synchronized get( Bytes ): LRUCacheEntry,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,2,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized head( ): LRUNode,synchronized head( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized hits( ): long,synchronized hits( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized keyRange( Bytes, Bytes ): Iterator","synchronized keyRange( Bytes, Bytes ): Iterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized last( ): LRUCacheEntry,synchronized last( ): LRUCacheEntry,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,2
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized misses( ): long,synchronized misses( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized overwrites( ): long,synchronized overwrites( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized put( Bytes, LRUCacheEntry ): void","synchronized put( Bytes, LRUCacheEntry ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,22,2,13,9
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized putAll( List ): void,synchronized putAll( List ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,0
"<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized putIfAbsent( Bytes, LRUCacheEntry ): LRUCacheEntry","synchronized putIfAbsent( Bytes, LRUCacheEntry ): LRUCacheEntry",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized setListener( DirtyEntryFlushListener ): void,synchronized setListener( DirtyEntryFlushListener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized sizeInBytes( ): long,synchronized sizeInBytes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.synchronized tail( ): LRUNode,synchronized tail( ): LRUNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.NamedCache.private updateLRU( LRUNode ): void,updateLRU( LRUNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Field>org.apache.kafka.streams.state.internals.NamedCache->currentSizeBytes,currentSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->cache,final cache : NavigableMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->dirtyKeys,final dirtyKeys : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->hitRatioSensor,final hitRatioSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->storeName,final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->streamsMetrics,final streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->taskName,final taskName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->head,head : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->listener,listener : DirtyEntryFlushListener,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numOverwrites,numOverwrites : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadHits,numReadHits : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->numReadMisses,numReadMisses : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.NamedCache->tail,tail : LRUNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.NextIteratorFunction<K,V,StoreType>",NextIteratorFunction,low,low,low,low,1,1,0,1,2,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.NextIteratorFunction<K,V,StoreType>.public abstract apply( StoreType ): KeyValueIterator",apply( StoreType ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.state.internals.OffsetCheckpoint,OffsetCheckpoint,low,low,low-medium,medium-high,3,41,32,1,0,16,76,70,2,3,8,0,0,0.7,0.75,0,0,0,,,,,76,,,,,,16,,,,,,,
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public OffsetCheckpoint( File ): void,OffsetCheckpoint( File ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public delete( ): void,delete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,1
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public read( ): Map,read( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,6,27,0,15,3
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.private readInt( BufferedReader ): int,readInt( BufferedReader ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,0
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public toString( ): String,toString( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.public write( Map ): void,write( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,17,1,20,7
"<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.private writeEntry( BufferedWriter, TopicPartition, long ): void","writeEntry( BufferedWriter, TopicPartition, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,10,0
"<Method>org.apache.kafka.streams.state.internals.OffsetCheckpoint.private writeIntLine( BufferedWriter, int ): void","writeIntLine( BufferedWriter, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->file,final file : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->lock,final lock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->VERSION,static final VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.OffsetCheckpoint->WHITESPACE_MINIMUM_ONCE,static final WHITESPACE_MINIMUM_ONCE : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.OrderedBytes,OrderedBytes,low,low,low,low,1,12,10,1,0,5,25,23,0,1,0,2,0,0,0,0,0,0,,,,,25,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.OrderedBytes.static lowerRange( Bytes, byte ): Bytes","static lowerRange( Bytes, byte ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,2,6,0
"<Method>org.apache.kafka.streams.state.internals.OrderedBytes.static upperRange( Bytes, byte ): Bytes","static upperRange( Bytes, byte ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,2,9,1
<Field>org.apache.kafka.streams.state.internals.OrderedBytes->MIN_KEY_LENGTH,static final MIN_KEY_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K,V>",PeekingKeyValueIterator,low,low,low,low,1,1,0,1,6,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K,V>.public abstract peekNext( ): KeyValue",peekNext( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.state.internals.QueryableStoreProvider,QueryableStoreProvider,low,low,low,low,5,12,6,1,0,5,20,17,2,0,2,0,0,0,0.4,0,0,0,,,,,20,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.QueryableStoreProvider.public QueryableStoreProvider( List, GlobalStateStoreProvider ): void","QueryableStoreProvider( List, GlobalStateStoreProvider ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
"<Method>org.apache.kafka.streams.state.internals.QueryableStoreProvider.public getStore( String, QueryableStoreType ): T","getStore( String, QueryableStoreType ): T",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,2,8,4
<Field>org.apache.kafka.streams.state.internals.QueryableStoreProvider->globalStoreProvider,final globalStoreProvider : GlobalStateStoreProvider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.QueryableStoreProvider->storeProviders,final storeProviders : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>",ReadOnlyKeyValueStoreFacade,low,low,low,low,4,11,5,1,1,5,17,15,1,0,5,0,0,0,0.467,0,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>.protected ReadOnlyKeyValueStoreFacade( TimestampedKeyValueStore ): void",ReadOnlyKeyValueStoreFacade( TimestampedKeyValueStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>.public approximateNumEntries( ): long",approximateNumEntries( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>.public get( K ): V",get( K ): V,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>.public range( K, K ): KeyValueIterator","range( K, K ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Field>org.apache.kafka.streams.state.internals.ReadOnlyKeyValueStoreFacade<K,V>->inner",final inner : TimestampedKeyValueStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>",ReadOnlyWindowStoreFacade,low,low,low-medium,low,5,23,9,1,1,9,63,44,1,0,9,0,0,0,0.511,0,0,0,,,,,63,,,,,,9,,,,,,,
org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade.WindowStoreIteratorFacade<V>,WindowStoreIteratorFacade,low,low,low,low,3,12,6,1,0,5,17,15,1,0,5,0,0,0,0.4,0,0,0,,,,,17,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.protected ReadOnlyWindowStoreFacade( TimestampedWindowStore ): void",ReadOnlyWindowStoreFacade( TimestampedWindowStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public all( ): KeyValueIterator",all( ): KeyValueIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetch( K, Instant, Instant ): WindowStoreIterator","fetch( K, Instant, Instant ): WindowStoreIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetch( K, K, Instant, Instant ): KeyValueIterator","fetch( K, K, Instant, Instant ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetch( K, K, long, long ): KeyValueIterator","fetch( K, K, long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetch( K, long ): V","fetch( K, long ): V",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetch( K, long, long ): WindowStoreIterator","fetch( K, long, long ): WindowStoreIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetchAll( Instant, Instant ): KeyValueIterator","fetchAll( Instant, Instant ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,1
"<Method>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,1
"<Field>org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade<K,V>->inner",final inner : TimestampedWindowStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RecordConverter,RecordConverter,low,low,low,low,1,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RecordConverter.public abstract convert( ConsumerRecord ): ConsumerRecord,convert( ConsumerRecord ): ConsumerRecord,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.state.internals.RecordConverters,RecordConverters,low,low,low,low,1,3,0,1,0,3,31,5,0,2,1,2,0,1,0,1,0,0,,,,,31,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RecordConverters.private RecordConverters( ): void,RecordConverters( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.internals.RecordConverters.public static identity( ): RecordConverter,static identity( ): RecordConverter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.RecordConverters.public static rawValueToTimestampedValue( ): RecordConverter,static rawValueToTimestampedValue( ): RecordConverter,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.internals.RecordConverters->IDENTITY_INSTANCE,static final IDENTITY_INSTANCE : RecordConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RecordConverters->RAW_TO_TIMESTAMED_INSTANCE,static final RAW_TO_TIMESTAMED_INSTANCE : RecordConverter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter,RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter,very-high,high,very-high,very-high,26,468,235,5,0,235,843,839,2,1,233,1,230,0.657,0.955,0.481,0,4.936,,,,,843,,,,,,235,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter. RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter( DBOptions, ColumnFamilyOptions ): void"," RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter( DBOptions, ColumnFamilyOptions ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public accessHintOnCompactionStart( ): AccessHint,accessHintOnCompactionStart( ): AccessHint,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public adviseRandomOnOpen( ): boolean,adviseRandomOnOpen( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public allow2pc( ): boolean,allow2pc( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public allowConcurrentMemtableWrite( ): boolean,allowConcurrentMemtableWrite( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public allowFAllocate( ): boolean,allowFAllocate( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public allowMmapReads( ): boolean,allowMmapReads( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public allowMmapWrites( ): boolean,allowMmapWrites( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public arenaBlockSize( ): long,arenaBlockSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public avoidFlushDuringRecovery( ): boolean,avoidFlushDuringRecovery( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public avoidFlushDuringShutdown( ): boolean,avoidFlushDuringShutdown( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public baseBackgroundCompactions( ): int,baseBackgroundCompactions( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public bloomLocality( ): int,bloomLocality( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public bottommostCompressionType( ): CompressionType,bottommostCompressionType( ): CompressionType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public bytesPerSync( ): long,bytesPerSync( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compactionOptionsFIFO( ): CompactionOptionsFIFO,compactionOptionsFIFO( ): CompactionOptionsFIFO,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compactionOptionsUniversal( ): CompactionOptionsUniversal,compactionOptionsUniversal( ): CompactionOptionsUniversal,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compactionPriority( ): CompactionPriority,compactionPriority( ): CompactionPriority,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compactionReadaheadSize( ): long,compactionReadaheadSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compactionStyle( ): CompactionStyle,compactionStyle( ): CompactionStyle,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compressionOptions( ): CompressionOptions,compressionOptions( ): CompressionOptions,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compressionPerLevel( ): List,compressionPerLevel( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public compressionType( ): CompressionType,compressionType( ): CompressionType,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public createIfMissing( ): boolean,createIfMissing( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public createMissingColumnFamilies( ): boolean,createMissingColumnFamilies( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public dbLogDir( ): String,dbLogDir( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public dbPaths( ): List,dbPaths( ): List,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public dbWriteBufferSize( ): long,dbWriteBufferSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public delayedWriteRate( ): long,delayedWriteRate( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public deleteObsoleteFilesPeriodMicros( ): long,deleteObsoleteFilesPeriodMicros( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public disableAutoCompactions( ): boolean,disableAutoCompactions( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public dumpMallocStats( ): boolean,dumpMallocStats( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public enableThreadTracking( ): boolean,enableThreadTracking( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public enableWriteThreadAdaptiveYield( ): boolean,enableWriteThreadAdaptiveYield( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public errorIfExists( ): boolean,errorIfExists( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public failIfOptionsFileError( ): boolean,failIfOptionsFileError( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public forceConsistencyChecks( ): boolean,forceConsistencyChecks( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public getEnv( ): Env,getEnv( ): Env,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public hardPendingCompactionBytesLimit( ): long,hardPendingCompactionBytesLimit( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public infoLogLevel( ): InfoLogLevel,infoLogLevel( ): InfoLogLevel,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public inplaceUpdateNumLocks( ): long,inplaceUpdateNumLocks( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public inplaceUpdateSupport( ): boolean,inplaceUpdateSupport( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public isFdCloseOnExec( ): boolean,isFdCloseOnExec( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public keepLogFileNum( ): long,keepLogFileNum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public level0FileNumCompactionTrigger( ): int,level0FileNumCompactionTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public level0SlowdownWritesTrigger( ): int,level0SlowdownWritesTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public level0StopWritesTrigger( ): int,level0StopWritesTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public levelCompactionDynamicLevelBytes( ): boolean,levelCompactionDynamicLevelBytes( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public levelZeroFileNumCompactionTrigger( ): int,levelZeroFileNumCompactionTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public levelZeroSlowdownWritesTrigger( ): int,levelZeroSlowdownWritesTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public levelZeroStopWritesTrigger( ): int,levelZeroStopWritesTrigger( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public logFileTimeToRoll( ): long,logFileTimeToRoll( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public manifestPreallocationSize( ): long,manifestPreallocationSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBackgroundCompactions( ): int,maxBackgroundCompactions( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBackgroundFlushes( ): int,maxBackgroundFlushes( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBackgroundJobs( ): int,maxBackgroundJobs( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBytesForLevelBase( ): long,maxBytesForLevelBase( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBytesForLevelMultiplier( ): double,maxBytesForLevelMultiplier( ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxBytesForLevelMultiplierAdditional( ): int,maxBytesForLevelMultiplierAdditional( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxCompactionBytes( ): long,maxCompactionBytes( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxFileOpeningThreads( ): int,maxFileOpeningThreads( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxLogFileSize( ): long,maxLogFileSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxManifestFileSize( ): long,maxManifestFileSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxOpenFiles( ): int,maxOpenFiles( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxSequentialSkipInIterations( ): long,maxSequentialSkipInIterations( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxSubcompactions( ): int,maxSubcompactions( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxSuccessiveMerges( ): long,maxSuccessiveMerges( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxTableFilesSizeFIFO( ): long,maxTableFilesSizeFIFO( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxTotalWalSize( ): long,maxTotalWalSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxWriteBufferNumber( ): int,maxWriteBufferNumber( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public maxWriteBufferNumberToMaintain( ): int,maxWriteBufferNumberToMaintain( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public memTableConfig( ): MemTableConfig,memTableConfig( ): MemTableConfig,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public memTableFactoryName( ): String,memTableFactoryName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public memtableHugePageSize( ): long,memtableHugePageSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public memtablePrefixBloomSizeRatio( ): double,memtablePrefixBloomSizeRatio( ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public minWriteBufferNumberToMerge( ): int,minWriteBufferNumberToMerge( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public newTableReaderForCompactionInputs( ): boolean,newTableReaderForCompactionInputs( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public numLevels( ): int,numLevels( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeFiltersForHits( ): boolean,optimizeFiltersForHits( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeForPointLookup( long ): Options,optimizeForPointLookup( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeForSmallDb( ): Options,optimizeForSmallDb( ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeLevelStyleCompaction( ): Options,optimizeLevelStyleCompaction( ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeLevelStyleCompaction( long ): Options,optimizeLevelStyleCompaction( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeUniversalStyleCompaction( ): Options,optimizeUniversalStyleCompaction( ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public optimizeUniversalStyleCompaction( long ): Options,optimizeUniversalStyleCompaction( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public paranoidChecks( ): boolean,paranoidChecks( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public paranoidFileChecks( ): boolean,paranoidFileChecks( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public prepareForBulkLoad( ): Options,prepareForBulkLoad( ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,5,5
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public randomAccessMaxBufferSize( ): long,randomAccessMaxBufferSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public recycleLogFileNum( ): long,recycleLogFileNum( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public reportBgIoStats( ): boolean,reportBgIoStats( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public rowCache( ): Cache,rowCache( ): Cache,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAccessHintOnCompactionStart( AccessHint ): Options,setAccessHintOnCompactionStart( AccessHint ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAdviseRandomOnOpen( boolean ): Options,setAdviseRandomOnOpen( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAllow2pc( boolean ): Options,setAllow2pc( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAllowConcurrentMemtableWrite( boolean ): Options,setAllowConcurrentMemtableWrite( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAllowFAllocate( boolean ): Options,setAllowFAllocate( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAllowMmapReads( boolean ): Options,setAllowMmapReads( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAllowMmapWrites( boolean ): Options,setAllowMmapWrites( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setArenaBlockSize( long ): Options,setArenaBlockSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAvoidFlushDuringRecovery( boolean ): Options,setAvoidFlushDuringRecovery( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setAvoidFlushDuringShutdown( boolean ): Options,setAvoidFlushDuringShutdown( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setBaseBackgroundCompactions( int ): void,setBaseBackgroundCompactions( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setBloomLocality( int ): Options,setBloomLocality( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setBottommostCompressionType( CompressionType ): Options,setBottommostCompressionType( CompressionType ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setBytesPerSync( long ): Options,setBytesPerSync( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionFilter( AbstractCompactionFilter ): Options,setCompactionFilter( AbstractCompactionFilter ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionFilterFactory( AbstractCompactionFilterFactory ): Options,setCompactionFilterFactory( AbstractCompactionFilterFactory ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionOptionsFIFO( CompactionOptionsFIFO ): Options,setCompactionOptionsFIFO( CompactionOptionsFIFO ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionOptionsUniversal( CompactionOptionsUniversal ): Options,setCompactionOptionsUniversal( CompactionOptionsUniversal ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionPriority( CompactionPriority ): Options,setCompactionPriority( CompactionPriority ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionReadaheadSize( long ): Options,setCompactionReadaheadSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompactionStyle( CompactionStyle ): Options,setCompactionStyle( CompactionStyle ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setComparator( AbstractComparator ): Options,setComparator( AbstractComparator ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setComparator( BuiltinComparator ): Options,setComparator( BuiltinComparator ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompressionOptions( CompressionOptions ): Options,setCompressionOptions( CompressionOptions ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompressionPerLevel( List ): Options,setCompressionPerLevel( List ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCompressionType( CompressionType ): Options,setCompressionType( CompressionType ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCreateIfMissing( boolean ): Options,setCreateIfMissing( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setCreateMissingColumnFamilies( boolean ): Options,setCreateMissingColumnFamilies( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDbLogDir( String ): Options,setDbLogDir( String ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDbPaths( Collection ): Options,setDbPaths( Collection ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDbWriteBufferSize( long ): Options,setDbWriteBufferSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDelayedWriteRate( long ): Options,setDelayedWriteRate( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDeleteObsoleteFilesPeriodMicros( long ): Options,setDeleteObsoleteFilesPeriodMicros( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDisableAutoCompactions( boolean ): Options,setDisableAutoCompactions( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setDumpMallocStats( boolean ): Options,setDumpMallocStats( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setEnableThreadTracking( boolean ): Options,setEnableThreadTracking( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setEnableWriteThreadAdaptiveYield( boolean ): Options,setEnableWriteThreadAdaptiveYield( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setEnv( Env ): Options,setEnv( Env ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setErrorIfExists( boolean ): Options,setErrorIfExists( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setFailIfOptionsFileError( boolean ): Options,setFailIfOptionsFileError( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setForceConsistencyChecks( boolean ): Options,setForceConsistencyChecks( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setHardPendingCompactionBytesLimit( long ): Options,setHardPendingCompactionBytesLimit( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setIncreaseParallelism( int ): Options,setIncreaseParallelism( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setInfoLogLevel( InfoLogLevel ): Options,setInfoLogLevel( InfoLogLevel ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setInplaceUpdateNumLocks( long ): Options,setInplaceUpdateNumLocks( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setInplaceUpdateSupport( boolean ): Options,setInplaceUpdateSupport( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setIsFdCloseOnExec( boolean ): Options,setIsFdCloseOnExec( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setKeepLogFileNum( long ): Options,setKeepLogFileNum( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevel0FileNumCompactionTrigger( int ): Options,setLevel0FileNumCompactionTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevel0SlowdownWritesTrigger( int ): Options,setLevel0SlowdownWritesTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevel0StopWritesTrigger( int ): Options,setLevel0StopWritesTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevelCompactionDynamicLevelBytes( boolean ): Options,setLevelCompactionDynamicLevelBytes( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevelZeroFileNumCompactionTrigger( int ): Options,setLevelZeroFileNumCompactionTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevelZeroSlowdownWritesTrigger( int ): Options,setLevelZeroSlowdownWritesTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLevelZeroStopWritesTrigger( int ): Options,setLevelZeroStopWritesTrigger( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLogFileTimeToRoll( long ): Options,setLogFileTimeToRoll( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setLogger( Logger ): Options,setLogger( Logger ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setManifestPreallocationSize( long ): Options,setManifestPreallocationSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBackgroundCompactions( int ): Options,setMaxBackgroundCompactions( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBackgroundFlushes( int ): Options,setMaxBackgroundFlushes( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBackgroundJobs( int ): Options,setMaxBackgroundJobs( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBytesForLevelBase( long ): Options,setMaxBytesForLevelBase( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBytesForLevelMultiplier( double ): Options,setMaxBytesForLevelMultiplier( double ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxBytesForLevelMultiplierAdditional( int ): Options,setMaxBytesForLevelMultiplierAdditional( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxCompactionBytes( long ): Options,setMaxCompactionBytes( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxFileOpeningThreads( int ): Options,setMaxFileOpeningThreads( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxLogFileSize( long ): Options,setMaxLogFileSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxManifestFileSize( long ): Options,setMaxManifestFileSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxOpenFiles( int ): Options,setMaxOpenFiles( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxSequentialSkipInIterations( long ): Options,setMaxSequentialSkipInIterations( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxSubcompactions( int ): void,setMaxSubcompactions( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxSuccessiveMerges( long ): Options,setMaxSuccessiveMerges( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxTableFilesSizeFIFO( long ): Options,setMaxTableFilesSizeFIFO( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxTotalWalSize( long ): Options,setMaxTotalWalSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxWriteBufferNumber( int ): Options,setMaxWriteBufferNumber( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMaxWriteBufferNumberToMaintain( int ): Options,setMaxWriteBufferNumberToMaintain( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMemTableConfig( MemTableConfig ): Options,setMemTableConfig( MemTableConfig ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMemtableHugePageSize( long ): Options,setMemtableHugePageSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMemtablePrefixBloomSizeRatio( double ): Options,setMemtablePrefixBloomSizeRatio( double ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMergeOperator( MergeOperator ): Options,setMergeOperator( MergeOperator ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMergeOperatorName( String ): Options,setMergeOperatorName( String ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setMinWriteBufferNumberToMerge( int ): Options,setMinWriteBufferNumberToMerge( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setNewTableReaderForCompactionInputs( boolean ): Options,setNewTableReaderForCompactionInputs( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setNumLevels( int ): Options,setNumLevels( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setOptimizeFiltersForHits( boolean ): Options,setOptimizeFiltersForHits( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setParanoidChecks( boolean ): Options,setParanoidChecks( boolean ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setParanoidFileChecks( boolean ): Options,setParanoidFileChecks( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setRandomAccessMaxBufferSize( long ): Options,setRandomAccessMaxBufferSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setRateLimiter( RateLimiter ): Options,setRateLimiter( RateLimiter ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setRecycleLogFileNum( long ): Options,setRecycleLogFileNum( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setReportBgIoStats( boolean ): Options,setReportBgIoStats( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setRowCache( Cache ): Options,setRowCache( Cache ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setSkipStatsUpdateOnDbOpen( boolean ): Options,setSkipStatsUpdateOnDbOpen( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setSoftPendingCompactionBytesLimit( long ): Options,setSoftPendingCompactionBytesLimit( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setSstFileManager( SstFileManager ): Options,setSstFileManager( SstFileManager ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setStatistics( Statistics ): Options,setStatistics( Statistics ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setStatsDumpPeriodSec( int ): Options,setStatsDumpPeriodSec( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setTableCacheNumshardbits( int ): Options,setTableCacheNumshardbits( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setTableFormatConfig( TableFormatConfig ): Options,setTableFormatConfig( TableFormatConfig ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setTargetFileSizeBase( long ): Options,setTargetFileSizeBase( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setTargetFileSizeMultiplier( int ): Options,setTargetFileSizeMultiplier( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setUseAdaptiveMutex( boolean ): Options,setUseAdaptiveMutex( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setUseDirectIoForFlushAndCompaction( boolean ): Options,setUseDirectIoForFlushAndCompaction( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setUseDirectReads( boolean ): Options,setUseDirectReads( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setUseFsync( boolean ): Options,setUseFsync( boolean ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWalBytesPerSync( long ): Options,setWalBytesPerSync( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWalDir( String ): Options,setWalDir( String ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWalRecoveryMode( WALRecoveryMode ): Options,setWalRecoveryMode( WALRecoveryMode ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWalSizeLimitMB( long ): Options,setWalSizeLimitMB( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWalTtlSeconds( long ): Options,setWalTtlSeconds( long ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWritableFileMaxBufferSize( long ): Options,setWritableFileMaxBufferSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWriteBufferManager( WriteBufferManager ): Options,setWriteBufferManager( WriteBufferManager ): Options,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWriteBufferSize( long ): Options,setWriteBufferSize( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWriteThreadMaxYieldUsec( long ): Options,setWriteThreadMaxYieldUsec( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public setWriteThreadSlowYieldUsec( long ): Options,setWriteThreadSlowYieldUsec( long ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public skipStatsUpdateOnDbOpen( ): boolean,skipStatsUpdateOnDbOpen( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public softPendingCompactionBytesLimit( ): long,softPendingCompactionBytesLimit( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public static logWarning( Logger ): void,static logWarning( Logger ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,1,0
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public statistics( ): Statistics,statistics( ): Statistics,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public statsDumpPeriodSec( ): int,statsDumpPeriodSec( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public tableCacheNumshardbits( ): int,tableCacheNumshardbits( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public tableFactoryName( ): String,tableFactoryName( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public tableFormatConfig( ): TableFormatConfig,tableFormatConfig( ): TableFormatConfig,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public targetFileSizeBase( ): long,targetFileSizeBase( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public targetFileSizeMultiplier( ): int,targetFileSizeMultiplier( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useAdaptiveMutex( ): boolean,useAdaptiveMutex( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useCappedPrefixExtractor( int ): Options,useCappedPrefixExtractor( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useDirectIoForFlushAndCompaction( ): boolean,useDirectIoForFlushAndCompaction( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useDirectReads( ): boolean,useDirectReads( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useFixedLengthPrefixExtractor( int ): Options,useFixedLengthPrefixExtractor( int ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public useFsync( ): boolean,useFsync( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public walBytesPerSync( ): long,walBytesPerSync( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public walDir( ): String,walDir( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public walRecoveryMode( ): WALRecoveryMode,walRecoveryMode( ): WALRecoveryMode,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public walSizeLimitMB( ): long,walSizeLimitMB( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public walTtlSeconds( ): long,walTtlSeconds( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public writableFileMaxBufferSize( ): long,writableFileMaxBufferSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public writeBufferManager( ): WriteBufferManager,writeBufferManager( ): WriteBufferManager,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public writeBufferSize( ): long,writeBufferSize( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public writeThreadMaxYieldUsec( ): long,writeThreadMaxYieldUsec( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.public writeThreadSlowYieldUsec( ): long,writeThreadSlowYieldUsec( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter->columnFamilyOptions,final columnFamilyOptions : ColumnFamilyOptions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter->dbOptions,final dbOptions : DBOptions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBPrefixIterator,RocksDBPrefixIterator,low-medium,low,low,low,2,10,4,3,0,6,20,18,1,0,2,0,0,0,0.4,0,0,0,,,,,20,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBPrefixIterator. RocksDBPrefixIterator( String, RocksIterator, Set, Bytes ): void"," RocksDBPrefixIterator( String, RocksIterator, Set, Bytes ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBPrefixIterator.public synchronized hasNext( ): boolean,synchronized hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,11,0,3,2
<Field>org.apache.kafka.streams.state.internals.RocksDBPrefixIterator->rawPrefix,rawPrefix : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBRangeIterator,RocksDBRangeIterator,low-medium,low,low,low,4,12,5,3,0,5,23,20,2,0,2,0,0,0.5,0.4,0,0,0,,,,,23,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBRangeIterator. RocksDBRangeIterator( String, RocksIterator, Set, Bytes, Bytes ): void"," RocksDBRangeIterator( String, RocksIterator, Set, Bytes, Bytes ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,5,3,2
<Method>org.apache.kafka.streams.state.internals.RocksDBRangeIterator.public makeNext( ): KeyValue,makeNext( ): KeyValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,5,2
<Field>org.apache.kafka.streams.state.internals.RocksDBRangeIterator->comparator,final comparator : Comparator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBRangeIterator->rawToKey,final rawToKey : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore,RocksDBSegmentedBytesStore,low-medium,low,low,low,2,1,0,2,0,1,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBSegmentedBytesStore. RocksDBSegmentedBytesStore( String, String, long, long, KeySchema ): void"," RocksDBSegmentedBytesStore( String, String, long, long, KeySchema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,0
org.apache.kafka.streams.state.internals.RocksDBSessionStore,RocksDBSessionStore,low-medium,low-medium,low,low,6,26,10,2,0,8,42,39,0,0,8,0,0,0,0.583,0,0,0,,,,,42,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore. RocksDBSessionStore( SegmentedBytesStore ): void, RocksDBSessionStore( SegmentedBytesStore ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public fetch( Bytes ): KeyValueIterator,fetch( Bytes ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public fetch( Bytes, Bytes ): KeyValueIterator","fetch( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public fetchSession( Bytes, long, long ): byte","fetchSession( Bytes, long, long ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,3,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public findSessions( Bytes, Bytes, long, long ): KeyValueIterator","findSessions( Bytes, Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,4,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public findSessions( Bytes, long, long ): KeyValueIterator","findSessions( Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,3,2,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public put( Windowed, byte ): void","put( Windowed, byte ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,3,0
<Method>org.apache.kafka.streams.state.internals.RocksDBSessionStore.public remove( Windowed ): void,remove( Windowed ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,3,0
org.apache.kafka.streams.state.internals.RocksDBStore,RocksDBStore,high,very-high,medium-high,high,33,192,84,1,2,52,363,222,18,9,28,0,0,0.923,0.879,0.569,0,0,,,,,363,,,,,,52,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDBAccessor,RocksDBAccessor,low,low,low,low,3,12,0,1,2,12,19,12,0,0,12,0,0,0,0.694,0,0,0,,,,,19,,,,,,12,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.RocksDBBatchingRestoreCallback,RocksDBBatchingRestoreCallback,low,low,low,low,5,159,3,2,0,5,22,20,1,0,4,0,2,0,0.5,0,0,1,,,,,22,,,,,,5,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBStore.SingleColumnFamilyAccessor,SingleColumnFamilyAccessor,low,low,low,low,11,26,14,1,0,20,72,70,1,0,13,0,0,0,0.736,0.318,0,0,,,,,72,,,,,,20,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore. RocksDBStore( String, String ): void"," RocksDBStore( String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore. RocksDBStore( String, String, RocksDBMetricsRecorder ): void"," RocksDBStore( String, String, RocksDBMetricsRecorder ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.streams.state.internals.RocksDBStore. isPrepareForBulkload( ): boolean, isPrepareForBulkload( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDBStore. openDB( ProcessorContext ): void, openDB( ProcessorContext ): void,low,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,42,1,32,37
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore. openRocksDB( DBOptions, ColumnFamilyOptions ): void"," openRocksDB( DBOptions, ColumnFamilyOptions ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,2,6,5
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public addToBatch( KeyValue, WriteBatch ): void","addToBatch( KeyValue, WriteBatch ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public approximateNumEntries( ): long,approximateNumEntries( ): long,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,3,2
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.private closeOpenIterators( ): void,closeOpenIterators( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,4,4
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public getOptions( ): Options,getOptions( ): Options,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,2,3
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.private isOverflowing( long ): boolean,isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.private maybeRemoveStatisticsFromMetricsRecorder( ): void,maybeRemoveStatisticsFromMetricsRecorder( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,4
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.private maybeSetUpMetricsRecorder( ProcessorContext, Map ): void","maybeSetUpMetricsRecorder( ProcessorContext, Map ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,2,7,5
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public putAll( List ): void,putAll( List ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized all( ): KeyValueIterator,synchronized all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,2
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized close( ): void,synchronized close( ): void,low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,24,0,10,21
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized delete( Bytes ): byte,synchronized delete( Bytes ): byte,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,1,4,2
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized flush( ): void,synchronized flush( ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,1,3
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized get( Bytes ): byte,synchronized get( Bytes ): byte,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,3,2
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized put( Bytes, byte ): void","synchronized put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,4,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized putIfAbsent( Bytes, byte ): byte","synchronized putIfAbsent( Bytes, byte ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,3,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public synchronized range( Bytes, Bytes ): KeyValueIterator","synchronized range( Bytes, Bytes ): KeyValueIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,2,8,3
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public toggleDbForBulkLoading( boolean ): void,toggleDbForBulkLoading( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,4,4
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.private validateStoreOpen( ): void,validateStoreOpen( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDBStore.public write( WriteBatch ): void,write( WriteBatch ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->db, db : RocksDB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->dbAccessor, dbAccessor : RocksDBAccessor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->dbDir, dbDir : File,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->fOptions, fOptions : FlushOptions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->internalProcessorContext, internalProcessorContext : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->wOptions, wOptions : WriteOptions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->cache,cache : Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->configSetter,configSetter : RocksDBConfigSetter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->filter,filter : BloomFilter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->metricsRecorder,final metricsRecorder : RocksDBMetricsRecorder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->openIterators,final openIterators : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->parentDir,final parentDir : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->isStatisticsRegistered,isStatisticsRegistered : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->BLOCK_CACHE_SIZE,static final BLOCK_CACHE_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->BLOCK_SIZE,static final BLOCK_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->COMPACTION_STYLE,static final COMPACTION_STYLE : CompactionStyle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->COMPRESSION_TYPE,static final COMPRESSION_TYPE : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->DB_FILE_DIR,static final DB_FILE_DIR : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->MAX_WRITE_BUFFERS,static final MAX_WRITE_BUFFERS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->SST_FILE_EXTENSION,static final SST_FILE_EXTENSION : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->WRITE_BUFFER_SIZE,static final WRITE_BUFFER_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->userSpecifiedOptions,userSpecifiedOptions : RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->batchingStateRestoreCallback,volatile batchingStateRestoreCallback : BatchingStateRestoreCallback,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBStore->prepareForBulkload,volatile prepareForBulkload : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBTimestampedSegmentedBytesStore,RocksDBTimestampedSegmentedBytesStore,low-medium,low,low,low,2,1,0,2,0,1,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedSegmentedBytesStore. RocksDBTimestampedSegmentedBytesStore( String, String, long, long, KeySchema ): void"," RocksDBTimestampedSegmentedBytesStore( String, String, long, long, KeySchema ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,5,0,0
org.apache.kafka.streams.state.internals.RocksDBTimestampedStore,RocksDBTimestampedStore,low-medium,medium-high,low-medium,low,11,22,19,2,1,8,236,39,0,1,4,0,1,0,0.583,0,0,0.5,,,,,236,,,,,,8,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBTimestampedStore.DualColumnFamilyAccessor,DualColumnFamilyAccessor,low,low,low,low,13,31,16,1,0,27,108,105,2,0,13,0,0,0,0.736,0.318,0,0,,,,,108,,,,,,27,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBTimestampedStore.RocksDBDualCFIterator,RocksDBDualCFIterator,low,low,low,low,6,25,14,2,1,18,63,53,8,0,6,0,0,0.781,0.556,0.7,0,0,,,,,63,,,,,,18,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBTimestampedStore.RocksDBDualCFRangeIterator,RocksDBDualCFRangeIterator,low,low,low,low,4,17,5,3,0,5,24,21,2,0,2,0,0,0.5,0.375,0,0,0,,,,,24,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedStore. RocksDBTimestampedStore( String, String ): void"," RocksDBTimestampedStore( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedStore. RocksDBTimestampedStore( String, String, RocksDBMetricsRecorder ): void"," RocksDBTimestampedStore( String, String, RocksDBMetricsRecorder ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedStore. openRocksDB( DBOptions, ColumnFamilyOptions ): void"," openRocksDB( DBOptions, ColumnFamilyOptions ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,20,2,21,9
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedStore.private setDbAccessor( ColumnFamilyHandle, ColumnFamilyHandle ): void","setDbAccessor( ColumnFamilyHandle, ColumnFamilyHandle ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,2,7,7
<Field>org.apache.kafka.streams.state.internals.RocksDBTimestampedStore->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDBTimestampedWindowStore,RocksDBTimestampedWindowStore,low-medium,low,low,low,1,1,0,3,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBTimestampedWindowStore. RocksDBTimestampedWindowStore( SegmentedBytesStore, boolean, long ): void"," RocksDBTimestampedWindowStore( SegmentedBytesStore, boolean, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,0
org.apache.kafka.streams.state.internals.RocksDBWindowStore,RocksDBWindowStore,low-medium,low-medium,low-medium,low-medium,8,31,14,2,1,11,54,47,4,0,10,0,0,0.778,0.662,0.714,0,0,,,,,54,,,,,,11,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore. RocksDBWindowStore( SegmentedBytesStore, boolean, long ): void"," RocksDBWindowStore( SegmentedBytesStore, boolean, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,3,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public fetch( Bytes, long ): byte","fetch( Bytes, long ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public fetch( Bytes, long, long ): WindowStoreIterator","fetch( Bytes, long, long ): WindowStoreIterator",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,3,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.private maybeUpdateSeqnumForDups( ): void,maybeUpdateSeqnumForDups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,3
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.state.internals.RocksDBWindowStore.public put( Bytes, byte, long ): void","put( Bytes, byte, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,4,1
<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore->context,context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDBWindowStore->seqnum,seqnum : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbIterator,RocksDbIterator,low-medium,low,low,low-medium,4,17,11,2,2,9,37,31,5,0,6,0,0,0.72,0.625,0.5,0,0,,,,,37,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDbIterator. RocksDbIterator( String, RocksIterator, Set ): void"," RocksDbIterator( String, RocksIterator, Set ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,3
<Method>org.apache.kafka.streams.state.internals.RocksDbIterator.private getKeyValue( ): KeyValue,getKeyValue( ): KeyValue,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDbIterator.public makeNext( ): KeyValue,makeNext( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,4,4
<Method>org.apache.kafka.streams.state.internals.RocksDbIterator.public peekNextKey( ): Bytes,peekNextKey( ): Bytes,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.streams.state.internals.RocksDbIterator.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,3
<Method>org.apache.kafka.streams.state.internals.RocksDbIterator.public synchronized hasNext( ): boolean,synchronized hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,2
<Field>org.apache.kafka.streams.state.internals.RocksDbIterator->iter,final iter : RocksIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbIterator->openIterators,final openIterators : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbIterator->storeName,final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbIterator->next,next : KeyValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbIterator->open,volatile open : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier,RocksDbKeyValueBytesStoreSupplier,low,low,low,low,3,4,1,1,0,5,18,15,2,0,4,0,0,0.25,0.5,0.5,0,0,,,,,18,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier.public RocksDbKeyValueBytesStoreSupplier( String, boolean ): void","RocksDbKeyValueBytesStoreSupplier( String, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier.public get( ): KeyValueStore,get( ): KeyValueStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,2,3
<Method>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier.public metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbKeyValueBytesStoreSupplier->returnTimestampedStore,final returnTimestampedStore : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier,RocksDbSessionBytesStoreSupplier,low,low,low,low,4,7,3,1,0,6,28,25,2,0,6,0,0,0.375,0.556,0.467,0,0,,,,,28,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public RocksDbSessionBytesStoreSupplier( String, long ): void","RocksDbSessionBytesStoreSupplier( String, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public get( ): SessionStore,get( ): SessionStore,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,2,2
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier.public segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbSessionBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier,RocksDbWindowBytesStoreSupplier,low,low-medium,low-medium,low-medium,6,9,1,1,0,10,63,56,6,0,9,0,0,0.69,0.667,0.583,0,0,,,,,63,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public RocksDbWindowBytesStoreSupplier( String, long, long, long, boolean, boolean ): void","RocksDbWindowBytesStoreSupplier( String, long, long, long, boolean, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,6,0,6
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public get( ): WindowStore,get( ): WindowStore,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,22,0,2,11
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public metricsScope( ): String,metricsScope( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public retainDuplicates( ): boolean,retainDuplicates( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public retentionPeriod( ): long,retentionPeriod( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public segmentIntervalMs( ): long,segmentIntervalMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public segments( ): int,segments( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Method>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier.public windowSize( ): long,windowSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->retainDuplicates,final retainDuplicates : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->retentionPeriod,final retentionPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->returnTimestampedStore,final returnTimestampedStore : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->segmentInterval,final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.RocksDbWindowBytesStoreSupplier->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Segment,Segment,low,low,low,low,2,3,0,1,2,3,4,3,0,0,3,0,0,0,0.333,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.Segment.public abstract all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.internals.Segment.public abstract destroy( ): void,destroy( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.Segment.public abstract range( Bytes, Bytes ): KeyValueIterator","range( Bytes, Bytes ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.internals.SegmentIterator<S>,SegmentIterator,low,low,low,low-medium,5,14,11,1,0,17,50,43,6,0,6,0,0,0.733,0.625,0,0,0,,,,,50,,,,,,17,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>. SegmentIterator( Iterator, HasNextCondition, Bytes, Bytes ): void"," SegmentIterator( Iterator, HasNextCondition, Bytes, Bytes ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,0,4
<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,3
<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,14,0,7,14
<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>.private hasNextConditionHasNext( ): boolean,hasNextConditionHasNext( ): boolean,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,2
<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>.public next( ): KeyValue,next( ): KeyValue,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Method>org.apache.kafka.streams.state.internals.SegmentIterator<S>.public peekNextKey( ): Bytes,peekNextKey( ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,2,1
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->currentIterator, currentIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->currentSegment,currentSegment : S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->from,final from : Bytes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->hasNextCondition,final hasNextCondition : HasNextCondition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->segments,final segments : Iterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentIterator<S>->to,final to : Bytes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.SegmentedBytesStore,SegmentedBytesStore,low,low,low,low,2,7,0,1,1,7,16,7,0,0,7,0,0,0,0.429,0,0,0,,,,,16,,,,,,7,,,,,,,
org.apache.kafka.streams.state.internals.SegmentedBytesStore.KeySchema,KeySchema,low,low,low,low,3,7,0,1,2,7,8,7,0,0,7,0,0,0,0.286,0,0,0,,,,,8,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract fetch( Bytes, long, long ): KeyValueIterator","fetch( Bytes, long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract get( Bytes ): byte,get( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.state.internals.SegmentedBytesStore.public abstract remove( Bytes ): void,remove( Bytes ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.state.internals.SegmentedCacheFunction,SegmentedCacheFunction,low,low,low,low,3,21,16,1,0,10,41,37,2,1,8,1,0,0.722,0.472,1,0,0,,,,,41,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction. SegmentedCacheFunction( KeySchema, long ): void"," SegmentedCacheFunction( KeySchema, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction. cacheKey( Bytes, long ): Bytes"," cacheKey( Bytes, long ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,6,1
"<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction. compareSegmentedKeys( Bytes, Bytes ): int"," compareSegmentedKeys( Bytes, Bytes ): int",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,2,8,2
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction. getSegmentInterval( ): long, getSegmentInterval( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction. segmentId( long ): long, segmentId( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction.public cacheKey( Bytes ): Bytes,cacheKey( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction.public key( Bytes ): Bytes,key( Bytes ): Bytes,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction.public segmentId( Bytes ): long,segmentId( Bytes ): long,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.state.internals.SegmentedCacheFunction.static bytesFromCacheKey( Bytes ): byte,static bytesFromCacheKey( Bytes ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
<Field>org.apache.kafka.streams.state.internals.SegmentedCacheFunction->keySchema,final keySchema : KeySchema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentedCacheFunction->segmentInterval,final segmentInterval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SegmentedCacheFunction->SEGMENT_ID_BYTES,static final SEGMENT_ID_BYTES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.Segments<S>,Segments,low,low,low,low,1,10,0,1,1,10,11,10,0,0,10,0,0,0,0.333,0,0,0,,,,,11,,,,,,10,,,,,,,
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract allSegments( ): List,allSegments( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract getOrCreateSegment( long, InternalProcessorContext ): S","getOrCreateSegment( long, InternalProcessorContext ): S",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract getOrCreateSegmentIfLive( long, InternalProcessorContext, long ): S","getOrCreateSegmentIfLive( long, InternalProcessorContext, long ): S",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract getSegmentForTimestamp( long ): S,getSegmentForTimestamp( long ): S,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract openExisting( InternalProcessorContext, long ): void","openExisting( InternalProcessorContext, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract segmentId( long ): long,segmentId( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract segmentName( long ): String,segmentName( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.Segments<S>.public abstract segments( long, long ): List","segments( long, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.state.internals.SessionKeySchema,SessionKeySchema,low-medium,low-medium,low-medium,low-medium,9,41,25,1,0,25,92,88,0,3,7,11,0,0.778,0.685,1,0,0,,,,,92,,,,,,25,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public hasNextCondition( Bytes, Bytes, long, long ): HasNextCondition","hasNextCondition( Bytes, Bytes, long, long ): HasNextCondition",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,14,4,0,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public lowerRange( Bytes, long ): Bytes","lowerRange( Bytes, long ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public lowerRangeFixedSize( Bytes, long ): Bytes","lowerRangeFixedSize( Bytes, long ): Bytes",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,0
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public segmentTimestamp( Bytes ): long,segmentTimestamp( Bytes ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public segmentsToSearch( Segments, long, long ): List","segmentsToSearch( Segments, long, long ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.static extractEndTimestamp( byte ): long,static extractEndTimestamp( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.private static extractKey( byte, Deserializer, String ): K","static extractKey( byte, Deserializer, String ): K",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.static extractKeyBytes( byte ): byte,static extractKeyBytes( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.static extractStartTimestamp( byte ): long,static extractStartTimestamp( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.static extractWindow( byte ): Window,static extractWindow( byte ): Window,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,2
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static from( Bytes ): Windowed,static from( Bytes ): Windowed,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,4,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static from( Windowed, Deserializer, String ): Windowed","static from( Windowed, Deserializer, String ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,4,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static from( byte, Deserializer, String ): Windowed","static from( byte, Deserializer, String ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static toBinary( Bytes, long, long ): Bytes","static toBinary( Bytes, long, long ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,7,1
<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static toBinary( Windowed ): Bytes,static toBinary( Windowed ): Bytes,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,6,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public static toBinary( Windowed, Serializer, String ): byte","static toBinary( Windowed, Serializer, String ): byte",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,9,0
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public upperRange( Bytes, long ): Bytes","upperRange( Bytes, long ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,5,1
"<Method>org.apache.kafka.streams.state.internals.SessionKeySchema.public upperRangeFixedSize( Bytes, long ): Bytes","upperRangeFixedSize( Bytes, long ): Bytes",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
<Field>org.apache.kafka.streams.state.internals.SessionKeySchema->MIN_SUFFIX,static final MIN_SUFFIX : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SessionKeySchema->SUFFIX_SIZE,static final SUFFIX_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.SessionKeySchema->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>",SessionStoreBuilder,low-medium,low-medium,low,low,7,11,8,2,0,7,26,24,1,0,5,0,0,0,0.6,0,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>.public SessionStoreBuilder( SessionBytesStoreSupplier, Serde, Serde, Time ): void","SessionStoreBuilder( SessionBytesStoreSupplier, Serde, Serde, Time ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,1
"<Method>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>.public build( ): SessionStore",build( ): SessionStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,4,5
"<Method>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>.private maybeWrapCaching( SessionStore ): SessionStore",maybeWrapCaching( SessionStore ): SessionStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,2
"<Method>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>.private maybeWrapLogging( SessionStore ): SessionStore",maybeWrapLogging( SessionStore ): SessionStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Method>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Field>org.apache.kafka.streams.state.internals.SessionStoreBuilder<K,V>->storeSupplier",final storeSupplier : SessionBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.StateStoreProvider,StateStoreProvider,low,low,low,low,1,1,0,1,3,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.StateStoreProvider.public abstract stores( String, QueryableStoreType ): List","stores( String, QueryableStoreType ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>",StoreChangeLogger,low,low-medium,low,low,6,13,9,1,0,4,28,21,6,0,4,0,0,0.611,0.5,0,0,0,,,,,28,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>. StoreChangeLogger( String, ProcessorContext, StateSerdes ): void"," StoreChangeLogger( String, ProcessorContext, StateSerdes ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,1
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>. logChange( K, V ): void"," logChange( K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,1
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>. logChange( K, V, long ): void"," logChange( K, V, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,5
"<Method>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>.private StoreChangeLogger( String, ProcessorContext, int, StateSerdes ): void","StoreChangeLogger( String, ProcessorContext, int, StateSerdes ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,4,5,6
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->collector",final collector : RecordCollector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->context",final context : ProcessorContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->keySerializer",final keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->topic",final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.internals.StoreChangeLogger<K,V>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider,StreamThreadStateStoreProvider,low,low-medium,low,low,8,14,9,1,0,12,26,24,1,0,2,0,0,0,0.375,0,1,0,,,,,26,,,,,,12,,,,,,,
<Method>org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider.public StreamThreadStateStoreProvider( StreamThread ): void,StreamThreadStateStoreProvider( StreamThread ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider.public stores( String, QueryableStoreType ): List","stores( String, QueryableStoreType ): List",low-medium,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,22,2,12,4
<Field>org.apache.kafka.streams.state.internals.StreamThreadStateStoreProvider->streamThread,final streamThread : StreamThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache,ThreadCache,medium-high,low-medium,low-medium,medium-high,7,127,34,1,0,42,170,108,8,0,21,3,0,0.883,0.755,0.941,0,0,,,,,170,,,,,,42,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntry,DirtyEntry,low,low,low,low,2,4,0,1,0,4,14,10,3,0,4,0,0,0.667,0.562,1,0,0,,,,,14,,,,,,4,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntryFlushListener,DirtyEntryFlushListener,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.state.internals.ThreadCache.MemoryLRUCacheBytesIterator,MemoryLRUCacheBytesIterator,low,low,low,low,4,33,5,1,0,14,37,33,3,0,7,0,0,0.533,0.571,0.4,0,0,,,,,37,,,,,,14,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ThreadCache. sizeBytes( ): long, sizeBytes( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public ThreadCache( LogContext, long, StreamsMetricsImpl ): void","ThreadCache( LogContext, long, StreamsMetricsImpl ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,3
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public addDirtyEntryFlushListener( String, DirtyEntryFlushListener ): void","addDirtyEntryFlushListener( String, DirtyEntryFlushListener ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public all( String ): MemoryLRUCacheBytesIterator,all( String ): MemoryLRUCacheBytesIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public delete( String, Bytes ): LRUCacheEntry","delete( String, Bytes ): LRUCacheEntry",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,2,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public evicts( ): long,evicts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public flush( String ): void,flush( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,8,3
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public flushes( ): long,flushes( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public get( String, Bytes ): LRUCacheEntry","get( String, Bytes ): LRUCacheEntry",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,2,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public gets( ): long,gets( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private isOverflowing( long ): boolean,isOverflowing( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private maybeEvict( String ): void,maybeEvict( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,6,4
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public put( String, Bytes, LRUCacheEntry ): void","put( String, Bytes, LRUCacheEntry ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,3,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public putAll( String, List ): void","putAll( String, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,1,0
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public putIfAbsent( String, Bytes, LRUCacheEntry ): LRUCacheEntry","putIfAbsent( String, Bytes, LRUCacheEntry ): LRUCacheEntry",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,3,3,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public puts( ): long,puts( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public range( String, Bytes, Bytes ): MemoryLRUCacheBytesIterator","range( String, Bytes, Bytes ): MemoryLRUCacheBytesIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,3,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public size( ): long,size( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,3,1
"<Method>org.apache.kafka.streams.state.internals.ThreadCache.public static nameSpaceFromTaskIdAndStore( String, String ): String","static nameSpaceFromTaskIdAndStore( String, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public static taskIDfromCacheName( String ): String,static taskIDfromCacheName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.public static underlyingStoreNamefromCacheName( String ): String,static underlyingStoreNamefromCacheName( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.streams.state.internals.ThreadCache.synchronized close( String ): void,synchronized close( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,2,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private synchronized getCache( String ): NamedCache,synchronized getCache( String ): NamedCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.streams.state.internals.ThreadCache.private synchronized getOrCreateCache( String ): NamedCache,synchronized getOrCreateCache( String ): NamedCache,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,3
<Field>org.apache.kafka.streams.state.internals.ThreadCache->caches,final caches : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->maxCacheSizeBytes,final maxCacheSizeBytes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->metrics,final metrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numEvicts,numEvicts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numFlushes,numFlushes : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numGets,numGets : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ThreadCache->numPuts,numPuts : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>",TimeOrderedKeyValueBuffer,low,low,low,medium-high,4,7,0,1,1,7,36,7,0,0,7,0,0,0,0.732,0,0,0,,,,,36,,,,,,7,,,,,,,
"org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer.Eviction<K,V>",Eviction,low,low,low,low,3,10,3,1,0,10,28,24,3,0,7,0,0,0.333,0.686,0.2,0,0,,,,,28,,,,,,10,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract bufferSize( ): long",bufferSize( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract evictWhile( Supplier, Consumer ): void","evictWhile( Supplier, Consumer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract minTimestamp( ): long",minTimestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract numRecords( ): int",numRecords( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract priorValueForBuffered( K ): Maybe",priorValueForBuffered( K ): Maybe,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract put( long, K, Change, ProcessorRecordContext ): void","put( long, K, Change, ProcessorRecordContext ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,4,0,0
"<Method>org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBuffer<K,V>.public abstract setSerdesIfNull( Serde, Serde ): void","setSerdesIfNull( Serde, Serde ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>",TimestampedKeyValueStoreBuilder,low-medium,low-medium,low-medium,low,10,9,7,2,0,9,89,33,1,0,4,0,0,0,0.55,0,0,0,,,,,89,,,,,,9,,,,,,,
org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder.InMemoryTimestampedKeyValueStoreMarker,InMemoryTimestampedKeyValueStoreMarker,low,low,low,low,4,29,14,1,0,16,53,50,1,0,15,0,0,0,0.752,0.143,0,0,,,,,53,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>.public TimestampedKeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde, Time ): void","TimestampedKeyValueStoreBuilder( KeyValueBytesStoreSupplier, Serde, Serde, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,4,2,1
"<Method>org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>.public build( ): TimestampedKeyValueStore",build( ): TimestampedKeyValueStore,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,0,5,5
"<Method>org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>.private maybeWrapCaching( KeyValueStore ): KeyValueStore",maybeWrapCaching( KeyValueStore ): KeyValueStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Method>org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>.private maybeWrapLogging( KeyValueStore ): KeyValueStore",maybeWrapLogging( KeyValueStore ): KeyValueStore,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Field>org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder<K,V>->storeSupplier",final storeSupplier : KeyValueBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.TimestampedSegment,TimestampedSegment,medium-high,low,low,medium-high,4,141,6,3,0,9,30,28,1,0,7,0,0,0,0.735,0.6,1,0,,,,,30,,,,,,9,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.TimestampedSegment. TimestampedSegment( String, String, long, RocksDBMetricsRecorder ): void"," TimestampedSegment( String, String, long, RocksDBMetricsRecorder ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,1
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public compareTo( TimestampedSegment ): int,compareTo( TimestampedSegment ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public destroy( ): void,destroy( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,1,2,2
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public openDB( ProcessorContext ): void,openDB( ProcessorContext ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.TimestampedSegment.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Field>org.apache.kafka.streams.state.internals.TimestampedSegment->id,final id : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.TimestampedSegments,TimestampedSegments,medium-high,low,low,low,3,137,7,2,0,4,20,18,1,0,2,0,0,0,0.25,0,0,0,,,,,20,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.TimestampedSegments. TimestampedSegments( String, String, long, long ): void"," TimestampedSegments( String, String, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,1
"<Method>org.apache.kafka.streams.state.internals.TimestampedSegments.public getOrCreateSegment( long, InternalProcessorContext ): TimestampedSegment","getOrCreateSegment( long, InternalProcessorContext ): TimestampedSegment",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,12,2,5,5
<Field>org.apache.kafka.streams.state.internals.TimestampedSegments->metricsRecorder,final metricsRecorder : RocksDBMetricsRecorder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>",TimestampedWindowStoreBuilder,low-medium,low-medium,low-medium,low,10,14,11,2,0,10,99,35,1,0,5,0,0,0,0.6,0,0,0,,,,,99,,,,,,10,,,,,,,
org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder.InMemoryTimestampedWindowStoreMarker,InMemoryTimestampedWindowStoreMarker,low,low,low,low,5,27,13,1,0,15,61,58,1,0,14,0,0,0,0.704,0.154,0,0,,,,,61,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>.public TimestampedWindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde, Time ): void","TimestampedWindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde, Time ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,4,2,1
"<Method>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>.public build( ): TimestampedWindowStore",build( ): TimestampedWindowStore,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,0,6,6
"<Method>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>.private maybeWrapCaching( WindowStore ): WindowStore",maybeWrapCaching( WindowStore ): WindowStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,3
"<Method>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>.private maybeWrapLogging( WindowStore ): WindowStore",maybeWrapLogging( WindowStore ): WindowStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,2
"<Method>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Field>org.apache.kafka.streams.state.internals.TimestampedWindowStoreBuilder<K,V>->storeSupplier",final storeSupplier : WindowBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>,ValueAndTimestampDeserializer,low,low,low,low-medium,2,16,11,1,0,8,38,34,2,1,4,3,0,0.5,0.643,0,0,0,,,,,38,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>. ValueAndTimestampDeserializer( Deserializer ): void, ValueAndTimestampDeserializer( Deserializer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.public deserialize( String, byte ): ValueAndTimestamp","deserialize( String, byte ): ValueAndTimestamp",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,2,5,2
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.private static rawTimestamp( byte ): byte,static rawTimestamp( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.static rawValue( byte ): byte,static rawValue( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,0
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>.static timestamp( byte ): long,static timestamp( byte ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>->timestampDeserializer,final timestampDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>->valueDeserializer,final valueDeserializer : Deserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampDeserializer<V>->LONG_DESERIALIZER,static final LONG_DESERIALIZER : LongDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>,ValueAndTimestampSerde,low,low,low,low,4,16,7,1,0,5,22,19,2,0,5,0,0,0.25,0.6,0.1,0,0,,,,,22,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>.public ValueAndTimestampSerde( Serde ): void,ValueAndTimestampSerde( Serde ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,3,2
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>.public deserializer( ): Deserializer,deserializer( ): Deserializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>.public serializer( ): Serializer,serializer( ): Serializer,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>->valueAndTimestampDeserializer,final valueAndTimestampDeserializer : ValueAndTimestampDeserializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampSerde<V>->valueAndTimestampSerializer,final valueAndTimestampSerializer : ValueAndTimestampSerializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>,ValueAndTimestampSerializer,low,low,low,low-medium,2,14,10,1,0,7,34,31,2,0,5,0,0,0,0.675,0.5,0,0,,,,,34,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>. ValueAndTimestampSerializer( Serializer ): void, ValueAndTimestampSerializer( Serializer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>.public configure( Map, boolean ): void","configure( Map, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>.public serialize( String, V, long ): byte","serialize( String, V, long ): byte",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,3,6,2
"<Method>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>.public serialize( String, ValueAndTimestamp ): byte","serialize( String, ValueAndTimestamp ): byte",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,3,0
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>->timestampSerializer,final timestampSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V>->valueSerializer,final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WindowKeySchema,WindowKeySchema,low-medium,medium-high,low-medium,medium-high,11,57,30,1,0,32,140,134,0,5,7,17,0,0.782,0.729,0.992,0,0,,,,,140,,,,,,32,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public hasNextCondition( Bytes, Bytes, long, long ): HasNextCondition","hasNextCondition( Bytes, Bytes, long, long ): HasNextCondition",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,18,4,0,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public lowerRange( Bytes, long ): Bytes","lowerRange( Bytes, long ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public lowerRangeFixedSize( Bytes, long ): Bytes","lowerRangeFixedSize( Bytes, long ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public segmentTimestamp( Bytes ): long,segmentTimestamp( Bytes ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public segmentsToSearch( Segments, long, long ): List","segmentsToSearch( Segments, long, long ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static extractStoreKey( byte, StateSerdes ): K","static extractStoreKey( byte, StateSerdes ): K",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,2,2
<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static extractStoreKeyBytes( byte ): byte,static extractStoreKeyBytes( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,2
<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static extractStoreSequence( byte ): int,static extractStoreSequence( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static extractStoreTimestamp( byte ): long,static extractStoreTimestamp( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,2
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static extractStoreWindow( byte, long ): Window","static extractStoreWindow( byte, long ): Window",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,2
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.private static extractWindow( byte, long ): Window","static extractWindow( byte, long ): Window",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static from( byte, long, Deserializer, String ): Windowed","static from( byte, long, Deserializer, String ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,4,3,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static fromStoreBytesKey( byte, long ): Windowed","static fromStoreBytesKey( byte, long ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static fromStoreKey( Windowed, Deserializer, String ): Windowed","static fromStoreKey( Windowed, Deserializer, String ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,4,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static fromStoreKey( byte, long, Deserializer, String ): Windowed","static fromStoreKey( byte, long, Deserializer, String ): Windowed",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,3,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static timeWindowForSize( long, long ): TimeWindow","static timeWindowForSize( long, long ): TimeWindow",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static toBinary( Windowed, Serializer, String ): byte","static toBinary( Windowed, Serializer, String ): byte",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,8,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static toStoreKeyBinary( Bytes, long, int ): Bytes","static toStoreKeyBinary( Bytes, long, int ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,2,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static toStoreKeyBinary( K, long, int, StateSerdes ): Bytes","static toStoreKeyBinary( K, long, int, StateSerdes ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,2,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static toStoreKeyBinary( Windowed, int ): Bytes","static toStoreKeyBinary( Windowed, int ): Bytes",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,5,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public static toStoreKeyBinary( Windowed, int, StateSerdes ): Bytes","static toStoreKeyBinary( Windowed, int, StateSerdes ): Bytes",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,5,0
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.static toStoreKeyBinary( byte, long, int ): Bytes","static toStoreKeyBinary( byte, long, int ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,6,2
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public upperRange( Bytes, long ): Bytes","upperRange( Bytes, long ): Bytes",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,5,1
"<Method>org.apache.kafka.streams.state.internals.WindowKeySchema.public upperRangeFixedSize( Bytes, long ): Bytes","upperRangeFixedSize( Bytes, long ): Bytes",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,0
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->LOG,static final LOG : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->MIN_SUFFIX,static final MIN_SUFFIX : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->SEQNUM_SIZE,static final SEQNUM_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->SUFFIX_SIZE,static final SUFFIX_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowKeySchema->TIMESTAMP_SIZE,static final TIMESTAMP_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>",WindowStoreBuilder,low-medium,low-medium,low,low,7,12,9,2,0,7,30,28,1,0,5,0,0,0,0.6,0,0,0,,,,,30,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.public WindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde, Time ): void","WindowStoreBuilder( WindowBytesStoreSupplier, Serde, Serde, Time ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.public build( ): WindowStore",build( ): WindowStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,5,6
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.private maybeWrapCaching( WindowStore ): WindowStore",maybeWrapCaching( WindowStore ): WindowStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,2,3
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.private maybeWrapLogging( WindowStore ): WindowStore",maybeWrapLogging( WindowStore ): WindowStore,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,2
"<Method>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>.public retentionPeriod( ): long",retentionPeriod( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
"<Field>org.apache.kafka.streams.state.internals.WindowStoreBuilder<K,V>->storeSupplier",final storeSupplier : WindowBytesStoreSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper,WindowStoreIteratorWrapper,low,low,low-medium,low,2,3,0,1,0,3,51,8,2,0,3,0,0,0.25,0.444,0,0,0,,,,,51,,,,,,3,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.WrappedKeyValueIterator,WrappedKeyValueIterator,low,low,low,low,4,20,7,1,0,5,21,18,2,0,5,0,0,0.25,0.533,0,0,0,,,,,21,,,,,,5,,,,,,,
org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.WrappedWindowStoreIterator,WrappedWindowStoreIterator,low,low,low,low,4,14,7,1,0,5,19,17,1,0,5,0,0,0,0.4,0,0,0,,,,,19,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper. WindowStoreIteratorWrapper( KeyValueIterator, long ): void"," WindowStoreIteratorWrapper( KeyValueIterator, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,2
<Method>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.public keyValueIterator( ): KeyValueIterator,keyValueIterator( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper.public valuesIterator( ): WindowStoreIterator,valuesIterator( ): WindowStoreIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper->bytesIterator,final bytesIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper->windowSize,final windowSize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter,WindowToTimestampedWindowByteStoreAdapter,low,low-medium,low-medium,medium-high,8,44,18,1,0,20,80,73,1,0,17,0,0,0,0.728,0.125,0,0,,,,,80,,,,,,20,,,,,,,
org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.WindowToTimestampedWindowIteratorAdapter,WindowToTimestampedWindowIteratorAdapter,low,low,low,low,1,1,0,2,0,1,5,2,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter. WindowToTimestampedWindowByteStoreAdapter( WindowStore ): void, WindowToTimestampedWindowByteStoreAdapter( WindowStore ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public all( ): KeyValueIterator,all( ): KeyValueIterator,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetch( Bytes, Bytes, Instant, Instant ): KeyValueIterator","fetch( Bytes, Bytes, Instant, Instant ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetch( Bytes, Bytes, long, long ): KeyValueIterator","fetch( Bytes, Bytes, long, long ): KeyValueIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,4,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetch( Bytes, Instant, Instant ): WindowStoreIterator","fetch( Bytes, Instant, Instant ): WindowStoreIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetch( Bytes, long ): byte","fetch( Bytes, long ): byte",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetch( Bytes, long, long ): WindowStoreIterator","fetch( Bytes, long, long ): WindowStoreIterator",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetchAll( Instant, Instant ): KeyValueIterator","fetchAll( Instant, Instant ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public fetchAll( long, long ): KeyValueIterator","fetchAll( long, long ): KeyValueIterator",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public put( Bytes, byte ): void","put( Bytes, byte ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,1
"<Method>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter.public put( Bytes, byte, long ): void","put( Bytes, byte, long ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,3,2,1
<Field>org.apache.kafka.streams.state.internals.WindowToTimestampedWindowByteStoreAdapter->store,final store : WindowStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator,WrappedSessionStoreIterator,low,low,low,low,3,18,6,1,0,5,17,15,1,0,5,0,0,0,0.4,0,0,0,,,,,17,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator. WrappedSessionStoreIterator( KeyValueIterator ): void, WrappedSessionStoreIterator( KeyValueIterator ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator.public next( ): KeyValue,next( ): KeyValue,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,1
<Method>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator.public peekNextKey( ): Windowed,peekNextKey( ): Windowed,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Field>org.apache.kafka.streams.state.internals.WrappedSessionStoreIterator->bytesIterator,final bytesIterator : KeyValueIterator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>",WrappedStateStore,low,low,low,medium-high,4,18,9,1,13,15,42,40,1,0,10,1,0,0,0.742,0.2,0,0,,,,,42,,,,,,15,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>. validateStoreOpen( ): void", validateStoreOpen( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,2
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public WrappedStateStore( S ): void",WrappedStateStore( S ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public init( ProcessorContext, StateStore ): void","init( ProcessorContext, StateStore ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public isOpen( ): boolean",isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public name( ): String",name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public setFlushListener( CacheFlushListener, boolean ): boolean","setFlushListener( CacheFlushListener, boolean ): boolean",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,2
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public static isTimestamped( StateStore ): boolean",static isTimestamped( StateStore ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,2,0
"<Method>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>.public wrapped( ): S",wrapped( ): S,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.internals.WrappedStateStore<S,K,V>->wrapped",final wrapped : S,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.WrappingStoreProvider,WrappingStoreProvider,low,low,low,low,2,5,3,1,0,4,13,11,1,0,2,0,0,0,0.375,0,0,0,,,,,13,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.state.internals.WrappingStoreProvider. WrappingStoreProvider( List ): void, WrappingStoreProvider( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.streams.state.internals.WrappingStoreProvider.public stores( String, QueryableStoreType ): List","stores( String, QueryableStoreType ): List",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,2,3,1
<Field>org.apache.kafka.streams.state.internals.WrappingStoreProvider->storeProviders,final storeProviders : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.state.internals.metrics,org.apache.kafka.streams.state.internals.metrics,low,low,low-medium,low,,,,,,78,1089,,,,,,,,,,,,,6,6,0,1089,15,5,0,0.25,0.75,78,,,,,,,
org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics,NamedCacheMetrics,low,low,low-medium,low,4,36,5,1,0,3,57,51,0,5,1,1,0,0,0.333,0,0,0,,,,,57,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics.private NamedCacheMetrics( ): void,NamedCacheMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics.public static hitRatioSensor( StreamsMetricsImpl, String, String, String ): Sensor","static hitRatioSensor( StreamsMetricsImpl, String, String, String ): Sensor",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,50,4,8,8
<Field>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics->HIT_RATIO,static final HIT_RATIO : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics->HIT_RATIO_0100_TO_24,static final HIT_RATIO_0100_TO_24 : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics->HIT_RATIO_AVG_DESCRIPTION,static final HIT_RATIO_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics->HIT_RATIO_MAX_DESCRIPTION,static final HIT_RATIO_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.NamedCacheMetrics->HIT_RATIO_MIN_DESCRIPTION,static final HIT_RATIO_MIN_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics,RocksDBMetrics,low-medium,low,medium-high,low,3,62,13,1,0,20,396,303,0,42,1,19,0,1.003,0.262,1,0,0,,,,,396,,,,,,20,,,,,,,
org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,RocksDBMetricContext,low,low,low,low,0,10,3,1,0,10,35,30,4,0,7,0,0,0.5,0.571,0.286,0,0,,,,,35,,,,,,10,,,,,,,
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.private RocksDBMetrics( ): void,RocksDBMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static blockCacheDataHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static blockCacheDataHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static blockCacheFilterHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static blockCacheFilterHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static blockCacheIndexHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static blockCacheIndexHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static bytesReadDuringCompactionSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static bytesReadDuringCompactionSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static bytesReadFromDatabaseSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static bytesReadFromDatabaseSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,7,4
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static bytesWrittenDuringCompactionSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static bytesWrittenDuringCompactionSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static bytesWrittenToDatabaseSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static bytesWrittenToDatabaseSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,7,4
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static compactionTimeAvgSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static compactionTimeAvgSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static compactionTimeMaxSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static compactionTimeMaxSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static compactionTimeMinSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static compactionTimeMinSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.private static createSensor( StreamsMetricsImpl, RocksDBMetricContext, String ): Sensor","static createSensor( StreamsMetricsImpl, RocksDBMetricContext, String ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,3,4,0
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static memtableAvgFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static memtableAvgFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static memtableBytesFlushedSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static memtableBytesFlushedSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,7,4
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static memtableHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static memtableHitRatioSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static memtableMaxFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static memtableMaxFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static memtableMinFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static memtableMinFlushTimeSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static numberOfFileErrorsSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static numberOfFileErrorsSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static numberOfOpenFilesSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static numberOfOpenFilesSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,7,3
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.public static writeStallDurationSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor","static writeStallDurationSensor( StreamsMetricsImpl, RocksDBMetricContext ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,2,7,4
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_DATA_HIT_RATIO,static final BLOCK_CACHE_DATA_HIT_RATIO : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_DATA_HIT_RATIO_DESCRIPTION,static final BLOCK_CACHE_DATA_HIT_RATIO_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_FILTER_HIT_RATIO,static final BLOCK_CACHE_FILTER_HIT_RATIO : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_FILTER_HIT_RATIO_DESCRIPTION,static final BLOCK_CACHE_FILTER_HIT_RATIO_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_INDEX_HIT_RATIO,static final BLOCK_CACHE_INDEX_HIT_RATIO : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BLOCK_CACHE_INDEX_HIT_RATIO_DESCRIPTION,static final BLOCK_CACHE_INDEX_HIT_RATIO_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_READ_DURING_COMPACTION,static final BYTES_READ_DURING_COMPACTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_READ_DURING_COMPACTION_DESCRIPTION,static final BYTES_READ_DURING_COMPACTION_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_READ_FROM_DB,static final BYTES_READ_FROM_DB : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_READ_FROM_DB_RATE_DESCRIPTION,static final BYTES_READ_FROM_DB_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_READ_FROM_DB_TOTAL_DESCRIPTION,static final BYTES_READ_FROM_DB_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_WRITTEN_DURING_COMPACTION,static final BYTES_WRITTEN_DURING_COMPACTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_WRITTEN_DURING_COMPACTION_DESCRIPTION,static final BYTES_WRITTEN_DURING_COMPACTION_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_WRITTEN_TO_DB,static final BYTES_WRITTEN_TO_DB : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_WRITTEN_TO_DB_RATE_DESCRIPTION,static final BYTES_WRITTEN_TO_DB_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->BYTES_WRITTEN_TO_DB_TOTAL_DESCRIPTION,static final BYTES_WRITTEN_TO_DB_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME,static final COMPACTION_TIME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_AVG,static final COMPACTION_TIME_AVG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_AVG_DESCRIPTION,static final COMPACTION_TIME_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_MAX,static final COMPACTION_TIME_MAX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_MAX_DESCRIPTION,static final COMPACTION_TIME_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_MIN,static final COMPACTION_TIME_MIN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->COMPACTION_TIME_MIN_DESCRIPTION,static final COMPACTION_TIME_MIN_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_BYTES_FLUSHED,static final MEMTABLE_BYTES_FLUSHED : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_BYTES_FLUSHED_RATE_DESCRIPTION,static final MEMTABLE_BYTES_FLUSHED_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_BYTES_FLUSHED_TOTAL_DESCRIPTION,static final MEMTABLE_BYTES_FLUSHED_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME,static final MEMTABLE_FLUSH_TIME : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_AVG,static final MEMTABLE_FLUSH_TIME_AVG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_AVG_DESCRIPTION,static final MEMTABLE_FLUSH_TIME_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_MAX,static final MEMTABLE_FLUSH_TIME_MAX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_MAX_DESCRIPTION,static final MEMTABLE_FLUSH_TIME_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_MIN,static final MEMTABLE_FLUSH_TIME_MIN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_FLUSH_TIME_MIN_DESCRIPTION,static final MEMTABLE_FLUSH_TIME_MIN_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_HIT_RATIO,static final MEMTABLE_HIT_RATIO : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->MEMTABLE_HIT_RATIO_DESCRIPTION,static final MEMTABLE_HIT_RATIO_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->NUMBER_OF_FILE_ERRORS,static final NUMBER_OF_FILE_ERRORS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->NUMBER_OF_FILE_ERRORS_DESCRIPTION,static final NUMBER_OF_FILE_ERRORS_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->NUMBER_OF_OPEN_FILES,static final NUMBER_OF_OPEN_FILES : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->NUMBER_OF_OPEN_FILES_DESCRIPTION,static final NUMBER_OF_OPEN_FILES_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->WRITE_STALL_DURATION,static final WRITE_STALL_DURATION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->WRITE_STALL_DURATION_AVG_DESCRIPTION,static final WRITE_STALL_DURATION_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics->WRITE_STALL_DURATION_TOTAL_DESCRIPTION,static final WRITE_STALL_DURATION_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder,RocksDBMetricsRecorder,low-medium,medium-high,low-medium,low-medium,11,93,31,1,0,16,139,118,20,0,8,0,0,0.783,0.646,0.267,0,0,,,,,139,,,,,,16,,,,,,,
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public RocksDBMetricsRecorder( String, String, String ): void","RocksDBMetricsRecorder( String, String, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,2,4
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public addStatistics( String, Statistics, StreamsMetricsImpl, TaskId ): void","addStatistics( String, Statistics, StreamsMetricsImpl, TaskId ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,24,4,9,11
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.private computeHitRatio( long, long ): double","computeHitRatio( long, long ): double",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.private initSensors( StreamsMetricsImpl, TaskId ): void","initSensors( StreamsMetricsImpl, TaskId ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,2,13,15
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public record( ): void,record( ): void,low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,48,0,35,15
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public removeStatistics( String ): void,removeStatistics( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,14,1,7,9
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public storeName( ): String,storeName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder.public taskId( ): TaskId,taskId( ): TaskId,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->blockCacheDataHitRatioSensor,blockCacheDataHitRatioSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->blockCacheFilterHitRatioSensor,blockCacheFilterHitRatioSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->blockCacheIndexHitRatioSensor,blockCacheIndexHitRatioSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->bytesReadDuringCompactionSensor,bytesReadDuringCompactionSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->bytesReadFromDatabaseSensor,bytesReadFromDatabaseSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->bytesWrittenDuringCompactionSensor,bytesWrittenDuringCompactionSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->bytesWrittenToDatabaseSensor,bytesWrittenToDatabaseSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->logger,final logger : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->metricsScope,final metricsScope : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->statisticsToRecord,final statisticsToRecord : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->storeName,final storeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->threadId,final threadId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->isInitialized,isInitialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->memtableBytesFlushedSensor,memtableBytesFlushedSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->memtableHitRatioSensor,memtableHitRatioSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->numberOfFileErrorsSensor,numberOfFileErrorsSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->numberOfOpenFilesSensor,numberOfOpenFilesSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->streamsMetrics,streamsMetrics : StreamsMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->taskId,taskId : TaskId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder->writeStallDurationSensor,writeStallDurationSensor : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger,RocksDBMetricsRecordingTrigger,low,low,low,low,2,32,9,1,0,7,22,20,1,0,4,0,0,0,0.125,0,0,0,,,,,22,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger.public addMetricsRecorder( RocksDBMetricsRecorder ): void,addMetricsRecorder( RocksDBMetricsRecorder ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,6,2
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger.private metricsRecorderName( RocksDBMetricsRecorder ): String,metricsRecorderName( RocksDBMetricsRecorder ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,0
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger.public removeMetricsRecorder( RocksDBMetricsRecorder ): void,removeMetricsRecorder( RocksDBMetricsRecorder ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,4,1
<Method>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,2,1
<Field>org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecordingTrigger->metricsRecordersToTrigger,final metricsRecordersToTrigger : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics,StateStoreMetrics,low-medium,low,medium-high,low,4,58,13,1,0,22,475,363,0,90,1,18,0,1.018,0.389,1,0,0,,,,,475,,,,,,22,,,,,,,
<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.private StateStoreMetrics( ): void,StateStoreMetrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static allSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static allSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static deleteSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static deleteSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static expiredWindowRecordDropSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static expiredWindowRecordDropSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,21,5,3,4
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static fetchSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static fetchSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static flushSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static flushSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static getSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static getSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.private static parentSensor( String, String, String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static parentSensor( String, String, String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low,low-medium,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,31,12,4,0
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static putAllSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static putAllSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static putIfAbsentSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static putIfAbsentSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static putSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static putSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static rangeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static rangeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static removeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static removeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static restoreSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static restoreSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,1,5
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.private static sizeOrCountSensor( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static sizeOrCountSensor( String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,23,10,6,1
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.private static stateStoreLevelGroup( String, Version ): String","static stateStoreLevelGroup( String, Version ): String",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,2,0,0
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static suppressionBufferCountSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static suppressionBufferCountSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,1,4
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.public static suppressionBufferSizeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor","static suppressionBufferSizeSensor( String, String, String, String, StreamsMetricsImpl ): Sensor",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,17,5,1,4
"<Method>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics.private static throughputAndLatencySensor( String, String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor","static throughputAndLatencySensor( String, String, String, String, String, String, String, String, String, RecordingLevel, StreamsMetricsImpl ): Sensor",low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,52,11,9,0
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL,static final ALL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL_AVG_LATENCY_DESCRIPTION,static final ALL_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL_DESCRIPTION,static final ALL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL_MAX_LATENCY_DESCRIPTION,static final ALL_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL_RATE_DESCRIPTION,static final ALL_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->ALL_TOTAL_DESCRIPTION,static final ALL_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->AVG_DESCRIPTION_PREFIX,static final AVG_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->AVG_LATENCY_DESCRIPTION_PREFIX,static final AVG_LATENCY_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->BUFFERED_RECORDS,static final BUFFERED_RECORDS : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->CURRENT_DESCRIPTION_PREFIX,static final CURRENT_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->CURRENT_SUFFIX,static final CURRENT_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE,static final DELETE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE_AVG_LATENCY_DESCRIPTION,static final DELETE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE_DESCRIPTION,static final DELETE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE_MAX_LATENCY_DESCRIPTION,static final DELETE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE_RATE_DESCRIPTION,static final DELETE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->DELETE_TOTAL_DESCRIPTION,static final DELETE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->EXPIRED_WINDOW_RECORD_DROP,static final EXPIRED_WINDOW_RECORD_DROP : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->EXPIRED_WINDOW_RECORD_DROP_DESCRIPTION,static final EXPIRED_WINDOW_RECORD_DROP_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->EXPIRED_WINDOW_RECORD_DROP_RATE_DESCRIPTION,static final EXPIRED_WINDOW_RECORD_DROP_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->EXPIRED_WINDOW_RECORD_DROP_TOTAL_DESCRIPTION,static final EXPIRED_WINDOW_RECORD_DROP_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH,static final FETCH : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH_AVG_LATENCY_DESCRIPTION,static final FETCH_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH_DESCRIPTION,static final FETCH_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH_MAX_LATENCY_DESCRIPTION,static final FETCH_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH_RATE_DESCRIPTION,static final FETCH_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FETCH_TOTAL_DESCRIPTION,static final FETCH_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH,static final FLUSH : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH_AVG_LATENCY_DESCRIPTION,static final FLUSH_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH_DESCRIPTION,static final FLUSH_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH_MAX_LATENCY_DESCRIPTION,static final FLUSH_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH_RATE_DESCRIPTION,static final FLUSH_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->FLUSH_TOTAL_DESCRIPTION,static final FLUSH_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET,static final GET : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET_AVG_LATENCY_DESCRIPTION,static final GET_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET_DESCRIPTION,static final GET_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET_MAX_LATENCY_DESCRIPTION,static final GET_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET_RATE_DESCRIPTION,static final GET_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->GET_TOTAL_DESCRIPTION,static final GET_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->LATENCY_DESCRIPTION,static final LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->MAX_DESCRIPTION_PREFIX,static final MAX_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->MAX_LATENCY_DESCRIPTION_PREFIX,static final MAX_LATENCY_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT,static final PUT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL,static final PUT_ALL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL_AVG_LATENCY_DESCRIPTION,static final PUT_ALL_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL_DESCRIPTION,static final PUT_ALL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL_MAX_LATENCY_DESCRIPTION,static final PUT_ALL_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL_RATE_DESCRIPTION,static final PUT_ALL_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_ALL_TOTAL_DESCRIPTION,static final PUT_ALL_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_AVG_LATENCY_DESCRIPTION,static final PUT_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_DESCRIPTION,static final PUT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT,static final PUT_IF_ABSENT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT_AVG_LATENCY_DESCRIPTION,static final PUT_IF_ABSENT_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT_DESCRIPTION,static final PUT_IF_ABSENT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT_MAX_LATENCY_DESCRIPTION,static final PUT_IF_ABSENT_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT_RATE_DESCRIPTION,static final PUT_IF_ABSENT_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_IF_ABSENT_TOTAL_DESCRIPTION,static final PUT_IF_ABSENT_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_MAX_LATENCY_DESCRIPTION,static final PUT_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_RATE_DESCRIPTION,static final PUT_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->PUT_TOTAL_DESCRIPTION,static final PUT_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE,static final RANGE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE_AVG_LATENCY_DESCRIPTION,static final RANGE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE_DESCRIPTION,static final RANGE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE_MAX_LATENCY_DESCRIPTION,static final RANGE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE_RATE_DESCRIPTION,static final RANGE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RANGE_TOTAL_DESCRIPTION,static final RANGE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RATE_DESCRIPTION_PREFIX,static final RATE_DESCRIPTION_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RATE_DESCRIPTION_SUFFIX,static final RATE_DESCRIPTION_SUFFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE,static final REMOVE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE_AVG_LATENCY_DESCRIPTION,static final REMOVE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE_DESCRIPTION,static final REMOVE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE_MAX_LATENCY_DESCRIPTION,static final REMOVE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE_RATE_DESCRIPTION,static final REMOVE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->REMOVE_TOTAL_DESCRIPTION,static final REMOVE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE,static final RESTORE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE_AVG_LATENCY_DESCRIPTION,static final RESTORE_AVG_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE_DESCRIPTION,static final RESTORE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE_MAX_LATENCY_DESCRIPTION,static final RESTORE_MAX_LATENCY_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE_RATE_DESCRIPTION,static final RESTORE_RATE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->RESTORE_TOTAL_DESCRIPTION,static final RESTORE_TOTAL_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_COUNT,static final SUPPRESSION_BUFFER_COUNT : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_COUNT_AVG_DESCRIPTION,static final SUPPRESSION_BUFFER_COUNT_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_COUNT_CURRENT_DESCRIPTION,static final SUPPRESSION_BUFFER_COUNT_CURRENT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_COUNT_DESCRIPTION,static final SUPPRESSION_BUFFER_COUNT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_COUNT_MAX_DESCRIPTION,static final SUPPRESSION_BUFFER_COUNT_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_SIZE,static final SUPPRESSION_BUFFER_SIZE : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_SIZE_AVG_DESCRIPTION,static final SUPPRESSION_BUFFER_SIZE_AVG_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_SIZE_CURRENT_DESCRIPTION,static final SUPPRESSION_BUFFER_SIZE_CURRENT_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_SIZE_DESCRIPTION,static final SUPPRESSION_BUFFER_SIZE_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.state.internals.metrics.StateStoreMetrics->SUPPRESSION_BUFFER_SIZE_MAX_DESCRIPTION,static final SUPPRESSION_BUFFER_SIZE_MAX_DESCRIPTION : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.test,org.apache.kafka.streams.test,low,low,low-medium,low,,,,,,101,391,,,,,,,,,,,,,2,2,0,391,0,2,0,1,0,101,,,,,,,
"org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>",ConsumerRecordFactory,low-medium,low-medium,low-medium,low,6,35,16,1,0,42,208,201,5,0,29,0,0,0.745,0.552,0.914,0,0,,,,,208,,,,,,42,,,,,,,
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( Serializer, Serializer ): void","ConsumerRecordFactory( Serializer, Serializer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( Serializer, Serializer, long ): void","ConsumerRecordFactory( Serializer, Serializer, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( Serializer, Serializer, long, long ): void","ConsumerRecordFactory( Serializer, Serializer, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( String, Serializer, Serializer ): void","ConsumerRecordFactory( String, Serializer, Serializer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( String, Serializer, Serializer, long ): void","ConsumerRecordFactory( String, Serializer, Serializer, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public ConsumerRecordFactory( String, Serializer, Serializer, long, long ): void","ConsumerRecordFactory( String, Serializer, Serializer, long, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,5,2,5
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public advanceTimeMs( long ): void",advanceTimeMs( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,1
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( K, V ): ConsumerRecord","create( K, V ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( K, V, Headers ): ConsumerRecord","create( K, V, Headers ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( K, V, Headers, long ): ConsumerRecord","create( K, V, Headers, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,4,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( K, V, long ): ConsumerRecord","create( K, V, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( List ): List",create( List ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( List, long ): List","create( List, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( List, long, long ): List","create( List, long, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, K, V ): ConsumerRecord","create( String, K, V ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,1,3
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, K, V, Headers ): ConsumerRecord","create( String, K, V, Headers ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,1,3
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, K, V, Headers, long ): ConsumerRecord","create( String, K, V, Headers, long ): ConsumerRecord",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,22,5,4,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, K, V, long ): ConsumerRecord","create( String, K, V, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, List ): List","create( String, List ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,3,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, List, long ): List","create( String, List, long ): List",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, List, long, long ): List","create( String, List, long, long ): List",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,4,3,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, V ): ConsumerRecord","create( String, V ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, V, Headers ): ConsumerRecord","create( String, V, Headers ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, V, Headers, long ): ConsumerRecord","create( String, V, Headers, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( String, V, long ): ConsumerRecord","create( String, V, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( V ): ConsumerRecord",create( V ): ConsumerRecord,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( V, Headers ): ConsumerRecord","create( V, Headers ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( V, Headers, long ): ConsumerRecord","create( V, Headers, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,3,1,2
"<Method>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>.public create( V, long ): ConsumerRecord","create( V, long ): ConsumerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Field>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>->advanceMs",final advanceMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>->keySerializer",final keySerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>->topicName",final topicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>->valueSerializer",final valueSerializer : Serializer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.test.ConsumerRecordFactory<K,V>->timeMs",timeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.test.OutputVerifier,OutputVerifier,medium-high,low,low-medium,low,2,21,14,1,0,59,183,181,0,0,0,14,0,0,0.464,0,0,0,,,,,183,,,,,,59,,,,,,,
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValue( ProducerRecord, K, V ): void","static compareKeyValue( ProducerRecord, K, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,19,3,5,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValue( ProducerRecord, ProducerRecord ): void","static compareKeyValue( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueHeaders( ProducerRecord, K, V, Headers ): void","static compareKeyValueHeaders( ProducerRecord, K, V, Headers ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,26,4,6,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueHeaders( ProducerRecord, ProducerRecord ): void","static compareKeyValueHeaders( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,5,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueHeadersTimestamp( ProducerRecord, K, V, Headers, long ): void","static compareKeyValueHeadersTimestamp( ProducerRecord, K, V, Headers, long ): void",low-medium,low,low-medium,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,3,32,5,7,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueHeadersTimestamp( ProducerRecord, ProducerRecord ): void","static compareKeyValueHeadersTimestamp( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,6,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueTimestamp( ProducerRecord, K, V, long ): void","static compareKeyValueTimestamp( ProducerRecord, K, V, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,23,4,6,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareKeyValueTimestamp( ProducerRecord, ProducerRecord ): void","static compareKeyValueTimestamp( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,5,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValue( ProducerRecord, ProducerRecord ): void","static compareValue( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,3,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValue( ProducerRecord, V ): void","static compareValue( ProducerRecord, V ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,2,3,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValueHeaders( ProducerRecord, ProducerRecord ): void","static compareValueHeaders( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValueHeaders( ProducerRecord, V, Headers ): void","static compareValueHeaders( ProducerRecord, V, Headers ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,19,3,4,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValueTimestamp( ProducerRecord, ProducerRecord ): void","static compareValueTimestamp( ProducerRecord, ProducerRecord ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,4,0
"<Method>org.apache.kafka.streams.test.OutputVerifier.public static compareValueTimestamp( ProducerRecord, V, long ): void","static compareValueTimestamp( ProducerRecord, V, long ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,16,3,4,0
<Package>org.apache.kafka.tools,org.apache.kafka.tools,low-medium,low-medium,high,low,,,,,,271,1575,,,,,,,,,,,,,33,33,0,1575,2,7,0,0.778,0.222,271,,,,,,,
org.apache.kafka.tools.ProducerPerformance,ProducerPerformance,very-high,medium-high,low-medium,low,15,369,57,1,0,29,287,181,0,0,0,2,0,0,0.25,0,0,0,,,,,287,,,,,,29,,,,,,,
org.apache.kafka.tools.ProducerPerformance.PerfCallback,PerfCallback,low,low,low,low,2,9,3,1,0,3,16,11,4,0,2,0,0,0,0.417,0,0,0,,,,,16,,,,,,3,,,,,,,
org.apache.kafka.tools.ProducerPerformance.Stats,Stats,low,low,low,low,2,13,9,1,0,10,89,73,15,0,6,1,0,0.613,0.543,0.4,0,0,,,,,89,,,,,,10,,,,,,,
<Method>org.apache.kafka.tools.ProducerPerformance.private static argParser( ): ArgumentParser,static argParser( ): ArgumentParser,low,low-medium,medium-high,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,92,0,93,0
<Method>org.apache.kafka.tools.ProducerPerformance.public static main( String ): void,static main( String ): void,very-high,very-high,medium-high,low,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,4,89,1,58,0
org.apache.kafka.tools.PushHttpMetricsReporter,PushHttpMetricsReporter,low,low-medium,low-medium,medium-high,8,33,19,1,0,16,177,51,8,8,7,2,0,0.917,0.764,0.4,0,0,,,,,177,,,,,,16,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.HttpReporter,HttpReporter,low,low,low,low,9,38,30,1,0,6,41,40,0,0,1,0,0,0,0,0,0,0,,,,,41,,,,,,6,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricClientInfo,MetricClientInfo,low,low,low,low,0,4,0,1,0,4,17,13,3,0,4,0,0,0.667,0.5,1,0,0,,,,,17,,,,,,4,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricValue,MetricValue,low,low,low,low,0,5,0,1,0,5,22,17,4,0,5,0,0,0.75,0.6,1,0,0,,,,,22,,,,,,5,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.MetricsReport,MetricsReport,low,low,low,low,1,3,0,1,0,3,12,9,2,0,3,0,0,0.5,0.444,1,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.tools.PushHttpMetricsReporter.PushHttpMetricsReporterConfig,PushHttpMetricsReporterConfig,low,low,low,low,1,7,1,2,0,2,5,4,0,0,2,0,0,0,0.375,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Method>org.apache.kafka.tools.PushHttpMetricsReporter. PushHttpMetricsReporter( Time, ScheduledExecutorService ): void"," PushHttpMetricsReporter( Time, ScheduledExecutorService ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public PushHttpMetricsReporter( ): void,PushHttpMetricsReporter( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,2,2
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public configure( Map ): void,configure( Map ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,1,9,14
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public init( List ): void,init( List ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,6,1,4,3
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public metricChange( KafkaMetric ): void,metricChange( KafkaMetric ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,4,3
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.public metricRemoval( KafkaMetric ): void,metricRemoval( KafkaMetric ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,4,3
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.static newHttpConnection( URL ): HttpURLConnection,static newHttpConnection( URL ): HttpURLConnection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.tools.PushHttpMetricsReporter.static readResponse( InputStream ): String,static readResponse( InputStream ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,4,0
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->clientId,clientId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->executor,final executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->json,final json : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->lock,final lock : Object,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->metrics,final metrics : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->host,host : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->CLIENT_ID_CONFIG,static final CLIENT_ID_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->CONFIG_DEF,static final CONFIG_DEF : ConfigDef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->HEADERS,static final HEADERS : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->METRICS_HOST_CONFIG,static final METRICS_HOST_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->METRICS_PERIOD_CONFIG,static final METRICS_PERIOD_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->METRICS_PREFIX,static final METRICS_PREFIX : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->METRICS_URL_CONFIG,static final METRICS_URL_CONFIG : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.PushHttpMetricsReporter->url,url : URL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.ThroughputThrottler,ThroughputThrottler,low,low,low,low,0,8,4,1,0,14,50,41,5,3,4,0,0,0.833,0.25,0.333,0,0,,,,,50,,,,,,14,,,,,,,
"<Method>org.apache.kafka.tools.ThroughputThrottler.public ThroughputThrottler( long, long ): void","ThroughputThrottler( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,0,4
"<Method>org.apache.kafka.tools.ThroughputThrottler.public shouldThrottle( long, long ): boolean","shouldThrottle( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,3
<Method>org.apache.kafka.tools.ThroughputThrottler.public throttle( ): void,throttle( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,26,0,5,13
<Method>org.apache.kafka.tools.ThroughputThrottler.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,1,1
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepTimeNs,final sleepTimeNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->targetThroughput,final targetThroughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepDeficitNs,sleepDeficitNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->MIN_SLEEP_NS,static final MIN_SLEEP_NS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_MS,static final NS_PER_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_SEC,static final NS_PER_SEC : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->wakeup,wakeup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.ToolsUtils,ToolsUtils,low,low,low,low,2,15,14,1,0,7,20,19,0,0,0,1,0,0,0,0,0,0,,,,,20,,,,,,7,,,,,,,
<Method>org.apache.kafka.tools.ToolsUtils.public static printMetrics( Map ): void,static printMetrics( Map ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,19,1,18,0
org.apache.kafka.tools.TransactionalMessageCopier,TransactionalMessageCopier,very-high,medium-high,low-medium,medium-high,18,879,62,1,0,24,202,201,0,0,0,11,0,0,0.716,0,0,0,,,,,202,,,,,,24,,,,,,,
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static argParser( ): ArgumentParser,static argParser( ): ArgumentParser,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,73,0,77,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static consumerPositions( KafkaConsumer ): Map,static consumerPositions( KafkaConsumer ): Map,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,3,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static createConsumer( Namespace ): KafkaConsumer,static createConsumer( Namespace ): KafkaConsumer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,18,1,14,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static createProducer( Namespace ): KafkaProducer,static createProducer( Namespace ): KafkaProducer,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,1,8,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.public static main( String ): void,static main( String ): void,low,medium-high,medium-high,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,6,55,1,44,0
"<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static messagesRemaining( KafkaConsumer, TopicPartition ): long","static messagesRemaining( KafkaConsumer, TopicPartition ): long",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,5,0
"<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static producerRecordFromConsumerRecord( String, ConsumerRecord ): ProducerRecord","static producerRecordFromConsumerRecord( String, ConsumerRecord ): ProducerRecord",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static resetToLastCommittedPositions( KafkaConsumer ): void,static resetToLastCommittedPositions( KafkaConsumer ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,1,4,0
"<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static shutDownString( long, long, String ): String","static shutDownString( long, long, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,4,0
"<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static statusAsJson( long, long, String ): String","static statusAsJson( long, long, String ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,4,0
<Method>org.apache.kafka.tools.TransactionalMessageCopier.private static toJsonString( Map ): String,static toJsonString( Map ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,2,0
org.apache.kafka.tools.VerifiableConsumer,VerifiableConsumer,very-high,high,medium-high,high,21,687,74,1,0,41,388,243,10,1,12,3,0,0.848,0.833,0.806,0,0,,,,,388,,,,,,41,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.CommitData,CommitData,low,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.375,0,0,0,,,,,8,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ConsumerEvent,ConsumerEvent,low,low,low,low,0,2,0,1,7,2,8,5,1,0,2,0,0,0,0,1,0,0,,,,,8,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$5858;,Lorg.apache.kafka.tools.VerifiableConsumer$5858;,low,low,low,low,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.OffsetsCommitted,OffsetsCommitted,low,low,low,low,0,5,0,2,0,5,21,17,3,0,5,0,0,0.667,0.6,0.7,0,0,,,,,21,,,,,,5,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionData,PartitionData,low,low,low,low,0,3,0,1,2,3,12,9,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsAssigned,PartitionsAssigned,low,low,low,low,0,3,0,2,0,3,10,8,1,0,3,0,0,0,0.333,0.667,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsRevoked,PartitionsRevoked,low,low,low,low,0,3,0,2,0,3,10,8,1,0,3,0,0,0,0.333,0.667,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordData,RecordData,low,low,low,low,1,12,5,2,0,7,23,20,1,0,7,0,0,0,0.429,0.286,0,0,,,,,23,,,,,,7,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordSetSummary,RecordSetSummary,low,low,low,low,0,4,0,2,0,4,18,14,3,0,4,0,0,0.667,0.562,0.5,0,0,,,,,18,,,,,,4,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordsConsumed,RecordsConsumed,low,low,low,low,0,4,0,2,0,4,15,12,2,0,4,0,0,0.5,0.5,0.667,0,0,,,,,15,,,,,,4,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,1,0,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.StartupComplete,StartupComplete,low,low,low,low,0,1,0,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"<Method>org.apache.kafka.tools.VerifiableConsumer.public VerifiableConsumer( KafkaConsumer, PrintStream, String, int, boolean, boolean, boolean ): void","VerifiableConsumer( KafkaConsumer, PrintStream, String, int, boolean, boolean, boolean ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,15,7,1,7
<Method>org.apache.kafka.tools.VerifiableConsumer.private addKafkaSerializerModule( ): void,addKafkaSerializerModule( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,0,2,1
<Method>org.apache.kafka.tools.VerifiableConsumer.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,0,4,2
<Method>org.apache.kafka.tools.VerifiableConsumer.public commitSync( Map ): void,commitSync( Map ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,4,1
<Method>org.apache.kafka.tools.VerifiableConsumer.private hasMessageLimit( ): boolean,hasMessageLimit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.tools.VerifiableConsumer.private isFinished( ): boolean,isFinished( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
"<Method>org.apache.kafka.tools.VerifiableConsumer.public onComplete( Map, Exception ): void","onComplete( Map, Exception ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,2,9,0
<Method>org.apache.kafka.tools.VerifiableConsumer.public onPartitionsAssigned( Collection ): void,onPartitionsAssigned( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.tools.VerifiableConsumer.public onPartitionsRevoked( Collection ): void,onPartitionsRevoked( Collection ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.tools.VerifiableConsumer.private onRecordsReceived( ConsumerRecords ): Map,onRecordsReceived( ConsumerRecords ): Map,low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,22,1,21,6
<Method>org.apache.kafka.tools.VerifiableConsumer.private printJson( Object ): void,printJson( Object ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,3
<Method>org.apache.kafka.tools.VerifiableConsumer.public run( ): void,run( ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,20,0,14,10
<Method>org.apache.kafka.tools.VerifiableConsumer.private static argParser( ): ArgumentParser,static argParser( ): ArgumentParser,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,80,0,90,0
"<Method>org.apache.kafka.tools.VerifiableConsumer.public static createFromArgs( ArgumentParser, String ): VerifiableConsumer","static createFromArgs( ArgumentParser, String ): VerifiableConsumer",low,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,32,2,23,1
<Method>org.apache.kafka.tools.VerifiableConsumer.public static main( String ): void,static main( String ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,12,1,9,0
<Field>org.apache.kafka.tools.VerifiableConsumer->consumedMessages,consumedMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->consumer,final consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->mapper,final mapper : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->out,final out : PrintStream,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAsyncCommit,final useAsyncCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAutoCommit,final useAutoCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->verbose,final verbose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->shutdownLatch,shutdownLatch : CountDownLatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableLog4jAppender,VerifiableLog4jAppender,low,low-medium,low-medium,low,10,41,37,1,0,19,153,149,3,0,2,4,0,0.833,0.5,0.833,0,0,,,,,153,,,,,,19,,,,,,,
"<Method>org.apache.kafka.tools.VerifiableLog4jAppender.public VerifiableLog4jAppender( Properties, int ): void","VerifiableLog4jAppender( Properties, int ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Method>org.apache.kafka.tools.VerifiableLog4jAppender.private append( String ): void,append( String ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.tools.VerifiableLog4jAppender.private static argParser( ): ArgumentParser,static argParser( ): ArgumentParser,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,85,0,93,0
<Method>org.apache.kafka.tools.VerifiableLog4jAppender.public static createFromArgs( String ): VerifiableLog4jAppender,static createFromArgs( String ): VerifiableLog4jAppender,low-medium,low-medium,low-medium,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11,4,43,1,40,0
<Method>org.apache.kafka.tools.VerifiableLog4jAppender.public static loadProps( String ): Properties,static loadProps( String ): Properties,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,3,0
<Method>org.apache.kafka.tools.VerifiableLog4jAppender.public static main( String ): void,static main( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,5,3
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->logger, logger : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->stopLogging,volatile stopLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableProducer,VerifiableProducer,low-medium,medium-high,low-medium,medium-high,15,54,46,1,0,26,298,174,13,0,7,4,0,0.912,0.782,0.806,0,0,,,,,298,,,,,,26,,,,,,,
org.apache.kafka.tools.VerifiableProducer.FailedSend,FailedSend,low,low,low,low,0,10,3,2,0,7,29,24,4,0,7,0,0,0.75,0.571,0.714,0,0,,,,,29,,,,,,7,,,,,,,
org.apache.kafka.tools.VerifiableProducer.PrintInfoCallback,PrintInfoCallback,low,low,low,low,3,6,1,1,0,3,13,10,2,0,2,0,0,0,0.375,0,0,0,,,,,13,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ProducerEvent,ProducerEvent,low,low,low,low,0,2,0,1,5,2,8,5,1,0,2,0,0,0,0,1,0,0,,,,,8,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,1,0,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableProducer.StartupComplete,StartupComplete,low,low,low,low,0,1,0,2,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableProducer.SuccessfulSend,SuccessfulSend,low,low,low,low,1,12,3,2,0,7,27,23,3,0,7,0,0,0.667,0.571,0.619,0,0,,,,,27,,,,,,7,,,,,,,
org.apache.kafka.tools.VerifiableProducer.ToolData,ToolData,low,low,low,low,0,6,0,2,0,6,25,20,4,0,6,0,0,0.75,0.556,0.733,0,0,,,,,25,,,,,,6,,,,,,,
"<Method>org.apache.kafka.tools.VerifiableProducer.public VerifiableProducer( KafkaProducer, String, int, int, Integer, Long, Integer ): void","VerifiableProducer( KafkaProducer, String, int, int, Integer, Long, Integer ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,10,7,1,8
<Method>org.apache.kafka.tools.VerifiableProducer.public close( ): void,close( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,1
<Method>org.apache.kafka.tools.VerifiableProducer.public getKey( ): String,getKey( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,5
<Method>org.apache.kafka.tools.VerifiableProducer.public getValue( long ): String,getValue( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,2,2
<Method>org.apache.kafka.tools.VerifiableProducer.private printJson( Object ): void,printJson( Object ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,4,1
<Method>org.apache.kafka.tools.VerifiableProducer.public run( ThroughputThrottler ): void,run( ThroughputThrottler ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,10,1,7,3
"<Method>org.apache.kafka.tools.VerifiableProducer.public send( String, String ): void","send( String, String ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,2,3,9
<Method>org.apache.kafka.tools.VerifiableProducer.private static argParser( ): ArgumentParser,static argParser( ): ArgumentParser,low,low-medium,medium-high,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,70,0,76,0
"<Method>org.apache.kafka.tools.VerifiableProducer.public static createFromArgs( ArgumentParser, String ): VerifiableProducer","static createFromArgs( ArgumentParser, String ): VerifiableProducer",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,27,2,19,0
<Method>org.apache.kafka.tools.VerifiableProducer.public static loadProps( String ): Properties,static loadProps( String ): Properties,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,3,0
<Method>org.apache.kafka.tools.VerifiableProducer.public static main( String ): void,static main( String ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,20,1,10,1
<Field>org.apache.kafka.tools.VerifiableProducer->createTime,createTime : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->mapper,final mapper : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->producer,final producer : Producer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->repeatingKeys,final repeatingKeys : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->startTime,final startTime : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->throughput,final throughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->topic,final topic : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->valuePrefix,final valuePrefix : Integer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->keyCounter,keyCounter : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numAcked,numAcked : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numSent,numSent : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->stopProducing,stopProducing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.agent,org.apache.kafka.trogdor.agent,low,low,medium-high,low,,,,,,148,762,,,,,,,,,,,,,18,18,0,762,2,4,0,0.667,0.333,148,,,,,,,
org.apache.kafka.trogdor.agent.Agent,Agent,medium-high,very-high,low-medium,high,31,143,63,1,0,23,136,126,5,4,11,1,0,0.859,0.826,0.422,0,0,,,,,136,,,,,,23,,,,,,,
"<Method>org.apache.kafka.trogdor.agent.Agent. exec( TaskSpec, PrintStream ): boolean"," exec( TaskSpec, PrintStream ): boolean",low,medium-high,low-medium,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,32,2,29,11
<Method>org.apache.kafka.trogdor.agent.Agent. rebaseTaskSpecTime( TaskSpec ): TaskSpec, rebaseTaskSpecTime( TaskSpec ): TaskSpec,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,6,1
"<Method>org.apache.kafka.trogdor.agent.Agent.public Agent( Platform, Scheduler, JsonRestServer, AgentRestResource ): void","Agent( Platform, Scheduler, JsonRestServer, AgentRestResource ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,4,3,6
<Method>org.apache.kafka.trogdor.agent.Agent.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Method>org.apache.kafka.trogdor.agent.Agent.public createWorker( CreateWorkerRequest ): void,createWorker( CreateWorkerRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,4,1
<Method>org.apache.kafka.trogdor.agent.Agent.public destroyWorker( DestroyWorkerRequest ): void,destroyWorker( DestroyWorkerRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.trogdor.agent.Agent.public port( ): int,port( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.trogdor.agent.Agent.public static main( String ): void,static main( String ): void,low,very-high,medium-high,low,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,64,1,49,1
<Method>org.apache.kafka.trogdor.agent.Agent.public status( ): AgentStatusResponse,status( ): AgentStatusResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.trogdor.agent.Agent.public stopWorker( StopWorkerRequest ): void,stopWorker( StopWorkerRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.trogdor.agent.Agent.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.trogdor.agent.Agent.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Field>org.apache.kafka.trogdor.agent.Agent->platform,final platform : Platform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->restServer,final restServer : JsonRestServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->workerManager,final workerManager : WorkerManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->DEFAULT_PORT,static final DEFAULT_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->EXEC_TASK_ID,static final EXEC_TASK_ID : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->EXEC_WORKER_ID,static final EXEC_WORKER_ID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.Agent->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.agent.AgentClient,AgentClient,medium-high,medium-high,low-medium,medium-high,20,127,69,1,0,23,204,179,3,0,10,4,0,0.667,0.768,0.417,0,0,,,,,204,,,,,,23,,,,,,,
org.apache.kafka.trogdor.agent.AgentClient.Builder,Builder,low,low,low,low,1,7,1,1,0,7,21,17,3,0,6,0,0,0.667,0.542,0.667,0,0,,,,,21,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$4208;,Lorg.apache.kafka.trogdor.agent.AgentClient$4208;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$4488;,Lorg.apache.kafka.trogdor.agent.AgentClient$4488;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$4812;,Lorg.apache.kafka.trogdor.agent.AgentClient$4812;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$5113;,Lorg.apache.kafka.trogdor.agent.AgentClient$5113;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$5545;,Lorg.apache.kafka.trogdor.agent.AgentClient$5545;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.agent.AgentClient$5819;,Lorg.apache.kafka.trogdor.agent.AgentClient$5819;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"<Method>org.apache.kafka.trogdor.agent.AgentClient.private AgentClient( Logger, int, String ): void","AgentClient( Logger, int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.trogdor.agent.AgentClient.public createWorker( CreateWorkerRequest ): void,createWorker( CreateWorkerRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public destroyWorker( DestroyWorkerRequest ): void,destroyWorker( DestroyWorkerRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,8,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public invokeShutdown( ): void,invokeShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,3,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public maxTries( ): int,maxTries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.private static addJsonArgument( ArgumentParser ): void,static addJsonArgument( ArgumentParser ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,0
<Method>org.apache.kafka.trogdor.agent.AgentClient.private static addTargetArgument( ArgumentParser ): void,static addTargetArgument( ArgumentParser ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,8,0
"<Method>org.apache.kafka.trogdor.agent.AgentClient.private static addWorkerIdArgument( ArgumentParser, String ): void","static addWorkerIdArgument( ArgumentParser, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,7,0
<Method>org.apache.kafka.trogdor.agent.AgentClient.public static main( String ): void,static main( String ): void,low,very-high,high,low,18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,5,113,1,114,0
<Method>org.apache.kafka.trogdor.agent.AgentClient.public status( ): AgentStatusResponse,status( ): AgentStatusResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public stopWorker( StopWorkerRequest ): void,stopWorker( StopWorkerRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,3,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public target( ): String,target( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,1
<Method>org.apache.kafka.trogdor.agent.AgentClient.private url( String ): String,url( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Field>org.apache.kafka.trogdor.agent.AgentClient->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.AgentClient->maxTries,final maxTries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.AgentClient->target,final target : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.agent.AgentRestResource,AgentRestResource,low,low-medium,low,low-medium,7,45,9,1,0,9,42,35,2,0,8,0,0,1,0.7,1,0,0,,,,,42,,,,,,9,,,,,,,
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.private agent( ): Agent,agent( ): Agent,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public createWorker( CreateWorkerRequest ): Empty,createWorker( CreateWorkerRequest ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public destroyWorker( long ): Empty,destroyWorker( long ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public getStatus( ): AgentStatusResponse,getStatus( ): AgentStatusResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public setAgent( Agent ): void,setAgent( Agent ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public shutdown( ): Empty,shutdown( ): Empty,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,2,0
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public stopWorker( StopWorkerRequest ): Empty,stopWorker( StopWorkerRequest ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.trogdor.agent.AgentRestResource.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Field>org.apache.kafka.trogdor.agent.AgentRestResource->context,context : ServletContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.AgentRestResource->agent,final agent : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager,WorkerManager,low,medium-high,medium-high,low-medium,12,33,21,1,0,16,380,69,9,1,6,0,0,0.78,0.69,0.3,0,0,,,,,380,,,,,,16,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.CompleteWorker,CompleteWorker,low,low,low,low,2,10,4,1,0,5,19,16,2,0,2,0,0,0,0.333,0,0,0,,,,,19,,,,,,5,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.CreateWorker,CreateWorker,low,low,low,low,4,14,7,1,0,6,31,26,4,0,2,0,0,0,0.375,0,0,0,,,,,31,,,,,,6,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.DestroyAllWorkers,DestroyAllWorkers,low,low,low,low,2,13,4,1,0,3,11,10,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,3,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.FinishCreatingWorker,FinishCreatingWorker,low,low,low,low,4,13,5,1,0,4,20,18,1,0,2,0,0,0,0.25,0,0,0,,,,,20,,,,,,4,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.GetWorkerStates,GetWorkerStates,low,low,low,low,1,6,4,1,0,2,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,2,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.HaltWorker,HaltWorker,low,low,low,low,4,6,4,1,0,3,14,12,1,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,3,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.HandleWorkerHalting,HandleWorkerHalting,low,low,low,low,3,13,5,1,0,10,42,38,3,0,2,0,0,0,0.375,0,0,0,,,,,42,,,,,,10,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.Shutdown,Shutdown,low,low,low,low,3,12,10,1,0,2,20,19,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,2,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.ShutdownManager,ShutdownManager,low,low,low,low,1,5,2,1,0,8,27,15,2,0,3,0,0,0,0,0,0,0,,,,,27,,,,,,8,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.State,State,low,low,low,low,0,0,0,2,0,0,6,0,0,5,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.StopWorker,StopWorker,low,low,low,low,3,10,6,1,0,10,43,40,2,0,2,0,0,0,0.333,0,0,0,,,,,43,,,,,,10,,,,,,,
org.apache.kafka.trogdor.agent.WorkerManager.Worker,Worker,low,low,low,low,16,22,12,1,0,16,60,46,13,0,9,0,0,0.846,0.667,0,0,0,,,,,60,,,,,,16,,,,,,,
"<Method>org.apache.kafka.trogdor.agent.WorkerManager. WorkerManager( Platform, Scheduler ): void"," WorkerManager( Platform, Scheduler ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,2,9,8
<Method>org.apache.kafka.trogdor.agent.WorkerManager.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,2
"<Method>org.apache.kafka.trogdor.agent.WorkerManager.public createWorker( long, String, TaskSpec ): KafkaFuture","createWorker( long, String, TaskSpec ): KafkaFuture",low,very-high,low-medium,low,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,43,3,19,18
"<Method>org.apache.kafka.trogdor.agent.WorkerManager.public stopWorker( long, boolean ): void","stopWorker( long, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,4,2
<Method>org.apache.kafka.trogdor.agent.WorkerManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,2
<Method>org.apache.kafka.trogdor.agent.WorkerManager.public workerStates( ): TreeMap,workerStates( ): TreeMap,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,3,2
<Field>org.apache.kafka.trogdor.agent.WorkerManager->nodeName,final nodeName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->platform,final platform : Platform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->scheduler,final scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->shutdownExecutor,final shutdownExecutor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->shutdownManager,final shutdownManager : ShutdownManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->stateChangeExecutor,final stateChangeExecutor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->workerCleanupExecutor,final workerCleanupExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->workers,final workers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.agent.WorkerManager->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.basic,org.apache.kafka.trogdor.basic,low,low,low,low,,,,,,35,136,,,,,,,,,,,,,5,4,1,136,0,3,0.2,1,0.2,35,,,,,,,
org.apache.kafka.trogdor.basic.BasicNode,BasicNode,low,low,low-medium,low-medium,1,24,16,1,0,16,60,55,4,0,8,0,0,0.429,0.687,0.214,0,0,,,,,60,,,,,,16,,,,,,,
"<Method>org.apache.kafka.trogdor.basic.BasicNode.public BasicNode( String, JsonNode ): void","BasicNode( String, JsonNode ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,25,2,17,4
"<Method>org.apache.kafka.trogdor.basic.BasicNode.public BasicNode( String, String, Map, Set ): void","BasicNode( String, String, Map, Set ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,4,0,4
<Method>org.apache.kafka.trogdor.basic.BasicNode.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,9,1,6,8
<Method>org.apache.kafka.trogdor.basic.BasicNode.public getConfig( String ): String,getConfig( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.trogdor.basic.BasicNode.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,4
<Method>org.apache.kafka.trogdor.basic.BasicNode.public hostname( ): String,hostname( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.basic.BasicNode.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.basic.BasicNode.public tags( ): Set,tags( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.basic.BasicNode->config,final config : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicNode->hostname,final hostname : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicNode->name,final name : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicNode->tags,final tags : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.basic.BasicPlatform,BasicPlatform,low,low-medium,low-medium,low-medium,7,22,7,1,0,10,56,38,4,1,7,0,0,0.68,0.643,0.524,0,0,,,,,56,,,,,,10,,,,,,,
org.apache.kafka.trogdor.basic.BasicPlatform.CommandRunner,CommandRunner,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.trogdor.basic.BasicPlatform.ShellCommandRunner,ShellCommandRunner,low,low,low,low,4,38,4,1,0,2,10,9,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
"<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public BasicPlatform( String, BasicTopology, Scheduler, CommandRunner ): void","BasicPlatform( String, BasicTopology, Scheduler, CommandRunner ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,4,5,5
"<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public BasicPlatform( String, Scheduler, JsonNode ): void","BasicPlatform( String, Scheduler, JsonNode ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,3,6,7
<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public curNode( ): Node,curNode( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public runCommand( String ): String,runCommand( String ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,2
<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public scheduler( ): Scheduler,scheduler( ): Scheduler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.basic.BasicPlatform.public topology( ): Topology,topology( ): Topology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->commandRunner,final commandRunner : CommandRunner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->curNode,final curNode : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->scheduler,final scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->topology,final topology : BasicTopology,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.basic.BasicPlatform->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.basic.BasicTopology,BasicTopology,low,low,low,low,3,11,7,1,0,6,20,18,1,0,4,0,0,0,0.562,0,0,0,,,,,20,,,,,,6,,,,,,,
<Method>org.apache.kafka.trogdor.basic.BasicTopology.public BasicTopology( JsonNode ): void,BasicTopology( JsonNode ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,6,2
<Method>org.apache.kafka.trogdor.basic.BasicTopology.public BasicTopology( NavigableMap ): void,BasicTopology( NavigableMap ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.basic.BasicTopology.public node( String ): Node,node( String ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,1
<Method>org.apache.kafka.trogdor.basic.BasicTopology.public nodes( ): NavigableMap,nodes( ): NavigableMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.basic.BasicTopology->nodes,final nodes : NavigableMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.common,org.apache.kafka.trogdor.common,low,low,medium-high,low,,,,,,91,314,,,,,,,,,,,,,11,8,3,314,35,4,0.273,0.103,0.624,91,,,,,,,
org.apache.kafka.trogdor.common.JsonUtil,JsonUtil,low,low-medium,low,low,3,12,9,1,0,9,30,21,0,1,0,4,0,0,0.437,0,0,0,,,,,30,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.common.JsonUtil.public static objectFromCommandLineArgument( String, Class ): T","static objectFromCommandLineArgument( String, Class ): T",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,3,2
<Method>org.apache.kafka.trogdor.common.JsonUtil.static openBraceComesFirst( String ): boolean,static openBraceComesFirst( String ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,3,0
<Method>org.apache.kafka.trogdor.common.JsonUtil.public static toJsonString( Object ): String,static toJsonString( Object ): String,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,1,1
<Method>org.apache.kafka.trogdor.common.JsonUtil.public static toPrettyJsonString( Object ): String,static toPrettyJsonString( Object ): String,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,1
<Field>org.apache.kafka.trogdor.common.JsonUtil->JSON_SERDE,static final JSON_SERDE : ObjectMapper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.common.Node,Node,low,low,low,low,0,4,0,1,1,4,16,4,0,0,4,0,0,0,0.375,0,0,0,,,,,16,,,,,,4,,,,,,,
org.apache.kafka.trogdor.common.Node.Util,Util,low,low,low,low,3,5,3,1,0,4,11,10,0,0,0,3,0,0,0.333,0,0,0,,,,,11,,,,,,4,,,,,,,
<Method>org.apache.kafka.trogdor.common.Node.public abstract getConfig( String ): String,getConfig( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.trogdor.common.Node.public abstract hostname( ): String,hostname( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.common.Node.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.common.Node.public abstract tags( ): Set,tags( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.trogdor.common.Platform,Platform,low,low,low,low,3,5,0,1,1,5,23,5,0,0,5,0,0,0,0.4,0,0,0,,,,,23,,,,,,5,,,,,,,
org.apache.kafka.trogdor.common.Platform.Config,Config,low,low,low,low,5,24,4,1,0,2,17,11,0,4,0,1,0,0,0,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.common.Platform.public abstract curNode( ): Node,curNode( ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.common.Platform.public abstract name( ): String,name( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.common.Platform.public abstract runCommand( String ): String,runCommand( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.trogdor.common.Platform.public abstract scheduler( ): Scheduler,scheduler( ): Scheduler,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.common.Platform.public abstract topology( ): Topology,topology( ): Topology,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.trogdor.common.StringExpander,StringExpander,low,low,low,low,0,7,6,1,0,4,21,18,0,1,0,1,0,0,0,0,0,0,,,,,21,,,,,,4,,,,,,,
<Method>org.apache.kafka.trogdor.common.StringExpander.public static expand( String ): HashSet,static expand( String ): HashSet,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,18,1,11,1
<Field>org.apache.kafka.trogdor.common.StringExpander->NUMERIC_RANGE_PATTERN,static final NUMERIC_RANGE_PATTERN : Pattern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.common.StringFormatter,StringFormatter,low,low,low,low,0,22,19,1,0,15,47,46,0,0,0,3,0,0,0.417,0,0,0,,,,,47,,,,,,15,,,,,,,
"<Method>org.apache.kafka.trogdor.common.StringFormatter.public static dateString( long, ZoneOffset ): String","static dateString( long, ZoneOffset ): String",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,3,0
<Method>org.apache.kafka.trogdor.common.StringFormatter.public static durationString( long ): String,static durationString( long ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,15,1,15,0
<Method>org.apache.kafka.trogdor.common.StringFormatter.public static prettyPrintGrid( List ): String,static prettyPrintGrid( List ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,4,27,1,18,0
org.apache.kafka.trogdor.common.ThreadUtils,ThreadUtils,low,low,low,low,0,1,0,1,0,1,16,15,0,0,0,1,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.common.ThreadUtils$1554;,Lorg.apache.kafka.trogdor.common.ThreadUtils$1554;,low,low,low,low,0,0,0,1,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
"<Method>org.apache.kafka.trogdor.common.ThreadUtils.public static createThreadFactory( String, boolean ): ThreadFactory","static createThreadFactory( String, boolean ): ThreadFactory",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,15,2,0,0
org.apache.kafka.trogdor.common.Topology,Topology,low,low,low,low,1,2,0,1,1,2,10,2,0,0,2,0,0,0,0.25,0,0,0,,,,,10,,,,,,2,,,,,,,
org.apache.kafka.trogdor.common.Topology.Util,Util,low,low,low,low,2,7,6,1,0,3,7,6,0,0,0,1,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.common.Topology.public abstract node( String ): Node,node( String ): Node,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.trogdor.common.Topology.public abstract nodes( ): NavigableMap,nodes( ): NavigableMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.trogdor.common.WorkerUtils,WorkerUtils,high,high,low-medium,low-medium,21,188,59,1,0,42,151,147,0,3,0,10,0,0.778,0.662,1,1,0,,,,,151,,,,,,42,,,,,,,
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.public static abort( Logger, String, Throwable, KafkaFutureImpl ): void","static abort( Logger, String, Throwable, KafkaFutureImpl ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,4,9,0
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.public static addConfigsToProperties( Properties, Map, Map ): void","static addConfigsToProperties( Properties, Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,3,8,0
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.private static createAdminClient( String, Map, Map ): Admin","static createAdminClient( String, Map, Map ): Admin",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,4,1
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.private static createTopics( Logger, Admin, Collection ): Collection","static createTopics( Logger, Admin, Collection ): Collection",low-medium,medium-high,low-medium,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,5,45,3,35,2
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.static createTopics( Logger, Admin, Map, boolean ): void","static createTopics( Logger, Admin, Map, boolean ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,4,7,0
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.public static createTopics( Logger, String, Map, Map, Map, boolean ): void","static createTopics( Logger, String, Map, Map, Map, boolean ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,6,3,0
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.static getMatchingTopicPartitions( Admin, String, int, int ): Collection","static getMatchingTopicPartitions( Admin, String, int, int ): Collection",low,medium-high,low,low,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,22,4,24,2
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.public static perSecToPerPeriod( float, long ): int","static perSecToPerPeriod( float, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,1,0
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.private static topicDescriptions( Collection, Admin, int, long ): Map","static topicDescriptions( Collection, Admin, int, long ): Map",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,17,4,7,1
"<Method>org.apache.kafka.trogdor.common.WorkerUtils.static verifyTopics( Logger, Admin, Collection, Map, int, long ): void","static verifyTopics( Logger, Admin, Collection, Map, int, long ): void",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,6,11,0
<Field>org.apache.kafka.trogdor.common.WorkerUtils->ADMIN_REQUEST_TIMEOUT,static final ADMIN_REQUEST_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.common.WorkerUtils->CREATE_TOPICS_CALL_TIMEOUT,static final CREATE_TOPICS_CALL_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.common.WorkerUtils->MAX_CREATE_TOPICS_BATCH_SIZE,static final MAX_CREATE_TOPICS_BATCH_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.coordinator,org.apache.kafka.trogdor.coordinator,low-medium,low,medium-high,low,,,,,,229,1018,,,,,,,,,,,,,20,20,0,1018,1,5,0,0.833,0.167,229,,,,,,,
org.apache.kafka.trogdor.coordinator.Coordinator,Coordinator,medium-high,high,low-medium,high,25,108,43,1,0,15,84,77,4,2,11,1,0,0.818,0.846,0.485,0,0,,,,,84,,,,,,15,,,,,,,
"<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public Coordinator( Platform, Scheduler, JsonRestServer, CoordinatorRestResource, long ): void","Coordinator( Platform, Scheduler, JsonRestServer, CoordinatorRestResource, long ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,5,3,5
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,2,2
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public createTask( CreateTaskRequest ): void,createTask( CreateTaskRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,3,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public destroyTask( DestroyTaskRequest ): void,destroyTask( DestroyTaskRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public port( ): int,port( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public static main( String ): void,static main( String ): void,low,very-high,low-medium,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,48,1,36,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public status( ): CoordinatorStatusResponse,status( ): CoordinatorStatusResponse,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public stopTask( StopTaskRequest ): void,stopTask( StopTaskRequest ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public task( TaskRequest ): TaskState,task( TaskRequest ): TaskState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public tasks( TasksRequest ): TasksResponse,tasks( TasksRequest ): TasksResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.trogdor.coordinator.Coordinator.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,2
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->restServer,final restServer : JsonRestServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->startTimeMs,final startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->taskManager,final taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->DEFAULT_PORT,static final DEFAULT_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.Coordinator->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.CoordinatorClient,CoordinatorClient,high,high,medium-high,high,29,160,103,1,0,54,353,328,3,0,11,5,0,0.467,0.846,0.2,0,0,,,,,353,,,,,,54,,,,,,,
org.apache.kafka.trogdor.coordinator.CoordinatorClient.Builder,Builder,low,low,low,low,1,7,1,1,0,7,21,17,3,0,6,0,0,0.667,0.542,0.667,0,0,,,,,21,,,,,,7,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$4975;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$4975;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5267;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5267;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5572;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5572;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5854;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$5854;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$6277;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$6277;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7144;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7144;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7510;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7510;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7776;,Lorg.apache.kafka.trogdor.coordinator.CoordinatorClient$7776;,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.private CoordinatorClient( Logger, int, String ): void","CoordinatorClient( Logger, int, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public createTask( CreateTaskRequest ): void,createTask( CreateTaskRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public destroyTask( DestroyTaskRequest ): void,destroyTask( DestroyTaskRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,8,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public maxTries( ): int,maxTries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public shutdown( ): void,shutdown( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.private static addJsonArgument( ArgumentParser ): void,static addJsonArgument( ArgumentParser ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.private static addTargetArgument( ArgumentParser ): void,static addTargetArgument( ArgumentParser ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,1,8,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public static main( String ): void,static main( String ): void,very-high,very-high,very-high,low,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,6,214,1,211,0
"<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.static prettyPrintTaskInfo( TaskState, ZoneOffset ): String","static prettyPrintTaskInfo( TaskState, ZoneOffset ): String",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,25,2,21,0
"<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.static prettyPrintTasksResponse( TasksResponse, ZoneOffset ): String","static prettyPrintTasksResponse( TasksResponse, ZoneOffset ): String",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,17,2,20,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public status( ): CoordinatorStatusResponse,status( ): CoordinatorStatusResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public stopTask( StopTaskRequest ): void,stopTask( StopTaskRequest ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public task( TaskRequest ): TaskState,task( TaskRequest ): TaskState,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,7,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public tasks( TasksRequest ): TasksResponse,tasks( TasksRequest ): TasksResponse,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,13,1,23,2
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,3,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorClient.private url( String ): String,url( String ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorClient->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorClient->maxTries,final maxTries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorClient->target,final target : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.CoordinatorRestResource,CoordinatorRestResource,low,medium-high,low-medium,medium-high,13,48,19,1,0,15,66,59,2,0,10,0,0,1,0.762,1,0,0,,,,,66,,,,,,15,,,,,,,
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public beginShutdown( CoordinatorShutdownRequest ): Empty,beginShutdown( CoordinatorShutdownRequest ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,3,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.private coordinator( ): Coordinator,coordinator( ): Coordinator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public createTask( CreateTaskRequest ): Empty,createTask( CreateTaskRequest ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public destroyTask( String ): Empty,destroyTask( String ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public setCoordinator( Coordinator ): void,setCoordinator( Coordinator ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public status( ): CoordinatorStatusResponse,status( ): CoordinatorStatusResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public stopTask( StopTaskRequest ): Empty,stopTask( StopTaskRequest ): Empty,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
"<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public tasks( List, long, long, long, long, String ): Response","tasks( List, long, long, long, long, String ): Response",low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,6,12,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public tasks( String ): TaskState,tasks( String ): TaskState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,1,3,0
<Method>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource.public uptime( ): UptimeResponse,uptime( ): UptimeResponse,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,0
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource->context,context : ServletContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.CoordinatorRestResource->coordinator,final coordinator : AtomicReference,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager,NodeManager,low-medium,low-medium,low-medium,low-medium,8,59,16,1,0,10,167,33,7,2,7,0,0,0.815,0.673,0,0,0,,,,,167,,,,,,10,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.CreateWorker,CreateWorker,low,low,low,low,5,10,6,1,0,3,20,16,3,0,2,0,0,0,0.375,0,0,0,,,,,20,,,,,,3,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.DestroyWorker,DestroyWorker,low,low,low,low,3,8,4,1,0,3,12,10,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.ManagedWorker,ManagedWorker,low,low,low,low,7,42,5,1,0,6,26,20,5,0,4,0,0,0.6,0.625,0,0,0,,,,,26,,,,,,6,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.NodeHeartbeat,NodeHeartbeat,low,low,low,low,7,71,26,1,0,18,48,47,0,0,3,0,0,0,0.167,0,0,0,,,,,48,,,,,,18,,,,,,,
org.apache.kafka.trogdor.coordinator.NodeManager.StopWorker,StopWorker,low,low,low,low,3,9,5,1,0,4,18,16,1,0,2,0,0,0,0.25,0,0,0,,,,,18,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.coordinator.NodeManager. NodeManager( Node, TaskManager ): void"," NodeManager( Node, TaskManager ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,13,2,9,7
<Method>org.apache.kafka.trogdor.coordinator.NodeManager. rescheduleNextHeartbeat( long ): void, rescheduleNextHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,2,6
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,1,4,4
"<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public createWorker( long, String, TaskSpec ): void","createWorker( long, String, TaskSpec ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public destroyWorker( long ): void,destroyWorker( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public stopWorker( long ): void,stopWorker( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,1
<Method>org.apache.kafka.trogdor.coordinator.NodeManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->client,final client : AgentClient,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->executor,final executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->heartbeat,final heartbeat : NodeHeartbeat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->node,final node : Node,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->taskManager,final taskManager : TaskManager,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->workers,final workers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->heartbeatFuture,heartbeatFuture : ScheduledFuture,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->HEARTBEAT_DELAY_MS,static final HEARTBEAT_DELAY_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.NodeManager->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager,TaskManager,low-medium,medium-high,medium-high,medium-high,19,60,36,1,0,23,348,65,9,1,10,0,0,0.856,0.783,0,0,0,,,,,348,,,,,,23,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.CancelTask,CancelTask,low,low,low,low,7,23,13,1,0,11,44,42,1,0,2,0,0,0,0.25,0,0,0,,,,,44,,,,,,11,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.CreateTask,CreateTask,low,low,low,low,14,25,17,1,0,7,42,38,3,0,2,0,0,0,0.333,0,0,0,,,,,42,,,,,,7,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.DestroyTask,DestroyTask,low,low,low,low,4,13,9,1,0,5,20,18,1,0,2,0,0,0,0.25,0,0,0,,,,,20,,,,,,5,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.GetTaskState,GetTaskState,low,low,low,low,3,15,3,1,0,3,10,8,1,0,2,0,0,0,0.25,0,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.GetTasksResponse,GetTasksResponse,low,low,low,low,3,22,4,1,0,4,11,9,1,0,2,0,0,0,0.25,0,0,0,,,,,11,,,,,,4,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.ManagedTask,ManagedTask,low,low,low,low,15,34,22,1,0,24,76,64,11,0,8,0,0,0.922,0.708,0,0,0,,,,,76,,,,,,24,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.RunTask,RunTask,low,low,low,low,7,29,12,1,0,5,29,27,1,0,2,0,0,0,0.25,0,0,0,,,,,29,,,,,,5,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.Shutdown,Shutdown,low,low,low,low,2,46,5,1,0,5,13,11,1,0,2,0,0,0,0.25,0,0,0,,,,,13,,,,,,5,,,,,,,
org.apache.kafka.trogdor.coordinator.TaskManager.UpdateWorkerState,UpdateWorkerState,low,low,low,low,4,37,8,1,0,7,27,23,3,0,2,0,0,0,0.375,0,0,0,,,,,27,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.coordinator.TaskManager. TaskManager( Platform, Scheduler, long ): void"," TaskManager( Platform, Scheduler, long ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,3,12,10
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public beginShutdown( boolean ): void,beginShutdown( boolean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,2,2
"<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public createTask( String, TaskSpec ): void","createTask( String, TaskSpec ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,2,4,2
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public destroyTask( String ): void,destroyTask( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,4,2
"<Method>org.apache.kafka.trogdor.coordinator.TaskManager.private handleWorkerCompletion( ManagedTask, String, WorkerDone ): void","handleWorkerCompletion( ManagedTask, String, WorkerDone ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,21,3,26,6
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public stopTask( String ): void,stopTask( String ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,4,2
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public task( TaskRequest ): TaskState,task( TaskRequest ): TaskState,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public tasks( TasksRequest ): TasksResponse,tasks( TasksRequest ): TasksResponse,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,2,1
"<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public updateWorkerState( String, long, WorkerState ): void","updateWorkerState( String, long, WorkerState ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,3,1,1
<Method>org.apache.kafka.trogdor.coordinator.TaskManager.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,2,0,1,1
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->executor,final executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->nodeManagers,final nodeManagers : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->platform,final platform : Platform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->scheduler,final scheduler : Scheduler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->tasks,final tasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->workerStates,final workerStates : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->nextWorkerId,nextWorkerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->shutdown,shutdown : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.coordinator.TaskManager->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.fault,org.apache.kafka.trogdor.fault,low,medium-high,medium-high,low,,,,,,120,429,,,,,,,,,,,,,17,17,0,429,0,12,0.059,1,0.059,120,,,,,,,
org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec,DegradedNetworkFaultSpec,low-medium,low,low,low,3,6,2,2,0,5,44,15,1,0,4,0,0,0,0.5,0.5,0,0,,,,,44,,,,,,5,,,,,,,
org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.NodeDegradeSpec,NodeDegradeSpec,low,low,low,low,0,5,0,1,0,8,27,23,3,0,5,0,0,0.5,0.533,0.3,0,0,,,,,27,,,,,,8,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.public DegradedNetworkFaultSpec( long, long, Map ): void","DegradedNetworkFaultSpec( long, long, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,2,1
<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.public nodeSpecs( ): Map,nodeSpecs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec->nodeSpecs,final nodeSpecs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker,DegradedNetworkFaultWorker,low-medium,low-medium,low-medium,low-medium,7,32,29,1,0,22,73,68,3,1,10,0,0,0.417,0.667,0,0,0,,,,,73,,,,,,22,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.public DegradedNetworkFaultWorker( String, Map ): void","DegradedNetworkFaultWorker( String, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private childHandler( String, Consumer ): void","childHandler( String, Consumer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private devicesForSpec( NodeDegradeSpec ): Set,devicesForSpec( NodeDegradeSpec ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,9,1,9,0
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private disableTrafficControl( Platform, String ): void","disableTrafficControl( Platform, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,1,0
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private enableTrafficControl( Platform, String, int, int ): void","enableTrafficControl( Platform, String, int, int ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,19,4,15,1
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private netemDelay( int, int, Consumer ): void","netemDelay( int, int, Consumer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,4,0
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private rootHandler( String, Consumer ): void","rootHandler( String, Consumer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,2,0
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,3,12,8
<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,8,7
"<Method>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker.private tbfRate( int, Consumer ): void","tbfRate( int, Consumer ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,3,0
<Field>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker->nodeSpecs,final nodeSpecs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec,FilesUnreadableFaultSpec,low-medium,low,low,low-medium,5,7,0,2,0,10,36,31,4,0,7,0,0,0.667,0.629,0.524,0,0,,,,,36,,,,,,10,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public FilesUnreadableFaultSpec( long, long, Set, String, String, int ): void","FilesUnreadableFaultSpec( long, long, Set, String, String, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,12,6,0,4
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public mountPath( ): String,mountPath( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,3
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public nodeNames( ): Set,nodeNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec.public prefix( ): String,prefix( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec->mountPath,final mountPath : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec->nodeNames,final nodeNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.FilesUnreadableFaultSpec->prefix,final prefix : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh,Kibosh,low,low,low-medium,low,0,26,8,1,0,5,99,14,1,2,4,0,0,0,0.25,0,0,0,,,,,99,,,,,,5,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshControlFile,KiboshControlFile,low,low,low,low,2,17,10,1,0,11,26,22,1,1,6,1,0,1,0.607,0.952,0,0,,,,,26,,,,,,11,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshFaultSpec,KiboshFaultSpec,low,low,low,low,1,9,6,1,1,6,18,11,0,0,3,0,0,0,0.333,0,0,0,,,,,18,,,,,,6,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshFilesUnreadableFaultSpec,KiboshFilesUnreadableFaultSpec,low,low,low,low,0,3,0,2,0,3,14,11,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,14,,,,,,3,,,,,,,
org.apache.kafka.trogdor.fault.Kibosh.KiboshProcess,KiboshProcess,low,low,low,low,2,20,7,1,0,7,23,21,1,0,3,0,0,0,0.333,0,0,0,,,,,23,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.Kibosh. addFault( String, KiboshFaultSpec ): void"," addFault( String, KiboshFaultSpec ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
"<Method>org.apache.kafka.trogdor.fault.Kibosh. removeFault( String, KiboshFaultSpec ): void"," removeFault( String, KiboshFaultSpec ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,2,0
<Method>org.apache.kafka.trogdor.fault.Kibosh.private Kibosh( ): void,Kibosh( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.fault.Kibosh.private synchronized findProcessObject( String ): KiboshProcess,synchronized findProcessObject( String ): KiboshProcess,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,5,2
<Field>org.apache.kafka.trogdor.fault.Kibosh->processes,final processes : TreeMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.Kibosh->INSTANCE,static final INSTANCE : Kibosh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.Kibosh->KIBOSH_CONTROL,static final KIBOSH_CONTROL : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.KiboshFaultController,KiboshFaultController,low,low,low,low,1,2,0,1,0,2,7,5,1,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.fault.KiboshFaultController.public KiboshFaultController( Set ): void,KiboshFaultController( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.fault.KiboshFaultController.public targetNodes( Topology ): Set,targetNodes( Topology ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.trogdor.fault.KiboshFaultController->nodeNames,final nodeNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.KiboshFaultWorker,KiboshFaultWorker,low,low-medium,low,low,7,31,6,1,0,3,24,18,4,1,3,0,0,0.2,0.5,0,0,0,,,,,24,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.KiboshFaultWorker.public KiboshFaultWorker( String, KiboshFaultSpec, String ): void","KiboshFaultWorker( String, KiboshFaultSpec, String ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,0,3
"<Method>org.apache.kafka.trogdor.fault.KiboshFaultWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,6,11
<Method>org.apache.kafka.trogdor.fault.KiboshFaultWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,6,10
<Field>org.apache.kafka.trogdor.fault.KiboshFaultWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.KiboshFaultWorker->mountPath,final mountPath : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.KiboshFaultWorker->spec,final spec : KiboshFaultSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.KiboshFaultWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.KiboshFaultWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultController,NetworkPartitionFaultController,low,low,low,low,1,3,1,1,0,3,10,8,1,0,2,0,0,0,0.333,0,0,0,,,,,10,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultController.public NetworkPartitionFaultController( List ): void,NetworkPartitionFaultController( List ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultController.public targetNodes( Topology ): Set,targetNodes( Topology ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,1
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultController->partitionSets,final partitionSets : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec,NetworkPartitionFaultSpec,low-medium,low,low,low,4,8,5,2,0,9,28,26,1,0,5,0,0,0,0.55,0.833,0,0,,,,,28,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec.public NetworkPartitionFaultSpec( long, long, List ): void","NetworkPartitionFaultSpec( long, long, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,3,0,1
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec.private partitionSets( ): List,partitionSets( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,4,0
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec.public partitions( ): List,partitions( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec->partitions,final partitions : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker,NetworkPartitionFaultWorker,low,low-medium,low,low,7,16,13,1,0,8,37,32,3,1,4,0,0,0.583,0.5,0,0,0,,,,,37,,,,,,8,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker.public NetworkPartitionFaultWorker( String, List ): void","NetworkPartitionFaultWorker( String, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker.private runIptablesCommands( Platform, String ): void","runIptablesCommands( Platform, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,2,10,1
"<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,4,7
<Method>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,6
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker->partitionSets,final partitionSets : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultController,ProcessStopFaultController,low,low,low,low,1,2,0,1,0,2,7,5,1,0,2,0,0,0,0.333,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultController.public ProcessStopFaultController( Set ): void,ProcessStopFaultController( Set ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultController.public targetNodes( Topology ): Set,targetNodes( Topology ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultController->nodeNames,final nodeNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultSpec,ProcessStopFaultSpec,low-medium,low,low,low,4,5,0,2,0,7,23,20,2,0,5,0,0,0.5,0.5,0.4,0,0,,,,,23,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec.public ProcessStopFaultSpec( long, long, List, String ): void","ProcessStopFaultSpec( long, long, List, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,4,0,2
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec.public javaProcessName( ): String,javaProcessName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec.public nodeNames( ): Set,nodeNames( ): Set,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec->javaProcessName,final javaProcessName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultSpec->nodeNames,final nodeNames : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.fault.ProcessStopFaultWorker,ProcessStopFaultWorker,low,low-medium,low,low,6,24,14,1,0,9,41,36,3,1,4,0,0,0.25,0.45,0,0,0,,,,,41,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker.public ProcessStopFaultWorker( String, String ): void","ProcessStopFaultWorker( String, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker.private sendSignals( Platform, String ): void","sendSignals( Platform, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,19,2,13,8
"<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,3,4,7
<Method>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,1,4,6
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker->javaProcessName,final javaProcessName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.fault.ProcessStopFaultWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.rest,org.apache.kafka.trogdor.rest,low,medium-high,high,low,,,,,,177,640,,,,,,,,,,,,,33,33,0,640,11,18,0.091,0.621,0.288,177,,,,,,,
org.apache.kafka.trogdor.rest.AgentStatusResponse,AgentStatusResponse,low-medium,low,low,low,0,3,0,2,0,4,14,11,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,14,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.AgentStatusResponse.public AgentStatusResponse( long, TreeMap ): void","AgentStatusResponse( long, TreeMap ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,0,2
<Method>org.apache.kafka.trogdor.rest.AgentStatusResponse.public serverStartMs( ): long,serverStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.AgentStatusResponse.public workers( ): TreeMap,workers( ): TreeMap,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.AgentStatusResponse->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.AgentStatusResponse->workers,final workers : TreeMap,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest,CoordinatorShutdownRequest,low-medium,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest.public CoordinatorShutdownRequest( boolean ): void,CoordinatorShutdownRequest( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest.public stopAgents( ): boolean,stopAgents( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CoordinatorShutdownRequest->stopAgents,final stopAgents : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CoordinatorStatusResponse,CoordinatorStatusResponse,low-medium,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse.public CoordinatorStatusResponse( long ): void,CoordinatorStatusResponse( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse.public serverStartMs( ): long,serverStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CoordinatorStatusResponse->serverStartMs,final serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CreateTaskRequest,CreateTaskRequest,low-medium,low,low,low,1,3,0,2,0,3,14,11,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,14,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.CreateTaskRequest.public CreateTaskRequest( String, TaskSpec ): void","CreateTaskRequest( String, TaskSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
<Method>org.apache.kafka.trogdor.rest.CreateTaskRequest.public id( ): String,id( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.CreateTaskRequest.public spec( ): TaskSpec,spec( ): TaskSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CreateTaskRequest->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.CreateTaskRequest->spec,final spec : TaskSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.CreateWorkerRequest,CreateWorkerRequest,low-medium,low,low,low,1,4,0,2,0,4,20,16,3,0,4,0,0,0.667,0.562,0.5,0,0,,,,,20,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.CreateWorkerRequest.public CreateWorkerRequest( long, String, TaskSpec ): void","CreateWorkerRequest( long, String, TaskSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,3,0,3
<Method>org.apache.kafka.trogdor.rest.CreateWorkerRequest.public spec( ): TaskSpec,spec( ): TaskSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.CreateWorkerRequest.public taskId( ): String,taskId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.CreateWorkerRequest.public workerId( ): long,workerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.CreateWorkerRequest->spec,final spec : TaskSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.CreateWorkerRequest->taskId,final taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.CreateWorkerRequest->workerId,final workerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.DestroyTaskRequest,DestroyTaskRequest,low-medium,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.DestroyTaskRequest.public DestroyTaskRequest( String ): void,DestroyTaskRequest( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.DestroyTaskRequest.public id( ): String,id( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.DestroyTaskRequest->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.DestroyWorkerRequest,DestroyWorkerRequest,low-medium,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.DestroyWorkerRequest.public DestroyWorkerRequest( long ): void,DestroyWorkerRequest( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.DestroyWorkerRequest.public workerId( ): long,workerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.DestroyWorkerRequest->workerId,final workerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.Empty,Empty,low,low,low,low,1,7,2,1,0,7,15,13,0,1,4,0,0,0,0.375,1,0,0,,,,,15,,,,,,7,,,,,,,
<Method>org.apache.kafka.trogdor.rest.Empty.public Empty( ): void,Empty( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.Empty.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,1,2,0
<Method>org.apache.kafka.trogdor.rest.Empty.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.Empty.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.trogdor.rest.Empty->INSTANCE,static final INSTANCE : Empty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.ErrorResponse,ErrorResponse,low,low,low,low-medium,1,11,4,1,0,9,27,24,2,0,6,0,0,0.25,0.625,0.4,0,0,,,,,27,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public ErrorResponse( int, String ): void","ErrorResponse( int, String ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public code( ): int,code( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public equals( Object ): boolean,equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,7,1,4,4
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public message( ): String,message( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.ErrorResponse.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.trogdor.rest.ErrorResponse->code,final code : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.ErrorResponse->message,final message : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.JsonRestServer,JsonRestServer,low-medium,medium-high,low-medium,low,19,56,50,1,0,25,131,113,3,2,5,3,0,0.8,0.521,0.786,0,0,,,,,131,,,,,,25,,,,,,,
org.apache.kafka.trogdor.rest.JsonRestServer.HttpResponse<T>,HttpResponse,low,low,low,low,3,7,3,1,0,4,12,9,2,0,3,0,0,0.25,0.444,0,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public JsonRestServer( int ): void,JsonRestServer( int ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,1,4,7
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public beginShutdown( ): void,beginShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,4,15,0,2,2
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public port( ): int,port( ): int,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public start( Object ): void,start( Object ): void,low,very-high,low,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,30,1,18,9
"<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public static httpRequest( Logger, String, String, Object, TypeReference ): HttpResponse","static httpRequest( Logger, String, String, Object, TypeReference ): HttpResponse",low,low-medium,low-medium,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,38,5,24,0
"<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public static httpRequest( Logger, String, String, Object, TypeReference, int ): HttpResponse","static httpRequest( Logger, String, String, Object, TypeReference, int ): HttpResponse",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,13,6,4,0
"<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public static httpRequest( String, String, Object, TypeReference, int ): HttpResponse","static httpRequest( String, String, Object, TypeReference, int ): HttpResponse",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,5,1,1
<Method>org.apache.kafka.trogdor.rest.JsonRestServer.public waitForShutdown( ): void,waitForShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,2,2
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->connector,final connector : ServerConnector,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->jettyServer,final jettyServer : Server,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->shutdownExecutor,final shutdownExecutor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.JsonRestServer->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.Message,Message,low,low,low,low,1,9,6,1,16,6,12,11,0,0,3,0,0,0,0.333,0,0,0,,,,,12,,,,,,6,,,,,,,
<Method>org.apache.kafka.trogdor.rest.Message.public final equals( Object ): boolean,final equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,1,5,0
<Method>org.apache.kafka.trogdor.rest.Message.public final hashCode( ): int,final hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.trogdor.rest.Message.public final toString( ): String,final toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
org.apache.kafka.trogdor.rest.RequestConflictException,RequestConflictException,medium-high,low,low,low,0,2,0,4,0,2,6,4,0,1,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.RequestConflictException.public RequestConflictException( ): void,RequestConflictException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.RequestConflictException.public RequestConflictException( String ): void,RequestConflictException( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.trogdor.rest.RequestConflictException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.RestExceptionMapper,RestExceptionMapper,low,low,low,low,4,12,10,1,0,16,39,37,0,1,2,1,0,0,0.467,1,0,0,,,,,39,,,,,,16,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.RestExceptionMapper.private buildResponse( Status, Throwable ): Response","buildResponse( Status, Throwable ): Response",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,5,0
"<Method>org.apache.kafka.trogdor.rest.RestExceptionMapper.public static toException( int, String ): Exception","static toException( int, String ): Exception",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,11,2,4,0
<Method>org.apache.kafka.trogdor.rest.RestExceptionMapper.public toResponse( Throwable ): Response,toResponse( Throwable ): Response,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,2,22,1,13,4
<Field>org.apache.kafka.trogdor.rest.RestExceptionMapper->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.StopTaskRequest,StopTaskRequest,low-medium,low,low,low,0,2,0,2,0,3,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.StopTaskRequest.public StopTaskRequest( String ): void,StopTaskRequest( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.StopTaskRequest.public id( ): String,id( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.StopTaskRequest->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.StopWorkerRequest,StopWorkerRequest,low-medium,low,low,low,0,2,0,2,0,2,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.StopWorkerRequest.public StopWorkerRequest( long ): void,StopWorkerRequest( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.StopWorkerRequest.public workerId( ): long,workerId( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.StopWorkerRequest->workerId,final workerId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskDone,TaskDone,low-medium,low,low,low-medium,3,6,0,3,0,6,32,27,4,0,6,0,0,0.75,0.694,0.733,0,0,,,,,32,,,,,,6,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.TaskDone.public TaskDone( TaskSpec, long, long, String, boolean, JsonNode ): void","TaskDone( TaskSpec, long, long, String, boolean, JsonNode ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,6,0,4
<Method>org.apache.kafka.trogdor.rest.TaskDone.public cancelled( ): boolean,cancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public doneMs( ): long,doneMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public error( ): String,error( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskDone.public stateType( ): TaskStateType,stateType( ): TaskStateType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.TaskDone->cancelled,final cancelled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskDone->doneMs,final doneMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskDone->error,final error : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskDone->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskPending,TaskPending,low-medium,low,low,low,3,2,0,3,0,2,7,6,0,0,2,0,0,0,0.25,0,0,0,,,,,7,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskPending.public TaskPending( TaskSpec ): void,TaskPending( TaskSpec ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.rest.TaskPending.public stateType( ): TaskStateType,stateType( ): TaskStateType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.trogdor.rest.TaskRequest,TaskRequest,low,low,low,low,0,2,0,1,0,3,8,6,1,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskRequest.public TaskRequest( String ): void,TaskRequest( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Method>org.apache.kafka.trogdor.rest.TaskRequest.public taskId( ): String,taskId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TaskRequest->taskId,final taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskRunning,TaskRunning,low-medium,low,low,low,3,3,0,3,0,3,14,12,1,0,3,0,0,0,0.5,0.667,0,0,,,,,14,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.TaskRunning.public TaskRunning( TaskSpec, long, JsonNode ): void","TaskRunning( TaskSpec, long, JsonNode ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,1
<Method>org.apache.kafka.trogdor.rest.TaskRunning.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskRunning.public stateType( ): TaskStateType,stateType( ): TaskStateType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.TaskRunning->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskState,TaskState,low-medium,low,low,low,4,4,0,2,4,5,22,10,2,0,4,0,0,0.5,0.5,0.667,0,0,,,,,22,,,,,,5,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.TaskState.public TaskState( TaskSpec, JsonNode ): void","TaskState( TaskSpec, JsonNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,2,0,2
<Method>org.apache.kafka.trogdor.rest.TaskState.public abstract stateType( ): TaskStateType,abstract stateType( ): TaskStateType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.trogdor.rest.TaskState.public spec( ): TaskSpec,spec( ): TaskSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskState.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TaskState->spec,final spec : TaskSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskState->status,final status : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskStateType,TaskStateType,low-medium,low,low,low,0,1,0,2,0,1,13,1,0,4,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.trogdor.rest.TaskStateType.Constants,Constants,low,low,low,low,0,0,0,1,0,0,7,0,0,5,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TaskStateType.private TaskStateType( String ): void,TaskStateType( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Field>org.apache.kafka.trogdor.rest.TaskStateType->DONE,static final DONE : TaskStateType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskStateType->PENDING,static final PENDING : TaskStateType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskStateType->RUNNING,static final RUNNING : TaskStateType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TaskStateType->STOPPING,static final STOPPING : TaskStateType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TaskStopping,TaskStopping,low-medium,low,low,low,3,3,0,3,0,3,14,12,1,0,3,0,0,0,0.5,0.667,0,0,,,,,14,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.TaskStopping.public TaskStopping( TaskSpec, long, JsonNode ): void","TaskStopping( TaskSpec, long, JsonNode ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,0,1
<Method>org.apache.kafka.trogdor.rest.TaskStopping.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TaskStopping.public stateType( ): TaskStateType,stateType( ): TaskStateType,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.TaskStopping->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TasksRequest,TasksRequest,low-medium,low,low-medium,medium-high,1,16,8,2,0,24,53,46,6,0,8,0,0,0.714,0.708,0.536,0,0,,,,,53,,,,,,24,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.TasksRequest.public TasksRequest( Collection, long, long, long, long, Optional ): void","TasksRequest( Collection, long, long, long, long, Optional ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,14,6,6,6
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public firstEndMs( ): long,firstEndMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public firstStartMs( ): long,firstStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public lastEndMs( ): long,lastEndMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public lastStartMs( ): long,lastStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.trogdor.rest.TasksRequest.public matches( String, long, long, TaskStateType ): boolean","matches( String, long, long, TaskStateType ): boolean",low-medium,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,2,14,4,5,12
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public state( ): Optional,state( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.TasksRequest.public taskIds( ): Collection,taskIds( ): Collection,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TasksRequest->firstEndMs,final firstEndMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TasksRequest->firstStartMs,final firstStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TasksRequest->lastEndMs,final lastEndMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TasksRequest->lastStartMs,final lastStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TasksRequest->state,final state : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.TasksRequest->taskIds,final taskIds : Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.TasksResponse,TasksResponse,low-medium,low,low,low,0,3,1,2,0,3,9,7,1,0,2,0,0,0,0.25,0,0,0,,,,,9,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.rest.TasksResponse.public TasksResponse( TreeMap ): void,TasksResponse( TreeMap ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,1
<Method>org.apache.kafka.trogdor.rest.TasksResponse.public tasks( ): Map,tasks( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.TasksResponse->tasks,final tasks : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.UptimeResponse,UptimeResponse,low-medium,low,low,low,0,3,0,2,0,3,14,11,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,14,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.UptimeResponse.public UptimeResponse( long, long ): void","UptimeResponse( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
<Method>org.apache.kafka.trogdor.rest.UptimeResponse.public nowMs( ): long,nowMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.UptimeResponse.public serverStartMs( ): long,serverStartMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.UptimeResponse->nowMs,nowMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.UptimeResponse->serverStartMs,serverStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerDone,WorkerDone,low-medium,low,low,low-medium,3,6,0,3,0,8,34,29,4,0,6,0,2,0.75,0.667,0.733,0,1,,,,,34,,,,,,8,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerDone.public WorkerDone( String, TaskSpec, long, long, JsonNode, String ): void","WorkerDone( String, TaskSpec, long, long, JsonNode, String ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,6,0,4
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public done( ): boolean,done( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public doneMs( ): long,doneMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public error( ): String,error( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerDone.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Field>org.apache.kafka.trogdor.rest.WorkerDone->doneMs,final doneMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerDone->error,final error : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerDone->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerDone->status,final status : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerReceiving,WorkerReceiving,low-medium,low,low,low,3,2,0,3,0,2,8,7,0,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerReceiving.public WorkerReceiving( String, TaskSpec ): void","WorkerReceiving( String, TaskSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerReceiving.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.trogdor.rest.WorkerRunning,WorkerRunning,low-medium,low,low,low,3,4,0,3,0,5,22,19,2,0,4,0,2,0.5,0.6,0.667,0,1.5,,,,,22,,,,,,5,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public WorkerRunning( String, TaskSpec, long, JsonNode ): void","WorkerRunning( String, TaskSpec, long, JsonNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,0,2
<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerRunning.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Field>org.apache.kafka.trogdor.rest.WorkerRunning->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerRunning->status,final status : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerStarting,WorkerStarting,low-medium,low,low,low,3,2,0,3,0,2,8,7,0,0,2,0,0,0,0.333,0,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerStarting.public WorkerStarting( String, TaskSpec ): void","WorkerStarting( String, TaskSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerStarting.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.trogdor.rest.WorkerState,WorkerState,low-medium,low,low,low,3,8,0,2,5,8,31,18,2,0,8,0,0,0.5,0.583,0.929,0,0,,,,,31,,,,,,8,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerState.public WorkerState( String, TaskSpec ): void","WorkerState( String, TaskSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.trogdor.rest.WorkerState.public abstract status( ): JsonNode,abstract status( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public done( ): boolean,done( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public spec( ): TaskSpec,spec( ): TaskSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerState.public startedMs( ): long,startedMs( ): long,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public stopping( ): boolean,stopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerState.public taskId( ): String,taskId( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.rest.WorkerState->spec,final spec : TaskSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerState->taskId,final taskId : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.rest.WorkerStopping,WorkerStopping,low-medium,low,low,low-medium,3,5,0,3,0,6,25,22,2,0,5,0,3,0.5,0.64,0.8,0,1.8,,,,,25,,,,,,6,,,,,,,
"<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public WorkerStopping( String, TaskSpec, long, JsonNode ): void","WorkerStopping( String, TaskSpec, long, JsonNode ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,4,0,2
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public running( ): boolean,running( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public startedMs( ): long,startedMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public status( ): JsonNode,status( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
<Method>org.apache.kafka.trogdor.rest.WorkerStopping.public stopping( ): boolean,stopping( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.trogdor.rest.WorkerStopping->startedMs,final startedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.rest.WorkerStopping->status,final status : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.trogdor.task,org.apache.kafka.trogdor.task,low,low-medium,low-medium,low,,,,,,28,84,,,,,,,,,,,,,8,5,3,84,42,7,0.5,0.143,0.357,28,,,,,,,
org.apache.kafka.trogdor.task.AgentWorkerStatusTracker,AgentWorkerStatusTracker,low,low,low,low,1,3,1,1,0,2,9,7,1,0,2,0,0,0,0.25,0,0,0,,,,,9,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.task.AgentWorkerStatusTracker.public synchronized get( ): JsonNode,synchronized get( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.task.AgentWorkerStatusTracker.public update( JsonNode ): void,update( JsonNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,1,1,1
<Field>org.apache.kafka.trogdor.task.AgentWorkerStatusTracker->status,status : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.task.NoOpTaskController,NoOpTaskController,low,low,low,low,3,9,1,1,0,2,6,4,0,1,2,0,0,0,0.25,1,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.task.NoOpTaskController.public NoOpTaskController( ): void,NoOpTaskController( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.trogdor.task.NoOpTaskController.public targetNodes( Topology ): Set,targetNodes( Topology ): Set,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,0
<Field>org.apache.kafka.trogdor.task.NoOpTaskController->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.task.NoOpTaskSpec,NoOpTaskSpec,low-medium,low,low,low,4,3,0,2,0,3,11,10,0,0,3,0,0,0,0.333,0,0,0,,,,,11,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.task.NoOpTaskSpec.public NoOpTaskSpec( long, long ): void","NoOpTaskSpec( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
<Method>org.apache.kafka.trogdor.task.NoOpTaskSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.task.NoOpTaskSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.trogdor.task.NoOpTaskWorker,NoOpTaskWorker,low,low,low,low,5,5,2,1,0,3,16,12,2,1,3,0,0,0.333,0.467,0,0,0,,,,,16,,,,,,3,,,,,,,
<Method>org.apache.kafka.trogdor.task.NoOpTaskWorker.public NoOpTaskWorker( String ): void,NoOpTaskWorker( String ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
"<Method>org.apache.kafka.trogdor.task.NoOpTaskWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,3,2,4
<Method>org.apache.kafka.trogdor.task.NoOpTaskWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,2,3
<Field>org.apache.kafka.trogdor.task.NoOpTaskWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.NoOpTaskWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.NoOpTaskWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.task.TaskController,TaskController,low,low,low,low,1,1,0,1,4,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.task.TaskController.public abstract targetNodes( Topology ): Set,targetNodes( Topology ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.trogdor.task.TaskSpec,TaskSpec,low,low,low,low-medium,3,19,9,1,11,14,34,27,2,1,10,0,0,0.556,0.7,0.929,0,0,,,,,34,,,,,,14,,,,,,,
"<Method>org.apache.kafka.trogdor.task.TaskSpec.protected TaskSpec( long, long ): void","TaskSpec( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,2,3
<Method>org.apache.kafka.trogdor.task.TaskSpec.public abstract newController( String ): TaskController,abstract newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.public abstract newTaskWorker( String ): TaskWorker,abstract newTaskWorker( String ): TaskWorker,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.protected configOrEmptyMap( Map ): Map,configOrEmptyMap( Map ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,1,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final durationMs( ): long,final durationMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final endMs( ): long,final endMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final equals( Object ): boolean,final equals( Object ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,1,5,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final hashCode( ): int,final hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,2,0
<Method>org.apache.kafka.trogdor.task.TaskSpec.public final startMs( ): long,final startMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.task.TaskSpec.public toString( ): String,toString( ): String,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Field>org.apache.kafka.trogdor.task.TaskSpec->durationMs,final durationMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.TaskSpec->startMs,final startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.task.TaskSpec->MAX_TASK_DURATION_MS,static final MAX_TASK_DURATION_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.task.TaskWorker,TaskWorker,low,low,low,low,3,2,0,1,11,2,4,2,0,0,2,0,0,0,0.25,0,0,0,,,,,4,,,,,,2,,,,,,,
"<Method>org.apache.kafka.trogdor.task.TaskWorker.public abstract start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.trogdor.task.TaskWorker.public abstract stop( Platform ): void,stop( Platform ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.trogdor.task.WorkerStatusTracker,WorkerStatusTracker,low,low,low,low,1,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.task.WorkerStatusTracker.public abstract update( JsonNode ): void,update( JsonNode ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.trogdor.workload,org.apache.kafka.trogdor.workload,medium-high,medium-high,very-high,low,,,,,,532,2454,,,,,,,,,,,,,74,70,4,2454,0,17,0.054,1,0.054,532,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressSpec,ConnectionStressSpec,low-medium,low,low,medium-high,3,13,3,2,0,13,50,40,6,0,9,0,0,0.833,0.73,0.833,0,0,,,,,50,,,,,,13,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressSpec.ConnectionStressAction,ConnectionStressAction,low,low,low,low,0,0,0,2,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public ConnectionStressSpec( long, long, List, String, Map, int, int, ConnectionStressAction ): void","ConnectionStressSpec( long, long, List, String, Map, int, int, ConnectionStressAction ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,17,8,3,6
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public action( ): ConnectionStressAction,action( ): ConnectionStressAction,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public clientNode( ): List,clientNode( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public commonClientConf( ): Map,commonClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public numThreads( ): int,numThreads( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConnectionStressSpec.public targetConnectionsPerSec( ): int,targetConnectionsPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->action,final action : ConnectionStressAction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->bootstrapServers,final bootstrapServers : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->clientNodes,final clientNodes : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->commonClientConf,final commonClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->numThreads,final numThreads : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressSpec->targetConnectionsPerSec,final targetConnectionsPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker,ConnectionStressWorker,low,low-medium,low-medium,low,7,29,17,1,0,6,181,38,11,4,3,0,0,0.7,0.5,0,0,0,,,,,181,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.ConnectLoop,ConnectLoop,low,low,low,low,7,26,9,1,0,4,20,19,0,0,1,0,0,0,0,0,1,0,,,,,20,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.ConnectStressThrottle,ConnectStressThrottle,low,low,low,low,0,1,0,2,0,1,3,2,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.ConnectStressor,ConnectStressor,low,low,low,low,17,116,19,1,0,4,45,41,3,0,3,0,0,0.167,0.333,0,0,0,,,,,45,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.FetchMetadataStressor,FetchMetadataStressor,low,low,low,low,6,137,8,1,0,5,17,15,1,0,3,0,0,0,0.333,1,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.StatusData,StatusData,low,low,low,low,0,4,0,1,0,4,20,16,3,0,4,0,0,0.667,0.5,1,0,0,,,,,20,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.StatusUpdater,StatusUpdater,low,low,low,low,7,12,4,1,0,2,13,12,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,2,,,,,,,
org.apache.kafka.trogdor.workload.ConnectionStressWorker.Stressor,Stressor,low,low,low,low,4,3,1,1,2,2,9,2,0,0,1,1,0,0,0.25,0,0,0,,,,,9,,,,,,2,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ConnectionStressWorker.public ConnectionStressWorker( String, ConnectionStressSpec ): void","ConnectionStressWorker( String, ConnectionStressSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.ConnectionStressWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,medium-high,low,low,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,20,3,11,18
<Method>org.apache.kafka.trogdor.workload.ConnectionStressWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,1,9,12
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->spec,final spec : ConnectionStressSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->startTimeMs,startTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->REPORT_INTERVAL_MS,static final REPORT_INTERVAL_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->TIME,static final TIME : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->statusUpdaterExecutor,statusUpdaterExecutor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->statusUpdaterFuture,statusUpdaterFuture : Future,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->totalConnections,totalConnections : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->totalFailedConnections,totalFailedConnections : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConnectionStressWorker->workerExecutor,workerExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ConstantPayloadGenerator,ConstantPayloadGenerator,low,low,low,low,0,6,2,1,0,7,20,17,2,0,4,0,0,0.333,0.562,0.167,0,0,,,,,20,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator.public ConstantPayloadGenerator( int, byte ): void","ConstantPayloadGenerator( int, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,2,0,2
<Method>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator.public generate( long ): byte,generate( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,4
<Method>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator.public value( ): byte,value( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConstantPayloadGenerator->value,final value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchSpec,ConsumeBenchSpec,low-medium,low,low-medium,medium-high,5,35,16,2,0,28,97,85,10,1,15,0,0,0.909,0.771,0.872,0,0,,,,,97,,,,,,28,,,,,,,
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec. materializeTopics( ): Map, materializeTopics( ): Map,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,17,0,12,2
"<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public ConsumeBenchSpec( long, long, String, String, int, long, String, Map, Map, Map, Integer, List ): void","ConsumeBenchSpec( long, long, String, String, int, long, String, Map, Map, Map, Integer, List ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,1,24,12,3,10
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public activeTopics( ): List,activeTopics( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public adminClientConf( ): Map,adminClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public commonClientConf( ): Map,commonClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public consumerConf( ): Map,consumerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public consumerGroup( ): String,consumerGroup( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public consumerNode( ): String,consumerNode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.private expandTopicName( String ): Set,expandTopicName( String ): Set,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,1,4,0
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public maxMessages( ): long,maxMessages( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public targetMessagesPerSec( ): int,targetMessagesPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchSpec.public threadsPerWorker( ): int,threadsPerWorker( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->activeTopics,final activeTopics : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->adminClientConf,final adminClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->bootstrapServers,final bootstrapServers : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->commonClientConf,final commonClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->consumerConf,final consumerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->consumerGroup,final consumerGroup : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->consumerNode,final consumerNode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->maxMessages,final maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->targetMessagesPerSec,final targetMessagesPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->threadsPerWorker,final threadsPerWorker : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchSpec->VALID_EXPANDED_TOPIC_NAME_PATTERN,static final VALID_EXPANDED_TOPIC_NAME_PATTERN : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker,ConsumeBenchWorker,very-high,low-medium,medium-high,low,6,252,12,1,0,5,329,32,9,2,3,0,0,0.591,0.5,0,0,0,,,,,329,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.CloseStatusUpdater,CloseStatusUpdater,low,low,low,low,2,12,8,1,0,4,14,12,1,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.ConsumeMessages,ConsumeMessages,low,low,low,low,12,634,23,1,0,12,68,61,6,0,4,0,0,0.556,0.437,0,0,0,,,,,68,,,,,,12,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.ConsumeStatusUpdater,ConsumeStatusUpdater,low,low,low,low,9,49,13,1,0,4,29,25,3,0,3,0,0,0,0.444,0,0,0,,,,,29,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.Prepare,Prepare,low,low,low,low,9,222,39,1,0,18,61,60,0,0,7,0,0,0,0.686,0,0,0,,,,,61,,,,,,18,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.StatusData,StatusData,low,low,low,low,0,9,0,1,0,9,51,41,8,1,9,0,0,0.903,0.711,1,0,0,,,,,51,,,,,,9,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.StatusUpdater,StatusUpdater,low,low,low,low,5,15,5,1,0,5,14,12,1,0,4,0,0,0,0.5,0,0,0,,,,,14,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.ConsumeBenchWorker.ThreadSafeConsumer,ThreadSafeConsumer,low,low,low,low,3,597,13,1,0,9,48,43,4,0,8,0,0,0.571,0.7,0,0,0,,,,,48,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ConsumeBenchWorker.public ConsumeBenchWorker( String, ConsumeBenchSpec ): void","ConsumeBenchWorker( String, ConsumeBenchSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.ConsumeBenchWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,medium-high,low,low,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,7,13
<Method>org.apache.kafka.trogdor.workload.ConsumeBenchWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,15,1,6,13
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->consumer,consumer : ThreadSafeConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->executor,executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->spec,final spec : ConsumeBenchSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->statusUpdater,statusUpdater : StatusUpdater,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->statusUpdaterFuture,statusUpdaterFuture : Future,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ConsumeBenchWorker->workerStatus,workerStatus : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandSpec,ExternalCommandSpec,low-medium,low,low,low-medium,5,8,1,2,0,10,36,31,4,0,7,0,0,0.75,0.667,0.81,0,0,,,,,36,,,,,,10,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public ExternalCommandSpec( long, long, String, List, JsonNode, Optional ): void","ExternalCommandSpec( long, long, String, List, JsonNode, Optional ): void",low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,13,6,1,4
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public command( ): List,command( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public commandNode( ): String,commandNode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public shutdownGracePeriodMs( ): Optional,shutdownGracePeriodMs( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ExternalCommandSpec.public workload( ): JsonNode,workload( ): JsonNode,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ExternalCommandSpec->command,final command : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandSpec->commandNode,final commandNode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandSpec->shutdownGracePeriodMs,final shutdownGracePeriodMs : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandSpec->workload,final workload : JsonNode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker,ExternalCommandWorker,low,medium-high,low-medium,low,13,28,23,1,0,12,208,57,8,2,4,1,0,0.667,0.6,0,0,0,,,,,208,,,,,,12,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.ExitMonitor,ExitMonitor,low,low,low,low,3,12,9,1,0,4,29,24,4,0,2,0,0,0,0.333,0,0,0,,,,,29,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.StderrMonitor,StderrMonitor,low,low,low,low,1,8,6,1,0,6,21,19,1,0,2,0,0,0,0.25,0,0,0,,,,,21,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.StdinWriter,StdinWriter,low,low,low,low,2,16,13,1,0,7,28,26,1,0,2,0,0,0,0.25,0,0,0,,,,,28,,,,,,7,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.StdoutMonitor,StdoutMonitor,low,low,low,low,4,18,14,1,0,9,31,29,1,0,2,0,0,0,0.25,0,0,0,,,,,31,,,,,,9,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.Terminator,Terminator,low,low,low,low,3,14,11,1,0,7,27,25,1,0,2,0,0,0,0.25,0,0,0,,,,,27,,,,,,7,,,,,,,
org.apache.kafka.trogdor.workload.ExternalCommandWorker.TerminatorAction,TerminatorAction,low,low,low,low,0,0,0,2,0,0,4,0,0,3,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ExternalCommandWorker.public ExternalCommandWorker( String, ExternalCommandSpec ): void","ExternalCommandWorker( String, ExternalCommandSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.ExternalCommandWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,very-high,low,low,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,27,3,19,18
<Method>org.apache.kafka.trogdor.workload.ExternalCommandWorker.private startProcess( ): Process,startProcess( ): Process,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,4,2
<Method>org.apache.kafka.trogdor.workload.ExternalCommandWorker.private static readObject( String ): JsonNode,static readObject( String ): JsonNode,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,1,0
<Method>org.apache.kafka.trogdor.workload.ExternalCommandWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,1,10,13
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->executor,executor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->spec,final spec : ExternalCommandSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->stdinQueue,final stdinQueue : LinkedBlockingQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->terminatorActionQueue,final terminatorActionQueue : LinkedBlockingQueue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->DEFAULT_SHUTDOWN_GRACE_PERIOD_MS,static final DEFAULT_SHUTDOWN_GRACE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ExternalCommandWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.Histogram,Histogram,low-medium,low,low-medium,low,1,9,6,1,0,22,89,62,2,0,6,0,0,0.75,0.458,0.7,0,0,,,,,89,,,,,,22,,,,,,,
org.apache.kafka.trogdor.workload.Histogram.PercentileSummary,PercentileSummary,low,low,low,low,0,3,0,1,0,3,10,7,2,0,3,0,0,0.5,0.444,1,0,0,,,,,10,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.Histogram.Summary,Summary,low,low,low,low,0,4,0,1,0,4,14,10,3,0,4,0,0,0.667,0.562,1,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.trogdor.workload.Histogram.public Histogram( int ): void,Histogram( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.workload.Histogram.public add( int ): void,add( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,1,0,5
<Method>org.apache.kafka.trogdor.workload.Histogram.public add( long ): void,add( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,3,0
<Method>org.apache.kafka.trogdor.workload.Histogram.public summarize( ): Summary,summarize( ): Summary,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.trogdor.workload.Histogram.public summarize( float ): Summary,summarize( float ): Summary,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,22,1,2,3
"<Method>org.apache.kafka.trogdor.workload.Histogram.private summarizePercentiles( int, float, long ): List","summarizePercentiles( int, float, long ): List",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,20,3,3,0
<Field>org.apache.kafka.trogdor.workload.Histogram->counts,final counts : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Histogram->log,final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.NullPayloadGenerator,NullPayloadGenerator,low,low,low,low,0,2,0,1,0,2,6,5,0,0,2,0,0,0,0.25,0,0,0,,,,,6,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.workload.NullPayloadGenerator.public NullPayloadGenerator( ): void,NullPayloadGenerator( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.trogdor.workload.NullPayloadGenerator.public generate( long ): byte,generate( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.trogdor.workload.PartitionsSpec,PartitionsSpec,low-medium,low,low-medium,low-medium,1,19,12,2,0,21,62,55,4,2,7,0,0,0.694,0.686,0.381,0,0,,,,,62,,,,,,21,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public PartitionsSpec( int, short, Map, Map ): void","PartitionsSpec( int, short, Map, Map ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,5,21,4,12,5
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public configs( ): Map,configs( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public newTopic( String ): NewTopic,newTopic( String ): NewTopic,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,13,1,3,10
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public numPartitions( ): int,numPartitions( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public partitionAssignments( ): Map,partitionAssignments( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public partitionNumbers( ): List,partitionNumbers( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,3,5
<Method>org.apache.kafka.trogdor.workload.PartitionsSpec.public replicationFactor( ): short,replicationFactor( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->configs,final configs : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->numPartitions,final numPartitions : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->partitionAssignments,final partitionAssignments : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->replicationFactor,final replicationFactor : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->DEFAULT_NUM_PARTITIONS,static final DEFAULT_NUM_PARTITIONS : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PartitionsSpec->DEFAULT_REPLICATION_FACTOR,static final DEFAULT_REPLICATION_FACTOR : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.PayloadGenerator,PayloadGenerator,low,low,low,low,0,1,0,1,5,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.trogdor.workload.PayloadGenerator.public abstract generate( long ): byte,generate( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.trogdor.workload.PayloadIterator,PayloadIterator,low,low,low,low,1,7,1,1,0,6,18,15,2,0,6,0,0,0.5,0.556,0.733,0,0,,,,,18,,,,,,6,,,,,,,
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public PayloadIterator( PayloadGenerator ): void,PayloadIterator( PayloadGenerator ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public synchronized next( ): byte,synchronized next( ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,2
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public synchronized position( ): long,synchronized position( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.workload.PayloadIterator.public synchronized seek( long ): void,synchronized seek( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.trogdor.workload.PayloadIterator->generator,final generator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PayloadIterator->position,position : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.PayloadKeyType,PayloadKeyType,low-medium,low,low,low,0,2,0,2,0,2,8,4,1,2,2,0,0,1.333,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.trogdor.workload.PayloadKeyType.private PayloadKeyType( int ): void,PayloadKeyType( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.workload.PayloadKeyType.public maxSizeInBytes( ): int,maxSizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.trogdor.workload.PayloadKeyType->maxSizeInBytes,final maxSizeInBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PayloadKeyType->KEY_MESSAGE_INDEX,static final KEY_MESSAGE_INDEX : PayloadKeyType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.PayloadKeyType->KEY_NULL,static final KEY_NULL : PayloadKeyType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchSpec,ProduceBenchSpec,low-medium,low-medium,low-medium,high,7,23,3,2,0,24,99,84,14,0,17,0,0,0.929,0.824,0.897,0,0,,,,,99,,,,,,24,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public ProduceBenchSpec( long, long, String, String, int, long, PayloadGenerator, PayloadGenerator, Optional, Map, Map, Map, TopicsSpec, TopicsSpec, boolean, boolean ): void","ProduceBenchSpec( long, long, String, String, int, long, PayloadGenerator, PayloadGenerator, Optional, Map, Map, Map, TopicsSpec, TopicsSpec, boolean, boolean ): void",low,low-medium,low-medium,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,1,36,16,6,14
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public activeTopics( ): TopicsSpec,activeTopics( ): TopicsSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public adminClientConf( ): Map,adminClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public commonClientConf( ): Map,commonClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public inactiveTopics( ): TopicsSpec,inactiveTopics( ): TopicsSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public keyGenerator( ): PayloadGenerator,keyGenerator( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public maxMessages( ): long,maxMessages( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public producerConf( ): Map,producerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public producerNode( ): String,producerNode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public skipFlush( ): boolean,skipFlush( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public targetMessagesPerSec( ): int,targetMessagesPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public transactionGenerator( ): Optional,transactionGenerator( ): Optional,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public useConfiguredPartitioner( ): boolean,useConfiguredPartitioner( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.ProduceBenchSpec.public valueGenerator( ): PayloadGenerator,valueGenerator( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->activeTopics,final activeTopics : TopicsSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->adminClientConf,final adminClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->bootstrapServers,final bootstrapServers : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->commonClientConf,final commonClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->inactiveTopics,final inactiveTopics : TopicsSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->keyGenerator,final keyGenerator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->maxMessages,final maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->producerConf,final producerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->producerNode,final producerNode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->skipFlush,final skipFlush : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->targetMessagesPerSec,final targetMessagesPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->transactionGenerator,final transactionGenerator : Optional,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->useConfiguredPartitioner,final useConfiguredPartitioner : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchSpec->valueGenerator,final valueGenerator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker,ProduceBenchWorker,low,low-medium,low-medium,low,6,13,9,1,0,5,256,25,6,2,3,0,0,0.563,0.5,0,0,0,,,,,256,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.Prepare,Prepare,low,low,low,low,8,197,20,1,0,6,27,26,0,0,1,0,0,0,0,0,0,0,,,,,27,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecords,SendRecords,low,low,low,low,20,356,46,1,0,23,110,97,12,0,5,0,0,0.667,0.533,0,0,0,,,,,110,,,,,,23,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecordsCallback,SendRecordsCallback,low,low,low,low,4,7,3,1,0,3,13,10,2,0,2,0,0,0,0.4,0,0,0,,,,,13,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecordsThrottle,SendRecordsThrottle,low,low,low,low,2,17,4,2,0,2,12,10,1,0,2,0,0,0,0.375,0,0,0,,,,,12,,,,,,2,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.StatusData,StatusData,low,low,low,low,0,7,0,1,0,7,39,31,6,1,7,0,0,0.881,0.643,1,0,0,,,,,39,,,,,,7,,,,,,,
org.apache.kafka.trogdor.workload.ProduceBenchWorker.StatusUpdater,StatusUpdater,low,low,low,low,8,24,11,1,0,4,21,18,2,0,3,0,0,0,0.444,0,0,0,,,,,21,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.ProduceBenchWorker.public ProduceBenchWorker( String, ProduceBenchSpec ): void","ProduceBenchWorker( String, ProduceBenchSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.ProduceBenchWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,low-medium,low,low,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,3,5,8
<Method>org.apache.kafka.trogdor.workload.ProduceBenchWorker.public stop( Platform ): void,stop( Platform ): void,low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,11,1,5,9
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->executor,executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->spec,final spec : ProduceBenchSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.ProduceBenchWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RandomComponent,RandomComponent,low,low,low,low,1,3,0,1,0,3,14,11,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,14,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.RandomComponent.public RandomComponent( int, PayloadGenerator ): void","RandomComponent( int, PayloadGenerator ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,2
<Method>org.apache.kafka.trogdor.workload.RandomComponent.public component( ): PayloadGenerator,component( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RandomComponent.public percent( ): int,percent( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.RandomComponent->component,final component : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RandomComponent->percent,final percent : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator,RandomComponentPayloadGenerator,low,low,low,low,1,11,7,1,0,11,38,34,3,0,4,0,0,0.556,0.417,0.167,0,0,,,,,38,,,,,,11,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator.public RandomComponentPayloadGenerator( long, List ): void","RandomComponentPayloadGenerator( long, List ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,14,2,3,2
<Method>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator.public components( ): List,components( ): List,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator.public generate( long ): byte,generate( long ): byte,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,14,1,6,6
<Method>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator.public seed( ): long,seed( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator->components,final components : List,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator->random,final random : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RandomComponentPayloadGenerator->seed,final seed : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker,RoundTripWorker,low,low-medium,low-medium,low,10,17,10,1,0,5,281,33,13,5,3,0,0,0.944,0.5,0,0,0,,,,,281,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ConsumerRunnable,ConsumerRunnable,low,low,low,low,14,611,29,1,0,11,59,57,1,0,2,0,0,0,0.25,0,0,0,,,,,59,,,,,,11,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.Prepare,Prepare,low,low,low,low,13,199,22,1,0,6,30,29,0,0,1,0,0,0,0,0,0,0,,,,,30,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ProducerRunnable,ProducerRunnable,low,low,low,low,13,266,24,1,0,9,66,63,2,0,2,0,0,0,0.25,0,0,0,,,,,66,,,,,,9,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.StatusData,StatusData,low,low,low,low,0,3,0,1,0,3,14,11,2,0,3,0,0,0.5,0.333,0.333,0,0,,,,,14,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.StatusUpdater,StatusUpdater,low,low,low,low,7,14,6,1,0,3,12,11,0,0,2,0,0,0,0,0,0,0,,,,,12,,,,,,3,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToReceiveTracker,ToReceiveTracker,low,low,low,low,2,19,10,1,0,7,24,21,2,0,4,0,0,0.5,0.25,0,0,0,,,,,24,,,,,,7,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToSendTracker,ToSendTracker,low,low,low,low,1,7,3,1,0,6,18,14,3,0,4,0,0,0.667,0.25,0,0,0,,,,,18,,,,,,6,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorker.ToSendTrackerResult,ToSendTrackerResult,low,low,low,low,0,1,0,1,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.RoundTripWorker.public RoundTripWorker( String, RoundTripWorkloadSpec ): void","RoundTripWorker( String, RoundTripWorkloadSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.RoundTripWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,medium-high,low,low,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,6,11
<Method>org.apache.kafka.trogdor.workload.RoundTripWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,16,1,8,15
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->consumer,consumer : KafkaConsumer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->executor,executor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->lock,final lock : Lock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->spec,final spec : RoundTripWorkloadSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->unackedSendsAreZero,final unackedSendsAreZero : Condition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->producer,producer : KafkaProducer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->KEY_GENERATOR,static final KEY_GENERATOR : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->LOG_INTERVAL_MS,static final LOG_INTERVAL_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->LOG_NUM_MESSAGES,static final LOG_NUM_MESSAGES : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->THROTTLE_PERIOD_MS,static final THROTTLE_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->toReceiveTracker,toReceiveTracker : ToReceiveTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->toSendTracker,toSendTracker : ToSendTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorker->unackedSends,unackedSends : Long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec,RoundTripWorkloadSpec,low-medium,low-medium,low-medium,medium-high,6,18,2,2,0,17,73,62,10,0,13,0,0,0.9,0.769,0.872,0,0,,,,,73,,,,,,17,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public RoundTripWorkloadSpec( long, long, String, String, Map, Map, Map, Map, int, PayloadGenerator, TopicsSpec, long ): void","RoundTripWorkloadSpec( long, long, String, String, Map, Map, Map, Map, int, PayloadGenerator, TopicsSpec, long ): void",low,low,low,low,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,26,12,5,10
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public activeTopics( ): TopicsSpec,activeTopics( ): TopicsSpec,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public adminClientConf( ): Map,adminClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public clientNode( ): String,clientNode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public commonClientConf( ): Map,commonClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public consumerConf( ): Map,consumerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public maxMessages( ): long,maxMessages( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public producerConf( ): Map,producerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public targetMessagesPerSec( ): int,targetMessagesPerSec( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec.public valueGenerator( ): PayloadGenerator,valueGenerator( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->activeTopics,final activeTopics : TopicsSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->adminClientConf,final adminClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->bootstrapServers,final bootstrapServers : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->clientNode,final clientNode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->commonClientConf,final commonClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->consumerConf,final consumerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->maxMessages,final maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->producerConf,final producerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->targetMessagesPerSec,final targetMessagesPerSec : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.RoundTripWorkloadSpec->valueGenerator,final valueGenerator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.SequentialPayloadGenerator,SequentialPayloadGenerator,low,low,low,low,0,11,7,1,0,4,24,20,3,0,4,0,0,0.444,0.417,0.167,0,0,,,,,24,,,,,,4,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator.public SequentialPayloadGenerator( int, long ): void","SequentialPayloadGenerator( int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,2,2,4
<Method>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator.public startOffset( ): long,startOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator.public synchronized generate( long ): byte,synchronized generate( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,6,6
<Field>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator->buf,final buf : ByteBuffer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SequentialPayloadGenerator->startOffset,final startOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionSpec,SustainedConnectionSpec,low-medium,low,low-medium,medium-high,4,19,1,2,0,21,95,80,14,0,17,0,0,0.929,0.765,0.897,0,0,,,,,95,,,,,,21,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public SustainedConnectionSpec( long, long, String, String, Map, Map, Map, Map, PayloadGenerator, PayloadGenerator, int, int, int, String, int, int ): void","SustainedConnectionSpec( long, long, String, String, Map, Map, Map, Map, PayloadGenerator, PayloadGenerator, int, int, int, String, int, int ): void",low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,33,16,4,14
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public adminClientConf( ): Map,adminClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public bootstrapServers( ): String,bootstrapServers( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public clientNode( ): String,clientNode( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public commonClientConf( ): Map,commonClientConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public consumerConf( ): Map,consumerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public consumerConnectionCount( ): int,consumerConnectionCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public keyGenerator( ): PayloadGenerator,keyGenerator( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public metadataConnectionCount( ): int,metadataConnectionCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public newController( String ): TaskController,newController( String ): TaskController,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public newTaskWorker( String ): TaskWorker,newTaskWorker( String ): TaskWorker,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public numThreads( ): int,numThreads( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public producerConf( ): Map,producerConf( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public producerConnectionCount( ): int,producerConnectionCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public refreshRateMs( ): int,refreshRateMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public topicName( ): String,topicName( ): String,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionSpec.public valueGenerator( ): PayloadGenerator,valueGenerator( ): PayloadGenerator,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->adminClientConf,final adminClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->bootstrapServers,final bootstrapServers : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->clientNode,final clientNode : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->commonClientConf,final commonClientConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->consumerConf,final consumerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->consumerConnectionCount,final consumerConnectionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->keyGenerator,final keyGenerator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->metadataConnectionCount,final metadataConnectionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->numThreads,final numThreads : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->producerConf,final producerConf : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->producerConnectionCount,final producerConnectionCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->refreshRateMs,final refreshRateMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->topicName,final topicName : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionSpec->valueGenerator,final valueGenerator : PayloadGenerator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker,SustainedConnectionWorker,low,low-medium,low-medium,low,7,42,26,1,0,13,299,58,16,4,4,0,0,0.817,0.583,0,0,0,,,,,299,,,,,,13,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.ClaimableConnection,ClaimableConnection,low,low,low,low,1,7,2,1,3,5,17,13,3,0,5,0,0,0.5,0.4,0.667,0,0,,,,,17,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.ConsumerSustainedConnection,ConsumerSustainedConnection,low,low,low,low,8,628,27,2,0,5,43,37,5,0,3,0,0,0.3,0,0,0,0,,,,,43,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.MaintainLoop,MaintainLoop,low,low,low,low,4,19,8,1,0,4,13,12,0,0,1,0,0,0,0,0,1,0,,,,,13,,,,,,4,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.MetadataSustainedConnection,MetadataSustainedConnection,low,low,low,low,8,145,15,2,0,5,27,24,2,0,3,0,0,0.25,0,0,0,0,,,,,27,,,,,,5,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.ProducerSustainedConnection,ProducerSustainedConnection,low,low,low,low,10,265,29,2,0,7,48,40,7,0,3,0,0,0.286,0,0,0,0,,,,,48,,,,,,7,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.StatusData,StatusData,low,low,low,low,0,9,0,1,0,9,50,41,8,0,9,0,0,0.875,0.444,1,0,0,,,,,50,,,,,,9,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.StatusUpdater,StatusUpdater,low,low,low,low,8,15,6,1,0,2,18,17,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
org.apache.kafka.trogdor.workload.SustainedConnectionWorker.SustainedConnection,SustainedConnection,low,low,low,low,0,3,0,1,1,3,4,3,0,0,3,0,0,0,0.333,0,0,0,,,,,4,,,,,,3,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.SustainedConnectionWorker.public SustainedConnectionWorker( String, SustainedConnectionSpec ): void","SustainedConnectionWorker( String, SustainedConnectionSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.trogdor.workload.SustainedConnectionWorker.public start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void","start( Platform, WorkerStatusTracker, KafkaFutureImpl ): void",low,very-high,low,low,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,30,3,16,28
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionWorker.public stop( Platform ): void,stop( Platform ): void,low,low-medium,low,low,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,18,1,10,14
<Method>org.apache.kafka.trogdor.workload.SustainedConnectionWorker.private synchronized findConnectionToMaintain( ): Optional,synchronized findConnectionToMaintain( ): Optional,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,5,2
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->connections,connections : ArrayList,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->doneFuture,doneFuture : KafkaFutureImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->id,final id : String,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->running,final running : AtomicBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->spec,final spec : SustainedConnectionSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->BACKOFF_PERIOD_MS,static final BACKOFF_PERIOD_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->REPORT_INTERVAL_MS,static final REPORT_INTERVAL_MS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->SYSTEM_TIME,static final SYSTEM_TIME : SystemTime,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->log,static final log : Logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->status,status : WorkerStatusTracker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->statusUpdaterExecutor,statusUpdaterExecutor : ScheduledExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->statusUpdaterFuture,statusUpdaterFuture : Future,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalAbortedThreads,totalAbortedThreads : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalConsumerConnections,totalConsumerConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalConsumerFailedConnections,totalConsumerFailedConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalMetadataConnections,totalMetadataConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalMetadataFailedConnections,totalMetadataFailedConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalProducerConnections,totalProducerConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->totalProducerFailedConnections,totalProducerFailedConnections : AtomicLong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.SustainedConnectionWorker->workerExecutor,workerExecutor : ExecutorService,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.Throttle,Throttle,low,low,low,low,1,7,4,1,2,9,34,28,5,0,5,0,0,0.4,0.533,0,0,0,,,,,34,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.Throttle. Throttle( int, int ): void"," Throttle( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,5
<Method>org.apache.kafka.trogdor.workload.Throttle.protected synchronized delay( long ): void,synchronized delay( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,1,1,0
<Method>org.apache.kafka.trogdor.workload.Throttle.public synchronized increment( ): boolean,synchronized increment( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,15,0,3,11
<Method>org.apache.kafka.trogdor.workload.Throttle.public synchronized lastTimeMs( ): long,synchronized lastTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.trogdor.workload.Throttle.protected time( ): Time,time( ): Time,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.trogdor.workload.Throttle->count,count : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->maxPerPeriod,final maxPerPeriod : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->periodMs,final periodMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->lastTimeMs,lastTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.Throttle->prevPeriod,prevPeriod : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator,TimeIntervalTransactionsGenerator,low,low,low,low,2,5,1,1,0,7,26,21,3,1,4,0,0,0.625,0.417,0.667,0,0,,,,,26,,,,,,7,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator. TimeIntervalTransactionsGenerator( int, Time ): void"," TimeIntervalTransactionsGenerator( int, Time ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,0,2
<Method>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator.public TimeIntervalTransactionsGenerator( int ): void,TimeIntervalTransactionsGenerator( int ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator.public synchronized nextAction( ): TransactionAction,synchronized nextAction( ): TransactionAction,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,9
<Method>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator.public transactionIntervalMs( ): int,transactionIntervalMs( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator->intervalMs,final intervalMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator->time,final time : Time,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator->lastTransactionStartMs,lastTransactionStartMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.TimeIntervalTransactionsGenerator->NULL_START_MS,static final NULL_START_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.TopicsSpec,TopicsSpec,low-medium,low,low,low-medium,2,20,8,2,0,8,26,23,1,1,6,0,0,0.6,0.625,0,0,0,,,,,26,,,,,,8,,,,,,,
<Method>org.apache.kafka.trogdor.workload.TopicsSpec.public TopicsSpec( ): void,TopicsSpec( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.TopicsSpec.private TopicsSpec( Map ): void,TopicsSpec( Map ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.trogdor.workload.TopicsSpec.public get( ): Map,get( ): Map,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.TopicsSpec.public immutableCopy( ): TopicsSpec,immutableCopy( ): TopicsSpec,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,2,1
<Method>org.apache.kafka.trogdor.workload.TopicsSpec.public materialize( ): Map,materialize( ): Map,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,5,1
"<Method>org.apache.kafka.trogdor.workload.TopicsSpec.public set( String, PartitionsSpec ): void","set( String, PartitionsSpec ): void",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,1,1
<Field>org.apache.kafka.trogdor.workload.TopicsSpec->map,final map : Map,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.TopicsSpec->EMPTY,static final EMPTY : TopicsSpec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.TransactionGenerator,TransactionGenerator,low,low,low,low,0,1,0,1,2,1,11,1,0,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
org.apache.kafka.trogdor.workload.TransactionGenerator.TransactionAction,TransactionAction,low,low,low,low,0,0,0,2,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.trogdor.workload.TransactionGenerator.public abstract nextAction( ): TransactionAction,nextAction( ): TransactionAction,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator,UniformRandomPayloadGenerator,low,low,low,low,0,9,4,1,0,9,41,34,6,0,5,0,0,0.667,0.467,0.4,0,0,,,,,41,,,,,,9,,,,,,,
"<Method>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator.public UniformRandomPayloadGenerator( int, long, int ): void","UniformRandomPayloadGenerator( int, long, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,15,3,2,8
<Method>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator.public padding( ): int,padding( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator.public seed( ): long,seed( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator.public synchronized generate( long ): byte,synchronized generate( long ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,5,12
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->padBytes,final padBytes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->padding,final padding : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->random,final random : Random,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->randomBytes,final randomBytes : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->seed,final seed : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformRandomPayloadGenerator->size,final size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.trogdor.workload.UniformTransactionsGenerator,UniformTransactionsGenerator,low,low,low,low,1,3,0,1,0,6,21,18,2,0,3,0,0,0.5,0.333,0,0,0,,,,,21,,,,,,6,,,,,,,
<Method>org.apache.kafka.trogdor.workload.UniformTransactionsGenerator.public UniformTransactionsGenerator( int ): void,UniformTransactionsGenerator( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.trogdor.workload.UniformTransactionsGenerator.public messagesPerTransaction( ): int,messagesPerTransaction( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.trogdor.workload.UniformTransactionsGenerator.public synchronized nextAction( ): TransactionAction,synchronized nextAction( ): TransactionAction,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,0,0,6
<Field>org.apache.kafka.trogdor.workload.UniformTransactionsGenerator->messagesPerTransaction,final messagesPerTransaction : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.trogdor.workload.UniformTransactionsGenerator->messagesInTransaction,messagesInTransaction : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
