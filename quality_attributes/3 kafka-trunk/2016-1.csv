QualifiedName,Name,Complexity,Coupling,Size,Lack of Cohesion,CBO,RFC,SRFC,DIT,NOC,WMC,LOC,CMLOC,NOF,NOSF,NOM,NOSM,NORM,LCOM,LCAM,LTCC,ATFD,SI,Coverage,#(C&I),#C,#I,LOC,AC,EC,Abs,Ins,ND,WMC,Coverage,MCC,NBD,LOC,#Pa,#MC,#AF
kafka-b905d489188768ba1c55226857db9713b9272918,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>kafka.examples,kafka.examples,low,low,low-medium,low,,,,,,10,142,,,,,,,,,,,,,6,5,1,142,0,0,0.167,1,0.167,10,,,,,,,
kafka.examples.Consumer,Consumer,low,low,low,low,0,2,0,0,0,3,27,9,0,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,3,,,,,,,
<Method>kafka.examples.Consumer.public doWork( ): void,doWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>kafka.examples.Consumer.public isInterruptible( ): boolean,isInterruptible( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
kafka.examples.DemoCallBack,DemoCallBack,low,low,low,low,0,0,0,0,0,0,17,0,2,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>kafka.examples.DemoCallBack->key,key : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.DemoCallBack->startTime,startTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.KafkaConsumerProducerDemo,KafkaConsumerProducerDemo,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
kafka.examples.KafkaProperties,KafkaProperties,low,low,low,low,0,0,0,1,0,0,12,0,0,4,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Field>kafka.examples.KafkaProperties->CONNECTION_TIMEOUT,static final CONNECTION_TIMEOUT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_PRODUCER_BUFFER_SIZE,static final KAFKA_PRODUCER_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->KAFKA_SERVER_PORT,static final KAFKA_SERVER_PORT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>kafka.examples.KafkaProperties->RECONNECT_INTERVAL,static final RECONNECT_INTERVAL : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kafka.examples.Producer,Producer,low,low,low,low,1,1,0,0,0,5,33,20,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,5,,,,,,,
<Method>kafka.examples.Producer.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,20,0,0,0
kafka.examples.SimpleConsumerDemo,SimpleConsumerDemo,low,low,low,low,0,1,0,0,0,2,46,9,0,0,0,1,0,0,0,0,0,0,,,,,46,,,,,,2,,,,,,,
<Method>kafka.examples.SimpleConsumerDemo.private static generateData( ): void,static generateData( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Package>kafka.javaapi.consumer,kafka.javaapi.consumer,low,low,low,low,,,,,,12,16,,,,,,,,,,,,,2,0,2,16,0,0,1,1,1,12,,,,,,,
kafka.javaapi.consumer.ConsumerConnector,ConsumerConnector,low,low,low,low,0,3,0,1,0,10,13,3,0,0,3,0,0,0,0.333,0,0,0,,,,,13,,,,,,10,,,,,,,
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( ): void,commitOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract commitOffsets( boolean ): void,commitOffsets( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>kafka.javaapi.consumer.ConsumerConnector.public abstract shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
kafka.javaapi.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>kafka.tools,kafka.tools,low,low,low-medium,low,,,,,,19,309,,,,,,,,,,,,,7,7,0,309,0,0,0,1,0,19,,,,,,,
kafka.tools.KafkaMigrationTool,KafkaMigrationTool,low,low,medium-high,low,0,0,0,0,0,0,309,0,0,0,0,0,0,0,0,0,0,0,,,,,309,,,,,,0,,,,,,,
<Anonymous> : Lkafka.tools.KafkaMigrationTool$12335;,Lkafka.tools.KafkaMigrationTool$12335;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
kafka.tools.KafkaMigrationTool.MigrationThread,MigrationThread,low,low,low,low,1,3,1,0,0,7,52,37,2,0,2,0,0,0,0,1,0,0,,,,,52,,,,,,7,,,,,,,
kafka.tools.KafkaMigrationTool.ParentLastURLClassLoader,ParentLastURLClassLoader,low,low,low,low,0,0,0,0,0,0,28,0,1,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
kafka.tools.KafkaMigrationTool.ProducerDataChannel<T>,ProducerDataChannel,low,low,low,low,0,3,0,0,0,3,10,7,1,0,3,0,0,0,0.444,1,0,0,,,,,10,,,,,,3,,,,,,,
kafka.tools.KafkaMigrationTool.ProducerThread,ProducerThread,low,low,low,low,1,5,2,0,0,9,45,28,2,0,3,0,0,1,0,0.667,0,0,,,,,45,,,,,,9,,,,,,,
<Package>org.apache.kafka.clients,org.apache.kafka.clients,low,low,medium-high,low,,,,,,67,699,,,,,,,,,,,,,16,12,4,699,0,0,0.25,1,0.25,67,,,,,,,
org.apache.kafka.clients.ClientRequest,ClientRequest,low,low,low,low,0,6,0,0,0,6,42,12,4,0,6,0,0,0.938,0.417,0.933,0,0,,,,,42,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.ClientRequest.public createdTimeMs( ): long,createdTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public expectResponse( ): boolean,expectResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public hasCallback( ): boolean,hasCallback( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ClientRequest.public isInitiatedByNetworkClient( ): boolean,isInitiatedByNetworkClient( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public sendTimeMs( ): long,sendTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientRequest.public setSendTimeMs( long ): void,setSendTimeMs( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.clients.ClientRequest->createdTimeMs,final createdTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->expectResponse,final expectResponse : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->isInitiatedByNetworkClient,final isInitiatedByNetworkClient : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientRequest->sendTimeMs,sendTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientResponse,ClientResponse,low,low,low,low,0,4,1,0,0,4,33,8,2,0,4,0,0,1,0,1,0,0,,,,,33,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.ClientResponse.public hasResponse( ): boolean,hasResponse( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ClientResponse.public receivedTimeMs( ): long,receivedTimeMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.ClientResponse.public requestLatencyMs( ): long,requestLatencyMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.clients.ClientResponse.public wasDisconnected( ): boolean,wasDisconnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.ClientResponse->disconnected,final disconnected : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ClientResponse->receivedTimeMs,final receivedTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.ClientUtils,ClientUtils,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates,ClusterConnectionStates,low,low,low-medium,low,0,1,0,0,0,1,58,3,1,0,1,0,0,0,0,0,0,0,,,,,58,,,,,,1,,,,,,,
org.apache.kafka.clients.ClusterConnectionStates.NodeConnectionState,NodeConnectionState,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.ClusterConnectionStates.public ClusterConnectionStates( long ): void,ClusterConnectionStates( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.clients.ClusterConnectionStates->reconnectBackoffMs,final reconnectBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.CommonClientConfigs,CommonClientConfigs,low,low,low,low,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
org.apache.kafka.clients.ConnectionState,ConnectionState,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CONNECTED,static final CONNECTED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->CONNECTING,static final CONNECTING : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.ConnectionState->DISCONNECTED,static final DISCONNECTED : ConnectionState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.InFlightRequests,InFlightRequests,low,low,low,low,0,2,0,0,0,3,49,7,1,0,2,0,0,0,0.25,1,0,0,,,,,49,,,,,,3,,,,,,,
<Method>org.apache.kafka.clients.InFlightRequests.public InFlightRequests( int ): void,InFlightRequests( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.InFlightRequests.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Field>org.apache.kafka.clients.InFlightRequests->maxInFlightRequestsPerConnection,final maxInFlightRequestsPerConnection : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.KafkaClient,KafkaClient,low,low,low,low,0,2,0,1,0,13,14,2,0,0,2,0,0,0,0,0,0,0,,,,,14,,,,,,13,,,,,,,
<Method>org.apache.kafka.clients.KafkaClient.public abstract inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.KafkaClient.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.ManualMetadataUpdater,ManualMetadataUpdater,low,low,low,low,0,4,0,0,0,4,25,10,0,0,4,0,0,0,0.25,0,0,0,,,,,25,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public ManualMetadataUpdater( ): void,ManualMetadataUpdater( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.ManualMetadataUpdater.public requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.clients.Metadata,Metadata,low,low,low-medium,low-medium,0,13,0,0,0,18,96,48,7,0,13,0,0,0.778,0.677,0.782,0,0,,,,,96,,,,,,18,,,,,,,
org.apache.kafka.clients.Metadata.Listener,Listener,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.Metadata.public Metadata( ): void,Metadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.Metadata.public Metadata( long, long ): void","Metadata( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,11,2,0,7
<Method>org.apache.kafka.clients.Metadata.public refreshBackoff( ): long,refreshBackoff( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized addListener( Listener ): void,synchronized addListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.clients.Metadata.public synchronized awaitUpdate( int, long ): void","synchronized awaitUpdate( int, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,2,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized failedUpdate( long ): void,synchronized failedUpdate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized lastSuccessfulUpdate( ): long,synchronized lastSuccessfulUpdate( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( ): boolean,synchronized needMetadataForAllTopics( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized needMetadataForAllTopics( boolean ): void,synchronized needMetadataForAllTopics( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.Metadata.public synchronized removeListener( Listener ): void,synchronized removeListener( Listener ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.Metadata.public synchronized requestUpdate( ): int,synchronized requestUpdate( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.clients.Metadata.public synchronized timeToNextUpdate( long ): long,synchronized timeToNextUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,5
<Method>org.apache.kafka.clients.Metadata.public synchronized version( ): int,synchronized version( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.Metadata->metadataExpireMs,final metadataExpireMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->refreshBackoffMs,final refreshBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastRefreshMs,lastRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->lastSuccessfulRefreshMs,lastSuccessfulRefreshMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needMetadataForAllTopics,needMetadataForAllTopics : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->needUpdate,needUpdate : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.Metadata->version,version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.MetadataUpdater,MetadataUpdater,low,low,low,low,0,3,0,1,0,6,7,3,0,0,3,0,0,0,0.167,0,0,0,,,,,7,,,,,,6,,,,,,,
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract isUpdateDue( long ): boolean,isUpdateDue( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract maybeUpdate( long ): long,maybeUpdate( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.clients.MetadataUpdater.public abstract requestUpdate( ): void,requestUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.NetworkClient,NetworkClient,low,low,medium-high,low,0,4,0,0,0,5,305,13,4,0,4,0,0,0,0,1,0,0,,,,,305,,,,,,5,,,,,,,
org.apache.kafka.clients.NetworkClient.DefaultMetadataUpdater,DefaultMetadataUpdater,low,low,low,low,0,3,0,0,0,5,85,17,2,0,3,0,0,0.5,0.167,0.667,0,0,,,,,85,,,,,,5,,,,,,,
<Method>org.apache.kafka.clients.NetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.private handleConnections( ): void,handleConnections( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public inFlightRequestCount( ): int,inFlightRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.NetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.clients.NetworkClient->correlation,correlation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->requestTimeoutMs,final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketReceiveBuffer,final socketReceiveBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.NetworkClient->socketSendBuffer,final socketSendBuffer : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.RequestCompletionHandler,RequestCompletionHandler,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.clients.consumer,org.apache.kafka.clients.consumer,low,low,medium-high,low,,,,,,65,1052,,,,,,,,,,,,,17,14,3,1052,0,1,0.235,1,0.235,65,,,,,,,
org.apache.kafka.clients.consumer.CommitFailedException,CommitFailedException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.CommitFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.Consumer<K,V>",Consumer,low-medium,low,low,low,0,5,0,1,0,25,27,5,0,0,5,0,0,0,0,0,0,0,,,,,27,,,,,,25,,,,,,,
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.consumer.Consumer<K,V>.public abstract wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.consumer.ConsumerConfig,ConsumerConfig,low,low,low-medium,low,0,0,0,0,0,0,204,0,0,0,0,0,0,0,0,0,0,0,,,,,204,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.ConsumerRebalanceListener,ConsumerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecord<K,V>",ConsumerRecord,low,low,low,low,2,4,0,0,0,4,28,8,4,0,4,0,0,1,0,1,0,0,,,,,28,,,,,,4,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public offset( ): long",offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public partition( ): int",partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->offset",final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->partition",final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.ConsumerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords<K,V>",ConsumerRecords,low,low,low-medium,low,0,3,0,0,0,4,51,10,0,1,2,1,0,0,0,1,0,0,,,,,51,,,,,,4,,,,,,,
"org.apache.kafka.clients.consumer.ConsumerRecords.ConcatenatedIterable<K,V>",ConcatenatedIterable,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public count( ): int",count( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>.public static empty( ): ConsumerRecords",static empty( ): ConsumerRecords,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Field>org.apache.kafka.clients.consumer.ConsumerRecords<K,V>->EMPTY",static final EMPTY : ConsumerRecords,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.InvalidOffsetException,InvalidOffsetException,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.clients.consumer.KafkaConsumer<K,V>",KafkaConsumer,low,low,medium-high,low,0,9,4,0,0,16,388,55,3,1,9,0,0,0.938,0.444,1,0,0,,,,,388,,,,,,16,,,,,,,
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private acquire( ): void",acquire( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,1,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,8,0,3,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private close( boolean ): void",close( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,13,1,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.private release( ): void",release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,0,2,0
"<Method>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->requestTimeoutMs",requestTimeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.KafkaConsumer<K,V>->NO_CURRENT_THREAD",static final NO_CURRENT_THREAD : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.MockConsumer<K,V>",MockConsumer,low,low,low-medium,low,0,8,1,0,0,9,219,27,1,0,8,0,0,0,0,0.952,0,0,,,,,219,,,,,,9,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.MockConsumer$11273;,Lorg.apache.kafka.clients.consumer.MockConsumer$11273;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public closed( ): boolean",closed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public commitAsync( ): void",commitAsync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public commitSync( ): void",commitSync( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.private ensureNotClosed( ): void",ensureNotClosed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public scheduleNopPollTask( ): void",scheduleNopPollTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,5,0,0,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public unsubscribe( ): void",unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.clients.consumer.MockConsumer<K,V>.public wakeup( ): void",wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.clients.consumer.MockConsumer<K,V>->closed",closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.NoOffsetForPartitionException,NoOffsetForPartitionException,low,low,low,low,0,0,0,0,0,0,10,0,0,1,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.NoOffsetForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetAndMetadata,OffsetAndMetadata,low,low,low,low,0,3,0,0,0,4,32,9,1,0,3,0,0,0,0.333,0.667,0,0,,,,,32,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public OffsetAndMetadata( long ): void,OffsetAndMetadata( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,2
<Method>org.apache.kafka.clients.consumer.OffsetAndMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.OffsetAndMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetCommitCallback,OffsetCommitCallback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.clients.consumer.OffsetOutOfRangeException,OffsetOutOfRangeException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetOutOfRangeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.OffsetResetStrategy,OffsetResetStrategy,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->EARLIEST,static final EARLIEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->LATEST,static final LATEST : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.OffsetResetStrategy->NONE,static final NONE : OffsetResetStrategy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.RangeAssignor,RangeAssignor,low,low,low,low,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,,,,,39,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.RoundRobinAssignor,RoundRobinAssignor,low,low,low,low,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,,,,,28,,,,,,0,,,,,,,
<Package>org.apache.kafka.clients.consumer.internals,org.apache.kafka.clients.consumer.internals,low,low,high,low,,,,,,158,1875,,,,,,,,,,,,,38,35,3,1875,0,1,0.158,1,0.158,158,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator,AbstractCoordinator,low-medium,low,medium-high,low,0,9,7,0,0,25,402,71,7,0,8,0,0,0.929,0,0.9,0,0,,,,,402,,,,,,25,,,,,,,
"org.apache.kafka.clients.consumer.internals.AbstractCoordinator.CoordinatorResponseHandler<R,T>",CoordinatorResponseHandler,low,low,low,low,0,0,0,0,4,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.GroupCoordinatorMetrics,GroupCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,,,,,45,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatCompletionHandler,HeartbeatCompletionHandler,low,low,low,low,0,0,0,1,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.HeartbeatTask,HeartbeatTask,low,low,low,low,0,5,3,0,0,8,34,32,1,0,2,0,0,0,0.25,0,0,0,,,,,34,,,,,,8,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.JoinGroupResponseHandler,JoinGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,44,0,0,0,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.LeaveGroupResponseHandler,LeaveGroupResponseHandler,low,low,low,low,0,0,0,1,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$22081;,Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$22081;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$25743;,Lorg.apache.kafka.clients.consumer.internals.AbstractCoordinator$25743;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractCoordinator.SyncGroupRequestHandler,SyncGroupRequestHandler,low,low,low,low,0,0,0,1,0,0,31,0,0,0,0,0,0,0,0,0,0,0,,,,,31,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected coordinatorDead( ): void,coordinatorDead( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public coordinatorUnknown( ): boolean,coordinatorUnknown( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public ensureActiveGroup( ): void,ensureActiveGroup( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,26,0,4,7
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public ensureCoordinatorKnown( ): void,ensureCoordinatorKnown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.public maybeLeaveGroup( ): void,maybeLeaveGroup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,2,4
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.protected needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.AbstractCoordinator.private sendLeaveGroupRequest( ): void,sendLeaveGroupRequest( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,12,0,0,0
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->heartbeatTask,final heartbeatTask : HeartbeatTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sensors,final sensors : GroupCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->sessionTimeoutMs,final sessionTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->generation,generation : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->needsJoinPrepare,needsJoinPrepare : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.AbstractCoordinator->rejoinNeeded,rejoinNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor,AbstractPartitionAssignor,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator,ConsumerCoordinator,low,low,medium-high,low,0,7,2,0,0,13,396,47,4,0,6,0,0,0,0,1,0,0,,,,,396,,,,,,13,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.AutoCommitTask,AutoCommitTask,low,low,low,low,0,5,0,0,0,10,40,36,3,0,5,0,0,0.583,0.2,0.333,0,0,,,,,40,,,,,,10,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.ConsumerCoordinatorMetrics,ConsumerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.DefaultOffsetCommitCallback,DefaultOffsetCommitCallback,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$14228;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$14228;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$5756;,Lorg.apache.kafka.clients.consumer.internals.ConsumerCoordinator$5756;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.MetadataSnapshot,MetadataSnapshot,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetCommitResponseHandler,OffsetCommitResponseHandler,low,low,low,low,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,,,,,58,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.OffsetFetchResponseHandler,OffsetFetchResponseHandler,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private addMetadataListener( ): void,addMetadataListener( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,3,16,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public ensurePartitionAssignment( ): void,ensurePartitionAssignment( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.private maybeAutoCommitOffsetsSync( ): void,maybeAutoCommitOffsetsSync( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,1,2
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.public refreshCommittedOffsetsIfNeeded( ): void,refreshCommittedOffsetsIfNeeded( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,8,0,0,0
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitEnabled,final autoCommitEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->autoCommitTask,final autoCommitTask : AutoCommitTask,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->metadataSnapshot,final metadataSnapshot : MetadataSnapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerCoordinator->sensors,final sensors : ConsumerCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,ConsumerNetworkClient,low-medium,low,low-medium,low,0,14,8,0,0,29,159,80,2,0,14,0,0,0.75,0.524,0.972,0,0,,,,,159,,,,,,29,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.RequestFutureCompletionHandler,RequestFutureCompletionHandler,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public awaitMetadataUpdate( ): void,awaitMetadataUpdate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private checkDisconnects( long ): void,checkDisconnects( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,1,0,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private clientPoll( long, long ): void","clientPoll( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,1,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public disableWakeups( ): void,disableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public enableWakeups( ): void,enableWakeups( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public ensureFreshMetadata( ): void,ensureFreshMetadata( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private failUnsentRequests( ): void,failUnsentRequests( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public pendingRequestCount( ): int,pendingRequestCount( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private poll( long, long, boolean ): void","poll( long, long, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,10,3,5,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public quickPoll( ): void,quickPoll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,3,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.private trySend( long ): boolean,trySend( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,12,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient->wakeupsEnabled,volatile wakeupsEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.ConsumerProtocol,ConsumerProtocol,low,low,low-medium,low,0,1,0,0,0,2,83,3,0,1,0,1,0,0,0,0,0,0,,,,,83,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.ConsumerProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.clients.consumer.internals.ConsumerProtocol->CONSUMER_PROTOCOL_V0,static final CONSUMER_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.DelayedTask,DelayedTask,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.DelayedTask.public abstract run( long ): void,run( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.DelayedTaskQueue,DelayedTaskQueue,low,low,low,low,0,3,0,0,0,6,33,11,0,0,3,0,0,0,0.167,0,0,0,,,,,33,,,,,,6,,,,,,,
org.apache.kafka.clients.consumer.internals.DelayedTaskQueue.Entry,Entry,low,low,low,low,0,1,0,0,0,1,9,3,1,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.DelayedTaskQueue.public DelayedTaskQueue( ): void,DelayedTaskQueue( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.DelayedTaskQueue.public nextTimeout( long ): long,nextTimeout( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.DelayedTaskQueue.public poll( long ): void,poll( long ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,1,0,0
"org.apache.kafka.clients.consumer.internals.Fetcher<K,V>",Fetcher,low,low,medium-high,low,0,3,0,0,0,10,407,28,6,0,3,0,0,0,0,0,0,0,,,,,407,,,,,,10,,,,,,,
org.apache.kafka.clients.consumer.internals.Fetcher.FetchManagerMetrics,FetchManagerMetrics,low,low,low,low,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$20972;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$20972;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.Fetcher$5711;,Lorg.apache.kafka.clients.consumer.internals.Fetcher$5711;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
"org.apache.kafka.clients.consumer.internals.Fetcher.PartitionRecords<K,V>",PartitionRecords,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private throwIfOffsetOutOfRange( ): void",throwIfOffsetOutOfRange( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,3,12,0,0,0
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private throwIfRecordTooLarge( ): void",throwIfRecordTooLarge( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,11,0,0,1
"<Method>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>.private throwIfUnauthorizedTopics( ): void",throwIfUnauthorizedTopics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->checkCrcs",final checkCrcs : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->fetchSize",final fetchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->maxWaitMs",final maxWaitMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->minBytes",final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->retryBackoffMs",final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.consumer.internals.Fetcher<K,V>->sensors",final sensors : FetchManagerMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.Heartbeat,Heartbeat,low,low,low,low,0,9,1,0,0,11,34,28,5,0,9,0,0,0.743,0.111,0.667,0,0,,,,,34,,,,,,11,,,,,,,
"<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public Heartbeat( long, long, long ): void","Heartbeat( long, long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,3,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public interval( ): long,interval( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public lastHeartbeatSend( ): long,lastHeartbeatSend( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public receiveHeartbeat( long ): void,receiveHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public resetSessionTimeout( long ): void,resetSessionTimeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sentHeartbeat( long ): void,sentHeartbeat( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public sessionTimeoutExpired( long ): boolean,sessionTimeoutExpired( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,3
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public shouldHeartbeat( long ): boolean,shouldHeartbeat( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
<Method>org.apache.kafka.clients.consumer.internals.Heartbeat.public timeToNextHeartbeat( long ): long,timeToNextHeartbeat( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,0,4
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->interval,final interval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->timeout,final timeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatReceive,lastHeartbeatReceive : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastHeartbeatSend,lastHeartbeatSend : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.Heartbeat->lastSessionReset,lastSessionReset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException,NoAvailableBrokersException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.NoAvailableBrokersException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.NoOpConsumerRebalanceListener,NoOpConsumerRebalanceListener,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor,PartitionAssignor,low,low,low,low,0,1,0,1,0,4,29,1,0,0,1,0,0,0,0,0,0,0,,,,,29,,,,,,4,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Assignment,Assignment,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.PartitionAssignor.Subscription,Subscription,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.PartitionAssignor.public abstract onAssignment( Assignment ): void,onAssignment( Assignment ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.RequestFuture<T>,RequestFuture,low,low,low-medium,low-medium,1,14,2,0,0,17,81,43,2,0,9,5,0,0.5,0.619,0.894,0,0,,,,,81,,,,,,17,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$5581;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$5581;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.consumer.internals.RequestFuture$6004;,Lorg.apache.kafka.clients.consumer.internals.RequestFuture$6004;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public chain( RequestFuture ): void,chain( RequestFuture ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public complete( T ): void,complete( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,1,3
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public failed( ): boolean,failed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireFailure( ): void,fireFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.private fireSuccess( ): void,fireSuccess( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public isRetriable( ): boolean,isRetriable( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static coordinatorNotAvailable( ): RequestFuture,static coordinatorNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static leaderNotAvailable( ): RequestFuture,static leaderNotAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static noBrokersAvailable( ): RequestFuture,static noBrokersAvailable( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static staleMetadata( ): RequestFuture,static staleMetadata( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public static voidSuccess( ): RequestFuture,static voidSuccess( ): RequestFuture,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public succeeded( ): boolean,succeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.RequestFuture<T>.public value( ): T,value( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->isDone,isDone : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.RequestFuture<T>->value,value : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.consumer.internals.RequestFutureAdapter<F,T>",RequestFutureAdapter,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>,RequestFutureListener,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.RequestFutureListener<T>.public abstract onSuccess( T ): void,onSuccess( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.clients.consumer.internals.SendFailedException,SendFailedException,low,low,low,low,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SendFailedException->INSTANCE,static final INSTANCE : SendFailedException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SendFailedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.StaleMetadataException,StaleMetadataException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.StaleMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState,SubscriptionState,low,low,low-medium,low,0,10,0,0,0,12,195,28,2,0,10,0,0,0.6,0,0.867,0,0,,,,,195,,,,,,12,,,,,,,
org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState,TopicPartitionState,low,low,low,low,0,6,0,0,0,7,36,22,3,0,6,0,0,0.533,0.333,0,0,0,,,,,36,,,,,,7,,,,,,,
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public commitsRefreshed( ): void,commitsRefreshed( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasAllFetchPositions( ): boolean,hasAllFetchPositions( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasDefaultOffsetResetPolicy( ): boolean,hasDefaultOffsetResetPolicy( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public hasPatternSubscription( ): boolean,hasPatternSubscription( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public needReassignment( ): void,needReassignment( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public needRefreshCommits( ): void,needRefreshCommits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public partitionAssignmentNeeded( ): boolean,partitionAssignmentNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public partitionsAutoAssigned( ): boolean,partitionsAutoAssigned( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public refreshCommitsNeeded( ): boolean,refreshCommitsNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.consumer.internals.SubscriptionState.public unsubscribe( ): void,unsubscribe( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,1
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->needsFetchCommittedOffsets,needsFetchCommittedOffsets : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.consumer.internals.SubscriptionState->needsPartitionAssignment,needsPartitionAssignment : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer,org.apache.kafka.clients.producer,low,low,medium-high,low,,,,,,33,707,,,,,,,,,,,,,11,8,3,707,0,1,0.273,1,0.273,33,,,,,,,
org.apache.kafka.clients.producer.BufferExhaustedException,BufferExhaustedException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.BufferExhaustedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Callback,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.clients.producer.KafkaProducer<K,V>",KafkaProducer,low,low,medium-high,low,0,3,0,0,0,6,308,23,4,0,3,0,0,0,0.333,1,0,0,,,,,308,,,,,,6,,,,,,,
org.apache.kafka.clients.producer.KafkaProducer.FutureFailure,FutureFailure,low,low,low,low,0,3,0,0,0,3,19,9,0,0,3,0,0,0,0.333,0,0,0,,,,,19,,,,,,3,,,,,,,
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.private ensureValidRecordSize( int ): void",ensureValidRecordSize( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,11,1,0,2
"<Method>org.apache.kafka.clients.producer.KafkaProducer<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxBlockTimeMs",final maxBlockTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->maxRequestSize",final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->requestTimeoutMs",final requestTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.KafkaProducer<K,V>->totalMemorySize",final totalMemorySize : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.clients.producer.MockProducer<K,V>",MockProducer,low,low,low-medium,low,0,4,1,0,0,5,113,10,1,0,4,0,0,0,0,1,0,0,,,,,113,,,,,,5,,,,,,,
org.apache.kafka.clients.producer.MockProducer.Completion,Completion,low,low,low,low,0,0,0,0,0,0,23,0,1,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized completeNext( ): boolean",synchronized completeNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.clients.producer.MockProducer<K,V>.public synchronized flush( ): void",synchronized flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,0
"<Field>org.apache.kafka.clients.producer.MockProducer<K,V>->autoComplete",autoComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.Partitioner,Partitioner,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.Partitioner.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.clients.producer.Producer<K,V>",Producer,low,low,low,low,0,2,0,1,0,7,8,2,0,0,2,0,0,0,0,0,0,0,,,,,8,,,,,,7,,,,,,,
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.clients.producer.Producer<K,V>.public abstract flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.clients.producer.ProducerConfig,ProducerConfig,low,low,low-medium,low,0,0,0,0,0,0,202,0,0,0,0,0,0,0,0,0,0,0,,,,,202,,,,,,0,,,,,,,
"org.apache.kafka.clients.producer.ProducerRecord<K,V>",ProducerRecord,low,low,low-medium,low,2,3,0,0,0,7,52,11,2,0,3,0,0,0.5,0,0.333,0,0,,,,,52,,,,,,7,,,,,,,
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public hashCode( ): int",hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,7,0,0,4
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.ProducerRecord<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.clients.producer.ProducerRecord<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.RecordMetadata,RecordMetadata,low,low,low,low,0,2,0,0,0,2,15,4,1,0,2,0,0,0,0,1,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.RecordMetadata.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.RecordMetadata.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.RecordMetadata->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.clients.producer.internals,org.apache.kafka.clients.producer.internals,low,low,medium-high,low,,,,,,57,825,,,,,,,,,,,,,13,13,0,825,0,0,0,1,0,57,,,,,,,
org.apache.kafka.clients.producer.internals.BufferPool,BufferPool,low,low,low-medium,low,0,6,0,0,0,8,113,25,3,0,6,0,0,0.75,0.417,0.8,0,0,,,,,113,,,,,,8,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public availableMemory( ): long,availableMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.private freeUp( int ): void,freeUp( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,3,1,0,2
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public poolableSize( ): int,poolableSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public queued( ): int,queued( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,0
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public totalMemory( ): long,totalMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.BufferPool.public unallocatedMemory( ): long,unallocatedMemory( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,0,0,1
<Field>org.apache.kafka.clients.producer.internals.BufferPool->availableMemory,availableMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->poolableSize,final poolableSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.BufferPool->totalMemory,final totalMemory : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.DefaultPartitioner,DefaultPartitioner,low,low,low,low,0,2,0,0,0,2,19,3,0,0,1,1,0,0,0.25,0,0,0,,,,,19,,,,,,2,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.internals.DefaultPartitioner.private static toPositive( int ): int,static toPositive( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.clients.producer.internals.ErrorLoggingCallback,ErrorLoggingCallback,low,low,low,low,0,0,0,0,0,0,22,0,4,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->key,key : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->logAsString,logAsString : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->value,value : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.ErrorLoggingCallback->valueLength,valueLength : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.FutureRecordMetadata,FutureRecordMetadata,low,low,low,low,0,4,0,0,0,4,34,11,1,0,4,0,0,0,0.375,1,0,0,,,,,34,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public cancel( boolean ): boolean,cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isCancelled( ): boolean,isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public isDone( ): boolean,isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.clients.producer.internals.FutureRecordMetadata.public relativeOffset( ): long,relativeOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.FutureRecordMetadata->relativeOffset,final relativeOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.ProduceRequestResult,ProduceRequestResult,low,low,low,low,0,4,0,0,0,4,23,7,1,0,4,0,0,0,0,1,0,0,,,,,23,,,,,,4,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public ProduceRequestResult( ): void,ProduceRequestResult( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public await( ): void,await( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public baseOffset( ): long,baseOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.ProduceRequestResult.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.ProduceRequestResult->baseOffset,volatile baseOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator,RecordAccumulator,low,low,low-medium,low,0,8,2,0,0,13,247,32,6,0,8,0,0,1.25,0,1,0,0,,,,,247,,,,,,13,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.IncompleteRecordBatches,IncompleteRecordBatches,low,low,low,low,0,1,0,0,0,1,15,2,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5333;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5333;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5745;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$5745;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6171;,Lorg.apache.kafka.clients.producer.internals.RecordAccumulator$6171;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.ReadyCheckResult,ReadyCheckResult,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.RecordAccumulator.RecordAppendResult,RecordAppendResult,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private abortBatches( ): void,abortBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,7,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public abortIncompleteBatches( ): void,abortIncompleteBatches( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,3,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private appendsInProgress( ): boolean,appendsInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public awaitFlushCompletion( ): void,awaitFlushCompletion( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public beginFlush( ): void,beginFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.private flushInProgress( ): boolean,flushInProgress( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.clients.producer.internals.RecordAccumulator.public hasUnsent( ): boolean,hasUnsent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,0,0
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->drainIndex,drainIndex : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->batchSize,final batchSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->incomplete,final incomplete : IncompleteRecordBatches,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->lingerMs,final lingerMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordAccumulator->closed,volatile closed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.RecordBatch,RecordBatch,low,low,low-medium,low,0,3,0,0,0,6,71,11,8,0,3,0,0,1.25,0.444,0.667,0,0,,,,,71,,,,,,6,,,,,,,
org.apache.kafka.clients.producer.internals.RecordBatch.Thunk,Thunk,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public inRetry( ): boolean,inRetry( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public maybeExpire( int, long, long ): boolean","maybeExpire( int, long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,7,3,0,2
<Method>org.apache.kafka.clients.producer.internals.RecordBatch.public setRetry( ): void,setRetry( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->drainedMs,drainedMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->createdMs,final createdMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->lastAppendTime,lastAppendTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->lastAttemptMs,lastAttemptMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->maxRecordSize,maxRecordSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->recordCount,recordCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->retry,retry : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.RecordBatch->attempts,volatile attempts : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.clients.producer.internals.Sender,Sender,low,low,low-medium,low,0,5,3,0,0,19,296,58,7,0,5,0,0,1,0.4,0.8,0,0,,,,,296,,,,,,19,,,,,,,
<Anonymous> : Lorg.apache.kafka.clients.producer.internals.Sender$15379;,Lorg.apache.kafka.clients.producer.internals.Sender$15379;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.clients.producer.internals.Sender.SenderMetrics,SenderMetrics,low,low,low,low,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,,,,,135,,,,,,0,,,,,,,
<Method>org.apache.kafka.clients.producer.internals.Sender.public forceClose( ): void,forceClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.public initiateClose( ): void,initiateClose( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,1
<Method>org.apache.kafka.clients.producer.internals.Sender.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,20,0,2,3
<Method>org.apache.kafka.clients.producer.internals.Sender.public run( long ): void,run( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,29,1,0,4
<Method>org.apache.kafka.clients.producer.internals.Sender.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.clients.producer.internals.Sender->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->maxRequestSize,final maxRequestSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->requestTimeout,final requestTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->retries,final retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->sensors,final sensors : SenderMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->forceClose,volatile forceClose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.clients.producer.internals.Sender->running,volatile running : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common,org.apache.kafka.common,low,low,low-medium,low,,,,,,20,308,,,,,,,,,,,,,8,6,2,308,0,0,0.25,1,0.25,20,,,,,,,
org.apache.kafka.common.Cluster,Cluster,low,low,low-medium,low,0,1,0,0,0,1,83,2,0,0,0,1,0,0,0,0,0,0,,,,,83,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.Cluster.public static empty( ): Cluster,static empty( ): Cluster,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.Configurable,Configurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.KafkaException,KafkaException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.KafkaException.public KafkaException( ): void,KafkaException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.KafkaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Metric,Metric,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.Metric.public abstract value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.MetricName,MetricName,low,low,low-medium,low,0,1,0,0,0,5,78,11,1,0,1,0,0,0,0,0,0,0,,,,,78,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.MetricName.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,11,0,0,3
<Field>org.apache.kafka.common.MetricName->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.Node,Node,low,low,low-medium,low,0,4,0,0,0,5,51,14,2,0,3,1,0,0.5,0,0.667,0,0,,,,,51,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.Node.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,0,0,2
<Method>org.apache.kafka.common.Node.public id( ): int,id( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public port( ): int,port( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.Node.public static noNode( ): Node,static noNode( ): Node,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.Node->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.Node->port,final port : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.PartitionInfo,PartitionInfo,low,low,low,low,0,1,0,0,0,1,40,2,1,0,1,0,0,0,0,0,0,0,,,,,40,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.PartitionInfo.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.PartitionInfo->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.TopicPartition,TopicPartition,low,low,low,low,0,2,0,0,0,4,41,12,2,0,2,0,0,0.5,0,0,0,0,,,,,41,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.TopicPartition.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,10,0,0,4
<Method>org.apache.kafka.common.TopicPartition.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.TopicPartition->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.TopicPartition->hash,hash : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.annotation,org.apache.kafka.common.annotation,low,low,low,low,,,,,,0,11,,,,,,,,,,,,,4,1,3,11,0,0,0.75,1,0.75,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability,InterfaceStability,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Evolving,Evolving,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Stable,Stable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.annotation.InterfaceStability.Unstable,Unstable,low,low,low,low,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.cache,org.apache.kafka.common.cache,low,low,low,low,,,,,,13,41,,,,,,,,,,,,,3,2,1,41,0,0,0.333,1,0.333,13,,,,,,,
"org.apache.kafka.common.cache.Cache<K,V>",Cache,low,low,low,low,0,4,0,1,0,4,5,4,0,0,4,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.common.cache.Cache<K,V>.public abstract size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.common.cache.LRUCache<K,V>",LRUCache,low,low,low,low,0,5,0,0,0,5,20,18,0,0,5,0,0,0,0.5,0,0,0,,,,,20,,,,,,5,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.cache.LRUCache$1121;,Lorg.apache.kafka.common.cache.LRUCache$1121;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public LRUCache( int ): void",LRUCache( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,6,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public remove( K ): boolean",remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.LRUCache<K,V>.public size( ): long",size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"org.apache.kafka.common.cache.SynchronizedCache<K,V>",SynchronizedCache,low,low,low,low,0,4,0,0,0,4,16,12,0,0,4,0,0,0,0.333,0,0,0,,,,,16,,,,,,4,,,,,,,
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized get( K ): V",synchronized get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized put( K, V ): void","synchronized put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized remove( K ): boolean",synchronized remove( K ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.common.cache.SynchronizedCache<K,V>.public synchronized size( ): long",synchronized size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.config,org.apache.kafka.common.config,low,low,medium-high,low,,,,,,10,472,,,,,,,,,,,,,12,11,1,472,0,0,0.083,1,0.083,10,,,,,,,
org.apache.kafka.common.config.AbstractConfig,AbstractConfig,low,low,low-medium,low,0,3,0,0,0,5,124,18,0,0,3,0,0,0,0,0,0,0,,,,,124,,,,,,5,,,,,,,
org.apache.kafka.common.config.AbstractConfig.RecordingMap<V>,RecordingMap,low,low,low,low,0,1,0,0,0,1,9,1,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.AbstractConfig.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.private logAll( ): void,logAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,12,0,0,0
<Method>org.apache.kafka.common.config.AbstractConfig.public logUnused( ): void,logUnused( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
org.apache.kafka.common.config.ConfigDef,ConfigDef,low,low,low-medium,low,0,2,0,0,0,2,235,6,0,0,2,0,0,0,0,0,0,0,,,,,235,,,,,,2,,,,,,,
org.apache.kafka.common.config.ConfigDef.ConfigKey,ConfigKey,low,low,low,low,3,1,0,0,0,1,19,2,3,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
org.apache.kafka.common.config.ConfigDef.Importance,Importance,low,low,low,low,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.config.ConfigDef$15854;,Lorg.apache.kafka.common.config.ConfigDef$15854;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Range,Range,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Type,Type,low,low,low,low,0,0,0,0,0,0,2,0,0,9,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.ValidString,ValidString,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.config.ConfigDef.Validator,Validator,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSaslSupport( ): ConfigDef,withClientSaslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.config.ConfigDef.public withClientSslSupport( ): ConfigDef,withClientSslSupport( ): ConfigDef,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.common.config.ConfigException,ConfigException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.ConfigException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SaslConfigs,SaslConfigs,low,low,low,low,0,0,0,0,0,0,29,0,0,3,0,0,0,0,0,0,0,0,,,,,29,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN,static final DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_JITTER,static final DEFAULT_KERBEROS_TICKET_RENEW_JITTER : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.config.SaslConfigs->DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR,static final DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.config.SslConfigs,SslConfigs,low,low,low-medium,low,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,,,,,76,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.config.types,org.apache.kafka.common.config.types,low,low,low,low,,,,,,1,19,,,,,,,,,,,,,1,1,0,19,0,0,0,1,0,1,,,,,,,
org.apache.kafka.common.config.types.Password,Password,low,low,low,low,0,1,0,0,0,1,19,3,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.config.types.Password.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.common.errors,org.apache.kafka.common.errors,low,low,high,low,,,,,,22,285,,,,,,,,,,,,,32,32,0,285,0,0,0.063,1,0.063,22,,,,,,,
org.apache.kafka.common.errors.ApiException,ApiException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.ApiException.public ApiException( ): void,ApiException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.ApiException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.AuthorizationException,AuthorizationException,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.errors.BrokerNotAvailableException,BrokerNotAvailableException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.BrokerNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.ControllerMovedException,ControllerMovedException,low,low,low,low,0,0,0,0,0,0,6,0,0,1,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.ControllerMovedException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.CorruptRecordException,CorruptRecordException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.CorruptRecordException.public CorruptRecordException( ): void,CorruptRecordException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.CorruptRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.DisconnectException,DisconnectException,low,low,low,low,0,1,0,0,0,1,11,2,0,2,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.DisconnectException.public DisconnectException( ): void,DisconnectException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.DisconnectException->INSTANCE,static final INSTANCE : DisconnectException,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.errors.DisconnectException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupAuthorizationException,GroupAuthorizationException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException,GroupCoordinatorNotAvailableException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException.public GroupCoordinatorNotAvailableException( ): void,GroupCoordinatorNotAvailableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupCoordinatorNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.GroupLoadInProgressException,GroupLoadInProgressException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.GroupLoadInProgressException.public GroupLoadInProgressException( ): void,GroupLoadInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.GroupLoadInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.IllegalGenerationException,IllegalGenerationException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.IllegalGenerationException.public IllegalGenerationException( ): void,IllegalGenerationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.IllegalGenerationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InterruptException,InterruptException,low,low,low,low,0,0,0,0,0,0,11,0,0,1,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InterruptException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidMetadataException,InvalidMetadataException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidMetadataException.public InvalidMetadataException( ): void,InvalidMetadataException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidMetadataException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidRequiredAcksException,InvalidRequiredAcksException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.InvalidRequiredAcksException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.InvalidTopicException,InvalidTopicException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.InvalidTopicException.public InvalidTopicException( ): void,InvalidTopicException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.InvalidTopicException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.LeaderNotAvailableException,LeaderNotAvailableException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.LeaderNotAvailableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NetworkException,NetworkException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NetworkException.public NetworkException( ): void,NetworkException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NetworkException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotCoordinatorForGroupException,NotCoordinatorForGroupException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotCoordinatorForGroupException.public NotCoordinatorForGroupException( ): void,NotCoordinatorForGroupException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotCoordinatorForGroupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException,NotEnoughReplicasAfterAppendException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.NotEnoughReplicasAfterAppendException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotEnoughReplicasException,NotEnoughReplicasException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotEnoughReplicasException.public NotEnoughReplicasException( ): void,NotEnoughReplicasException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotEnoughReplicasException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.NotLeaderForPartitionException,NotLeaderForPartitionException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.NotLeaderForPartitionException.public NotLeaderForPartitionException( ): void,NotLeaderForPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.NotLeaderForPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.OffsetMetadataTooLarge,OffsetMetadataTooLarge,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.OffsetMetadataTooLarge.public OffsetMetadataTooLarge( ): void,OffsetMetadataTooLarge( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.OffsetMetadataTooLarge->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RebalanceInProgressException,RebalanceInProgressException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RebalanceInProgressException.public RebalanceInProgressException( ): void,RebalanceInProgressException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RebalanceInProgressException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordBatchTooLargeException,RecordBatchTooLargeException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordBatchTooLargeException.public RecordBatchTooLargeException( ): void,RecordBatchTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordBatchTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RecordTooLargeException,RecordTooLargeException,low,low,low,low,0,1,0,0,0,1,16,2,0,1,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RecordTooLargeException.public RecordTooLargeException( ): void,RecordTooLargeException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.RecordTooLargeException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.RetriableException,RetriableException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.RetriableException.public RetriableException( ): void,RetriableException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.RetriableException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.SerializationException,SerializationException,low,low,low,low,0,1,0,0,0,1,13,2,0,1,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.SerializationException.public SerializationException( ): void,SerializationException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.SerializationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TimeoutException,TimeoutException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.TimeoutException.public TimeoutException( ): void,TimeoutException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.TimeoutException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.TopicAuthorizationException,TopicAuthorizationException,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.errors.UnknownMemberIdException,UnknownMemberIdException,low,low,low,low,0,1,0,0,0,1,10,2,0,1,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownMemberIdException.public UnknownMemberIdException( ): void,UnknownMemberIdException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.errors.UnknownMemberIdException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownServerException,UnknownServerException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownServerException.public UnknownServerException( ): void,UnknownServerException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownServerException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.UnknownTopicOrPartitionException,UnknownTopicOrPartitionException,low,low,low,low,0,1,0,0,0,1,9,1,0,1,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.errors.UnknownTopicOrPartitionException.public UnknownTopicOrPartitionException( ): void,UnknownTopicOrPartitionException( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.errors.UnknownTopicOrPartitionException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.errors.WakeupException,WakeupException,low,low,low,low,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.errors.WakeupException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.metrics,org.apache.kafka.common.metrics,low,low,medium-high,low,,,,,,51,492,,,,,,,,,,,,,15,10,5,492,0,0,0.333,1,0.333,51,,,,,,,
org.apache.kafka.common.metrics.CompoundStat,CompoundStat,low,low,low,low,0,0,0,1,0,1,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.CompoundStat.NamedMeasurable,NamedMeasurable,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.JmxReporter,JmxReporter,low,low,low-medium,low,0,4,1,0,0,8,135,19,0,0,4,0,0,0,0.25,0,0,0,,,,,135,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.JmxReporter.KafkaMbean,KafkaMbean,low,low,low,low,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,,,,,55,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.JmxReporter.public JmxReporter( ): void,JmxReporter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.JmxReporter.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private reregister( KafkaMbean ): void,reregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,1,0
<Method>org.apache.kafka.common.metrics.JmxReporter.private unregister( KafkaMbean ): void,unregister( KafkaMbean ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,1,0,0
org.apache.kafka.common.metrics.KafkaMetric,KafkaMetric,low,low,low,low,0,2,1,0,0,2,29,6,0,0,2,0,0,0,0.25,0,0,0,,,,,29,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.KafkaMetric. value( long ): double, value( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.KafkaMetric.public value( ): double,value( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,1,0
org.apache.kafka.common.metrics.Measurable,Measurable,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.MeasurableStat,MeasurableStat,low,low,low,low,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.MetricConfig,MetricConfig,low,low,low,low,0,6,0,0,0,7,47,22,3,0,6,0,0,0.667,0.556,0.533,0,0,,,,,47,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricConfig.public MetricConfig( ): void,MetricConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,3
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( ): long,eventWindow( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public eventWindow( long ): MetricConfig,eventWindow( long ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( ): int,samples( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public samples( int ): MetricConfig,samples( int ): MetricConfig,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,1
<Method>org.apache.kafka.common.metrics.MetricConfig.public timeWindowMs( ): long,timeWindowMs( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.MetricConfig->eventWindow,eventWindow : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->samples,samples : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.MetricConfig->timeWindowMs,timeWindowMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Metrics,Metrics,low,low,low-medium,low,0,2,0,0,0,5,145,11,0,0,2,0,0,0,0,0,0,0,,,,,145,,,,,,5,,,,,,,
org.apache.kafka.common.metrics.Metrics.ExpireSensorTask,ExpireSensorTask,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$5910;,Lorg.apache.kafka.common.metrics.Metrics$5910;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.Metrics$6396;,Lorg.apache.kafka.common.metrics.Metrics$6396;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.Metrics.public Metrics( ): void,Metrics( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.Metrics.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
org.apache.kafka.common.metrics.MetricsReporter,MetricsReporter,low,low,low,low,0,1,0,1,0,4,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.metrics.MetricsReporter.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.metrics.Quota,Quota,low,low,low,low,0,7,0,0,0,8,31,20,2,0,5,2,0,0.25,0.429,0.571,0,0,,,,,31,,,,,,8,,,,,,,
"<Method>org.apache.kafka.common.metrics.Quota.public Quota( double, boolean ): void","Quota( double, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.common.metrics.Quota.public acceptable( double ): boolean,acceptable( double ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,4
<Method>org.apache.kafka.common.metrics.Quota.public bound( ): double,bound( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,0,2
<Method>org.apache.kafka.common.metrics.Quota.public isUpperBound( ): boolean,isUpperBound( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.Quota.public static lowerBound( double ): Quota,static lowerBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.common.metrics.Quota.public static upperBound( double ): Quota,static upperBound( double ): Quota,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Field>org.apache.kafka.common.metrics.Quota->bound,final bound : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Quota->upper,final upper : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.QuotaViolationException,QuotaViolationException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.metrics.QuotaViolationException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Sensor,Sensor,low,low,low-medium,low,0,5,3,0,0,11,78,28,3,0,5,0,0,0.667,0.4,0.833,0,0,,,,,78,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.metrics.Sensor.private checkQuotas( long ): void,checkQuotas( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,5,14,1,0,0
<Method>org.apache.kafka.common.metrics.Sensor.public hasExpired( ): boolean,hasExpired( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.metrics.Sensor.public record( ): void,record( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.metrics.Sensor.public record( double ): void,record( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.metrics.Sensor.public record( double, long ): void","record( double, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,2,2,3
<Field>org.apache.kafka.common.metrics.Sensor->inactiveSensorExpirationTimeMs,final inactiveSensorExpirationTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->parents,final parents : Sensor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.Sensor->lastRecordTime,volatile lastRecordTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.Stat,Stat,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Package>org.apache.kafka.common.metrics.stats,org.apache.kafka.common.metrics.stats,low,low,medium-high,low,,,,,,56,357,,,,,,,,,,,,,17,16,1,357,0,0,0.118,1,0.118,56,,,,,,,
org.apache.kafka.common.metrics.stats.Avg,Avg,low,low,low,low,0,1,0,0,0,1,15,2,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Avg.public Avg( ): void,Avg( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Count,Count,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Count.public Count( ): void,Count( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Histogram,Histogram,low,low,low-medium,low,0,8,3,0,0,9,96,23,3,0,5,0,0,0.25,0.467,0,0,0,,,,,96,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.BinScheme,BinScheme,low,low,low,low,0,3,0,1,2,3,4,3,0,0,3,0,0,0,0.444,0,0,0,,,,,4,,,,,,3,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.ConstantBinScheme,ConstantBinScheme,low,low,low,low,0,4,0,0,0,9,28,23,4,0,4,0,0,0.333,0.333,0,0,0,,,,,28,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Histogram.LinearBinScheme,LinearBinScheme,low,low,low,low,0,4,0,0,0,7,24,20,3,0,4,0,0,0.333,0.333,0,0,0,,,,,24,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Histogram.public Histogram( BinScheme ): void,Histogram( BinScheme ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public counts( ): float,counts( ): float,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Histogram.public record( double ): void,record( double ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,1,3
<Method>org.apache.kafka.common.metrics.stats.Histogram.public value( double ): double,value( double ): double,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,1,1,5
<Field>org.apache.kafka.common.metrics.stats.Histogram->count,count : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->binScheme,final binScheme : BinScheme,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.Histogram->hist,final hist : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Max,Max,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Max.public Max( ): void,Max( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Min,Min,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Min.public Min( ): void,Min( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.metrics.stats.Percentile,Percentile,low,low,low,low,0,1,0,0,0,1,11,2,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentile.public percentile( ): double,percentile( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.metrics.stats.Percentile->percentile,final percentile : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles,Percentiles,low,low,low-medium,low,0,1,0,0,0,1,61,3,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.BucketSizing,BucketSizing,low,low,low,low,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.common.metrics.stats.Percentiles.HistogramSample,HistogramSample,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.metrics.stats.Percentiles$2780;,Lorg.apache.kafka.common.metrics.stats.Percentiles$2780;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Percentiles.protected newSample( long ): HistogramSample,newSample( long ): HistogramSample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Field>org.apache.kafka.common.metrics.stats.Percentiles->buckets,final buckets : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Rate,Rate,low,low,low-medium,low,0,2,0,0,0,9,59,20,0,0,2,0,0,0,0.25,0,0,0,,,,,59,,,,,,9,,,,,,,
org.apache.kafka.common.metrics.stats.Rate.SampledTotal,SampledTotal,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Rate.public Rate( ): void,Rate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.metrics.stats.Rate.private convert( long ): double,convert( long ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,2,18,1,0,0
org.apache.kafka.common.metrics.stats.SampledStat,SampledStat,low,low,low-medium,low,0,4,1,0,0,8,67,18,2,0,4,0,0,0.75,0.333,1,0,0,,,,,67,,,,,,8,,,,,,,
org.apache.kafka.common.metrics.stats.SampledStat.Sample,Sample,low,low,low,low,0,2,0,0,0,2,16,9,4,0,2,0,0,0,0.167,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public SampledStat( double ): void,SampledStat( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public current( long ): Sample,current( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.protected newSample( long ): Sample,newSample( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.metrics.stats.SampledStat.public oldest( long ): Sample,oldest( long ): Sample,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,1,0
<Field>org.apache.kafka.common.metrics.stats.SampledStat->current,current : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.metrics.stats.SampledStat->initialValue,initialValue : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.metrics.stats.Total,Total,low,low,low,low,0,2,0,0,0,2,12,4,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( ): void,Total( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.metrics.stats.Total.public Total( double ): void,Total( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.metrics.stats.Total->total,total : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.network,org.apache.kafka.common.network,low,low,medium-high,low,,,,,,185,1312,,,,,,,,,,,,,24,18,6,1312,0,0,0.25,1,0.25,185,,,,,,,
org.apache.kafka.common.network.Authenticator,Authenticator,low,low,low,low,0,3,0,1,0,5,6,3,0,0,3,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.network.Authenticator.public abstract authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Authenticator.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ByteBufferReceive,ByteBufferReceive,low,low,low,low,0,1,0,0,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ByteBufferReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.ByteBufferReceive->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ByteBufferSend,ByteBufferSend,low,low,low,low,0,2,0,0,0,2,31,6,3,0,2,0,0,1,0,1,0,0,,,,,31,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.ByteBufferSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.network.ByteBufferSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.ByteBufferSend->pending,pending : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->remaining,remaining : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.ByteBufferSend->size,size : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.ChannelBuilder,ChannelBuilder,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.ChannelBuilders,ChannelBuilders,low,low,low,low,0,1,0,0,0,1,36,1,0,0,1,0,0,0,0,0,0,0,,,,,36,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.ChannelBuilders.private ChannelBuilders( ): void,ChannelBuilders( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.DefaultAuthenticator,DefaultAuthenticator,low,low,low,low,0,3,0,0,0,3,15,4,0,0,3,0,0,0,0,0,0,0,,,,,15,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.DefaultAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.InvalidReceiveException,InvalidReceiveException,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.network.KafkaChannel,KafkaChannel,low,low,low-medium,low,0,10,0,0,0,13,77,24,1,0,10,0,0,0,0,1,0,0,,,,,77,,,,,,13,,,,,,,
<Method>org.apache.kafka.common.network.KafkaChannel.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public finishConnect( ): void,finishConnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public hasSend( ): boolean,hasSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public mute( ): void,mute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public prepare( ): void,prepare( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,5,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.KafkaChannel.public unmute( ): void,unmute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.network.KafkaChannel->maxReceiveSize,maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.LoginType,LoginType,low,low,low,low,0,0,0,0,0,0,8,0,0,2,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.LoginType->CLIENT,static final CLIENT : LoginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.LoginType->SERVER,static final SERVER : LoginType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Mode,Mode,low,low,low,low,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.network.Mode->CLIENT,static final CLIENT : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Mode->SERVER,static final SERVER : Mode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.MultiSend,MultiSend,low,low,low-medium,low,0,3,0,0,0,6,52,16,3,0,3,0,0,0.667,0,0,0,0,,,,,52,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.network.MultiSend.public completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,8,0,0,5
<Method>org.apache.kafka.common.network.MultiSend.private nextSendOrDone( ): void,nextSendOrDone( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Method>org.apache.kafka.common.network.MultiSend.public size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.common.network.MultiSend->doneSends,doneSends : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.MultiSend->size,size : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.MultiSend->totalWritten,totalWritten : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkReceive,NetworkReceive,low,low,low-medium,low,0,2,0,0,0,2,56,5,1,1,2,0,0,0,0,1,0,0,,,,,56,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.network.NetworkReceive.public NetworkReceive( ): void,NetworkReceive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.NetworkReceive.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.network.NetworkReceive->maxSize,final maxSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.NetworkReceive->UNLIMITED,static final UNLIMITED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.NetworkSend,NetworkSend,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.common.network.PlaintextChannelBuilder,PlaintextChannelBuilder,low,low,low,low,0,1,0,0,0,1,23,2,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.PlaintextTransportLayer,PlaintextTransportLayer,low,low,low-medium,low,0,11,0,0,0,11,71,36,0,0,11,0,0,0,0.409,0,0,0,,,,,71,,,,,,11,,,,,,,
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public finishConnect( ): void,finishConnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.PlaintextTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
org.apache.kafka.common.network.Receive,Receive,low,low,low,low,0,1,0,1,0,3,4,1,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Receive.public abstract complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SaslChannelBuilder,SaslChannelBuilder,low,low,low-medium,low,0,1,0,0,0,1,53,2,0,0,1,0,0,0,0,0,0,0,,,,,53,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.SaslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.Selectable,Selectable,low,low,low,low,0,5,0,1,0,15,17,5,0,1,5,0,0,0,0.4,1,0,0,,,,,17,,,,,,15,,,,,,,
<Method>org.apache.kafka.common.network.Selectable.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Selectable.public abstract wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.network.Selectable->USE_DEFAULT_BUFFER_SIZE,static final USE_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Selector,Selector,low-medium,low,medium-high,low,0,11,6,0,0,44,381,123,6,0,10,0,0,0.944,0.4,0.9,0,0,,,,,381,,,,,,44,,,,,,,
org.apache.kafka.common.network.Selector.SelectorMetrics,SelectorMetrics,low,low,low,low,0,1,0,0,0,3,114,5,0,0,1,0,0,0,0,0,0,0,,,,,114,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.network.Selector.private addToCompletedReceives( ): void,addToCompletedReceives( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,13,0,0,1
<Method>org.apache.kafka.common.network.Selector.private clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,0,0,0
<Method>org.apache.kafka.common.network.Selector.public close( ): void,close( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,0,1,1
<Method>org.apache.kafka.common.network.Selector.private hasStagedReceives( ): boolean,hasStagedReceives( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.common.network.Selector.private maybeCloseOldestConnection( ): void,maybeCloseOldestConnection( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,15,0,0,10
<Method>org.apache.kafka.common.network.Selector.public muteAll( ): void,muteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public poll( long ): void,poll( long ): void,medium-high,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,6,52,1,5,7
<Method>org.apache.kafka.common.network.Selector.private select( long ): int,select( long ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,0
<Method>org.apache.kafka.common.network.Selector.public unmuteAll( ): void,unmuteAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.network.Selector.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.network.Selector->currentTimeNanos,currentTimeNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->connectionsMaxIdleNanos,final connectionsMaxIdleNanos : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->maxReceiveSize,final maxReceiveSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->metricsPerConnection,final metricsPerConnection : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->sensors,final sensors : SelectorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.Selector->nextIdleCloseCheckTime,nextIdleCloseCheckTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.Send,Send,low,low,low,low,0,2,0,1,0,4,5,2,0,0,2,0,0,0,0,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.network.Send.public abstract completed( ): boolean,completed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.Send.public abstract size( ): long,size( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.network.SslChannelBuilder,SslChannelBuilder,low,low,low,low,0,1,0,0,0,1,33,2,0,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.network.SslChannelBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.network.SslTransportLayer,SslTransportLayer,medium-high,low,medium-high,low,0,18,7,0,0,54,387,176,3,0,18,0,0,0.714,0.444,0.891,0,0,,,,,387,,,,,,54,,,,,,,
<Method>org.apache.kafka.common.network.SslTransportLayer.public addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected applicationBufferSize( ): int,applicationBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,26,0,1,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public finishConnect( ): void,finishConnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public handshake( ): void,handshake( ): void,high,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,6,75,0,6,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFailure( ): void,handshakeFailure( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.private handshakeFinished( ): void,handshakeFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,0,2
<Method>org.apache.kafka.common.network.SslTransportLayer.public hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public isOpen( ): boolean,isOpen( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netReadBufferSize( ): int,netReadBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.protected netWriteBufferSize( ): int,netWriteBufferSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.network.SslTransportLayer.public ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.public removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,7,1,0,1
<Method>org.apache.kafka.common.network.SslTransportLayer.private renegotiate( ): void,renegotiate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.network.SslTransportLayer.protected startHandshake( ): void,startHandshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,12,0,3,2
<Field>org.apache.kafka.common.network.SslTransportLayer->closing,closing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->enableRenegotiation,final enableRenegotiation : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.network.SslTransportLayer->handshakeComplete,handshakeComplete : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.network.TransportLayer,TransportLayer,low,low,low,low,0,9,0,1,0,12,13,9,0,0,9,0,0,0,0.389,0,0,0,,,,,13,,,,,,12,,,,,,,
<Method>org.apache.kafka.common.network.TransportLayer.public abstract addInterestOps( int ): void,addInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract disconnect( ): void,disconnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract finishConnect( ): void,finishConnect( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract handshake( ): void,handshake( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract hasPendingWrites( ): boolean,hasPendingWrites( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isConnected( ): boolean,isConnected( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract isMute( ): boolean,isMute( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract ready( ): boolean,ready( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.network.TransportLayer.public abstract removeInterestOps( int ): void,removeInterestOps( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.common.protocol,org.apache.kafka.common.protocol,low,low,low-medium,low,,,,,,9,716,,,,,,,,,,,,,5,5,0,716,0,0,0,1,0,9,,,,,,,
org.apache.kafka.common.protocol.ApiKeys,ApiKeys,low,low,low,low,0,1,0,0,0,1,35,2,1,19,0,1,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.ApiKeys.public static forId( int ): ApiKeys,static forId( int ): ApiKeys,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.common.protocol.ApiKeys->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->codeToType,static codeToType : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->CONTROLLED_SHUTDOWN_KEY,static final CONTROLLED_SHUTDOWN_KEY : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->DESCRIBE_GROUPS,static final DESCRIBE_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->FETCH,static final FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->GROUP_COORDINATOR,static final GROUP_COORDINATOR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->HEARTBEAT,static final HEARTBEAT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->JOIN_GROUP,static final JOIN_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEADER_AND_ISR,static final LEADER_AND_ISR : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LEAVE_GROUP,static final LEAVE_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_GROUPS,static final LIST_GROUPS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->LIST_OFFSETS,static final LIST_OFFSETS : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->MAX_API_KEY,static final MAX_API_KEY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->METADATA,static final METADATA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_COMMIT,static final OFFSET_COMMIT : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->OFFSET_FETCH,static final OFFSET_FETCH : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->PRODUCE,static final PRODUCE : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->STOP_REPLICA,static final STOP_REPLICA : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->SYNC_GROUP,static final SYNC_GROUP : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.ApiKeys->UPDATE_METADATA_KEY,static final UPDATE_METADATA_KEY : ApiKeys,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.Errors,Errors,low,low,low-medium,low,0,3,0,0,0,5,93,12,1,32,2,1,0,1.939,0.333,1,0,0,,,,,93,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.protocol.Errors.public code( ): short,code( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.protocol.Errors.public maybeThrow( ): void,maybeThrow( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.common.protocol.Errors.public static forCode( short ): Errors,static forCode( short ): Errors,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,1,0,1
<Field>org.apache.kafka.common.protocol.Errors->code,final code : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->BROKER_NOT_AVAILABLE,static final BROKER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CLUSTER_AUTHORIZATION_FAILED,static final CLUSTER_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->CORRUPT_MESSAGE,static final CORRUPT_MESSAGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_AUTHORIZATION_FAILED,static final GROUP_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_COORDINATOR_NOT_AVAILABLE,static final GROUP_COORDINATOR_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->GROUP_LOAD_IN_PROGRESS,static final GROUP_LOAD_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->ILLEGAL_GENERATION,static final ILLEGAL_GENERATION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INCONSISTENT_GROUP_PROTOCOL,static final INCONSISTENT_GROUP_PROTOCOL : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_COMMIT_OFFSET_SIZE,static final INVALID_COMMIT_OFFSET_SIZE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_GROUP_ID,static final INVALID_GROUP_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_REQUIRED_ACKS,static final INVALID_REQUIRED_ACKS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_SESSION_TIMEOUT,static final INVALID_SESSION_TIMEOUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->INVALID_TOPIC_EXCEPTION,static final INVALID_TOPIC_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->LEADER_NOT_AVAILABLE,static final LEADER_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->MESSAGE_TOO_LARGE,static final MESSAGE_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NETWORK_EXCEPTION,static final NETWORK_EXCEPTION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NONE,static final NONE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_COORDINATOR_FOR_GROUP,static final NOT_COORDINATOR_FOR_GROUP : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS,static final NOT_ENOUGH_REPLICAS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_ENOUGH_REPLICAS_AFTER_APPEND,static final NOT_ENOUGH_REPLICAS_AFTER_APPEND : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->NOT_LEADER_FOR_PARTITION,static final NOT_LEADER_FOR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_METADATA_TOO_LARGE,static final OFFSET_METADATA_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->OFFSET_OUT_OF_RANGE,static final OFFSET_OUT_OF_RANGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REBALANCE_IN_PROGRESS,static final REBALANCE_IN_PROGRESS : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->RECORD_LIST_TOO_LARGE,static final RECORD_LIST_TOO_LARGE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REPLICA_NOT_AVAILABLE,static final REPLICA_NOT_AVAILABLE : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->REQUEST_TIMED_OUT,static final REQUEST_TIMED_OUT : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->STALE_CONTROLLER_EPOCH,static final STALE_CONTROLLER_EPOCH : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->TOPIC_AUTHORIZATION_FAILED,static final TOPIC_AUTHORIZATION_FAILED : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN,static final UNKNOWN : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_MEMBER_ID,static final UNKNOWN_MEMBER_ID : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.Errors->UNKNOWN_TOPIC_OR_PARTITION,static final UNKNOWN_TOPIC_OR_PARTITION : Errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.ProtoUtils,ProtoUtils,low,low,low,low,0,1,0,0,0,3,28,4,0,0,0,1,0,0,0,0,0,0,,,,,28,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.protocol.ProtoUtils.public static latestVersion( int ): short,static latestVersion( int ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,1,0,0
org.apache.kafka.common.protocol.Protocol,Protocol,low,low,medium-high,low,0,0,0,0,0,0,537,0,0,1,0,0,0,0,0,0,0,0,,,,,537,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.Protocol->CURR_VERSION,static final CURR_VERSION : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.SecurityProtocol,SecurityProtocol,low,low,low,low,0,0,0,0,0,0,23,0,1,5,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->id,final id : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->PLAINTEXT,static final PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SASL_PLAINTEXT,static final SASL_PLAINTEXT : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SASL_SSL,static final SASL_SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->SSL,static final SSL : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.SecurityProtocol->TRACE,static final TRACE : SecurityProtocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.protocol.types,org.apache.kafka.common.protocol.types,low,low,low-medium,low,,,,,,8,449,,,,,,,,,,,,,6,6,0,449,0,0,0.167,1,0.167,8,,,,,,,
org.apache.kafka.common.protocol.types.ArrayOf,ArrayOf,low,low,low,low,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,,,,,41,,,,,,0,,,,,,,
org.apache.kafka.common.protocol.types.Field,Field,low,low,low,low,0,0,0,0,0,0,27,0,1,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Schema,Schema,low,low,low-medium,low,0,1,0,0,0,1,75,2,0,0,1,0,0,0,0,0,0,0,,,,,75,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Schema.public numFields( ): int,numFields( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.protocol.types.SchemaException,SchemaException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.SchemaException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.protocol.types.Struct,Struct,low,low,low-medium,low,0,4,0,0,0,7,161,19,0,0,4,0,0,0,0,0,0,0,,,,,161,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.protocol.types.Struct.public clear( ): void,clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,13,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.protocol.types.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.protocol.types.Type,Type,low,low,low-medium,low,0,0,0,0,0,0,141,0,0,6,0,0,0,0,0,0,0,0,,,,,141,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->BYTES,static final BYTES : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT16,static final INT16 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT32,static final INT32 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT64,static final INT64 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->INT8,static final INT8 : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.protocol.types.Type->STRING,static final STRING : Type,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.record,org.apache.kafka.common.record,low,low,medium-high,low,,,,,,149,875,,,,,,,,,,,,,16,14,2,875,0,0,0.125,1,0.125,149,,,,,,,
org.apache.kafka.common.record.ByteBufferInputStream,ByteBufferInputStream,low,low,low,low,0,2,0,0,0,4,14,10,0,0,2,0,0,0,0.333,0,0,0,,,,,14,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.record.ByteBufferInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
"<Method>org.apache.kafka.common.record.ByteBufferInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,3,0,0
org.apache.kafka.common.record.ByteBufferOutputStream,ByteBufferOutputStream,low,low,low,low,0,3,1,0,0,5,20,13,0,1,3,0,0,0,0.222,1,0,0,,,,,20,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.record.ByteBufferOutputStream.private expandBuffer( int ): void,expandBuffer( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,0,1
"<Method>org.apache.kafka.common.record.ByteBufferOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,3,1,0
<Method>org.apache.kafka.common.record.ByteBufferOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,1,0
<Field>org.apache.kafka.common.record.ByteBufferOutputStream->REALLOCATION_FACTOR,static final REALLOCATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.CompressionType,CompressionType,low,low,low,low,0,1,0,0,0,5,32,12,2,4,0,1,0,0,0,0,0,0,,,,,32,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.record.CompressionType.public static forId( int ): CompressionType,static forId( int ): CompressionType,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,12,1,0,4
<Field>org.apache.kafka.common.record.CompressionType->id,final id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->rate,final rate : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->GZIP,static final GZIP : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->LZ4,static final LZ4 : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->NONE,static final NONE : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.CompressionType->SNAPPY,static final SNAPPY : CompressionType,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Compressor,Compressor,low,low,low-medium,low,0,11,0,0,0,19,189,62,3,8,11,0,0,0.977,0.523,0.822,0,0,,,,,189,,,,,,19,,,,,,,
org.apache.kafka.common.record.Compressor.ConstructorSupplier,ConstructorSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.common.record.Compressor.MemoizingConstructorSupplier,MemoizingConstructorSupplier,low,low,low,low,1,1,0,0,0,1,15,2,2,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.Compressor.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,22,0,0,13
<Method>org.apache.kafka.common.record.Compressor.public compressionRate( ): double,compressionRate( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,2
<Method>org.apache.kafka.common.record.Compressor.public estimatedBytesWritten( ): long,estimatedBytesWritten( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,3
<Method>org.apache.kafka.common.record.Compressor.public numRecordsWritten( ): long,numRecordsWritten( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.common.record.Compressor.public put( byte, int, int ): void","put( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,0,0
<Method>org.apache.kafka.common.record.Compressor.public putByte( byte ): void,putByte( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.common.record.Compressor.public putInt( int ): void,putInt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
<Method>org.apache.kafka.common.record.Compressor.public putLong( long ): void,putLong( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
"<Method>org.apache.kafka.common.record.Compressor.public putRecord( byte, byte ): void","putRecord( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.common.record.Compressor.private putRecord( long, byte, byte, byte, int, int ): void","putRecord( long, byte, byte, byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,6,0,0
<Method>org.apache.kafka.common.record.Compressor.public recordWritten( int ): void,recordWritten( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,2
<Field>org.apache.kafka.common.record.Compressor->initPos,final initPos : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->numRecords,numRecords : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->COMPRESSION_DEFAULT_BUFFER_SIZE,static final COMPRESSION_DEFAULT_BUFFER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->COMPRESSION_RATE_DAMPING_FACTOR,static final COMPRESSION_RATE_DAMPING_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->COMPRESSION_RATE_ESTIMATION_FACTOR,static final COMPRESSION_RATE_ESTIMATION_FACTOR : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->TYPE_TO_RATE,static final TYPE_TO_RATE : float,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->lz4InputStreamSupplier,static lz4InputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->lz4OutputStreamSupplier,static lz4OutputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->snappyInputStreamSupplier,static snappyInputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->snappyOutputStreamSupplier,static snappyOutputStreamSupplier : MemoizingConstructorSupplier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Compressor->writtenUncompressed,writtenUncompressed : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.InvalidRecordException,InvalidRecordException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.record.InvalidRecordException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockInputStream,KafkaLZ4BlockInputStream,low-medium,low,low-medium,low-medium,0,10,2,0,0,30,113,87,6,0,10,0,0,0.633,0.65,0.786,0,0,,,,,113,,,,,,30,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public available( ): int,available( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public markSupported( ): boolean,markSupported( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( ): int,read( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,10,0,2,4
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public read( byte, int, int ): int","read( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,3,3,5
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readBlock( ): void,readBlock( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,3,25,0,0,11
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.private readHeader( ): void,readHeader( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,13,0,0,9
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public skip( long ): long,skip( long ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,1,3,3
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public synchronized mark( int ): void,synchronized mark( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.common.record.KafkaLZ4BlockInputStream.public synchronized reset( ): void,synchronized reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->bufferSize,bufferSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->buffer,final buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->compressedBuffer,final compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockInputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream,KafkaLZ4BlockOutputStream,low,low,low-medium,low,0,11,7,0,0,18,200,66,7,7,8,0,0,0.939,0.542,0.667,1,0,,,,,200,,,,,,18,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.BD,BD,low,low,low,low,0,7,1,0,0,11,29,25,3,0,6,1,0,0.222,0.524,0.9,0,0,,,,,29,,,,,,11,,,,,,,
org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.FLG,FLG,low,low,low,low,0,12,1,0,0,19,71,62,7,1,11,1,0,0.722,0.687,0.867,0,0,,,,,71,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,2,2
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private ensureNotFinished( ): void,ensureNotFinished( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,0,1,1
"<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( byte, int, int ): void","write( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,14,3,2,10
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.public write( int ): void,write( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,2,4
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeBlock( ): void,writeBlock( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,16,0,1,11
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeEndMark( ): void,writeEndMark( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream.private writeHeader( ): void,writeHeader( ): void,low,low,low,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,9,0,2,16
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bufferOffset,bufferOffset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->bd,final bd : BD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->buffer,final buffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->compressedBuffer,final compressedBuffer : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->flg,final flg : FLG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->maxBlockSize,final maxBlockSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->finished,finished : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_1MB,static final BLOCKSIZE_1MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_256KB,static final BLOCKSIZE_256KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_4MB,static final BLOCKSIZE_4MB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->BLOCKSIZE_64KB,static final BLOCKSIZE_64KB : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_FRAME_INCOMPRESSIBLE_MASK,static final LZ4_FRAME_INCOMPRESSIBLE_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->LZ4_MAX_HEADER_LENGTH,static final LZ4_MAX_HEADER_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.KafkaLZ4BlockOutputStream->MAGIC,static final MAGIC : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.LogEntry,LogEntry,low,low,low,low,0,2,0,0,0,2,15,4,1,0,2,0,0,0,0,1,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.record.LogEntry.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.LogEntry.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.record.LogEntry->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.MemoryRecords,MemoryRecords,low,low,low-medium,low,0,7,0,0,0,13,137,32,3,1,7,0,0,0.75,0.524,0.476,0,0,,,,,137,,,,,,13,,,,,,,
org.apache.kafka.common.record.MemoryRecords.RecordsIterator,RecordsIterator,low,low,low,low,0,1,0,0,0,1,47,2,2,0,1,0,0,0,0,0,0,0,,,,,47,,,,,,1,,,,,,,
"<Method>org.apache.kafka.common.record.MemoryRecords.public append( long, byte, byte ): void","append( long, byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,8,3,0,1
<Method>org.apache.kafka.common.record.MemoryRecords.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecords.public compressionRate( ): double,compressionRate( ): double,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
"<Method>org.apache.kafka.common.record.MemoryRecords.public hasRoomFor( byte, byte ): boolean","hasRoomFor( byte, byte ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,4,2,0,3
<Method>org.apache.kafka.common.record.MemoryRecords.public initialCapacity( ): int,initialCapacity( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.MemoryRecords.public isFull( ): boolean,isFull( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.MemoryRecords.public sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,1
<Field>org.apache.kafka.common.record.MemoryRecords->initialCapacity,final initialCapacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->writeLimit,final writeLimit : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->WRITE_LIMIT_FOR_READABLE_ONLY,static final WRITE_LIMIT_FOR_READABLE_ONLY : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.MemoryRecords->writable,writable : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Record,Record,low,low,low-medium,low,0,16,6,0,0,19,146,36,0,15,14,2,0,1.044,0.583,0.99,0,0,,,,,146,,,,,,19,,,,,,,
<Method>org.apache.kafka.common.record.Record.public Record( byte ): void,Record( byte ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.common.record.Record.public Record( byte, byte ): void","Record( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
<Method>org.apache.kafka.common.record.Record.public attributes( ): byte,attributes( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public checksum( ): long,checksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public computeChecksum( ): long,computeChecksum( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,2
<Method>org.apache.kafka.common.record.Record.public ensureValid( ): void,ensureValid( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,3,0
<Method>org.apache.kafka.common.record.Record.public hasKey( ): boolean,hasKey( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.Record.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.record.Record.public isValid( ): boolean,isValid( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,2,0
<Method>org.apache.kafka.common.record.Record.public keySize( ): int,keySize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public magic( ): byte,magic( ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.record.Record.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.record.Record.public static recordSize( byte, byte ): int","static recordSize( byte, byte ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,2,2,1,0
"<Method>org.apache.kafka.common.record.Record.public static recordSize( int, int ): int","static recordSize( int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,5
<Method>org.apache.kafka.common.record.Record.public valueSize( ): int,valueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.record.Record.private valueSizeOffset( ): int,valueSizeOffset( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,1
<Field>org.apache.kafka.common.record.Record->ATTRIBUTES_OFFSET,static final ATTRIBUTES_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->ATTRIBUTE_LENGTH,static final ATTRIBUTE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->COMPRESSION_CODEC_MASK,static final COMPRESSION_CODEC_MASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CRC_LENGTH,static final CRC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CRC_OFFSET,static final CRC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->CURRENT_MAGIC_VALUE,static final CURRENT_MAGIC_VALUE : byte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->HEADER_SIZE,static final HEADER_SIZE : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_OFFSET,static final KEY_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_SIZE_LENGTH,static final KEY_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->KEY_SIZE_OFFSET,static final KEY_SIZE_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_LENGTH,static final MAGIC_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->MAGIC_OFFSET,static final MAGIC_OFFSET : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->NO_COMPRESSION,static final NO_COMPRESSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->RECORD_OVERHEAD,static final RECORD_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Record->VALUE_SIZE_LENGTH,static final VALUE_SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.record.Records,Records,low,low,low,low,0,1,0,1,0,1,5,1,0,3,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.record.Records.public abstract sizeInBytes( ): int,sizeInBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.common.record.Records->LOG_OVERHEAD,static final LOG_OVERHEAD : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->OFFSET_LENGTH,static final OFFSET_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.record.Records->SIZE_LENGTH,static final SIZE_LENGTH : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.requests,org.apache.kafka.common.requests,low,low,very-high,low,,,,,,50,2213,,,,,,,,,,,,,57,57,0,2213,0,0,0.035,1,0.035,50,,,,,,,
org.apache.kafka.common.requests.AbstractRequest,AbstractRequest,low,low,low,low,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,,,,,42,,,,,,0,,,,,,,
org.apache.kafka.common.requests.AbstractRequestResponse,AbstractRequestResponse,low,low,low,low,0,2,0,0,0,2,26,5,0,0,2,0,0,0,0,0,0,0,,,,,26,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.AbstractRequestResponse.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.requests.AbstractRequestResponse.public sizeOf( ): int,sizeOf( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.ControlledShutdownRequest,ControlledShutdownRequest,low,low,low,low,0,2,0,0,0,2,28,6,1,0,2,0,0,0,0.25,0,0,0,,,,,28,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public ControlledShutdownRequest( int ): void,ControlledShutdownRequest( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.ControlledShutdownRequest.public brokerId( ): int,brokerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownRequest->brokerId,brokerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ControlledShutdownResponse,ControlledShutdownResponse,low,low,low,low,0,1,0,0,0,1,38,2,1,0,1,0,0,0,0,0,0,0,,,,,38,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ControlledShutdownResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ControlledShutdownResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsRequest,DescribeGroupsRequest,low,low,low,low,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,,,,,27,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse,DescribeGroupsResponse,low,low,low-medium,low,0,0,0,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,,,,,132,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMember,GroupMember,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
org.apache.kafka.common.requests.DescribeGroupsResponse.GroupMetadata,GroupMetadata,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchRequest,FetchRequest,low,low,low-medium,low,0,3,0,0,0,3,91,6,3,1,3,0,0,1.125,0,1,0,0,,,,,91,,,,,,3,,,,,,,
org.apache.kafka.common.requests.FetchRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.FetchRequest.public maxWait( ): int,maxWait( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public minBytes( ): int,minBytes( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.FetchRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchRequest->maxWait,final maxWait : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->minBytes,final minBytes : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.FetchResponse,FetchResponse,low,low,low-medium,low,0,1,0,0,0,1,75,2,1,2,1,0,0,0,0,0,0,0,,,,,75,,,,,,1,,,,,,,
org.apache.kafka.common.requests.FetchResponse.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.FetchResponse.public getThrottleTime( ): int,getThrottleTime( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.FetchResponse->throttleTime,final throttleTime : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.FetchResponse->INVALID_HIGHWATERMARK,static final INVALID_HIGHWATERMARK : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.GroupCoordinatorRequest,GroupCoordinatorRequest,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
org.apache.kafka.common.requests.GroupCoordinatorResponse,GroupCoordinatorResponse,low,low,low,low,0,1,0,0,0,1,33,2,1,0,1,0,0,0,0,0,0,0,,,,,33,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.GroupCoordinatorResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.GroupCoordinatorResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatRequest,HeartbeatRequest,low,low,low,low,0,1,0,0,0,1,39,2,1,0,1,0,0,0,0,0,0,0,,,,,39,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatRequest.public groupGenerationId( ): int,groupGenerationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatRequest->groupGenerationId,final groupGenerationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.HeartbeatResponse,HeartbeatResponse,low,low,low,low,0,2,0,0,0,2,15,6,1,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public HeartbeatResponse( short ): void,HeartbeatResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.HeartbeatResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.HeartbeatResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest,JoinGroupRequest,low,low,low-medium,low,0,1,0,0,0,1,87,2,1,0,1,0,0,0,0,0,0,0,,,,,87,,,,,,1,,,,,,,
org.apache.kafka.common.requests.JoinGroupRequest.ProtocolMetadata,ProtocolMetadata,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupRequest.public sessionTimeout( ): int,sessionTimeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.JoinGroupRequest->sessionTimeout,final sessionTimeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.JoinGroupResponse,JoinGroupResponse,low,low,low-medium,low,0,3,0,0,0,3,72,6,2,1,3,0,0,1.333,0,1,0,0,,,,,72,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.JoinGroupResponse.public isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.common.requests.JoinGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.JoinGroupResponse->UNKNOWN_GENERATION_ID,static final UNKNOWN_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest,LeaderAndIsrRequest,low,low,low-medium,low,0,2,0,0,0,2,129,4,2,0,2,0,0,1,0,1,0,0,,,,,129,,,,,,2,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest.EndPoint,EndPoint,low,low,low,low,0,0,0,0,0,0,8,0,2,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrRequest.PartitionState,PartitionState,low,low,low,low,0,0,0,0,0,0,14,0,4,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.LeaderAndIsrRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.LeaderAndIsrRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaderAndIsrResponse,LeaderAndIsrResponse,low,low,low,low,0,1,0,0,0,1,44,2,1,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.LeaderAndIsrResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaderAndIsrResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.LeaveGroupRequest,LeaveGroupRequest,low,low,low,low,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,,,,,32,,,,,,0,,,,,,,
org.apache.kafka.common.requests.LeaveGroupResponse,LeaveGroupResponse,low,low,low,low,0,2,0,0,0,2,15,6,1,0,2,0,0,0,0.25,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public LeaveGroupResponse( short ): void,LeaveGroupResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.LeaveGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.LeaveGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListGroupsRequest,ListGroupsRequest,low,low,low,low,0,1,0,0,0,1,19,2,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsRequest.public ListGroupsRequest( ): void,ListGroupsRequest( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.requests.ListGroupsResponse,ListGroupsResponse,low,low,low,low,0,1,0,0,0,1,47,2,1,0,1,0,0,0,0,0,0,0,,,,,47,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListGroupsResponse.Group,Group,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.ListGroupsResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListGroupsResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest,ListOffsetRequest,low,low,low-medium,low,0,1,0,0,0,1,78,2,1,4,1,0,0,0,0,0,0,0,,,,,78,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ListOffsetRequest.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ListOffsetRequest.public replicaId( ): int,replicaId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ListOffsetRequest->replicaId,final replicaId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->CONSUMER_REPLICA_ID,static final CONSUMER_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->DEBUGGING_REPLICA_ID,static final DEBUGGING_REPLICA_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->EARLIEST_TIMESTAMP,static final EARLIEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ListOffsetRequest->LATEST_TIMESTAMP,static final LATEST_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse,ListOffsetResponse,low,low,low-medium,low,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,,,,,54,,,,,,0,,,,,,,
org.apache.kafka.common.requests.ListOffsetResponse.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.requests.MetadataRequest,MetadataRequest,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.common.requests.MetadataResponse,MetadataResponse,low,low,low-medium,low,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,,,,,112,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest,OffsetCommitRequest,low,low,low-medium,low,0,2,0,0,0,2,146,4,2,3,2,0,0,1.6,0,1,0,0,,,,,146,,,,,,2,,,,,,,
org.apache.kafka.common.requests.OffsetCommitRequest.PartitionData,PartitionData,low,low,low,low,0,0,0,0,0,0,12,0,2,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.OffsetCommitRequest.public retentionTime( ): long,retentionTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->retentionTime,final retentionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_GENERATION_ID,static final DEFAULT_GENERATION_ID : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_RETENTION_TIME,static final DEFAULT_RETENTION_TIME : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetCommitRequest->DEFAULT_TIMESTAMP,static final DEFAULT_TIMESTAMP : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.OffsetCommitResponse,OffsetCommitResponse,low,low,low,low,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchRequest,OffsetFetchRequest,low,low,low-medium,low,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse,OffsetFetchResponse,low,low,low-medium,low,0,0,0,0,0,0,60,0,0,1,0,0,0,0,0,0,0,0,,,,,60,,,,,,0,,,,,,,
org.apache.kafka.common.requests.OffsetFetchResponse.PartitionData,PartitionData,low,low,low,low,0,1,0,0,0,1,10,2,2,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Field>org.apache.kafka.common.requests.OffsetFetchResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceRequest,ProduceRequest,low,low,low-medium,low,0,2,0,0,0,2,70,4,2,0,2,0,0,1,0,1,0,0,,,,,70,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceRequest.public acks( ): short,acks( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.ProduceRequest.public timeout( ): int,timeout( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceRequest->acks,final acks : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceRequest->timeout,final timeout : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ProduceResponse,ProduceResponse,low,low,low-medium,low,0,1,0,0,0,1,76,2,1,2,1,0,0,0,0,0,0,0,,,,,76,,,,,,1,,,,,,,
org.apache.kafka.common.requests.ProduceResponse.PartitionResponse,PartitionResponse,low,low,low,low,0,1,0,0,0,1,16,3,2,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.ProduceResponse.public getThrottleTime( ): int,getThrottleTime( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ProduceResponse->throttleTime,final throttleTime : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->DEFAULT_THROTTLE_TIME,static final DEFAULT_THROTTLE_TIME : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.ProduceResponse->INVALID_OFFSET,static final INVALID_OFFSET : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestHeader,RequestHeader,low,low,low,low,0,3,0,0,0,3,37,6,3,0,3,0,0,1,0,1,0,0,,,,,37,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.RequestHeader.public apiKey( ): short,apiKey( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public apiVersion( ): short,apiVersion( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.RequestHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.RequestHeader->apiKey,final apiKey : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestHeader->apiVersion,final apiVersion : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.RequestHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.RequestSend,RequestSend,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.common.requests.ResponseHeader,ResponseHeader,low,low,low,low,0,2,0,0,0,2,14,6,1,0,2,0,0,0,0.25,0,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.ResponseHeader.public ResponseHeader( int ): void,ResponseHeader( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.ResponseHeader.public correlationId( ): int,correlationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.ResponseHeader->correlationId,final correlationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.ResponseSend,ResponseSend,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.requests.StopReplicaRequest,StopReplicaRequest,low,low,low-medium,low,0,3,0,0,0,3,62,6,3,0,3,0,0,1,0,1,0,0,,,,,62,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.StopReplicaRequest.public deletePartitions( ): boolean,deletePartitions( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.StopReplicaRequest->deletePartitions,final deletePartitions : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.StopReplicaResponse,StopReplicaResponse,low,low,low,low,0,1,0,0,0,1,44,2,1,0,1,0,0,0,0,0,0,0,,,,,44,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.StopReplicaResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.StopReplicaResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SyncGroupRequest,SyncGroupRequest,low,low,low-medium,low,0,1,0,0,0,1,61,2,1,0,1,0,0,0,0,0,0,0,,,,,61,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupRequest.public generationId( ): int,generationId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupRequest->generationId,final generationId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.SyncGroupResponse,SyncGroupResponse,low,low,low,low,0,1,0,0,0,1,22,2,1,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.requests.SyncGroupResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.SyncGroupResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest,UpdateMetadataRequest,low,low,low-medium,low,0,2,0,0,0,2,180,4,2,0,2,0,0,1,0,1,0,0,,,,,180,,,,,,2,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.Broker,Broker,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.BrokerEndPoint,BrokerEndPoint,low,low,low,low,0,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.EndPoint,EndPoint,low,low,low,low,0,0,0,0,0,0,6,0,1,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataRequest.PartitionState,PartitionState,low,low,low,low,0,0,0,0,0,0,14,0,4,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerEpoch( ): int,controllerEpoch( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.requests.UpdateMetadataRequest.public controllerId( ): int,controllerId( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerEpoch,final controllerEpoch : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.requests.UpdateMetadataRequest->controllerId,final controllerId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.requests.UpdateMetadataResponse,UpdateMetadataResponse,low,low,low,low,0,2,0,0,0,2,17,6,1,0,2,0,0,0,0.25,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public UpdateMetadataResponse( short ): void,UpdateMetadataResponse( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,1,0,1
<Method>org.apache.kafka.common.requests.UpdateMetadataResponse.public errorCode( ): short,errorCode( ): short,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.common.requests.UpdateMetadataResponse->errorCode,final errorCode : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.security,org.apache.kafka.common.security,low,low,low,low,,,,,,7,55,,,,,,,,,,,,,1,1,0,55,0,0,0,1,0,7,,,,,,,
org.apache.kafka.common.security.JaasUtils,JaasUtils,low,low,low-medium,low,0,1,0,0,0,7,55,20,0,0,0,1,0,0,0,0,0,0,,,,,55,,,,,,7,,,,,,,
<Method>org.apache.kafka.common.security.JaasUtils.public static isZkSecurityEnabled( ): boolean,static isZkSecurityEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,20,0,0,0
<Package>org.apache.kafka.common.security.auth,org.apache.kafka.common.security.auth,low,low,low,low,,,,,,5,51,,,,,,,,,,,,,3,2,1,51,0,0,0.333,1,0.333,5,,,,,,,
org.apache.kafka.common.security.auth.DefaultPrincipalBuilder,DefaultPrincipalBuilder,low,low,low,low,0,1,0,0,0,1,8,1,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.DefaultPrincipalBuilder.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.security.auth.KafkaPrincipal,KafkaPrincipal,low,low,low,low,0,1,0,0,0,1,38,5,0,1,1,0,0,0,0,0,0,0,,,,,38,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.security.auth.KafkaPrincipal.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Field>org.apache.kafka.common.security.auth.KafkaPrincipal->ANONYMOUS,static final ANONYMOUS : KafkaPrincipal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.auth.PrincipalBuilder,PrincipalBuilder,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.security.auth.PrincipalBuilder.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.common.security.authenticator,org.apache.kafka.common.security.authenticator,low,low,low-medium,low,,,,,,38,253,,,,,,,,,,,,,5,5,0,253,0,0,0,1,0,38,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator,SaslClientAuthenticator,low-medium,low,low-medium,low,0,7,4,0,0,24,136,70,1,0,7,0,0,0,0.357,0.667,0,0,,,,,136,,,,,,24,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.ClientCallbackHandler,ClientCallbackHandler,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$3757;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$3757;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$7652;,Lorg.apache.kafka.common.security.authenticator.SaslClientAuthenticator$7652;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.SaslState,SaslState,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public authenticate( ): void,authenticate( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,25,0,3,3
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private createSaslToken( byte ): byte,createSaslToken( byte ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,20,1,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,1,0
<Method>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator.private sendSaslToken( byte ): void,sendSaslToken( byte ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,10,1,2,1
<Field>org.apache.kafka.common.security.authenticator.SaslClientAuthenticator->saslState,saslState : SaslState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.authenticator.SaslServerAuthenticator,SaslServerAuthenticator,low,low,low-medium,low,0,5,2,0,0,14,87,35,0,0,5,0,0,0,0,0,0,0,,,,,87,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$5854;,Lorg.apache.kafka.common.security.authenticator.SaslServerAuthenticator$5854;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public authenticate( ): void,authenticate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,4,20,0,2,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.public complete( ): boolean,complete( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBuffer( ): boolean,flushNetOutBuffer( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
<Method>org.apache.kafka.common.security.authenticator.SaslServerAuthenticator.private flushNetOutBufferAndUpdateInterestOps( ): boolean,flushNetOutBufferAndUpdateInterestOps( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,7,0,1,0
org.apache.kafka.common.security.authenticator.SaslServerCallbackHandler,SaslServerCallbackHandler,low,low,low,low,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.security.kerberos,org.apache.kafka.common.security.kerberos,low,low,low-medium,low,,,,,,20,446,,,,,,,,,,,,,7,7,0,446,0,0,0,1,0,20,,,,,,,
org.apache.kafka.common.security.kerberos.BadFormatString,BadFormatString,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosName,KerberosName,low,low,low,low,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,,,,,37,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosRule,KerberosRule,low,low,low-medium,low,0,0,0,0,0,0,98,0,3,0,0,0,0,0,0,0,0,0,,,,,98,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->isDefault,final isDefault : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->numOfComponents,final numOfComponents : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.KerberosRule->repeat,final repeat : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.KerberosShortNamer,KerberosShortNamer,low,low,low,low,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,,,,,40,,,,,,0,,,,,,,
org.apache.kafka.common.security.kerberos.Login,Login,low,low,low-medium,low,0,6,2,0,0,14,212,35,6,0,6,0,0,1.333,0,1,0,0,,,,,212,,,,,,14,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.security.kerberos.Login$5973;,Lorg.apache.kafka.common.security.kerberos.Login$5973;,low,low,low,low,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,,,,,96,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.Login.private currentElapsedTime( ): long,currentElapsedTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.Login.private currentWallTime( ): long,currentWallTime( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.common.security.kerberos.Login.private hasSufficientTimeElapsed( ): boolean,hasSufficientTimeElapsed( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,1,3
<Method>org.apache.kafka.common.security.kerberos.Login.public shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,7,0,0,0
<Method>org.apache.kafka.common.security.kerberos.Login.public startThreadIfNeeded( ): void,startThreadIfNeeded( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,0,0,0
<Method>org.apache.kafka.common.security.kerberos.Login.private synchronized reLogin( ): void,synchronized reLogin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,0,2,2
<Field>org.apache.kafka.common.security.kerberos.Login->isKrbTicket,final isKrbTicket : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.Login->isUsingTicketCache,final isUsingTicketCache : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.Login->minTimeBeforeRelogin,final minTimeBeforeRelogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.Login->ticketRenewJitter,final ticketRenewJitter : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.Login->ticketRenewWindowFactor,final ticketRenewWindowFactor : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.kerberos.Login->lastLogin,lastLogin : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.LoginManager,LoginManager,low,low,low-medium,low,0,3,0,0,0,6,51,16,1,0,2,1,0,0,0,1,0,0,,,,,51,,,,,,6,,,,,,,
<Method>org.apache.kafka.common.security.kerberos.LoginManager.private acquire( ): LoginManager,acquire( ): LoginManager,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.security.kerberos.LoginManager.public release( ): void,release( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,8,0,0,3
<Method>org.apache.kafka.common.security.kerberos.LoginManager.public static closeAll( ): void,static closeAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,5,0,0,0
<Field>org.apache.kafka.common.security.kerberos.LoginManager->refCount,refCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.security.kerberos.NoMatchingRule,NoMatchingRule,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Package>org.apache.kafka.common.security.ssl,org.apache.kafka.common.security.ssl,low,low,low,low,,,,,,0,119,,,,,,,,,,,,,2,2,0,119,0,0,0,1,0,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory,SslFactory,low,low,low-medium,low,0,0,0,0,0,0,119,0,4,0,0,0,0,0,0,0,0,0,,,,,119,,,,,,0,,,,,,,
org.apache.kafka.common.security.ssl.SslFactory.SecurityStore,SecurityStore,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->keystore,keystore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->needClientAuth,needClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->truststore,truststore : SecurityStore,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.security.ssl.SslFactory->wantClientAuth,wantClientAuth : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.common.serialization,org.apache.kafka.common.serialization,low,low,low-medium,low,,,,,,14,124,,,,,,,,,,,,,10,8,2,124,0,0,0.2,1,0.2,14,,,,,,,
org.apache.kafka.common.serialization.ByteArrayDeserializer,ByteArrayDeserializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArrayDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.ByteArraySerializer,ByteArraySerializer,low,low,low,low,0,1,0,0,0,1,8,2,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.ByteArraySerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.Deserializer<T>,Deserializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Deserializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.IntegerDeserializer,IntegerDeserializer,low,low,low,low,0,1,0,0,0,1,14,1,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.IntegerSerializer,IntegerSerializer,low,low,low,low,0,1,0,0,0,1,12,1,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.IntegerSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongDeserializer,LongDeserializer,low,low,low,low,0,1,0,0,0,1,14,1,0,0,1,0,0,0,0,0,0,0,,,,,14,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.LongSerializer,LongSerializer,low,low,low,low,0,1,0,0,0,1,16,1,0,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.LongSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.Serializer<T>,Serializer,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.serialization.Serializer<T>.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.common.serialization.StringDeserializer,StringDeserializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.common.serialization.StringSerializer,StringSerializer,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.common.serialization.StringSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.common.utils,org.apache.kafka.common.utils,low,low,medium-high,low,,,,,,91,905,,,,,,,,,,,,,17,15,2,905,0,1,0.235,1,0.235,91,,,,,,,
org.apache.kafka.common.utils.AbstractIterator<T>,AbstractIterator,low,low,low,low,1,6,1,0,0,12,44,30,2,0,6,0,0,0.5,0,0.667,0,0,,,,,44,,,,,,12,,,,,,,
org.apache.kafka.common.utils.AbstractIterator.State,State,low,low,low,low,0,0,0,0,0,0,2,0,0,4,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected abstract makeNext( ): T,abstract makeNext( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.protected allDone( ): T,allDone( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,11,0,0,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public next( ): T,next( ): T,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,8,0,1,3
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,1,1
<Method>org.apache.kafka.common.utils.AbstractIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->next,next : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.AbstractIterator<T>->state,state : State,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.AppInfoParser,AppInfoParser,low,low,low,low,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,,,,,44,,,,,,0,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfo,AppInfo,low,low,low,low,0,1,0,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
org.apache.kafka.common.utils.AppInfoParser.AppInfoMBean,AppInfoMBean,low,low,low,low,0,0,0,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.common.utils.CircularIterator<T>,CircularIterator,low,low,low,low,0,4,0,0,0,4,20,13,1,0,4,0,0,0,0,0.833,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public hasNext( ): boolean,hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public next( ): T,next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,3
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public peek( ): T,peek( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.CircularIterator<T>.public remove( ): void,remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.common.utils.CircularIterator<T>->i, i : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.CollectionUtils,CollectionUtils,low,low,low,low,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,,,,,22,,,,,,0,,,,,,,
"org.apache.kafka.common.utils.CopyOnWriteMap<K,V>",CopyOnWriteMap,low,low,low-medium,low,0,8,1,0,0,12,76,36,0,0,8,0,0,0,0.333,0,0,0,,,,,76,,,,,,12,,,,,,,
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public CopyOnWriteMap( ): void",CopyOnWriteMap( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public isEmpty( ): boolean",isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public size( ): int",size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized clear( ): void",synchronized clear( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized put( K, V ): V","synchronized put( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,2,0,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized putIfAbsent( K, V ): V","synchronized putIfAbsent( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V ): V","synchronized replace( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,2,1,0
"<Method>org.apache.kafka.common.utils.CopyOnWriteMap<K,V>.public synchronized replace( K, V, V ): boolean","synchronized replace( K, V, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,3,1,0
org.apache.kafka.common.utils.Crc32,Crc32,low,low,low-medium,low,0,8,5,0,0,16,298,55,1,9,6,2,0,0.833,0.375,0.786,0,0,,,,,298,,,,,,16,,,,,,,
<Method>org.apache.kafka.common.utils.Crc32.public Crc32( ): void,Crc32( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
<Method>org.apache.kafka.common.utils.Crc32.public final update( int ): void,final update( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,5
<Method>org.apache.kafka.common.utils.Crc32.public final updateInt( int ): void,final updateInt( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,4,0
<Method>org.apache.kafka.common.utils.Crc32.public getValue( ): long,getValue( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public reset( ): void,reset( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte ): long,static crc32( byte ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,1,0
"<Method>org.apache.kafka.common.utils.Crc32.public static crc32( byte, int, int ): long","static crc32( byte, int, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,2,0
"<Method>org.apache.kafka.common.utils.Crc32.public update( byte, int, int ): void","update( byte, int, int ): void",low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,2,33,3,0,32
<Field>org.apache.kafka.common.utils.Crc32->crc,crc : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T,static final T : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_0_START,static final T8_0_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_1_START,static final T8_1_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_2_START,static final T8_2_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_3_START,static final T8_3_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_4_START,static final T8_4_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_5_START,static final T8_5_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_6_START,static final T8_6_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Crc32->T8_7_START,static final T8_7_START : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.KafkaThread,KafkaThread,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.KafkaThread$1233;,Lorg.apache.kafka.common.utils.KafkaThread$1233;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell,Shell,low,low,low-medium,low,0,4,1,0,1,13,124,60,2,0,4,0,0,0.5,0.375,1,0,0,,,,,124,,,,,,13,,,,,,,
org.apache.kafka.common.utils.Shell.ExitCodeException,ExitCodeException,low,low,low,low,0,1,0,0,0,1,8,2,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Shell$3381;,Lorg.apache.kafka.common.utils.Shell$3381;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
org.apache.kafka.common.utils.Shell.ShellCommandExecutor,ShellCommandExecutor,low,low,low,low,0,3,1,1,0,1,28,2,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
org.apache.kafka.common.utils.Shell.ShellTimeoutTimerTask,ShellTimeoutTimerTask,low,low,low,low,0,2,0,0,0,5,12,10,1,0,2,0,0,0,0.25,0,0,0,,,,,12,,,,,,5,,,,,,,
<Method>org.apache.kafka.common.utils.Shell.public Shell( long ): void,Shell( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.common.utils.Shell.public exitCode( ): int,exitCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.common.utils.Shell.protected run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,1
<Method>org.apache.kafka.common.utils.Shell.private runCommand( ): void,runCommand( ): void,low,low,medium-high,low,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,4,53,0,0,5
<Field>org.apache.kafka.common.utils.Shell->exitCode,exitCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.common.utils.Shell->timeout,final timeout : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.common.utils.SystemTime,SystemTime,low,low,low,low,0,3,0,0,0,4,12,11,0,0,3,0,0,0,0.333,0,0,0,,,,,12,,,,,,4,,,,,,,
<Method>org.apache.kafka.common.utils.SystemTime.public milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.common.utils.SystemTime.public sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,1,0,0
org.apache.kafka.common.utils.Time,Time,low,low,low,low,0,3,0,1,0,3,4,3,0,0,3,0,0,0,0.333,0,0,0,,,,,4,,,,,,3,,,,,,,
<Method>org.apache.kafka.common.utils.Time.public abstract milliseconds( ): long,milliseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract nanoseconds( ): long,nanoseconds( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.common.utils.Time.public abstract sleep( long ): void,sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.common.utils.Utils,Utils,low,low,low-medium,low,0,8,0,0,0,17,252,61,0,0,0,8,0,0,0.55,0,0,0,,,,,252,,,,,,17,,,,,,,
<Anonymous> : Lorg.apache.kafka.common.utils.Utils$16261;,Lorg.apache.kafka.common.utils.Utils$16261;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
<Method>org.apache.kafka.common.utils.Utils.public static abs( int ): int,static abs( int ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,2,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static min( long, long ): long","static min( long, long ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,6,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static murmur2( byte ): int,static murmur2( byte ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,27,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static notNull( T ): T,static notNull( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static readUnsignedIntLE( byte, int ): int","static readUnsignedIntLE( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,2,0,0
<Method>org.apache.kafka.common.utils.Utils.public static sleep( long ): void,static sleep( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,0
<Method>org.apache.kafka.common.utils.Utils.public static toArrayLE( int ): byte,static toArrayLE( int ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,7,1,0,0
"<Method>org.apache.kafka.common.utils.Utils.public static writeUnsignedIntLE( byte, int, int ): void","static writeUnsignedIntLE( byte, int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,3,0,0
<Package>org.apache.kafka.connect.cli,org.apache.kafka.connect.cli,low,low,low,low,,,,,,0,52,,,,,,,,,,,,,2,2,0,52,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.cli.ConnectDistributed,ConnectDistributed,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
org.apache.kafka.connect.cli.ConnectStandalone,ConnectStandalone,low,low,low,low,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,,,,,35,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.cli.ConnectStandalone$3461;,Lorg.apache.kafka.connect.cli.ConnectStandalone$3461;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.connector,org.apache.kafka.connect.connector,low,low,low,low,,,,,,12,89,,,,,,,,,,,,,4,2,2,89,0,0,1,1,1,12,,,,,,,
org.apache.kafka.connect.connector.ConnectRecord,ConnectRecord,low,low,low-medium,low,0,1,0,0,0,7,66,9,0,0,1,0,0,0,0,0,0,0,,,,,66,,,,,,7,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,1,9,0,0,0
org.apache.kafka.connect.connector.Connector,Connector,low,low,low,low,0,1,0,0,0,1,15,1,0,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.connector.Connector.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.connector.ConnectorContext,ConnectorContext,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.connector.ConnectorContext.public abstract requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.connector.Task,Task,low,low,low,low,0,1,0,1,0,3,5,1,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.connector.Task.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.data,org.apache.kafka.connect.data,low,low,medium-high,low,,,,,,49,711,,,,,,,,,,,,,12,11,1,711,0,0,0.083,1,0.083,49,,,,,,,
org.apache.kafka.connect.data.ConnectSchema,ConnectSchema,low,low,low-medium,low,0,3,0,0,0,3,173,9,1,0,3,0,0,0,0,0.667,0,0,,,,,173,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.data.ConnectSchema.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.ConnectSchema.public schema( ): ConnectSchema,schema( ): ConnectSchema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.ConnectSchema->optional,final optional : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Date,Date,low,low,low,low,0,0,0,0,0,0,23,0,0,1,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Date->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Decimal,Decimal,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Field,Field,low,low,low,low,0,2,0,0,0,2,25,5,1,0,2,0,0,0,0,0,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.data.Field.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.data.Field.public index( ): int,index( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.data.Field->index,final index : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Schema,Schema,low,low,low-medium,low,0,5,0,1,0,12,51,5,0,18,5,0,0,0,0,1,0,0,,,,,51,,,,,,12,,,,,,,
org.apache.kafka.connect.data.Schema.Type,Type,low,low,low,low,0,2,0,0,0,11,20,15,0,12,2,0,0,0,0,0,0,0,,,,,20,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.data.Schema.public abstract isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract keySchema( ): Schema,keySchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract schema( ): Schema,schema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract type( ): Type,type( ): Type,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.data.Schema.public abstract valueSchema( ): Schema,valueSchema( ): Schema,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.connect.data.Schema->BOOLEAN_SCHEMA,static final BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->BYTES_SCHEMA,static final BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT32_SCHEMA,static final FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->FLOAT64_SCHEMA,static final FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT16_SCHEMA,static final INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT32_SCHEMA,static final INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT64_SCHEMA,static final INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->INT8_SCHEMA,static final INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BOOLEAN_SCHEMA,static final OPTIONAL_BOOLEAN_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_BYTES_SCHEMA,static final OPTIONAL_BYTES_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT32_SCHEMA,static final OPTIONAL_FLOAT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_FLOAT64_SCHEMA,static final OPTIONAL_FLOAT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT16_SCHEMA,static final OPTIONAL_INT16_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT32_SCHEMA,static final OPTIONAL_INT32_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT64_SCHEMA,static final OPTIONAL_INT64_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_INT8_SCHEMA,static final OPTIONAL_INT8_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->OPTIONAL_STRING_SCHEMA,static final OPTIONAL_STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.data.Schema->STRING_SCHEMA,static final STRING_SCHEMA : Schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaAndValue,SchemaAndValue,low,low,low,low,0,1,0,0,0,1,27,3,0,1,1,0,0,0,0,0,0,0,,,,,27,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaAndValue.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.data.SchemaAndValue->NULL,static final NULL : SchemaAndValue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.SchemaBuilder,SchemaBuilder,low,low,low-medium,low,0,13,0,0,0,14,150,31,0,0,3,10,0,0,0,0,0,0,,,,,150,,,,,,14,,,,,,,
<Method>org.apache.kafka.connect.data.SchemaBuilder.public isOptional( ): boolean,isOptional( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public optional( ): SchemaBuilder,optional( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public required( ): SchemaBuilder,required( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bool( ): SchemaBuilder,static bool( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static bytes( ): SchemaBuilder,static bytes( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float32( ): SchemaBuilder,static float32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static float64( ): SchemaBuilder,static float64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int16( ): SchemaBuilder,static int16( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int32( ): SchemaBuilder,static int32( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int64( ): SchemaBuilder,static int64( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static int8( ): SchemaBuilder,static int8( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static string( ): SchemaBuilder,static string( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.data.SchemaBuilder.public static struct( ): SchemaBuilder,static struct( ): SchemaBuilder,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.data.SchemaProjector,SchemaProjector,low,low,low-medium,low,0,0,0,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,,,,,116,,,,,,0,,,,,,,
org.apache.kafka.connect.data.Struct,Struct,low,low,low-medium,low,0,2,0,0,0,6,82,10,0,0,2,0,0,0,0,0,0,0,,,,,82,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.data.Struct.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.data.Struct.public validate( ): void,validate( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,7,0,0,0
org.apache.kafka.connect.data.Time,Time,low,low,low,low,0,0,0,0,0,0,24,0,0,1,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.data.Time->MILLIS_PER_DAY,static final MILLIS_PER_DAY : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.data.Timestamp,Timestamp,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.errors,org.apache.kafka.connect.errors,low,low,low-medium,low,,,,,,0,57,,,,,,,,,,,,,8,8,0,57,0,0,0,1,0,0,,,,,,,
org.apache.kafka.connect.errors.AlreadyExistsException,AlreadyExistsException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.ConnectException,ConnectException,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.DataException,DataException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.IllegalWorkerStateException,IllegalWorkerStateException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.NotFoundException,NotFoundException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.RetriableException,RetriableException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaBuilderException,SchemaBuilderException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.errors.SchemaProjectorException,SchemaProjectorException,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.file,org.apache.kafka.connect.file,low,low,low,low,,,,,,9,217,,,,,,,,,,,,,4,4,0,217,0,0,0,1,0,9,,,,,,,
org.apache.kafka.connect.file.FileStreamSinkConnector,FileStreamSinkConnector,low,low,low,low,0,1,0,0,0,1,23,2,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSinkTask,FileStreamSinkTask,low,low,low,low,0,2,0,0,0,3,36,5,0,0,2,0,0,0,0,0,0,0,,,,,36,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public FileStreamSinkTask( ): void,FileStreamSinkTask( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.file.FileStreamSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
org.apache.kafka.connect.file.FileStreamSourceConnector,FileStreamSourceConnector,low,low,low,low,0,1,0,0,0,1,30,2,0,0,1,0,0,0,0,0,0,0,,,,,30,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.file.FileStreamSourceTask,FileStreamSourceTask,low,low,low-medium,low,0,1,0,0,0,4,128,11,2,0,1,0,0,0,0,0,0,0,,,,,128,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.file.FileStreamSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,11,0,0,0
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->buffer,buffer : char,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.file.FileStreamSourceTask->offset,offset : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.json,org.apache.kafka.connect.json,low,low,low-medium,low,,,,,,6,614,,,,,,,,,,,,,7,5,2,614,0,0,0.286,1,0.286,6,,,,,,,
org.apache.kafka.connect.json.JsonConverter,JsonConverter,low,low,medium-high,low,0,0,0,0,0,0,533,0,2,2,0,0,0,0,0,0,0,0,,,,,533,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonConverter.JsonToConnectTypeConverter,JsonToConnectTypeConverter,low,low,low,low,0,0,0,1,12,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.json.JsonConverter.LogicalTypeConverter,LogicalTypeConverter,low,low,low,low,0,0,0,1,8,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10444;,Lorg.apache.kafka.connect.json.JsonConverter$10444;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$10906;,Lorg.apache.kafka.connect.json.JsonConverter$10906;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11360;,Lorg.apache.kafka.connect.json.JsonConverter$11360;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$11819;,Lorg.apache.kafka.connect.json.JsonConverter$11819;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12409;,Lorg.apache.kafka.connect.json.JsonConverter$12409;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$12856;,Lorg.apache.kafka.connect.json.JsonConverter$12856;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$13299;,Lorg.apache.kafka.connect.json.JsonConverter$13299;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$13747;,Lorg.apache.kafka.connect.json.JsonConverter$13747;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$2970;,Lorg.apache.kafka.connect.json.JsonConverter$2970;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3293;,Lorg.apache.kafka.connect.json.JsonConverter$3293;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3620;,Lorg.apache.kafka.connect.json.JsonConverter$3620;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$3948;,Lorg.apache.kafka.connect.json.JsonConverter$3948;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4268;,Lorg.apache.kafka.connect.json.JsonConverter$4268;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4591;,Lorg.apache.kafka.connect.json.JsonConverter$4591;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$4915;,Lorg.apache.kafka.connect.json.JsonConverter$4915;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5238;,Lorg.apache.kafka.connect.json.JsonConverter$5238;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$5723;,Lorg.apache.kafka.connect.json.JsonConverter$5723;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$6044;,Lorg.apache.kafka.connect.json.JsonConverter$6044;,low,low,low,low,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,,,,,9,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$6629;,Lorg.apache.kafka.connect.json.JsonConverter$6629;,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.json.JsonConverter$8882;,Lorg.apache.kafka.connect.json.JsonConverter$8882;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->cacheSize,cacheSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->enableSchemas,enableSchemas : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_CACHE_SIZE_DEFAULT,static final SCHEMAS_CACHE_SIZE_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.json.JsonConverter->SCHEMAS_ENABLE_DEFAULT,static final SCHEMAS_ENABLE_DEFAULT : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.json.JsonDeserializer,JsonDeserializer,low,low,low,low,0,2,0,0,0,2,17,3,0,0,2,0,0,0,0,0,0,0,,,,,17,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonDeserializer.public JsonDeserializer( ): void,JsonDeserializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonDeserializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.json.JsonSchema,JsonSchema,low,low,low,low,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSchema.Envelope,Envelope,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.connect.json.JsonSerializer,JsonSerializer,low,low,low,low,0,2,0,0,0,2,15,3,0,0,2,0,0,0,0,0,0,0,,,,,15,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.json.JsonSerializer.public JsonSerializer( ): void,JsonSerializer( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.json.JsonSerializer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Package>org.apache.kafka.connect.runtime,org.apache.kafka.connect.runtime,low,low,medium-high,low,,,,,,116,1019,,,,,,,,,,,,,19,17,2,1019,0,1,0.105,1,0.105,116,,,,,,,
org.apache.kafka.connect.runtime.Connect,Connect,low,low,low,low,0,3,0,0,0,5,46,22,1,0,3,0,0,0,0,1,0,0,,,,,46,,,,,,5,,,,,,,
org.apache.kafka.connect.runtime.Connect.ShutdownHook,ShutdownHook,low,low,low,low,0,2,1,0,0,2,8,7,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.Connect.public awaitStop( ): void,awaitStop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.connect.runtime.Connect.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,8,0,0,1
<Method>org.apache.kafka.connect.runtime.Connect.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,0
<Field>org.apache.kafka.connect.runtime.Connect->shutdownHook,final shutdownHook : ShutdownHook,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.ConnectorConfig,ConnectorConfig,low,low,low,low,0,1,0,0,0,1,23,2,0,1,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.ConnectorConfig.public ConnectorConfig( ): void,ConnectorConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.runtime.ConnectorConfig->TASKS_MAX_DEFAULT,static final TASKS_MAX_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.Herder,Herder,low,low,low,low,0,2,0,1,0,9,30,2,0,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,9,,,,,,,
org.apache.kafka.connect.runtime.Herder.Created<T>,Created,low,low,low,low,1,4,0,0,0,4,20,10,2,0,4,0,0,0.333,0.5,0.167,0,0,,,,,20,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.Herder.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.Herder.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.runtime.HerderConnectorContext,HerderConnectorContext,low,low,low,low,0,1,0,0,0,1,9,3,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.HerderConnectorContext.public requestTaskReconfiguration( ): void,requestTaskReconfiguration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter,SourceTaskOffsetCommitter,low,low,low-medium,low,0,1,0,0,0,3,63,6,0,0,1,0,0,0,0,0,0,0,,,,,63,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3102;,Lorg.apache.kafka.connect.runtime.SourceTaskOffsetCommitter$3102;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.ScheduledCommitTask,ScheduledCommitTask,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.SourceTaskOffsetCommitter.public close( long ): void,close( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,6,1,0,0
org.apache.kafka.connect.runtime.TaskConfig,TaskConfig,low,low,low,low,0,1,0,0,0,1,12,2,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.TaskConfig.public TaskConfig( ): void,TaskConfig( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.runtime.Worker,Worker,low,low,low-medium,low,0,2,0,0,0,8,185,46,0,0,2,0,0,0,0,0,0,0,,,,,185,,,,,,8,,,,,,,
<Method>org.apache.kafka.connect.runtime.Worker.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,16,0,0,0
<Method>org.apache.kafka.connect.runtime.Worker.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,30,0,0,0
org.apache.kafka.connect.runtime.WorkerConfig,WorkerConfig,low,low,low-medium,low,0,0,0,0,0,0,85,0,0,3,0,0,0,0,0,0,0,0,,,,,85,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_INTERVAL_MS_DEFAULT,static final OFFSET_COMMIT_INTERVAL_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->OFFSET_COMMIT_TIMEOUT_MS_DEFAULT,static final OFFSET_COMMIT_TIMEOUT_MS_DEFAULT : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerConfig->REST_PORT_DEFAULT,static final REST_PORT_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask,WorkerSinkTask,low-medium,low,low-medium,low-medium,0,8,2,0,0,32,219,115,2,0,8,0,0,1,0.625,1,0,0,,,,,219,,,,,,32,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTask.HandleRebalance,HandleRebalance,low,low,low,low,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSinkTask$8458;,Lorg.apache.kafka.connect.runtime.WorkerSinkTask$8458;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,1,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,0,0,0
"<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public commitOffsets( boolean, int ): void","commitOffsets( boolean, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,29,2,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private deliverMessages( ): void,deliverMessages( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,3,21,0,0,3
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public joinConsumerGroupAndStart( ): boolean,joinConsumerGroupAndStart( ): boolean,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,17,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,1,2,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.private rewind( ): void,rewind( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,12,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->pausedForRedelivery,pausedForRedelivery : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTask->started,started : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTaskContext,WorkerSinkTaskContext,low,low,low-medium,low,0,3,0,0,0,3,52,7,1,0,3,0,0,0,0.333,0.667,0,0,,,,,52,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public clearOffsets( ): void,clearOffsets( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( ): long,timeout( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskContext.public timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskContext->timeoutMs,timeoutMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSinkTaskThread,WorkerSinkTaskThread,low,low,low-medium,low,0,3,1,0,0,9,59,26,5,0,3,0,0,0.8,0,0.667,0,0,,,,,59,,,,,,9,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskThread.public commitFailures( ): int,commitFailures( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskThread.public execute( ): void,execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,7,0,1,0
<Method>org.apache.kafka.connect.runtime.WorkerSinkTaskThread.public iteration( ): void,iteration( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,17,0,0,12
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskThread->commitFailures,commitFailures : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskThread->commitSeqno,commitSeqno : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskThread->commitStarted,commitStarted : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskThread->committing,committing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSinkTaskThread->nextCommit,nextCommit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask,WorkerSourceTask,low-medium,low,low-medium,low,0,8,3,0,0,24,224,127,3,1,7,0,0,0.85,0.429,0.833,0,0,,,,,224,,,,,,24,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$13360;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$13360;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.WorkerSourceTask$7235;,Lorg.apache.kafka.connect.runtime.WorkerSourceTask$7235;,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTask.WorkerSourceTaskThread,WorkerSourceTaskThread,low,low,low,low,0,6,2,0,0,10,40,31,2,0,2,0,0,0,0,0,0,0,,,,,40,,,,,,10,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,11,1,0,3
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public commitOffsets( ): boolean,commitOffsets( ): boolean,low,low,medium-high,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,57,0,8,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private sendRecords( ): boolean,sendRecords( ): boolean,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,5,42,0,0,4
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.public stop( ): void,stop( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,1,2
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishFailedFlush( ): void,synchronized finishFailedFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Method>org.apache.kafka.connect.runtime.WorkerSourceTask.private synchronized finishSuccessfulFlush( ): void,synchronized finishSuccessfulFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->flushing,flushing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->lastSendFailed,lastSendFailed : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->SEND_FAILED_BACKOFF_MS,static final SEND_FAILED_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.WorkerSourceTask->workThread,workThread : WorkerSourceTaskThread,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.WorkerSourceTaskContext,WorkerSourceTaskContext,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.WorkerTask,WorkerTask,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.333,0,0,0,,,,,5,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.runtime.WorkerTask.public abstract awaitStop( long ): boolean,awaitStop( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.runtime.WorkerTask.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.runtime.distributed,org.apache.kafka.connect.runtime.distributed,low,low,medium-high,low,,,,,,81,1101,,,,,,,,,,,,,12,11,1,1101,0,0,0.083,1,0.083,81,,,,,,,
org.apache.kafka.connect.runtime.distributed.ClusterConfigState,ClusterConfigState,low,low,low-medium,low,0,1,0,0,0,1,52,2,1,1,1,0,0,0,0,0,0,0,,,,,52,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ClusterConfigState.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->offset,final offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ClusterConfigState->EMPTY,static final EMPTY : ClusterConfigState,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol,ConnectProtocol,low,low,low-medium,low,0,1,0,0,0,2,161,3,0,2,0,1,0,0,0,0,0,0,,,,,161,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.Assignment,Assignment,low,low,low,low,0,3,0,0,0,3,57,6,2,2,3,0,0,1,0,0.667,0,0,,,,,57,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState,WorkerState,low,low,low,low,0,1,0,0,0,1,16,2,1,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.ConnectProtocol.private static checkVersionCompatibility( short ): void,static checkVersionCompatibility( short ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,1,0,1
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECTOR_TASK,static final CONNECTOR_TASK : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.ConnectProtocol->CONNECT_PROTOCOL_V0,static final CONNECT_PROTOCOL_V0 : short,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedConfig,DistributedConfig,low,low,low-medium,low,0,0,0,0,0,0,113,0,0,1,0,0,0,0,0,0,0,0,,,,,113,,,,,,0,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedConfig->WORKER_UNSYNC_BACKOFF_MS_DEFAULT,static final WORKER_UNSYNC_BACKOFF_MS_DEFAULT : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder,DistributedHerder,medium-high,low,medium-high,low,0,10,7,0,0,57,503,177,4,1,10,0,0,1.1,0.4,1,0,0,,,,,503,,,,,,57,,,,,,,
org.apache.kafka.connect.runtime.distributed.DistributedHerder.HerderRequest,HerderRequest,low,low,low,low,0,1,0,0,0,1,15,3,1,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$15335;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$15335;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$15996;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$15996;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$17051;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$17051;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$18076;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$18076;,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20219;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20219;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20494;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$20494;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21182;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$21182;,low,low,low,low,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22491;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$22491;,low,low,low,low,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,,,,,11,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$31525;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$31525;,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32307;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32307;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32638;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$32638;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$35411;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$35411;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$38265;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$38265;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$38649;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$38649;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39446;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$39446;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40425;,Lorg.apache.kafka.connect.runtime.distributed.DistributedHerder$40425;,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private backoff( long ): void,backoff( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public halt( ): void,halt( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,19,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private handleRebalanceCompleted( ): boolean,handleRebalanceCompleted( ): boolean,low,low,low-medium,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,3,34,0,3,3
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private isLeader( ): boolean,isLeader( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private readConfigToEnd( long ): boolean,readConfigToEnd( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,14,1,2,1
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,15,0,2,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.private startWork( ): void,startWork( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,18,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,15,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.DistributedHerder.public tick( ): void,tick( ): void,medium-high,low,medium-high,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,4,54,0,2,4
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerSyncTimeoutMs,final workerSyncTimeoutMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->workerUnsyncBackoffMs,final workerUnsyncBackoffMs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->needsReconfigRebalance,needsReconfigRebalance : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->rebalanceResolved,rebalanceResolved : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.DistributedHerder->RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS,static final RECONFIGURE_CONNECTOR_TASKS_BACKOFF_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.NotLeaderException,NotLeaderException,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator,WorkerCoordinator,low,low,low-medium,low,0,3,0,0,0,3,165,8,2,0,3,0,0,1,0,0.667,0,0,,,,,165,,,,,,3,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.WorkerCoordinatorMetrics,WorkerCoordinatorMetrics,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public needRejoin( ): boolean,needRejoin( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->sensors,final sensors : WorkerCoordinatorMetrics,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerCoordinator->rejoinRequested,rejoinRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerGroupMember,WorkerGroupMember,low,low,low-medium,low,0,6,1,0,0,11,91,32,2,0,6,0,0,1,0.556,1,0,0,,,,,91,,,,,,11,,,,,,,
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public ensureActive( ): void,ensureActive( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public poll( long ): void,poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,10,1,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public requestRejoin( ): void,requestRejoin( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,1,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.private stop( boolean ): void,stop( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,12,1,0,1
<Method>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->retryBackoffMs,final retryBackoffMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.distributed.WorkerGroupMember->stopped,stopped : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.distributed.WorkerRebalanceListener,WorkerRebalanceListener,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest,org.apache.kafka.connect.runtime.rest,low,low,low,low,,,,,,4,129,,,,,,,,,,,,,2,2,0,129,0,1,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer,RestServer,low,low,low-medium,low,0,1,0,0,0,2,129,10,0,1,1,0,0,0,0,0,0,0,,,,,129,,,,,,2,,,,,,,
org.apache.kafka.connect.runtime.rest.RestServer.HttpResponse<T>,HttpResponse,low,low,low,low,1,2,0,0,0,2,14,4,2,0,2,0,0,1,0,1,0,0,,,,,14,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.RestServer.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,0,0
<Field>org.apache.kafka.connect.runtime.rest.RestServer->GRACEFUL_SHUTDOWN_TIMEOUT_MS,static final GRACEFUL_SHUTDOWN_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.entities,org.apache.kafka.connect.runtime.rest.entities,low,low,low,low,,,,,,6,115,,,,,,,,,,,,,5,5,0,115,0,0,0,1,0,6,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo,ConnectorInfo,low,low,low,low,0,1,0,0,0,1,35,3,0,0,1,0,0,0,0,0,0,0,,,,,35,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ConnectorInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest,CreateConnectorRequest,low,low,low,low,0,1,0,0,0,1,23,3,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.CreateConnectorRequest.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.ErrorMessage,ErrorMessage,low,low,low,low,0,2,0,0,0,2,23,6,1,0,2,0,0,0,0,0,0,0,,,,,23,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.entities.ErrorMessage->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.entities.ServerInfo,ServerInfo,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.ServerInfo.public ServerInfo( ): void,ServerInfo( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
org.apache.kafka.connect.runtime.rest.entities.TaskInfo,TaskInfo,low,low,low,low,0,1,0,0,0,1,22,3,0,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.entities.TaskInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.connect.runtime.rest.errors,org.apache.kafka.connect.runtime.rest.errors,low,low,low,low,,,,,,2,46,,,,,,,,,,,,,2,2,0,46,0,0,0,1,0,2,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectExceptionMapper,ConnectExceptionMapper,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.errors.ConnectRestException,ConnectRestException,low,low,low,low,0,2,0,0,0,2,25,4,2,0,2,0,0,1,0,1,0,0,,,,,25,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public errorCode( ): int,errorCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException.public statusCode( ): int,statusCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->errorCode,final errorCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.errors.ConnectRestException->statusCode,final statusCode : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.runtime.rest.resources,org.apache.kafka.connect.runtime.rest.resources,low,low,low,low,,,,,,1,116,,,,,,,,,,,,,5,4,1,116,0,0,0.2,1,0.2,1,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource,ConnectorsResource,low,low,low-medium,low,0,0,0,0,0,0,109,0,0,1,0,0,0,0,0,0,0,0,,,,,109,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.CreatedConnectorInfoTranslator,CreatedConnectorInfoTranslator,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.IdentityTranslator<T>,IdentityTranslator,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3261;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3261;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3948;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$3948;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4469;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4469;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4901;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$4901;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$5506;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$5506;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6220;,Lorg.apache.kafka.connect.runtime.rest.resources.ConnectorsResource$6220;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource.Translator<T,U>",Translator,low,low,low,low,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Field>org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource->REQUEST_TIMEOUT_MS,static final REQUEST_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.runtime.rest.resources.RootResource,RootResource,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Package>org.apache.kafka.connect.runtime.standalone,org.apache.kafka.connect.runtime.standalone,low,low,low,low,,,,,,4,154,,,,,,,,,,,,,3,3,0,154,0,0,0,1,0,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneConfig,StandaloneConfig,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder,StandaloneHerder,low,low,low-medium,low,0,2,0,0,0,4,148,13,0,0,2,0,0,0,0,0,0,0,,,,,148,,,,,,4,,,,,,,
org.apache.kafka.connect.runtime.standalone.StandaloneHerder.ConnectorState,ConnectorState,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$4180;,Lorg.apache.kafka.connect.runtime.standalone.StandaloneHerder$4180;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.connect.runtime.standalone.StandaloneHerder.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,0,0
<Package>org.apache.kafka.connect.sink,org.apache.kafka.connect.sink,low,low,low,low,,,,,,9,54,,,,,,,,,,,,,4,3,1,54,0,0,0.75,1,0.75,9,,,,,,,
org.apache.kafka.connect.sink.SinkConnector,SinkConnector,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
org.apache.kafka.connect.sink.SinkRecord,SinkRecord,low,low,low,low,0,2,0,0,0,2,30,7,1,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,2
<Method>org.apache.kafka.connect.sink.SinkRecord.public kafkaOffset( ): long,kafkaOffset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.connect.sink.SinkRecord->kafkaOffset,final kafkaOffset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.sink.SinkTask,SinkTask,low,low,low,low,0,1,0,0,0,1,13,1,0,0,1,0,0,0,0,0,0,0,,,,,13,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
org.apache.kafka.connect.sink.SinkTaskContext,SinkTaskContext,low,low,low,low,0,1,0,1,0,6,8,1,0,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.sink.SinkTaskContext.public abstract timeout( long ): void,timeout( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Package>org.apache.kafka.connect.source,org.apache.kafka.connect.source,low,low,low,low,,,,,,6,64,,,,,,,,,,,,,4,3,1,64,0,0,0.75,1,0.75,6,,,,,,,
org.apache.kafka.connect.source.SourceConnector,SourceConnector,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.connect.source.SourceRecord,SourceRecord,low,low,low,low,0,1,0,0,0,3,49,6,0,0,1,0,0,0,0,0,0,0,,,,,49,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.source.SourceRecord.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,6,0,0,0
org.apache.kafka.connect.source.SourceTask,SourceTask,low,low,low,low,0,2,0,0,0,2,10,2,0,0,2,0,0,0,0,0,0,0,,,,,10,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.source.SourceTask.public abstract stop( ): void,abstract stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.source.SourceTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.source.SourceTaskContext,SourceTaskContext,low,low,low,low,0,0,0,1,0,1,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
<Package>org.apache.kafka.connect.storage,org.apache.kafka.connect.storage,low,low,medium-high,low,,,,,,42,620,,,,,,,,,,,,,12,9,3,620,0,0,0.25,1,0.25,42,,,,,,,
org.apache.kafka.connect.storage.Converter,Converter,low,low,low,low,0,0,0,1,0,3,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,3,,,,,,,
org.apache.kafka.connect.storage.FileOffsetBackingStore,FileOffsetBackingStore,low,low,low,low,0,5,1,0,0,15,48,39,0,0,5,0,0,0,0,0,0,0,,,,,48,,,,,,15,,,,,,,
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public FileOffsetBackingStore( ): void,FileOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.private load( ): void,load( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,3,17,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,3,12,0,0,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,0
<Method>org.apache.kafka.connect.storage.FileOffsetBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
org.apache.kafka.connect.storage.KafkaConfigStorage,KafkaConfigStorage,low,low,low-medium,low,0,2,0,0,0,2,231,10,2,1,2,0,0,0,0,1,0,0,,,,,231,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaConfigStorage.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,6,0,0,2
<Method>org.apache.kafka.connect.storage.KafkaConfigStorage.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Field>org.apache.kafka.connect.storage.KafkaConfigStorage->offset,offset : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigStorage->starting,starting : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.storage.KafkaConfigStorage->READ_TO_END_TIMEOUT_MS,static final READ_TO_END_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore,KafkaOffsetBackingStore,low,low,low-medium,low,0,2,0,0,0,2,111,10,0,0,2,0,0,0,0,0,0,0,,,,,111,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4403;,Lorg.apache.kafka.connect.storage.KafkaOffsetBackingStore$4403;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.KafkaOffsetBackingStore.SetCallbackFuture,SetCallbackFuture,low,low,low,low,0,3,0,0,0,3,50,9,2,0,3,0,0,0,0.333,1,0,0,,,,,50,,,,,,3,,,,,,,
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
<Method>org.apache.kafka.connect.storage.KafkaOffsetBackingStore.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,0
org.apache.kafka.connect.storage.MemoryOffsetBackingStore,MemoryOffsetBackingStore,low,low,low,low,0,4,0,0,0,4,41,6,0,0,4,0,0,0,0,0,0,0,,,,,41,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2289;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$2289;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3045;,Lorg.apache.kafka.connect.storage.MemoryOffsetBackingStore$3045;,low,low,low,low,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public MemoryOffsetBackingStore( ): void,MemoryOffsetBackingStore( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.protected save( ): void,save( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.MemoryOffsetBackingStore.public synchronized stop( ): void,synchronized stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.storage.OffsetBackingStore,OffsetBackingStore,low,low,low,low,0,2,0,1,0,4,8,2,0,0,2,0,0,0,0,0,0,0,,,,,8,,,,,,4,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract start( ): void,start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetBackingStore.public abstract stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.connect.storage.OffsetStorageReader,OffsetStorageReader,low,low,low,low,0,0,0,1,0,2,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,2,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageReaderImpl,OffsetStorageReaderImpl,low,low,low-medium,low,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.OffsetStorageWriter,OffsetStorageWriter,low,low,low-medium,low,0,3,1,0,0,6,73,19,1,0,3,0,0,0,0,1,0,0,,,,,73,,,,,,6,,,,,,,
<Anonymous> : Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7864;,Lorg.apache.kafka.connect.storage.OffsetStorageWriter$7864;,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.private flushing( ): boolean,flushing( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized beginFlush( ): boolean,synchronized beginFlush( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,0,2,0
<Method>org.apache.kafka.connect.storage.OffsetStorageWriter.public synchronized cancelFlush( ): void,synchronized cancelFlush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,1,1
<Field>org.apache.kafka.connect.storage.OffsetStorageWriter->currentFlushId,currentFlushId : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.storage.OffsetUtils,OffsetUtils,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.connect.storage.StringConverter,StringConverter,low,low,low,low,0,1,0,0,0,1,28,1,0,0,1,0,0,0,0,0,0,0,,,,,28,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.storage.StringConverter.public StringConverter( ): void,StringConverter( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Package>org.apache.kafka.connect.tools,org.apache.kafka.connect.tools,low,low,low,low,,,,,,4,157,,,,,,,,,,,,,4,4,0,157,0,0,0,1,0,4,,,,,,,
org.apache.kafka.connect.tools.VerifiableSinkConnector,VerifiableSinkConnector,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSinkTask,VerifiableSinkTask,low,low,low-medium,low,0,1,0,0,0,1,51,2,1,0,1,0,0,0,0,0,0,0,,,,,51,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSinkTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSinkTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.tools.VerifiableSourceConnector,VerifiableSourceConnector,low,low,low,low,0,1,0,0,0,1,21,2,0,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceConnector.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.connect.tools.VerifiableSourceTask,VerifiableSourceTask,low,low,low-medium,low,0,1,0,0,0,1,64,3,3,0,1,0,0,0,0,0,0,0,,,,,64,,,,,,1,,,,,,,
<Method>org.apache.kafka.connect.tools.VerifiableSourceTask.public stop( ): void,stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->id,id : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->seqno,seqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.connect.tools.VerifiableSourceTask->startingSeqno,startingSeqno : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.connect.util,org.apache.kafka.connect.util,low,low,low-medium,low,,,,,,51,294,,,,,,,,,,,,,8,7,1,294,0,1,0.375,1,0.375,51,,,,,,,
org.apache.kafka.connect.util.Callback<V>,Callback,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.connect.util.ConnectorTaskId,ConnectorTaskId,low,low,low,low,0,3,0,0,0,5,39,14,1,0,3,0,0,0,0.333,0,0,0,,,,,39,,,,,,5,,,,,,,
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public compareTo( ConnectorTaskId ): int,compareTo( ConnectorTaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,1,0,2
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,1
<Method>org.apache.kafka.connect.util.ConnectorTaskId.public task( ): int,task( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.connect.util.ConnectorTaskId->task,final task : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ConnectorUtils,ConnectorUtils,low,low,low,low,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,0,,,,,,,
"org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>",ConvertingFutureCallback,low,low,low,low,1,6,1,0,0,7,39,18,1,0,6,0,0,0,0.556,1,0,0,,,,,39,,,,,,7,,,,,,,
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public abstract convert( U ): T",abstract convert( U ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public cancel( boolean ): boolean",cancel( boolean ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public get( ): T",get( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isCancelled( ): boolean",isCancelled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.public isDone( ): boolean",isDone( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>.private result( ): T",result( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,1
"<Field>org.apache.kafka.connect.util.ConvertingFutureCallback<U,T>->result",result : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.FutureCallback<T>,FutureCallback,low,low,low,low,0,2,0,0,0,2,8,5,0,0,2,0,0,0,0.25,0,0,0,,,,,8,,,,,,2,,,,,,,
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public FutureCallback( ): void,FutureCallback( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.FutureCallback<T>.public convert( T ): T,convert( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"org.apache.kafka.connect.util.KafkaBasedLog<K,V>",KafkaBasedLog,low-medium,low,low-medium,low,0,5,2,0,0,21,148,80,1,1,5,0,0,1,0.6,1,0,0,,,,,148,,,,,,21,,,,,,,
org.apache.kafka.connect.util.KafkaBasedLog.WorkThread,WorkThread,low,low,low,low,0,4,2,0,0,9,28,27,0,0,2,0,0,0,0,0,0,0,,,,,28,,,,,,9,,,,,,,
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private poll( long ): void",poll( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,9,1,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.private readToLogEnd( ): void",readToLogEnd( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,28,0,2,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public send( K, V ): void","send( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public start( ): void",start( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,2,22,0,1,1
"<Method>org.apache.kafka.connect.util.KafkaBasedLog<K,V>.public stop( ): void",stop( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,19,0,0,1
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->CREATE_TOPIC_TIMEOUT_MS",static final CREATE_TOPIC_TIMEOUT_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.connect.util.KafkaBasedLog<K,V>->stopRequested",stopRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.connect.util.ShutdownableThread,ShutdownableThread,low,low,low,low,0,5,1,0,0,6,41,19,0,0,5,0,0,0,0,0,0,0,,,,,41,,,,,,6,,,,,,,
<Method>org.apache.kafka.connect.util.ShutdownableThread.public abstract execute( ): void,abstract execute( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public forceShutdown( ): void,forceShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public getRunning( ): boolean,getRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,1,0
<Method>org.apache.kafka.connect.util.ShutdownableThread.public startGracefulShutdown( ): void,startGracefulShutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Package>org.apache.kafka.log4jappender,org.apache.kafka.log4jappender,low,low,low,low,,,,,,22,130,,,,,,,,,,,,,1,1,0,130,0,0,0,1,0,22,,,,,,,
org.apache.kafka.log4jappender.KafkaLog4jAppender,KafkaLog4jAppender,low-medium,low,low-medium,low,0,9,0,0,0,22,130,50,3,0,9,0,0,0.722,0.556,0.806,0,0,,,,,130,,,,,,22,,,,,,,
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public activateOptions( ): void,activateOptions( ): void,low-medium,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,3,30,0,0,4
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRequiredNumAcks( ): int,getRequiredNumAcks( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getRetries( ): int,getRetries( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public getSyncSend( ): boolean,getSyncSend( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public requiresLayout( ): boolean,requiresLayout( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRequiredNumAcks( int ): void,setRequiredNumAcks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setRetries( int ): void,setRetries( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Method>org.apache.kafka.log4jappender.KafkaLog4jAppender.public setSyncSend( boolean ): void,setSyncSend( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,1
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->requiredNumAcks,requiredNumAcks : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->retries,retries : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.log4jappender.KafkaLog4jAppender->syncSend,syncSend : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams,org.apache.kafka.streams,low,low,low,low,,,,,,10,244,,,,,,,,,,,,,4,3,1,244,0,0,0.25,1,0.25,10,,,,,,,
org.apache.kafka.streams.KafkaStreaming,KafkaStreaming,low,low,low-medium,low,0,2,0,0,0,8,52,23,1,3,2,0,0,0.5,0,0,0,0,,,,,52,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.KafkaStreaming.public synchronized close( ): void,synchronized close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,14,0,0,4
<Method>org.apache.kafka.streams.KafkaStreaming.public synchronized start( ): void,synchronized start( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,9,0,0,4
<Field>org.apache.kafka.streams.KafkaStreaming->state,state : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreaming->CREATED,static final CREATED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreaming->RUNNING,static final RUNNING : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.KafkaStreaming->STOPPED,static final STOPPED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.StreamingConfig,StreamingConfig,low,low,low-medium,low,0,0,0,0,0,0,189,0,0,0,0,0,0,0,0,0,0,0,,,,,189,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamingConfig.InternalConfig,InternalConfig,low,low,low,low,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.StreamingMetrics,StreamingMetrics,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.streams.examples,org.apache.kafka.streams.examples,low,low,low,low,,,,,,0,94,,,,,,,,,,,,,4,4,0,94,0,0,0,1,0,0,,,,,,,
org.apache.kafka.streams.examples.KStreamJob,KStreamJob,low,low,low,low,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,,,,,38,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.KStreamJob$2436;,Lorg.apache.kafka.streams.examples.KStreamJob$2436;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.KStreamJob$2719;,Lorg.apache.kafka.streams.examples.KStreamJob$2719;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.KStreamJob$2986;,Lorg.apache.kafka.streams.examples.KStreamJob$2986;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.examples.KStreamJob$3202;,Lorg.apache.kafka.streams.examples.KStreamJob$3202;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.ProcessorJob,ProcessorJob,low,low,low-medium,low,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.ProcessorJob.MyProcessorSupplier,MyProcessorSupplier,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
org.apache.kafka.streams.examples.WallclockTimestampExtractor,WallclockTimestampExtractor,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Package>org.apache.kafka.streams.kstream,org.apache.kafka.streams.kstream,low,low,medium-high,low,,,,,,70,240,,,,,,,,,,,,,18,5,13,240,0,1,0.722,1,0.722,70,,,,,,,
"org.apache.kafka.streams.kstream.KStream<K,V>",KStream,low,low,low,low,0,0,0,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,,,,,17,,,,,,16,,,,,,,
org.apache.kafka.streams.kstream.KStreamBuilder,KStreamBuilder,low,low,low,low,0,1,0,0,0,1,23,2,0,0,1,0,0,0,0,0,0,0,,,,,23,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.kstream.KStreamBuilder.public KStreamBuilder( ): void,KStreamBuilder( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"org.apache.kafka.streams.kstream.KStreamWindowed<K,V>",KStreamWindowed,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.KTable<K,V>",KTable,low,low,low,low,0,0,0,1,0,11,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,11,,,,,,,
"org.apache.kafka.streams.kstream.KeyValue<K,V>",KeyValue,low,low,low,low,2,2,0,0,0,2,8,5,2,0,1,1,0,0,0,1,0,0,,,,,8,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KeyValue<K,V>.public KeyValue( K, V ): void","KeyValue( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.kstream.KeyValue<K,V>.public static pair( K, V ): KeyValue","static pair( K, V ): KeyValue",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
"<Field>org.apache.kafka.streams.kstream.KeyValue<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.KeyValue<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.KeyValueMapper<K,V,R>",KeyValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.KeyValueMapper<K,V,R>.public abstract apply( K, V ): R","apply( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.Predicate<K,V>",Predicate,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Predicate<K,V>.public abstract test( K, V ): boolean","test( K, V ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.SlidingWindowSupplier<K,V>",SlidingWindowSupplier,low,low,low-medium,low,0,0,0,0,0,0,147,0,2,0,0,0,0,0,0,0,0,0,,,,,147,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.SlidingWindowSupplier.SlidingWindow,SlidingWindow,low,low,low,low,0,6,2,0,0,16,118,58,2,0,6,0,0,1,0.583,1,0,0,,,,,118,,,,,,16,,,,,,,
"<Field>org.apache.kafka.streams.kstream.SlidingWindowSupplier<K,V>->duration",final duration : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.SlidingWindowSupplier<K,V>->maxCount",final maxCount : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.Transformer<K,V,R>",Transformer,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.5,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.Transformer<K,V,R>.public abstract transform( K, V ): R","transform( K, V ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.TransformerSupplier<K,V,R>",TransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,R>",ValueJoiner,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueJoiner<V1,V2,R>.public abstract apply( V1, V2 ): R","apply( V1, V2 ): R",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.kstream.ValueMapper<V1,V2>",ValueMapper,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueMapper<V1,V2>.public abstract apply( V1 ): V2",apply( V1 ): V2,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformer<V,R>",ValueTransformer,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.444,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.ValueTransformer<V,R>.public abstract transform( V ): R",transform( V ): R,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.ValueTransformerSupplier<V,R>",ValueTransformerSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.Window<K,V>",Window,low,low,low,low,0,1,0,1,0,5,6,1,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.Window<K,V>.public abstract put( K, V, long ): void","put( K, V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
"org.apache.kafka.streams.kstream.WindowSupplier<K,V>",WindowSupplier,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
<Package>org.apache.kafka.streams.kstream.internals,org.apache.kafka.streams.kstream.internals,low,low,very-high,low,,,,,,94,1053,,,,,,,,,,,,,65,62,3,1053,0,2,0.077,1,0.077,94,,,,,,,
org.apache.kafka.streams.kstream.internals.AbstractStream<K>,AbstractStream,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2098;,Lorg.apache.kafka.streams.kstream.internals.AbstractStream$2098;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.Change<T>,Change,low,low,low,low,1,1,0,0,0,1,9,3,2,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.Change<T>.public Change( T, T ): void","Change( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->newValue,final newValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.kstream.internals.Change<T>->oldValue,final oldValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>",FilteredIterator,low,low,low,low,1,5,2,0,0,7,25,19,1,0,5,0,0,0,0.4,0.667,0,0,,,,,25,,,,,,7,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>.protected abstract filter( S ): T",abstract filter( S ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>.private findNext( ): void",findNext( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,7,0,1,3
"<Method>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>.public hasNext( ): boolean",hasNext( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>.public next( ): T",next( ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,1,1
"<Method>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>.public remove( ): void",remove( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Field>org.apache.kafka.streams.kstream.internals.FilteredIterator<T,S>->nextValue",nextValue : T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamBranch<K,V>",KStreamBranch,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamBranch.KStreamBranchProcessor,KStreamBranchProcessor,low,low,low,low,0,1,0,0,0,3,7,6,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>",KStreamFilter,low,low,low,low,0,0,0,0,0,0,14,0,1,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFilter.KStreamFilterProcessor,KStreamFilterProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KStreamFilter<K,V>->filterOut",final filterOut : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMap<K1,V1,K2,V2>",KStreamFlatMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMap.KStreamFlatMapProcessor,KStreamFlatMapProcessor,low,low,low,low,0,1,0,0,0,2,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues<K1,V1,V2>",KStreamFlatMapValues,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamFlatMapValues.KStreamFlatMapValuesProcessor,KStreamFlatMapValuesProcessor,low,low,low,low,0,1,0,0,0,2,6,5,0,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamImpl<K,V>",KStreamImpl,low,low,low-medium,low,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,,,,,122,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamJoin<K,V,V1,V2>",KStreamJoin,low,low,low,low,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,,,,,33,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamJoin.Finder<K,T>",Finder,low,low,low,low,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamJoin.KStreamJoinProcessor,KStreamJoinProcessor,low,low,low,low,1,1,0,0,0,3,22,7,1,0,1,0,0,0,0,0,0,0,,,,,22,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamKTableLeftJoin<K,V,V1,V2>",KStreamKTableLeftJoin,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamKTableLeftJoin.KStreamKTableLeftJoinProcessor,KStreamKTableLeftJoinProcessor,low,low,low,low,0,1,0,0,0,1,12,3,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMap<K1,V1,K2,V2>",KStreamMap,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMap.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamMapValues<K1,V1,V2>",KStreamMapValues,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamMapValues.KStreamMapProcessor,KStreamMapProcessor,low,low,low,low,0,1,0,0,0,1,5,4,0,0,1,0,0,0,0,0,0,0,,,,,5,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough<K,V>",KStreamPassThrough,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamPassThrough.KStreamPassThroughProcessor<K,V>",KStreamPassThroughProcessor,low,low,low,low,0,1,0,0,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform<K1,V1,K2,V2>",KStreamTransform,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransform.KStreamTransformProcessor<K1,V1,K2,V2>",KStreamTransformProcessor,low,low,low,low,0,3,0,0,0,3,19,10,0,0,3,0,0,0,0.5,0,0,0,,,,,19,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues<K,V,R>",KStreamTransformValues,low,low,low,low,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,,,,,25,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamTransformValues.KStreamTransformValuesProcessor<K,V,R>",KStreamTransformValuesProcessor,low,low,low,low,0,3,0,0,0,3,18,9,0,0,3,0,0,0,0.5,0,0,0,,,,,18,,,,,,3,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindow<K,V>",KStreamWindow,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KStreamWindow.KStreamWindowProcessor,KStreamWindowProcessor,low,low,low,low,0,2,0,0,0,2,15,8,0,0,2,0,0,0,0.333,0,0,0,,,,,15,,,,,,2,,,,,,,
"org.apache.kafka.streams.kstream.internals.KStreamWindowedImpl<K,V>",KStreamWindowedImpl,low,low,low,low,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,,,,,26,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>",KTableFilter,low,low,low,low,0,2,0,0,0,4,44,9,2,0,2,0,0,1,0.333,0,0,0,,,,,44,,,,,,4,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterProcessor,KTableFilterProcessor,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableFilter.KTableFilterValueGetter,KTableFilterValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableFilter$1835;,Lorg.apache.kafka.streams.kstream.internals.KTableFilter$1835;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.private computeValue( K, V ): V","computeValue( K, V ): V",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,1,5,2,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->filterOut",final filterOut : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableFilter<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>",KTableImpl,low,low,low-medium,low,0,2,0,0,0,4,159,12,1,0,2,0,0,0,0,0,0,0,,,,,159,,,,,,4,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableImpl$5930;,Lorg.apache.kafka.streams.kstream.internals.KTableImpl$5930;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. enableSendingOldValues( ): void", enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,0,0,2
"<Method>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>. sendingOldValueEnabled( ): boolean", sendingOldValueEnabled( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableImpl<K,S,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,V,V1,V2>",KTableKTableAbstractJoin,low,low,low,low,0,1,0,0,0,1,20,5,1,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,V,V1,V2>.public final enableSendingOldValues( ): void",final enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableKTableAbstractJoin<K,V,V1,V2>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoin<K,V,V1,V2>",KTableKTableJoin,low,low,low-medium,low,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,,,,,52,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinProcessor,KTableKTableJoinProcessor,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableJoin.KTableKTableJoinValueGetter,KTableKTableJoinValueGetter,low,low,low,low,0,1,0,0,0,3,19,9,0,0,1,0,0,0,0,0,0,0,,,,,19,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableKTableJoin$1553;,Lorg.apache.kafka.streams.kstream.internals.KTableKTableJoin$1553;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>",KTableKTableJoinMerger,low,low,low,low,0,1,0,0,0,1,20,4,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger.KTableKTableJoinMergeProcessor<K,V>",KTableKTableJoinMergeProcessor,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin<K,V,V1,V2>",KTableKTableLeftJoin,low,low,low-medium,low,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,,,,,51,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinProcessor,KTableKTableLeftJoinProcessor,low,low,low,low,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,,,,,21,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin.KTableKTableLeftJoinValueGetter,KTableKTableLeftJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin$1565;,Lorg.apache.kafka.streams.kstream.internals.KTableKTableLeftJoin$1565;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin<K,V,V1,V2>",KTableKTableOuterJoin,low,low,low,low,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,,,,,50,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinProcessor,KTableKTableOuterJoinProcessor,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin.KTableKTableOuterJoinValueGetter,KTableKTableOuterJoinValueGetter,low,low,low,low,0,1,0,0,0,3,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,3,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin$1568;,Lorg.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin$1568;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin<K,V,V1,V2>",KTableKTableRightJoin,low,low,low,low,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,,,,,49,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinProcessor,KTableKTableRightJoinProcessor,low,low,low,low,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,,,,,19,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableKTableRightJoin.KTableKTableRightJoinValueGetter,KTableKTableRightJoinValueGetter,low,low,low,low,0,1,0,0,0,2,18,8,0,0,1,0,0,0,0,0,0,0,,,,,18,,,,,,2,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableKTableRightJoin$1569;,Lorg.apache.kafka.streams.kstream.internals.KTableKTableRightJoin$1569;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableMapValues<K1,V1,V2>",KTableMapValues,low,low,low,low,0,2,0,0,0,3,42,9,1,0,2,0,0,0,0.25,0,0,0,,,,,42,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapProcessor,KTableMapProcessor,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableMapValues.KTableMapValuesValueGetter,KTableMapValuesValueGetter,low,low,low,low,0,2,1,0,0,1,10,3,0,0,1,0,0,0,0,0,0,0,,,,,10,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1762;,Lorg.apache.kafka.streams.kstream.internals.KTableMapValues$1762;,low,low,low,low,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K1,V1,V2>.private computeValue( V1 ): V2",computeValue( V1 ): V2,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,1,0,0
"<Method>org.apache.kafka.streams.kstream.internals.KTableMapValues<K1,V1,V2>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableMapValues<K1,V1,V2>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>",KTableProcessorSupplier,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K,V,T>.public abstract enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.kstream.internals.KTableSource<K,V>",KTableSource,low,low,low,low,0,3,0,0,0,3,31,6,2,0,3,0,0,0.75,0,0.667,0,0,,,,,31,,,,,,3,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSource.KTableSourceProcessor,KTableSourceProcessor,low,low,low,low,0,1,0,0,0,1,4,3,0,0,1,0,0,0,0,0,0,0,,,,,4,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSource.MaterializedKTableSourceProcessor,MaterializedKTableSourceProcessor,low,low,low,low,0,1,0,0,0,2,12,5,0,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public enableSendingOldValues( ): void",enableSendingOldValues( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public isMaterialized( ): boolean",isMaterialized( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>.public materialize( ): void",materialize( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->materialized",materialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.kstream.internals.KTableSource<K,V>->sendOldValues",sendOldValues : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier<K,V>",KTableSourceValueGetterSupplier,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier.KTableSourceValueGetter,KTableSourceValueGetter,low,low,low,low,0,1,0,0,0,1,7,2,0,0,1,0,0,0,0,0,0,0,,,,,7,,,,,,1,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableStoreSupplier<K,V>",KTableStoreSupplier,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
"org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>",KTableValueGetter,low,low,low,low,0,1,0,1,0,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.KTableValueGetter<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K,V>",KTableValueGetterSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowSupport,WindowSupport,low,low,low-medium,low,0,5,1,0,0,9,78,24,0,0,0,5,0,0,0.2,0,0,0,,,,,78,,,,,,9,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowSupport.Value<V>,Value,low,low,low,low,0,1,0,0,0,1,6,3,2,0,1,0,0,0,0,0,0,0,,,,,6,,,,,,1,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowSupport.ValueList<V>,ValueList,low,low,low,low,1,6,0,0,0,10,28,20,3,0,6,0,0,0.6,0.625,0.4,0,0,,,,,28,,,,,,10,,,,,,,
org.apache.kafka.streams.kstream.internals.WindowSupport.ValueListIterator<V>,ValueListIterator,low,low,low,low,1,4,0,0,0,5,15,13,1,0,4,0,0,0,0.375,0.667,0,0,,,,,15,,,,,,5,,,,,,,
"<Method>org.apache.kafka.streams.kstream.internals.WindowSupport.public static getInt( byte, int ): int","static getInt( byte, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,0
"<Method>org.apache.kafka.streams.kstream.internals.WindowSupport.public static getLong( byte, int ): long","static getLong( byte, int ): long",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,0
"<Method>org.apache.kafka.streams.kstream.internals.WindowSupport.public static putInt( byte, int, int ): int","static putInt( byte, int, int ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.WindowSupport.public static putLong( byte, int, long ): int","static putLong( byte, int, long ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,3,0,0
"<Method>org.apache.kafka.streams.kstream.internals.WindowSupport.public static puts( byte, int, byte ): int","static puts( byte, int, byte ): int",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,3,1,0
<Package>org.apache.kafka.streams.processor,org.apache.kafka.streams.processor,low,low,medium-high,low,,,,,,44,379,,,,,,,,,,,,,20,12,8,379,0,0,0.45,1,0.45,44,,,,,,,
"org.apache.kafka.streams.processor.AbstractProcessor<K,V>",AbstractProcessor,low,low,low,low,0,3,0,0,0,3,12,5,0,0,3,0,0,0,0.333,0,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.protected AbstractProcessor( ): void",AbstractProcessor( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.AbstractProcessor<K,V>.public punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.processor.DefaultPartitionGrouper,DefaultPartitionGrouper,low,low,low,low,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,,,,,24,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.PartitionGrouper,PartitionGrouper,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"org.apache.kafka.streams.processor.Processor<K,V>",Processor,low,low,low,low,0,3,0,1,0,4,5,3,0,0,3,0,0,0,0.5,0,0,0,,,,,5,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.Processor<K,V>.public abstract punctuate( long ): void",punctuate( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
org.apache.kafka.streams.processor.ProcessorContext,ProcessorContext,low,low,low,low-medium,0,7,0,1,0,17,18,7,0,0,7,0,0,0,0.629,0,0,0,,,,,18,,,,,,17,,,,,,,
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,3,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
<Method>org.apache.kafka.streams.processor.ProcessorContext.public abstract timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.processor.ProcessorSupplier<K,V>",ProcessorSupplier,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.StateRestoreCallback,StateRestoreCallback,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.StateRestoreCallback.public abstract restore( byte, byte ): void","restore( byte, byte ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
org.apache.kafka.streams.processor.StateStore,StateStore,low,low,low,low,0,3,0,1,0,5,6,3,0,0,3,0,0,0,0,0,0,0,,,,,6,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.StateStore.public abstract close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.StateStore.public abstract persistent( ): boolean,persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.StateStoreSupplier,StateStoreSupplier,low,low,low,low,0,0,0,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.TaskId,TaskId,low,low,low,low,0,3,0,0,0,7,47,15,2,0,3,0,0,0,0.444,0,0,0,,,,,47,,,,,,7,,,,,,,
org.apache.kafka.streams.processor.TaskId.TaskIdFormatException,TaskIdFormatException,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
"<Method>org.apache.kafka.streams.processor.TaskId.public TaskId( int, int ): void","TaskId( int, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Method>org.apache.kafka.streams.processor.TaskId.public compareTo( TaskId ): int,compareTo( TaskId ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,1,8,1,0,8
<Method>org.apache.kafka.streams.processor.TaskId.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,0,2
<Field>org.apache.kafka.streams.processor.TaskId->partition,final partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.TaskId->topicGroupId,final topicGroupId : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.TimestampExtractor,TimestampExtractor,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder,TopologyBuilder,low,low,low-medium,low,0,1,0,0,0,1,248,1,0,0,1,0,0,0,0,0,0,0,,,,,248,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.NodeFactory,NodeFactory,low,low,low,low,0,0,0,0,3,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.ProcessorNodeFactory,ProcessorNodeFactory,low,low,low,low,0,0,0,1,0,0,14,0,0,0,0,0,0,0,0,0,0,0,,,,,14,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.SinkNodeFactory,SinkNodeFactory,low,low,low,low,0,0,0,1,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.SourceNodeFactory,SourceNodeFactory,low,low,low,low,0,0,0,1,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.StateStoreFactory,StateStoreFactory,low,low,low,low,0,0,0,0,0,0,8,0,1,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.TopologyBuilder.TopicsInfo,TopicsInfo,low,low,low,low,0,1,0,0,0,1,17,4,0,0,1,0,0,0,0,0,0,0,,,,,17,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.TopologyBuilder.public TopologyBuilder( ): void,TopologyBuilder( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
org.apache.kafka.streams.processor.TopologyException,TopologyException,low,low,low,low,0,0,0,0,0,0,8,0,0,1,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.TopologyException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.processor.internals,org.apache.kafka.streams.processor.internals,low,low,medium-high,low,,,,,,162,1604,,,,,,,,,,,,,27,24,3,1604,0,1,0.148,1,0.148,162,,,,,,,
org.apache.kafka.streams.processor.internals.AbstractTask,AbstractTask,low,low,low,low,0,3,0,0,0,5,44,10,0,0,3,0,0,0,0,0,0,0,,,,,44,,,,,,5,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public abstract commit( ): void,abstract commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,-2147483648,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.AbstractTask.protected initializeStateStores( ): void,initializeStateStores( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,0,0,0
org.apache.kafka.streams.processor.internals.KafkaStreamingPartitionAssignor,KafkaStreamingPartitionAssignor,low,low,low-medium,low,0,0,0,0,0,0,238,0,1,0,0,0,0,0,0,0,0,0,,,,,238,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.KafkaStreamingPartitionAssignor$4735;,Lorg.apache.kafka.streams.processor.internals.KafkaStreamingPartitionAssignor$4735;,low,low,low,low,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,,,,,1,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.KafkaStreamingPartitionAssignor.ZKStringSerializer,ZKStringSerializer,low,low,low,low,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,,,,,16,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.KafkaStreamingPartitionAssignor->numStandbyReplicas,numStandbyReplicas : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>,MinTimestampTracker,low,low,low,low,0,2,0,0,0,3,23,8,1,0,2,0,0,0,0,1,0,0,,,,,23,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,0,0,1
<Method>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.processor.internals.MinTimestampTracker<E>->lastKnownTime,lastKnownTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup,PartitionGroup,low,low,low-medium,low,0,4,0,0,0,8,66,17,1,0,4,0,0,0,0,1,0,0,,,,,66,,,,,,8,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2193;,Lorg.apache.kafka.streams.processor.internals.PartitionGroup$2193;,low,low,low,low,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,,,,,8,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PartitionGroup.RecordInfo,RecordInfo,low,low,low,low,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public numBuffered( ): int,numBuffered( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,0
<Method>org.apache.kafka.streams.processor.internals.PartitionGroup.public topQueueSize( ): int,topQueueSize( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,3,0,0,0
<Field>org.apache.kafka.streams.processor.internals.PartitionGroup->totalBuffered,totalBuffered : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorContextImpl,ProcessorContextImpl,low,low,low-medium,low-medium,0,8,0,0,0,11,101,29,1,0,8,0,0,0,0.65,1,0,0,,,,,101,,,,,,11,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,0,0,0
<Field>org.apache.kafka.streams.processor.internals.ProcessorContextImpl->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>",ProcessorNode,low,low,low,low,0,3,0,0,0,3,26,6,0,0,3,0,0,0,0.5,0,0,0,,,,,26,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public addChild( ProcessorNode ): void",addChild( ProcessorNode ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.ProcessorNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,2,0,0
org.apache.kafka.streams.processor.internals.ProcessorStateManager,ProcessorStateManager,low,low,low-medium,low,0,2,0,0,0,6,184,10,2,0,2,0,0,0,0,1,0,0,,,,,184,,,,,,6,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public cleanup( ): void,cleanup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.ProcessorStateManager.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->defaultPartition,final defaultPartition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.ProcessorStateManager->isStandby,final isStandby : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.ProcessorTopology,ProcessorTopology,low,low,low,low,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,,,,,20,,,,,,0,,,,,,,
org.apache.kafka.streams.processor.internals.PunctuationQueue,PunctuationQueue,low,low,low,low,0,1,0,0,0,1,20,3,0,0,1,0,0,0,0,0,0,0,,,,,20,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationQueue.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,3,0,0,0
org.apache.kafka.streams.processor.internals.PunctuationSchedule,PunctuationSchedule,low,low,low,low,0,1,0,0,0,1,11,2,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.PunctuationSchedule.public next( ): PunctuationSchedule,next( ): PunctuationSchedule,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.PunctuationSchedule->interval,final interval : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.Punctuator,Punctuator,low,low,low,low,0,0,0,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
org.apache.kafka.streams.processor.internals.QuickUnion<T>,QuickUnion,low,low,low,low,0,5,2,0,0,9,25,23,0,0,5,0,0,0,0,0,0,0,,,,,25,,,,,,9,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public add( T ): void,add( T ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public exists( T ): boolean,exists( T ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public root( T ): T,root( T ): T,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,11,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.public unite( T, T ): void","unite( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,3,2,1,0
"<Method>org.apache.kafka.streams.processor.internals.QuickUnion<T>.private unitePair( T, T ): void","unitePair( T, T ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,5,2,2,0
org.apache.kafka.streams.processor.internals.RecordCollector,RecordCollector,low,low,low,low,0,2,0,0,0,2,27,4,0,0,2,0,0,0,0,0,0,0,,,,,27,,,,,,2,,,,,,,
org.apache.kafka.streams.processor.internals.RecordCollector.Supplier,Supplier,low,low,low,low,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordCollector.public flush( ): void,flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.RecordQueue,RecordQueue,low,low,low,low,0,3,0,0,0,3,40,6,1,0,3,0,0,0,0,1,0,0,,,,,40,,,,,,3,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public isEmpty( ): boolean,isEmpty( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.RecordQueue.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Field>org.apache.kafka.streams.processor.internals.RecordQueue->partitionTime,partitionTime : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.SinkNode<K,V>",SinkNode,low,low,low,low,0,2,0,0,0,2,25,6,0,0,2,0,0,0,0.333,0,0,0,,,,,25,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.SinkNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,2,0,0
"org.apache.kafka.streams.processor.internals.SourceNode<K,V>",SourceNode,low,low,low,low,0,2,0,0,0,2,23,5,0,0,2,0,0,0,0.333,0,0,0,,,,,23,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.SourceNode<K,V>.public process( K, V ): void","process( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
org.apache.kafka.streams.processor.internals.Stamped<V>,Stamped,low,low,low,low,1,1,0,0,0,1,12,3,2,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.Stamped<V>.public Stamped( V, long ): void","Stamped( V, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->timestamp,final timestamp : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.Stamped<V>->value,final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StampedRecord,StampedRecord,low,low,low,low,0,2,0,0,0,2,16,4,0,0,2,0,0,0,0,0,0,0,,,,,16,,,,,,2,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StampedRecord.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
org.apache.kafka.streams.processor.internals.StandbyContextImpl,StandbyContextImpl,low,low,low-medium,low-medium,0,8,0,0,0,8,81,23,1,0,8,0,0,0,0.65,1,0,0,,,,,81,,,,,,8,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public initialized( ): void,initialized( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public offset( ): long,offset( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public partition( ): int,partition( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StandbyContextImpl.public timestamp( ): long,timestamp( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
<Field>org.apache.kafka.streams.processor.internals.StandbyContextImpl->initialized,initialized : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StandbyTask,StandbyTask,low,low,low,low,0,2,1,0,0,4,30,7,0,0,2,0,0,0,0,0,0,0,,,,,30,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,1,0
<Method>org.apache.kafka.streams.processor.internals.StandbyTask.protected initializeOffsetLimits( ): void,initializeOffsetLimits( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,4,0,0,0
org.apache.kafka.streams.processor.internals.StreamTask,StreamTask,low,low,low-medium,low-medium,0,10,0,0,0,20,152,85,4,0,10,0,0,0.75,0.66,0.889,0,0,,,,,152,,,,,,20,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,16,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commit( ): void,commit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,13,0,0,3
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public commitNeeded( ): boolean,commitNeeded( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public forward( K, V ): void","forward( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,9,2,0,0
"<Method>org.apache.kafka.streams.processor.internals.StreamTask.public forward( K, V, int ): void","forward( K, V, int ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,3,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public maybePunctuate( long ): boolean,maybePunctuate( long ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public needCommit( ): void,needCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public process( ): int,process( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,26,0,0,7
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public requiresPoll( ): boolean,requiresPoll( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamTask.public schedule( long ): void,schedule( long ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,4,1,0,0
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitOffsetNeeded,commitOffsetNeeded : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->commitRequested,commitRequested : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->maxBufferedSize,final maxBufferedSize : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamTask->requiresPoll,requiresPoll : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread,StreamThread,medium-high,low,medium-high,low,0,13,10,0,0,65,432,183,9,0,13,0,0,0.956,0,1,0,0,,,,,432,,,,,,65,,,,,,,
org.apache.kafka.streams.processor.internals.StreamThread.StreamingMetricsImpl,StreamingMetricsImpl,low,low,low,low,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,,,,,61,,,,,,0,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private addStandbyTasks( ): void,addStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,4,21,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private commitAll( ): void,commitAll( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,2,5,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.protected maybeClean( ): void,maybeClean( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,8,24,0,0,4
<Method>org.apache.kafka.streams.processor.internals.StreamThread.protected maybeCommit( ): void,maybeCommit( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,4,15,0,1,5
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybePunctuate( ): void,maybePunctuate( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,3,9,0,0,1
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private maybeUpdateStandbyTasks( ): void,maybeUpdateStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10,7,22,0,0,2
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private removeStandbyTasks( ): void,removeStandbyTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private removeStreamTasks( ): void,removeStreamTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,7,0,0,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.public run( ): void,run( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,10,0,2,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private runLoop( ): void,runLoop( ): void,low,low,low-medium,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,6,32,0,5,3
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private shutdown( ): void,shutdown( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,2,22,0,3,0
<Method>org.apache.kafka.streams.processor.internals.StreamThread.private stillRunning( ): boolean,stillRunning( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,2,8,0,0,4
<Field>org.apache.kafka.streams.processor.internals.StreamThread->cleanTimeMs,final cleanTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->commitTimeMs,final commitTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->pollTimeMs,final pollTimeMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->sensors,final sensors : StreamingMetricsImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->totalRecordsToProcess,final totalRecordsToProcess : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastClean,lastClean : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->lastCommit,lastCommit : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->processStandbyRecords,processStandbyRecords : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.StreamThread->recordsProcessed,recordsProcessed : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.TimestampTracker<E>,TimestampTracker,low,low,low,low,0,2,0,1,0,4,6,2,0,1,2,0,0,0,0,1,0,0,,,,,6,,,,,,4,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract get( ): long,get( ): long,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Method>org.apache.kafka.streams.processor.internals.TimestampTracker<E>.public abstract size( ): int,size( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
<Field>org.apache.kafka.streams.processor.internals.TimestampTracker<E>->NOT_KNOWN,static final NOT_KNOWN : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.processor.internals.assignment,org.apache.kafka.streams.processor.internals.assignment,low,low,low-medium,low,,,,,,19,281,,,,,,,,,,,,,6,6,0,281,0,1,0,1,0,19,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo,AssignmentInfo,low,low,low-medium,low,0,1,0,0,0,1,79,3,1,0,1,0,0,0,0,0,0,0,,,,,79,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.AssignmentInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.ClientState<T>,ClientState,low,low,low,low,0,4,0,0,0,7,32,15,2,3,4,0,0,1,0.562,1,0,0,,,,,32,,,,,,7,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public ClientState( ): void,ClientState( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public ClientState( double ): void,ClientState( double ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public assign( T, boolean ): void","assign( T, boolean ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,1,8,2,0,4
<Method>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>.public copy( ): ClientState,copy( ): ClientState,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->capacity,capacity : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->cost,cost : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_ACTIVE,static final COST_ACTIVE : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_LOAD,static final COST_LOAD : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.ClientState<T>->COST_STANDBY,static final COST_STANDBY : double,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo,SubscriptionInfo,low,low,low-medium,low,0,1,0,0,0,1,64,3,1,1,1,0,0,0,0,0,0,0,,,,,64,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo.public hashCode( ): int,hashCode( ): int,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->version,final version : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.SubscriptionInfo->CURRENT_VERSION,static final CURRENT_VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.TaskAssignmentException,TaskAssignmentException,low,low,low,low,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.streams.processor.internals.assignment.TaskAssignmentException->serialVersionUID,static final serialVersionUID : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>",TaskAssignor,low,low,low-medium,low,0,4,1,0,0,8,102,21,1,0,4,0,0,0,0.562,1,0,0,,,,,102,,,,,,8,,,,,,,
org.apache.kafka.streams.processor.internals.assignment.TaskAssignor.TaskPair<T>,TaskPair,low,low,low,low,1,2,0,0,0,2,16,6,2,0,2,0,0,0,0.25,0,0,0,,,,,16,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.public assignStandbyTasks( int ): void",assignStandbyTasks( int ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,1,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.public assignTasks( ): void",assignTasks( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private assignTasks( boolean ): void",assignTasks( boolean ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,10,1,0,0
"<Method>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>.private pair( T, T ): TaskPair","pair( T, T ): TaskPair",low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,0
"<Field>org.apache.kafka.streams.processor.internals.assignment.TaskAssignor<C,T>->maxNumTaskPairs",final maxNumTaskPairs : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Package>org.apache.kafka.streams.state,org.apache.kafka.streams.state,low,low,medium-high,low,,,,,,83,734,,,,,,,,,,,,,26,20,6,734,0,2,0.308,1,0.308,83,,,,,,,
"org.apache.kafka.streams.state.Entry<K,V>",Entry,low,low,low,low,2,3,0,0,0,3,12,7,2,0,3,0,0,0.5,0.444,0.333,0,0,,,,,12,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.Entry<K,V>.public Entry( K, V ): void","Entry( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,2,0,2
"<Method>org.apache.kafka.streams.state.Entry<K,V>.public key( ): K",key( ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Method>org.apache.kafka.streams.state.Entry<K,V>.public value( ): V",value( ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
"<Field>org.apache.kafka.streams.state.Entry<K,V>->key",final key : K,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.Entry<K,V>->value",final value : V,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.InMemoryKeyValueStoreSupplier<K,V>",InMemoryKeyValueStoreSupplier,low,low,low-medium,low,0,0,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,,,,,66,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.InMemoryKeyValueStoreSupplier.MemoryStore<K,V>",MemoryStore,low,low,low,low,0,6,0,0,0,6,54,16,0,0,6,0,0,0,0.444,0,0,0,,,,,54,,,,,,6,,,,,,,
"org.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier<K,V>",InMemoryLRUCacheStoreSupplier,low,low,low-medium,low,0,0,0,0,0,0,98,0,1,0,0,0,0,0,0,0,0,0,,,,,98,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier.EldestEntryRemovalListener<K,V>",EldestEntryRemovalListener,low,low,low,low,0,1,0,1,1,1,2,1,0,0,1,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier$2163;,Lorg.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier$2163;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier.MemoryLRUCache<K,V>",MemoryLRUCache,low,low,low,low,1,7,0,0,0,7,75,21,1,0,7,0,0,0,0.571,1,0,0,,,,,75,,,,,,7,,,,,,,
"<Field>org.apache.kafka.streams.state.InMemoryLRUCacheStoreSupplier<K,V>->capacity",final capacity : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.KeyValueIterator<K,V>",KeyValueIterator,low,low,low,low,0,1,0,1,0,1,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,1,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueIterator<K,V>.public abstract close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,0,0,0
"org.apache.kafka.streams.state.KeyValueStore<K,V>",KeyValueStore,low,low,low,low,0,3,0,1,0,6,7,3,0,0,3,0,0,0,0.222,0,0,0,,,,,7,,,,,,6,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStore<K,V>.public abstract put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,2,0,0
"org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>",KeyValueStoreChangeLogger,low,low,low,low,0,2,0,0,0,2,39,6,3,0,2,0,0,0,0,1,0,0,,,,,39,,,,,,2,,,,,,,
"<Method>org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>.public add( K ): void",add( K ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Method>org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>.public delete( K ): void",delete( K ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,1,0,0
"<Field>org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>->maxDirty",final maxDirty : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>->maxRemoved",final maxRemoved : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.KeyValueStoreChangeLogger<K,V>->partition",partition : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>",MeteredKeyValueStore,low,low,low-medium,low,0,8,1,0,0,11,140,48,1,0,8,0,0,0,0.458,0.857,0,0,,,,,140,,,,,,11,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.MeteredKeyValueStore$3767;,Lorg.apache.kafka.streams.state.MeteredKeyValueStore$3767;,low,low,low,low,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,,,,,5,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.MeteredKeyValueStore.MeteredKeyValueIterator<K1,V1>",MeteredKeyValueIterator,low,low,low,low,0,3,0,0,0,3,23,12,1,0,3,0,0,0,0,1,0,0,,,,,23,,,,,,3,,,,,,,
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,9,1,1,0
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public disableLogging( ): MeteredKeyValueStore",disableLogging( ): MeteredKeyValueStore,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,1
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,9,0,0,1
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,7,1,0,0
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,3,10,2,0,1
"<Method>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>.protected removed( K ): void",removed( K ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,4,1,0,1
"<Field>org.apache.kafka.streams.state.MeteredKeyValueStore<K,V>->loggingEnabled",loggingEnabled : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.streams.state.OffsetCheckpoint,OffsetCheckpoint,low,low,low-medium,low,0,1,0,0,0,1,83,2,0,1,1,0,0,0,0,0,0,0,,,,,83,,,,,,1,,,,,,,
<Method>org.apache.kafka.streams.state.OffsetCheckpoint.public delete( ): void,delete( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.streams.state.OffsetCheckpoint->VERSION,static final VERSION : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.RocksDBKeyValueStoreSupplier<K,V>",RocksDBKeyValueStoreSupplier,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.RocksDBStore<K,V>",RocksDBStore,low,low,low-medium,low,0,6,3,0,0,10,143,33,0,6,6,0,0,0,0.444,1,0,0,,,,,143,,,,,,10,,,,,,,
org.apache.kafka.streams.state.RocksDBStore.LexicographicComparator,LexicographicComparator,low,low,low,low,0,1,0,0,0,4,9,8,0,0,1,0,0,0,0,0,0,0,,,,,9,,,,,,4,,,,,,,
"org.apache.kafka.streams.state.RocksDBStore.RocksDBRangeIterator<K,V>",RocksDBRangeIterator,low,low,low,low,0,3,2,1,0,1,11,3,1,0,1,0,0,0,0,0,0,0,,,,,11,,,,,,1,,,,,,,
"org.apache.kafka.streams.state.RocksDBStore.RocksDbIterator<K,V>",RocksDbIterator,low,low,low,low,0,4,0,0,1,4,25,10,0,0,4,0,0,0,0,0,0,0,,,,,25,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public close( ): void",close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,4,0,1,0
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public delete( K ): V",delete( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,5,1,2,0
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public flush( ): void",flush( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,0,0,0
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public get( K ): V",get( K ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,6,1,0,0
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public persistent( ): boolean",persistent( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,3,0,0,0
"<Method>org.apache.kafka.streams.state.RocksDBStore<K,V>.public put( K, V ): void","put( K, V ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,3,9,2,0,0
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->BLOCK_CACHE_SIZE",static final BLOCK_CACHE_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->BLOCK_SIZE",static final BLOCK_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->MAX_WRITE_BUFFERS",static final MAX_WRITE_BUFFERS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->TTL_NOT_USED",static final TTL_NOT_USED : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->TTL_SECONDS",static final TTL_SECONDS : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<Field>org.apache.kafka.streams.state.RocksDBStore<K,V>->WRITE_BUFFER_SIZE",static final WRITE_BUFFER_SIZE : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.kafka.streams.state.Serdes<K,V>",Serdes,low,low,low-medium,low,0,4,0,0,0,4,62,8,0,0,4,0,0,0,0.5,0,0,0,,,,,62,,,,,,4,,,,,,,
"<Method>org.apache.kafka.streams.state.Serdes<K,V>.public keyFrom( byte ): K",keyFrom( byte ): K,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.Serdes<K,V>.public rawKey( K ): byte",rawKey( K ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.Serdes<K,V>.public rawValue( V ): byte",rawValue( V ): byte,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
"<Method>org.apache.kafka.streams.state.Serdes<K,V>.public valueFrom( byte ): V",valueFrom( byte ): V,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,1,0,0
org.apache.kafka.streams.state.Stores,Stores,low,low,low-medium,low,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,,,,,69,,,,,,0,,,,,,,
"org.apache.kafka.streams.state.Stores.InMemoryKeyValueFactory<K,V>",InMemoryKeyValueFactory,low,low,low,low,0,1,0,1,1,2,3,1,0,0,1,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.Stores.KeyValueFactory<K,V>",KeyValueFactory,low,low,low,low,2,2,0,1,1,2,3,2,0,0,2,0,0,0,0,0,0,0,,,,,3,,,,,,2,,,,,,,
"org.apache.kafka.streams.state.Stores.LocalDatabaseKeyValueFactory<K,V>",LocalDatabaseKeyValueFactory,low,low,low,low,0,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,,,,,2,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$1962;,Lorg.apache.kafka.streams.state.Stores$1962;,low,low,low,low,0,0,0,1,0,0,34,0,0,0,0,0,0,0,0,0,0,0,,,,,34,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2152;,Lorg.apache.kafka.streams.state.Stores$2152;,low,low,low,low,0,0,0,1,0,0,30,0,0,0,0,0,0,0,0,0,0,0,,,,,30,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2617;,Lorg.apache.kafka.streams.state.Stores$2617;,low,low,low,low,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,,,,,23,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$2802;,Lorg.apache.kafka.streams.state.Stores$2802;,low,low,low,low,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,,,,,12,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.streams.state.Stores$4077;,Lorg.apache.kafka.streams.state.Stores$4077;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
org.apache.kafka.streams.state.Stores.StoreFactory,StoreFactory,low,low,low,low,1,4,0,0,1,4,12,8,0,0,4,0,0,0,0,0,0,0,,,,,12,,,,,,4,,,,,,,
org.apache.kafka.streams.state.Stores.ValueFactory<K>,ValueFactory,low,low,low,low,1,4,0,0,2,4,12,8,0,0,4,0,0,0,0,0,0,0,,,,,12,,,,,,4,,,,,,,
<Package>org.apache.kafka.tools,org.apache.kafka.tools,low,low,medium-high,low,,,,,,46,927,,,,,,,,,,,,,18,18,0,927,0,0,0,1,0,46,,,,,,,
org.apache.kafka.tools.ProducerPerformance,ProducerPerformance,low,low,low-medium,low,0,0,0,0,0,0,186,0,0,0,0,0,0,0,0,0,0,0,,,,,186,,,,,,0,,,,,,,
org.apache.kafka.tools.ProducerPerformance.PerfCallback,PerfCallback,low,low,low,low,1,1,0,0,0,1,16,5,4,0,1,0,0,0,0,0,0,0,,,,,16,,,,,,1,,,,,,,
org.apache.kafka.tools.ProducerPerformance.Stats,Stats,low,low,low,low,0,6,3,0,0,9,90,70,15,0,5,1,0,0.533,0.5,0.2,0,0,,,,,90,,,,,,9,,,,,,,
org.apache.kafka.tools.ThroughputThrottler,ThroughputThrottler,low,low,low-medium,low,0,4,0,0,0,14,52,43,5,3,4,0,0,0.833,0.25,0.333,0,0,,,,,52,,,,,,14,,,,,,,
"<Method>org.apache.kafka.tools.ThroughputThrottler.public ThroughputThrottler( long, long ): void","ThroughputThrottler( long, long ): void",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,1,6,2,0,4
"<Method>org.apache.kafka.tools.ThroughputThrottler.public shouldThrottle( long, long ): boolean","shouldThrottle( long, long ): boolean",low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,5,2,0,3
<Method>org.apache.kafka.tools.ThroughputThrottler.public throttle( ): void,throttle( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,5,28,0,0,13
<Method>org.apache.kafka.tools.ThroughputThrottler.public wakeup( ): void,wakeup( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,4,0,0,1
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepDeficitNs, sleepDeficitNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->sleepTimeNs, sleepTimeNs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->startMs, startMs : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->targetThroughput, targetThroughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->MIN_SLEEP_NS,static final MIN_SLEEP_NS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_MS,static final NS_PER_MS : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->NS_PER_SEC,static final NS_PER_SEC : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.ThroughputThrottler->wakeup,wakeup : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableConsumer,VerifiableConsumer,low,low,medium-high,low,0,5,1,0,0,12,368,44,5,0,5,0,0,1,0,1,0,0,,,,,368,,,,,,12,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.CommitData,CommitData,low,low,low,low,0,1,0,1,0,1,8,3,1,0,1,0,0,0,0,0,0,0,,,,,8,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ConsumerEvent,ConsumerEvent,low,low,low,low,0,0,0,0,6,0,6,0,0,0,0,0,0,0,0,0,0,0,,,,,6,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$21448;,Lorg.apache.kafka.tools.VerifiableConsumer$21448;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableConsumer$5516;,Lorg.apache.kafka.tools.VerifiableConsumer$5516;,low,low,low,low,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,,,,,7,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.OffsetsCommitted,OffsetsCommitted,low,low,low,low,0,1,0,1,0,1,21,3,1,0,1,0,0,0,0,0,0,0,,,,,21,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionData,PartitionData,low,low,low,low,0,1,0,0,2,1,12,3,1,0,1,0,0,0,0,0,0,0,,,,,12,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsAssigned,PartitionsAssigned,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.PartitionsRevoked,PartitionsRevoked,low,low,low,low,0,0,0,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,,,,,10,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordData,RecordData,low,low,low,low,0,2,0,1,0,2,22,6,0,0,2,0,0,0,0,0,0,0,,,,,22,,,,,,2,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordSetSummary,RecordSetSummary,low,low,low,low,0,3,0,1,0,3,18,9,3,0,3,0,0,1,0,1,0,0,,,,,18,,,,,,3,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.RecordsConsumed,RecordsConsumed,low,low,low,low,0,1,0,1,0,1,15,3,1,0,1,0,0,0,0,0,0,0,,,,,15,,,,,,1,,,,,,,
org.apache.kafka.tools.VerifiableConsumer.ShutdownComplete,ShutdownComplete,low,low,low,low,0,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.VerifiableConsumer.private addKafkaSerializerModule( ): void,addKafkaSerializerModule( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,2,11,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,4,13,0,0,0
<Method>org.apache.kafka.tools.VerifiableConsumer.private hasMessageLimit( ): boolean,hasMessageLimit( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,1
<Method>org.apache.kafka.tools.VerifiableConsumer.private isFinished( ): boolean,isFinished( ): boolean,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,1,2
<Method>org.apache.kafka.tools.VerifiableConsumer.public run( ): void,run( ): void,low,low,low,low,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,4,16,0,0,2
<Field>org.apache.kafka.tools.VerifiableConsumer->consumedMessages,consumedMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->maxMessages,final maxMessages : int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAsyncCommit,final useAsyncCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->useAutoCommit,final useAutoCommit : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableConsumer->verbose,final verbose : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableLog4jAppender,VerifiableLog4jAppender,low,low,low-medium,low,0,0,0,0,0,0,133,0,2,0,0,0,0,0,0,0,0,0,,,,,133,,,,,,0,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableLog4jAppender$8713;,Lorg.apache.kafka.tools.VerifiableLog4jAppender$8713;,low,low,low,low,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,,,,,4,,,,,,0,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableLog4jAppender->stopLogging,volatile stopLogging : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.kafka.tools.VerifiableProducer,VerifiableProducer,low,low,low-medium,low,0,1,0,0,0,1,188,2,5,0,1,0,0,0,0,0,0,0,,,,,188,,,,,,1,,,,,,,
<Anonymous> : Lorg.apache.kafka.tools.VerifiableProducer$12106;,Lorg.apache.kafka.tools.VerifiableProducer$12106;,low,low,low,low,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,,,,,15,,,,,,0,,,,,,,
org.apache.kafka.tools.VerifiableProducer.PrintInfoCallback,PrintInfoCallback,low,low,low,low,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,,,,,13,,,,,,0,,,,,,,
<Method>org.apache.kafka.tools.VerifiableProducer.public close( ): void,close( ): void,low,low,low,low,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,2,0,0,0
<Field>org.apache.kafka.tools.VerifiableProducer->maxMessages,maxMessages : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numAcked,numAcked : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->numSent,numSent : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->stopProducing,stopProducing : boolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<Field>org.apache.kafka.tools.VerifiableProducer->throughput,throughput : long,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
